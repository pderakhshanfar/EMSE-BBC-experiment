* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.google.javascript.jscomp.NameAnalyzer
* Starting Client-0
* Connecting to master process on port 7659
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-114/build/classes
  - subjects/buggy-versions/Closure-114/lib/args4j.jar
  - subjects/buggy-versions/Closure-114/lib/guava.jar
  - subjects/buggy-versions/Closure-114/lib/json.jar
  - subjects/buggy-versions/Closure-114/lib/jsr305.jar
  - subjects/buggy-versions/Closure-114/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-114/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-114/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.NameAnalyzer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2352
* Using seed 3884144680
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 531 / 2352
[MASTER] 18:08:21.331 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 18:08:43.738 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 18:08:45.554 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 18:08:45.554 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 18:11:53.006 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 18:14:53.764 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
* Search finished after 602s and 499 generations, 189443 statements, best individual has fitness: 1560.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 38%
* Total number of goals: 685
* Number of covered goals: 257
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 31%
* Total number of goals: 561
* Number of covered goals: 174
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 75%
* Total number of goals: 4
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 37%
* Total number of goals: 506
* Number of covered goals: 185
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 3
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 31%
* Total number of goals: 561
* Number of covered goals: 174
* Generated 18 tests with total length 93
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 18:18:33.003 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:18:46.524 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:18:46.524 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
compiler0.parseSyntheticCode("com.google.javascript.jscomp.NameAnalyzer$FindDeclarationsAndSetters", "com.google.javascript.jscomp.NameAnalyzer$FindDeclarationsAndSetters");

[MASTER] 18:18:48.590 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 18:18:48.590 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseSyntheticCode("oin", "oin");
Node node1 = new Node((-16519105), node0, 29, (-11));
node0.addChildrenToFront(node1);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
nameAnalyzer0.process(node1, node0);

[MASTER] 18:18:53.011 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test00 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 18:18:53.012 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseSyntheticCode("window", "window");
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
nameAnalyzer0.process(node0, node0);
String string0 = nameAnalyzer0.getHtmlReport();
assertEquals("<html><body><style type=\"text/css\">body, td, p {font-family: Arial; font-size: 83%} ul {margin-top:2px; margin-left:0px; padding-left:1em;} li {margin-top:3px; margin-left:24px; padding-left:0px;padding-bottom: 4px}</style>OVERALL STATS<ul><li>Total Names: 2</li>\n<li>Total Classes: 0</li>\n<li>Total Static Functions: 2</li>\n<li>Referenced Names: 2</li>\n<li>Referenced Classes: 0</li>\n<li>Referenced Functions: 2</li>\n</ul>ALL NAMES<ul>\n<li><a name=\"Function\">Function</a><ul></li></ul></li><li><a name=\"window\">window</a><ul></li></ul></li></ul></body></html>", string0);


[MASTER] 18:18:53.012 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test11 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 18:18:53.012 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
compiler0.parseSyntheticCode("com.google.javascript.jscomp.NameAnalyzer$FindDeclarationsAndSetters", "com.google.javascript.jscomp.NameAnalyzer$FindDeclarationsAndSetters");

[MASTER] 18:18:53.012 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test05 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 18:18:53.012 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseTestCode("oindow");
Node node1 = Node.newString(37, "oindow");
node1.addChildrenToFront(node0);
Node node2 = new Node(49, node1, node1);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
nameAnalyzer0.process(node2, node2);
assertFalse(node2.isVarArgs());


[MASTER] 18:18:53.012 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test03 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 18:18:53.012 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseTestCode("boK=mF");
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
nameAnalyzer0.process(node0, node0);
assertTrue(node0.hasChildren());
assertEquals(1, node0.getChildCount());


[MASTER] 18:18:53.012 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test07 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 18:18:53.013 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
Node node0 = new Node(113);
Node node1 = new Node(113, node0, node0);
Node node2 = new Node(46);
node1.addChildToBack(node2);
nameAnalyzer0.process(node1, node1);
assertFalse(node1.isTypeOf());


[MASTER] 18:18:54.175 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test04 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 18:18:54.176 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseSyntheticCode("oindow", "oindow");
Node node1 = new Node(51, 1, 0);
Node node2 = new Node(114, node0, node1);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
nameAnalyzer0.process(node2, node2);
assertFalse(node2.isOnlyModifiesArgumentsCall());


[MASTER] 18:18:54.176 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test07 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 18:18:54.176 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseSyntheticCode("window", "window");
Node node1 = Node.newString(56, "window");
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
Node node2 = new Node(118, node0);
node2.addChildToFront(node1);
nameAnalyzer0.process(node1, node2);

[MASTER] 18:18:54.176 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test09 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 18:18:54.177 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test08 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
* Writing tests to file
* Writing JUnit test case 'NameAnalyzer_ESTest' to results/Closure-114/com.google.javascript.jscomp.NameAnalyzer/BBC-F0-50/tests/27
* Done!

* Computation finished
