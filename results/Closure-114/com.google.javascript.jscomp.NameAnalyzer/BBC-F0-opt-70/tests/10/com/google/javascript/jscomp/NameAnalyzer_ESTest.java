/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 12 10:56:55 GMT 2021
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.NameAnalyzer;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NameAnalyzer_ESTest extends NameAnalyzer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
      Node node0 = Node.newString(98, "olj_");
      Node node1 = new Node(115, 94, 32);
      node1.addChildrenToFront(node0);
      Node node2 = new Node(2034, node1, (-230), 48);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node1, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "EindC\"");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(118, node0, 30, 36);
      nameAnalyzer0.process(node0, node2);
      // Undeclared exception!
      try { 
        nameAnalyzer0.removeUnreferenced();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NameAnalyzer$JsNameRefNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "JSC(USELESS_CFDE");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      node0.putIntProp(51, 100);
      Node node2 = new Node(230, node0, 43, 1462);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node2, node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(86, "JSC(USELESS_CFDE");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(86, node0, 38, 36);
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node3 = new Node((-214), node2, 466, 1657);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node2, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NameAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "JSC(USELESS_CFDE");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(130, node0, 37, (-3169));
      Node node3 = new Node(42, node2, 13, 88);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported parent node type in replaceWithRhs THIS
         //
         verifyException("com.google.javascript.jscomp.NameAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      nameAnalyzer0.removeUnreferenced();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.jscomp.NameAnalyzer$PrototypeSetNode");
      nameAnalyzer0.process(node0, node0);
      assertFalse(node0.isOptionalArg());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(114, "JSC(USELESS_CFDE");
      Node node1 = new Node(38, (-470), 46);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(1104, 1630, 90);
      node0.addChildrenToFront(node2);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node0, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "JSC(SELESS_CFDE");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(114, node0, 51, 36);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node1, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NameAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(113, "JSC_NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR");
      SyntheticAst syntheticAst0 = new SyntheticAst("JSC_NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR");
      Node node1 = syntheticAst0.getAstRoot(compiler0);
      node0.addChildrenToFront(node1);
      Node node2 = Node.newString("JSC_NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR");
      node0.addChildrenToFront(node2);
      nameAnalyzer0.process(node0, node0);
      assertEquals(30, Node.VAR_ARGS_NAME);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = new Node(111);
      Node node1 = new Node(400000, 57, 65);
      node0.addChildrenToFront(node1);
      nameAnalyzer0.process(node1, node0);
      assertEquals(49, Node.DIRECT_EVAL);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(110, "JSC(SELESS_CFDE");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      nameAnalyzer0.process(node1, node0);
      assertEquals(0, node1.getSideEffectFlags());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = new Node(119);
      Node node1 = new Node(400000, 57, 65);
      node0.addChildrenToFront(node1);
      nameAnalyzer0.process(node1, node0);
      assertEquals(52, Node.LENGTH);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "JSC(SELESS_CFDE");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(113, node0, 57, 113);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NameAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "EindC\"");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(49, node0, (-429), (-971));
      nameAnalyzer0.process(node1, node2);
      assertEquals((-1), node1.getSourcePosition());
      assertFalse(node0.hasOneChild());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "JSC(SELESS_CFDE");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(4, node0, 1, 16);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NameAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      nameAnalyzer0.removeUnreferenced();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "window");
      nameAnalyzer0.process(node0, node0);
      nameAnalyzer0.process(node0, node0);
      assertFalse(node0.isGetterDef());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
      Node node0 = new Node(1104);
      Node node1 = new Node(118, node0, (-240), (-26));
      nameAnalyzer0.process(node0, node1);
      assertEquals(4095, Node.MAX_COLUMN_NUMBER);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
      CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
      compiler0.initOptions(compilerOptions0);
      Node node0 = Node.newString(1064, "JSC_USELESS_CODE");
      Node node1 = new Node(37, 55, 46);
      node1.addChildrenToFront(node0);
      nameAnalyzer0.process(node1, node1);
      assertFalse(node1.equals((Object)node0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(147, "IJM");
      Node node1 = new Node(147, 4204, (-4458));
      node1.addChildrenToFront(node0);
      Node node2 = new Node(2, node1, 15, 100);
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node2, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "JlC(SELES_CFDE");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(115, node0, 51, 36);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node0, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "wdow");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(100, node0, 3943, (-3832));
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node0, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "JSC(USELESS_CFDE");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(98, node0, 51, 36);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NameAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(86, "JSC(USELESS_CFDE");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(86, node0, 38, 36);
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node2, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "JSC(SELESS_CFDE");
      Node node1 = new Node(1891, 178, 2253);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(85, node0, 39, (-587));
      nameAnalyzer0.process(node0, node0);
      assertFalse(node0.isIf());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
      Node node0 = Node.newString(86, "Y.+(2h");
      Node node1 = new Node(8, 929, 4);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(38, node0, 36, 32);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node1, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "OTH");
      Node node1 = Node.newString("com.google.javascript.jscomp.DefinitionsRemover$FunctionDefinition");
      node0.addChildrenToFront(node1);
      nameAnalyzer0.process(node1, node0);
      assertFalse(node1.isDo());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "EindC\"");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(118, node0, 30, 36);
      nameAnalyzer0.process(node0, node2);
      assertFalse(node0.hasChildren());
      
      String string0 = nameAnalyzer0.getHtmlReport();
      assertEquals("<html><body><style type=\"text/css\">body, td, p {font-family: Arial; font-size: 83%} ul {margin-top:2px; margin-left:0px; padding-left:1em;} li {margin-top:3px; margin-left:24px; padding-left:0px;padding-bottom: 4px}</style>OVERALL STATS<ul><li>Total Names: 3</li>\n<li>Total Classes: 0</li>\n<li>Total Static Functions: 3</li>\n<li>Referenced Names: 2</li>\n<li>Referenced Classes: 0</li>\n<li>Referenced Functions: 2</li>\n</ul>ALL NAMES<ul>\n<li><a name=\"\"></a><ul></li></ul></li><li><a name=\"Function\">Function</a><ul></li></ul></li><li><a name=\"window\">window</a><ul></li></ul></li></ul></body></html>", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
      Node node0 = Node.newString(86, "JSC(SELESS_CFDE");
      Node node1 = new Node(42, 1, 43);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(108, node0, 51, 36);
      // Undeclared exception!
      try { 
        nameAnalyzer0.process(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NameAnalyzer", e);
      }
  }
}
