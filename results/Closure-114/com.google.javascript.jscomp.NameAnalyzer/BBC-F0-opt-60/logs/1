* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-60
* Going to generate test cases for class: com.google.javascript.jscomp.NameAnalyzer
* Starting Client-0
* Connecting to master process on port 6867
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-114/build/classes
  - subjects/buggy-versions/Closure-114/lib/args4j.jar
  - subjects/buggy-versions/Closure-114/lib/guava.jar
  - subjects/buggy-versions/Closure-114/lib/json.jar
  - subjects/buggy-versions/Closure-114/lib/jsr305.jar
  - subjects/buggy-versions/Closure-114/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-114/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-114/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.NameAnalyzer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2352
* Using seed 2947964282
* Starting evolution
bbc usage percentage is: 60%
* Initial Number of Goals in DynaMOSA = 531 / 2352
[MASTER] 10:42:26.596 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 10:42:26.596 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
[MASTER] 10:46:40.937 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
*C2*
[MASTER] 10:46:42.859 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
[MASTER] 10:49:39.235 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 10:49:45.151 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
* Search finished after 605s and 421 generations, 162211 statements, best individual has fitness: 1573.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 685
* Number of covered goals: 251
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 561
* Number of covered goals: 171
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 75%
* Total number of goals: 4
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 36%
* Total number of goals: 506
* Number of covered goals: 184
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 3
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 561
* Number of covered goals: 171
* Generated 20 tests with total length 93
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 10:52:52.523 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:53:10.946 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:53:10.947 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "wndo");
Node node1 = new Node(0, node0, 55, 37);
node0.addChildToBack(node1);
nameAnalyzer0.process(node0, node0);

[MASTER] 10:53:15.936 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test12 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:15.936 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "E");
Node node1 = new Node(111, node0);
nameAnalyzer0.process(node1, node1);
assertFalse(node1.hasMoreThanOneChild());


[MASTER] 10:53:15.936 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test00 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "window");
nameAnalyzer0.process(node0, node0);
String string0 = nameAnalyzer0.getHtmlReport();
assertEquals("<html><body><style type=\"text/css\">body, td, p {font-family: Arial; font-size: 83%} ul {margin-top:2px; margin-left:0px; padding-left:1em;} li {margin-top:3px; margin-left:24px; padding-left:0px;padding-bottom: 4px}</style>OVERALL STATS<ul><li>Total Names: 2</li>\n<li>Total Classes: 0</li>\n<li>Total Static Functions: 2</li>\n<li>Referenced Names: 2</li>\n<li>Referenced Classes: 0</li>\n<li>Referenced Functions: 2</li>\n</ul>ALL NAMES<ul>\n<li><a name=\"Function\">Function</a><ul></li></ul></li><li><a name=\"window\">window</a><ul></li></ul></li></ul></body></html>", string0);


[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test03 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
Node node0 = Node.newNumber(579.5977);
Node node1 = new Node(86, node0, node0, node0, node0);
nameAnalyzer0.process(node0, node1);
assertFalse(node1.isSyntheticBlock());


[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test14 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
Node node0 = Node.newString(147, "wndoqw");
Node node1 = new Node(147, node0, node0, node0, node0);
nameAnalyzer0.process(node0, node0);

[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test02 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "f=Mh");
nameAnalyzer0.process(node0, node0);
assertTrue(node0.hasChildren());
assertTrue(node0.hasOneChild());


[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test13 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NameAnalyzer nameAnalyzer0 = new NameAnalyzer((AbstractCompiler) null, false);
nameAnalyzer0.removeUnreferenced();

[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test05 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "e");
Node node1 = new Node(108, node0, node0, node0, node0);
nameAnalyzer0.process(node0, node1);
assertEquals(1, node0.getLineno());


[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test15 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test07 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = Node.newNumber((double) 110);
Node node1 = new Node(110, node0, node0, node0, node0);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
nameAnalyzer0.process(node1, node1);
assertFalse(node1.isGetProp());


[MASTER] 10:53:15.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test06 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:15.938 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
Node node0 = compiler0.parseTestCode(".)rYotyp(.");
Node node1 = new Node(119, node0, node0, node0, node0);
nameAnalyzer0.process(node1, node1);
assertFalse(node1.isFunction());


[MASTER] 10:53:15.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test09 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:15.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test08 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:17.272 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test5 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:17.273 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.jscomp.NameAnalyzer$SpecialReferenceNode");
Node node1 = new Node(49, node0);
nameAnalyzer0.process(node0, node1);
assertEquals(54, Node.SLASH_V);


[MASTER] 10:53:17.273 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test2 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:17.273 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
Node node0 = compiler0.parseTestCode(".ptoype");
Node node1 = compiler0.parseTestCode(".ptoype");
Node node2 = new Node(114, node1, node1, node0, node0);
nameAnalyzer0.process(node0, node2);
assertEquals(32, Node.INCRDECR_PROP);


[MASTER] 10:53:17.273 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test3 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:17.273 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "wJndow");
Node node1 = new Node(113, node0);
nameAnalyzer0.process(node1, node1);
assertFalse(node1.isLabelName());


[MASTER] 10:53:17.273 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test8 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:17.273 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test6 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:17.273 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
String string0 = nameAnalyzer0.getHtmlReport();
assertEquals("<html><body><style type=\"text/css\">body, td, p {font-family: Arial; font-size: 83%} ul {margin-top:2px; margin-left:0px; padding-left:1em;} li {margin-top:3px; margin-left:24px; padding-left:0px;padding-bottom: 4px}</style>OVERALL STATS<ul><li>Total Names: 0</li>\n<li>Total Classes: 0</li>\n<li>Total Static Functions: 0</li>\n<li>Referenced Names: 0</li>\n<li>Referenced Classes: 0</li>\n<li>Referenced Functions: 0</li>\n</ul>ALL NAMES<ul>\n</ul></body></html>", string0);


[MASTER] 10:53:17.273 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test7 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:17.273 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test1 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
[MASTER] 10:53:17.274 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "e");
nameAnalyzer0.process(node0, node0);
nameAnalyzer0.process(node0, node0);
assertEquals(0, Node.SIDE_EFFECTS_ALL);


* Writing tests to file
* Writing JUnit test case 'NameAnalyzer_ESTest' to results/Closure-114/com.google.javascript.jscomp.NameAnalyzer/BBC-F0-opt-60/tests/1
* Done!

* Computation finished
