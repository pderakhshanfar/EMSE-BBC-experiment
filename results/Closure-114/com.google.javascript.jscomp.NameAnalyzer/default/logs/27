* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: com.google.javascript.jscomp.NameAnalyzer
* Starting Client-0
* Connecting to master process on port 12798
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-114/build/classes
  - subjects/buggy-versions/Closure-114/lib/args4j.jar
  - subjects/buggy-versions/Closure-114/lib/guava.jar
  - subjects/buggy-versions/Closure-114/lib/json.jar
  - subjects/buggy-versions/Closure-114/lib/jsr305.jar
  - subjects/buggy-versions/Closure-114/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-114/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-114/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.NameAnalyzer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2352
* Using seed 3194887656
* Starting evolution
* Initial Number of Goals in DynaMOSA = 531 / 2352
[MASTER] 19:59:00.115 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 19:59:00.116 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 19:59:30.071 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 20:04:22.280 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
Number of times BBC is called in total: 0
* Search finished after 606s and 356 generations, 129961 statements, best individual has fitness: 1568.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 685
* Number of covered goals: 252
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 31%
* Total number of goals: 561
* Number of covered goals: 173
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 37%
* Total number of goals: 506
* Number of covered goals: 185
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 3
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 561
* Number of covered goals: 171
* Generated 17 tests with total length 78
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
[MASTER] 20:09:20.381 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:20.382 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "window");

[MASTER] 20:09:25.900 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:25.901 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "modu=le.exprts");

[MASTER] 20:09:27.360 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:27.360 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "modu=lO.expr=s");

[MASTER] 20:09:28.885 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:28.885 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.parseTestCode("com.google.javascript.jscomp.NameAnalyzer$ClassDefiningFunctionNode");

[MASTER] 20:09:30.249 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:30.249 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "ytJYyfW ;%`x6");

[MASTER] 20:09:31.686 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:31.686 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "inow");

[MASTER] 20:09:33.738 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:33.738 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "modu=le.exprts");

[MASTER] 20:09:35.293 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:35.293 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.parseTestCode("ytJYyfW ;%`x6");

[MASTER] 20:09:36.747 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:36.748 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "modu=le.exprts");

[MASTER] 20:09:38.190 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:38.190 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.parseTestCode("KYyW#i/ ;%`x\"");

[MASTER] 20:09:40.897 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:40.897 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.parseTestCode("KYyW/ ;%`x\"");

[MASTER] 20:09:42.287 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 20:09:42.287 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "odu=.exprs");

[MASTER] 20:09:46.908 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test02 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 20:09:46.908 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseSyntheticCode(">}B_#WcSN", "[].join()");
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
nameAnalyzer0.process(node0, node0);
assertFalse(node0.isFromExterns());


[MASTER] 20:09:46.908 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test12 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 20:09:46.908 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.parseTestCode("KYyW/ ;%`x\"");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 19
* Writing tests to file
* Writing JUnit test case 'NameAnalyzer_ESTest' to results/Closure-114/com.google.javascript.jscomp.NameAnalyzer/default/tests/27
* Done!

* Computation finished
