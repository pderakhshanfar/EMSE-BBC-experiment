* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: com.google.javascript.jscomp.NameAnalyzer
* Starting Client-0
* Connecting to master process on port 13222
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-114/build/classes
  - subjects/buggy-versions/Closure-114/lib/args4j.jar
  - subjects/buggy-versions/Closure-114/lib/guava.jar
  - subjects/buggy-versions/Closure-114/lib/json.jar
  - subjects/buggy-versions/Closure-114/lib/jsr305.jar
  - subjects/buggy-versions/Closure-114/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-114/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-114/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.NameAnalyzer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2352
* Using seed 579157394
* Starting evolution
* Initial Number of Goals in DynaMOSA = 531 / 2352
[MASTER] 02:04:37.901 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 02:04:37.901 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 02:05:59.353 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 02:08:08.639 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
* Search finished after 302s and 114 generations, 55095 statements, best individual has fitness: 1657.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 33%
* Total number of goals: 685
* Number of covered goals: 227
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 561
* Number of covered goals: 144
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 35%
* Total number of goals: 506
* Number of covered goals: 177
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 3
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 561
* Number of covered goals: 144
* Generated 12 tests with total length 68
* Resulting test suite's coverage: 31% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 02:10:19.259 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test03 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 02:10:19.260 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = new Node((-1600), (-1600), (-1600));
Node node1 = new Node(37, node0, node0, node0, 40, 47);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
nameAnalyzer0.removeUnreferenced();
StatementFusion statementFusion0 = new StatementFusion();
Node node2 = compiler0.parseSyntheticCode("gcVc1i", "windo6aw");
nameAnalyzer0.process(node2, node1);
assertFalse(node1.isTypeOf());


[MASTER] 02:10:19.260 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test04 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 02:10:19.260 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = new Node(38, (-2770), (-2776));
Node node1 = new Node(42, node0, node0, node0, 2, 90);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
nameAnalyzer0.removeUnreferenced();
StatementFusion statementFusion0 = new StatementFusion();
Node node2 = compiler0.parseSyntheticCode("window", "window");
nameAnalyzer0.process(node1, node2);
assertEquals(1, node2.getLineno());


[MASTER] 02:10:19.260 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test05 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 02:10:21.472 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test6 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 02:10:21.472 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = new Node((-1600), (-1600), (-1600));
Node node1 = new Node(37, node0, node0, node0, 40, 47);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
nameAnalyzer0.removeUnreferenced();
StatementFusion statementFusion0 = new StatementFusion();
node0.setType(42);
Node node2 = compiler0.parseSyntheticCode("gcVc1i", "gcVc1i");
nameAnalyzer0.process(node2, node1);
assertEquals(0, node2.getChangeTime());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing tests to file
* Writing JUnit test case 'NameAnalyzer_ESTest' to results/Closure-114/com.google.javascript.jscomp.NameAnalyzer/default/tests/27
* Done!

* Computation finished
