<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 -->

<plugin>
  <name>Maven Plugin for EvoSuite</name>
  <description>Plugin used to run EvoSuite to automatically generate high coverage JUnit tests</description>
  <groupId>org.evosuite.plugins</groupId>
  <artifactId>evosuite-maven-plugin</artifactId>
  <version>1.1.1-SNAPSHOT</version>
  <goalPrefix>evosuite</goalPrefix>
  <mojos>
    <mojo>
      <goal>clean</goal>
      <description>Remove all local files created by EvoSuite so far</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.evosuite.maven.CleanMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters/>
    </mojo>
    <mojo>
      <goal>coverage</goal>
      <description>Execute the manually written test suites (usually located under src/test/java) and return the coverage of each class.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.evosuite.maven.CoverageMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <requiresDependencyCollection>test</requiresDependencyCollection>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>criterion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Coverage criterion. Can define more than one criterion by using a &apos;:&apos; separated list</description>
        </parameter>
        <parameter>
          <name>global_timeout</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum seconds allowed</description>
        </parameter>
        <parameter>
          <name>junit</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>A colon(:) separated list of JUnit suites to execute. Can be a prefix (i.e., package name), a directory, a jar file, or the full name of a JUnit suite.</description>
        </parameter>
        <parameter>
          <name>output_variables</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <criterion implementation="java.lang.String" default-value="LINE:BRANCH:CBRANCH:WEAKMUTATION:METHODTRACE">${criterion}</criterion>
        <global_timeout implementation="int" default-value="120">${global_timeout}</global_timeout>
        <junit implementation="java.lang.String">${junit}</junit>
        <output_variables implementation="java.lang.String" default-value="TARGET_CLASS,criterion,Coverage,Total_Goals,Covered_Goals,LineCoverage,LineCoverageBitString,BranchCoverage,BranchCoverageBitString,CBranchCoverage,CBranchCoverageBitString,WeakMutationScore,WeakMutationCoverageBitString,MethodTraceCoverage,MethodTraceCoverageBitString">${output_variables}</output_variables>
      </configuration>
    </mojo>
    <mojo>
      <goal>export</goal>
      <description>When run, EvoSuite generate tests in a specific folder. New runs of EvoSuite can exploit the tests in such folder, and/or modify them.

So, with &apos;export&apos; we can copy all generated tests to a specific folder, which by default points to where Maven searches for tests. If another folder is rather used (or if we want to run with Maven the tests in the default EvoSuite folder), then Maven plugins like build-helper-maven-plugin are needed
</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.evosuite.maven.ExportMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>targetFolder</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <targetFolder implementation="java.lang.String" default-value="src/test/java">${targetFolder}</targetFolder>
      </configuration>
    </mojo>
    <mojo>
      <goal>generate</goal>
      <description>Generate JUnit tests</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <executePhase>compile</executePhase>
      <implementation>org.evosuite.maven.GenerateMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <requiresDependencyCollection>test</requiresDependencyCollection>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>criterion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Coverage criterion. Can define more than one criterion by using a &apos;:&apos; separated list</description>
        </parameter>
        <parameter>
          <name>cuts</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma &apos;,&apos; separated list of CUTs to use in CTG. If none specified, then test all classes</description>
        </parameter>
        <parameter>
          <name>cutsFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Absolute path to a file having the list of CUTs specified. This is needed for operating systems like Windows that have constraints on the size of input parameters and so could not use &apos;cuts&apos; parameter instead if too many CUTs are specified</description>
        </parameter>
        <parameter>
          <name>extraArgs</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>memoryInMB</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Total Memory (in MB) that CTG will use</description>
        </parameter>
        <parameter>
          <name>numberOfCores</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Number of cores CTG will use</description>
        </parameter>
        <parameter>
          <name>schedule</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Schedule used to run CTG (SIMPLE, BUDGET, SEEDING, BUDGET_AND_SEEDING, HISTORY)</description>
        </parameter>
        <parameter>
          <name>spawnManagerPort</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>timeInMinutesPerClass</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>How many minutes to allocate for each class</description>
        </parameter>
        <parameter>
          <name>timeInMinutesPerProject</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>How many minutes to allocate for each project/module. If this parameter is not set, then the total time will be timeInMinutesPerClass x number_of_classes</description>
        </parameter>
      </parameters>
      <configuration>
        <criterion implementation="java.lang.String" default-value="LINE:BRANCH:EXCEPTION:WEAKMUTATION:OUTPUT:METHOD:METHODNOEXCEPTION:CBRANCH">${criterion}</criterion>
        <cuts implementation="java.lang.String">${cuts}</cuts>
        <cutsFile implementation="java.lang.String">${cutsFile}</cutsFile>
        <extraArgs implementation="java.lang.String" default-value="">${extraArgs}</extraArgs>
        <memoryInMB implementation="int" default-value="800">${memoryInMB}</memoryInMB>
        <numberOfCores implementation="int" default-value="1">${cores}</numberOfCores>
        <schedule implementation="java.lang.String" default-value="BUDGET">${schedule}</schedule>
        <spawnManagerPort implementation="java.lang.Integer" default-value="">${spawnManagerPort}</spawnManagerPort>
        <timeInMinutesPerClass implementation="int" default-value="2">${timeInMinutesPerClass}</timeInMinutesPerClass>
        <timeInMinutesPerProject implementation="int" default-value="0">${timeInMinutesPerProject}</timeInMinutesPerProject>
      </configuration>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on evosuite-maven-plugin.
Call mvn evosuite:help -Ddetail=true -Dgoal=&lt;goal-name&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.evosuite.maven.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If true, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>info</goal>
      <description>Obtain info of generated tests so far</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.evosuite.maven.InfoMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters/>
    </mojo>
    <mojo>
      <goal>prepare</goal>
      <description>Mojo needed to prepare the EvoSuite tests for execution. This is needed to make sure that bytecode is properly instrumented.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.evosuite.maven.PrepareMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters/>
    </mojo>
  </mojos>
</plugin>