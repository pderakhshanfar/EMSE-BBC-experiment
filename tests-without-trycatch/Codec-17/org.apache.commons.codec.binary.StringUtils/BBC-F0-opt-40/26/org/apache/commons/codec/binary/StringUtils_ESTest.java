/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 24 01:36:12 GMT 2021
 */

package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import org.apache.commons.codec.binary.StringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringUtils_ESTest extends StringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16Le("WwyO& XTC`j");
      String string0 = StringUtils.newStringUtf8(byteArray0);
      assertEquals("W\u0000w\u0000y\u0000O\u0000&\u0000 \u0000X\u0000T\u0000C\u0000`\u0000j\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("");
      String string0 = StringUtils.newStringUtf8(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      String string0 = StringUtils.newStringUtf16Le(byteArray0);
      assertEquals("\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = StringUtils.newStringUtf16Be((byte[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = StringUtils.newStringUtf16((byte[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16Le("y6H,%,l\"0>>H<F-7yh");
      String string0 = StringUtils.newStringUsAscii(byteArray0);
      assertEquals("y\u00006\u0000H\u0000,\u0000%\u0000,\u0000l\u0000\"\u00000\u0000>\u0000>\u0000H\u0000<\u0000F\u0000-\u00007\u0000y\u0000h\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("UTF-16");
      String string0 = StringUtils.newStringIso8859_1(byteArray0);
      assertEquals("UTF-16", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16Le("WwyO& XTC`j");
      String string0 = StringUtils.newString(byteArray0, "UTF-16");
      assertEquals("\u5700\u7700\u7900\u4F00\u2600\u2000\u5800\u5400\u4300\u6000\u6A00", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf8((String) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf8("");
      String string0 = StringUtils.newStringUtf16(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16Le((String) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16Le("");
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16Be("uc+P3/p_dn|uo~e3");
      assertEquals(34, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16Be("");
      String string0 = StringUtils.newStringUsAscii(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16("9fUicm@zjV>')-}!");
      assertEquals(34, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16("");
      String string0 = StringUtils.newStringUtf16Be(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("");
      String string0 = StringUtils.newString(byteArray0, "UTF-16BE");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUnchecked("UTF-16BE", "UTF-16BE");
      assertEquals(16, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesIso8859_1((String) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesIso8859_1("");
      String string0 = StringUtils.newStringUtf16Le(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
//      try { 
        StringUtils.newStringIso8859_1((byte[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("UTF-16");
      // Undeclared exception!
//      try { 
        StringUtils.newString(byteArray0, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
//      try { 
        StringUtils.getBytesUnchecked("", (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
//      try { 
        StringUtils.getBytesUnchecked("2$\u0000\uFFFD\u0000V\uFFFD", "AuOv!4(l;|u");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // AuOv!4(l;|u: java.io.UnsupportedEncodingException: AuOv!4(l;|u
//         //
//         verifyException("org.apache.commons.codec.binary.StringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = StringUtils.newString((byte[]) null, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUnchecked((String) null, "B\uFFFD");
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteBuffer byteBuffer0 = StringUtils.getByteBufferUtf8("@jPu_II@VJ0r!-");
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=14 cap=14]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      // Undeclared exception!
//      try { 
        StringUtils.equals((CharSequence) "", (CharSequence) charBuffer0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
//      try { 
        StringUtils.equals((CharSequence) charBuffer0, (CharSequence) "]lG-~");
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.Buffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      boolean boolean0 = StringUtils.equals((CharSequence) "Oa!0fV", (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      boolean boolean0 = StringUtils.equals((CharSequence) null, (CharSequence) "\u0000u\u0000c\u0000\u0000+\u0000P\u00003\u0000/\u0000p\u0000_\u0000d\u0000n\u0000|\u0000u\u0000o\u0000~\u0000e\u00003");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      boolean boolean0 = StringUtils.equals((CharSequence) "\uFFFD", (CharSequence) "\uFFFD");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      boolean boolean0 = StringUtils.equals((CharSequence) "4JlIVTX4 G", (CharSequence) "UTF-16");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = StringUtils.newStringUtf8((byte[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16((String) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ByteBuffer byteBuffer0 = StringUtils.getByteBufferUtf8((String) null);
      assertNull(byteBuffer0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf8("sCjGTy|,07M5");
      assertEquals(12, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringUtils stringUtils0 = new StringUtils();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("UTF-16");
      String string0 = StringUtils.newStringUtf16(byteArray0);
      assertEquals("\u5554\u462D\u3136", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16Le("y6H,%,l\"0>>H<F-7yh");
      String string0 = StringUtils.newStringUtf16Be(byteArray0);
      assertEquals("\u7900\u3600\u4800\u2C00\u2500\u2C00\u6C00\u2200\u3000\u3E00\u3E00\u4800\u3C00\u4600\u2D00\u3700\u7900\u6800", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = StringUtils.newStringUtf16Le((byte[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii((String) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUnchecked("", "UTF-16BE");
      assertNotNull(byteArray0);
      
      String string0 = StringUtils.newStringIso8859_1(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = StringUtils.newStringUsAscii((byte[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesIso8859_1("@jPu_II@VJ0r!-");
      // Undeclared exception!
//      try { 
        StringUtils.newString(byteArray0, "org.apache.commons.codec.Charsets");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // org.apache.commons.codec.Charsets: java.io.UnsupportedEncodingException: org.apache.commons.codec.Charsets
//         //
//         verifyException("org.apache.commons.codec.binary.StringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16Be((String) null);
      assertNull(byteArray0);
  }
}
