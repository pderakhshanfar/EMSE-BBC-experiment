/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 22:01:43 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.Element;
import org.jdom.Namespace;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMAttributeIterator_ESTest extends JDOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("*");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      Element element0 = new Element("se");
      Element element1 = element0.setAttribute("se", "se", (Namespace) null);
      element1.setAttribute("vo", "V5>ECxIWy9", (Namespace) null);
      variablePointer0.createPath(jXPathContext0, (Object) element1);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
      NodePointer nodePointer0 = jDOMAttributeIterator0.getNodePointer();
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      assertNotNull(nodePointer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "");
      Element element0 = new Element("space");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) element0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      jDOMAttributeIterator0.setPosition(93);
      // Undeclared exception!
//      try { 
        jDOMAttributeIterator0.getNodePointer();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 92, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "");
      Element element0 = new Element("space");
      variablePointer0.createPath(jXPathContext0, (Object) element0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
      jDOMAttributeIterator0.setPosition((-1059));
      // Undeclared exception!
//      try { 
        jDOMAttributeIterator0.getNodePointer();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "");
      Element element0 = new Element("space");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) element0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      jDOMAttributeIterator0.getNodePointer();
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "");
      Element element0 = new Element("space");
      variablePointer0.createPath(jXPathContext0, (Object) element0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
      jDOMAttributeIterator0.setPosition((-308));
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals((-308), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QName qName0 = new QName("#[<nN9*#9%}", "TV#0*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
//      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: #[<nN9*#9%}:TV#0*
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("vm", "vm");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      Element element0 = new Element("vm");
      variablePointer0.createPath(jXPathContext0, (Object) element0);
      NamespaceResolver namespaceResolver0 = new NamespaceResolver();
      namespaceResolver0.registerNamespace("vm", "");
      variablePointer0.setNamespaceResolver(namespaceResolver0);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
//      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The name \"\" is not legal for JDOM/XML namespaces: Namespace URIs must be non-null and non-empty Strings.
//         //
//         verifyException("org.jdom.Namespace", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("-P+", "-P+");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
//      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: '-P+:-P+'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.GERMANY;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, locale0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      boolean boolean0 = jDOMAttributeIterator0.setPosition((-1073));
      assertFalse(boolean0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("vml", "vml");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      Element element0 = new Element("vml");
      variablePointer0.createPath(jXPathContext0, (Object) element0);
      NamespaceResolver namespaceResolver0 = new NamespaceResolver();
      variablePointer0.setNamespaceResolver(namespaceResolver0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
      boolean boolean0 = jDOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      assertEquals(Integer.MIN_VALUE, jDOMAttributeIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("*");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      Element element0 = new Element("se");
      Element element1 = element0.setAttribute("se", "MRpfeOyl+7", (Namespace) null);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) element1);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      NodePointer nodePointer1 = jDOMAttributeIterator0.getNodePointer();
      assertNotNull(nodePointer1);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QName qName0 = new QName("*");
      Element element0 = new Element("d", "d", "*");
      Attribute attribute0 = new Attribute("d", "{a*QJT@aFa-yED`^ ");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Attribute attribute1 = attribute0.setNamespace(namespace0);
      element0.setAttribute(attribute1);
      Locale locale0 = Locale.JAPAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("vml");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      Element element0 = new Element("vml", "vml", "vml");
      variablePointer0.createPath(jXPathContext0, (Object) element0);
      element0.setAttribute("vml", "org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      boolean boolean0 = jDOMAttributeIterator0.setPosition(1);
      assertEquals(1, jDOMAttributeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("vml", "vml");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
      Element element0 = new Element("vml");
      variablePointer0.createPath(jXPathContext0, (Object) element0);
      NamespaceResolver namespaceResolver0 = new NamespaceResolver();
      namespaceResolver0.registerNamespace("vml", " is not an attribute");
      variablePointer0.setNamespaceResolver(namespaceResolver0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("xml", "xml");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "xml");
      Element element0 = new Element("eqse");
      variablePointer0.createPath(jXPathContext0, (Object) element0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "");
      Element element0 = new Element("space");
      variablePointer0.createPath(jXPathContext0, (Object) element0);
      QName qName1 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
//      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "");
      Element element0 = new Element("space");
      variablePointer0.createPath(jXPathContext0, (Object) element0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
      jDOMAttributeIterator0.getNodePointer();
      // Undeclared exception!
//      try { 
        jDOMAttributeIterator0.getNodePointer();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.GERMANY;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, locale0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
