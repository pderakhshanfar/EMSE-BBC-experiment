/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 03:14:52 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Element;
import org.jdom.Namespace;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMAttributeIterator_ESTest extends JDOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("org.jdomgfilterrDrFilter");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      element0.setAttribute("org.jdomgfilterrDrFilter", "org.jdomgfilterrDrFilter", (Namespace) null);
      element0.setAttribute("bKU", "\" at line ", (Namespace) null);
      QName qName0 = new QName("*");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      NodePointer nodePointer1 = jDOMAttributeIterator0.getNodePointer();
      assertNotNull(nodePointer1);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.jdom.filterrDrFilter", namespace0);
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      QName qName0 = new QName(";>\")@f");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      jDOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      // Undeclared exception!
//      try { 
        jDOMAttributeIterator0.getNodePointer();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 2147483647, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Element element0 = new Element("o-g.jdo3.filterrD0FHltCr", "o-g.jdo3.filterrD0FHltCr", "o-g.jdo3.filterrD0FHltCr");
      Locale locale0 = new Locale("o-g.jdo3.filterrD0FHltCr");
      QName qName0 = new QName("o-g.jdo3.filterrD0FHltCr");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodePointer0);
      nodePointer0.createAttribute(jXPathContext0, qName0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      boolean boolean0 = jDOMAttributeIterator0.setPosition(1);
      assertEquals(1, jDOMAttributeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.jdom.filterrDrFilter", namespace0);
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      QName qName0 = new QName(";>\")@f");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      jDOMAttributeIterator0.getNodePointer();
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
//      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, (QName) null);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: null
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Element element0 = new Element("og.jdm.leglNamEceptiC", "og.jdm.leglNamEceptiC", "og.jdm.leglNamEceptiC");
      QName qName0 = new QName("Q28']4Rx,-f^{63uN8", "]n>u$rVG;t");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, (Locale) null);
      NamespaceResolver namespaceResolver0 = new NamespaceResolver();
      namespaceResolver0.registerNamespace("Q28']4Rx,-f^{63uN8", "X");
      nodePointer0.setNamespaceResolver(namespaceResolver0);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
//      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The name \"Q28']4Rx,-f^{63uN8\" is not legal for JDOM/XML Namespace prefixs: Namespace prefixes cannot contain the character \"'\".
//         //
//         verifyException("org.jdom.Namespace", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator");
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
//      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator((NodePointer) null, qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Nr#Cu5JH=");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
//      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'Nr#Cu5JH='
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.jdom.filterrDrFilter", namespace0);
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      QName qName0 = new QName(";>\")@f");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      boolean boolean0 = jDOMAttributeIterator0.setPosition(2968);
      assertEquals(2968, jDOMAttributeIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, (QName) null);
      boolean boolean0 = jDOMAttributeIterator0.setPosition(0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.jdom.filterrDrFilter", namespace0);
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      QName qName0 = new QName("U5ZE(?;a&',G!");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      jDOMAttributeIterator0.setPosition((-3315));
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals((-3315), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.jdom.filterrDrFilter", namespace0);
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Element element0 = new Element("fr-FR", "org.jdom.filterrDrFilter", "fr-FR");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      QName qName0 = new QName("xml", "+N':mqIkYL;/&tT");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Element element0 = new Element("xmv", "xmv", "xmv");
      Locale locale0 = new Locale("xmv");
      QName qName0 = new QName("*");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      QName qName1 = new QName("xmv", "xmv");
      NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName1);
      assertNotNull(nodePointer1);
      
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("wkr4nD1$MzH&=0ig", "%H38GlNym 6}B");
      Locale locale0 = Locale.CHINA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, locale0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
