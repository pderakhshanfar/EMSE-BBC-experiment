/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 21:55:14 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Element;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMAttributeIterator_ESTest extends JDOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("dscendat-or-self", "dscendat-or-self", "dscendat-or-self");
      element0.setAttribute("dscendat-or-self", "xml");
      element0.setAttribute("xml", "xml");
      QName qName0 = new QName("dscendat-or-self", "dscendat-or-self");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      QName qName1 = new QName("*");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      jDOMAttributeIterator0.getNodePointer();
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("Gyv", "xml");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      QName qName0 = new QName("`dr");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      jDOMAttributeIterator0.setPosition((-4278));
      // Undeclared exception!
//      try { 
        jDOMAttributeIterator0.getNodePointer();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("Gyv", "xml");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      QName qName0 = new QName("`dr");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      jDOMAttributeIterator0.getNodePointer();
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("Gyv", "xml");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      QName qName0 = new QName("`dr");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      jDOMAttributeIterator0.setPosition((-4278));
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals((-4278), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QName qName0 = new QName("", "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
//      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: :
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("xml", "", "Gyv");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
//      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, (QName) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, object0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("'E]pjlT?|tAzTLI");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      JDOMAttributeIterator jDOMAttributeIterator0 = null;
//      try {
        jDOMAttributeIterator0 = new JDOMAttributeIterator(variablePointer0, qName0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: ''E]pjlT?|tAzTLI'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("Gyv", "xml");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      QName qName0 = new QName("`dr");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      jDOMAttributeIterator0.setPosition(188);
      // Undeclared exception!
//      try { 
        jDOMAttributeIterator0.getNodePointer();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 187, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("dscendat-or-self", "dscendat-or-self");
      QName qName0 = new QName("dscendat-or-self", "dscendat-or-self");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      boolean boolean0 = jDOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("dscendat-or-self", "dscendat-or-self", "dscendat-or-self");
      element0.setAttribute("dscendat-or-self", "xml");
      QName qName0 = new QName("dscendat-or-self", "dscendat-or-self");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      QName qName1 = new QName("*");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      NodePointer nodePointer1 = jDOMAttributeIterator0.getNodePointer();
      assertNotNull(nodePointer1);
      
      JDOMAttributeIterator jDOMAttributeIterator1 = new JDOMAttributeIterator(nodePointer1, qName0);
      boolean boolean0 = jDOMAttributeIterator1.setPosition(Integer.MIN_VALUE);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("dscendat-or-self", "dscendat-or-self");
      element0.setAttribute("dscendat-or-self", "xml");
      QName qName0 = new QName("dscendat-or-self", "dscendat-or-self");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      QName qName1 = new QName("", "*");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      Element element0 = new Element("descendant-or-self", "descendant-or-self", "descendant-or-self");
      QName qName0 = new QName("descendant-or-self", "descendant-or-self");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      nodePointer0.createAttribute((JXPathContext) null, qName0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
      
      boolean boolean0 = jDOMAttributeIterator0.setPosition(1);
      assertEquals(1, jDOMAttributeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("xml", "Gyv");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
      QName qName0 = new QName("xml", "mcStOb;x{K^");
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, jDOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.CANADA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
      JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
      int int0 = jDOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
