/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 21:32:26 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLOListElementImpl;
import org.apache.html.dom.HTMLScriptElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLWmlElementImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.DocumentType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMAttributeIterator_ESTest extends DOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QName qName0 = new QName("or.apache.html.dom.HTMLDirectoryElementIp", "or.apache.html.dom.HTMLDirectoryElementIp");
      Locale locale0 = new Locale("or.apache.html.dom.HTMLDirectoryElementIp");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "or.apache.html.dom.HTMLDirectoryElementIp");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLWmlElementImpl0, locale0);
      QName qName1 = new QName("*", "*");
      wMLWmlElementImpl0.setId("o00FS>_");
      wMLWmlElementImpl0.setClassName("http://www.w3.org/2000/xmlns/");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
      assertNotNull(nodePointer1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = new QName("org.apache.html.dom.HTMLDirectoryElementImpl", "");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "&OPL");
      Locale locale0 = Locale.CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLOListElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      // Undeclared exception!
//      try { 
        dOMAttributeIterator0.getNodePointer();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 2147483647, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QName qName0 = new QName("or.apache.html.dom.HTMLDirectoryElementIp", "or.apache.html.dom.HTMLDirectoryElementIp");
      Locale locale0 = new Locale("or.apache.html.dom.HTMLDirectoryElementIp");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "or.apache.html.dom.HTMLDirectoryElementIp");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLWmlElementImpl0, locale0);
      QName qName1 = new QName("*", "*");
      wMLWmlElementImpl0.setId("o00FS>_");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      boolean boolean0 = dOMAttributeIterator0.setPosition(1);
      assertEquals(1, dOMAttributeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QName qName0 = new QName("org.apache.html.dom.HTMLDirectoryElementImpl", "");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "&OPL");
      Locale locale0 = Locale.FRANCE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLOListElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
      
      dOMAttributeIterator0.getNodePointer();
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QName qName0 = new QName("org.apache.html.dom.HTMLDirectoryElementImpl", "");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "&OPL");
      Locale locale0 = Locale.FRANCE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLOListElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QName qName0 = new QName("org.apache.html.dom.HTMLDirectoryElementImpl", "");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "&OPL");
      Locale locale0 = Locale.FRANCE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLOListElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.getNodePointer();
      // Undeclared exception!
//      try { 
        dOMAttributeIterator0.getNodePointer();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = new QName("xmlns", "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
//      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: xmlns:
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QName qName0 = new QName("");
      DOMAttributeIterator dOMAttributeIterator0 = null;
//      try {
        dOMAttributeIterator0 = new DOMAttributeIterator((NodePointer) null, qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("org.apache.html.dom.HTMLDirectoryElementImpl", "");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
//      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'org.apache.html.dom.HTMLDirectoryElementImpl:'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("}|@r-|@j(My(#n%,S=");
      Locale locale0 = Locale.TAIWAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "}|@r-|@j(My(#n%,S=", locale0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
//      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.String cannot be cast to org.w3c.dom.Node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QName qName0 = new QName("or.apache.html.dom.HTMLDirectoryElementIp", "or.apache.html.dom.HTMLDirectoryElementIp");
      Locale locale0 = Locale.forLanguageTag("or.apache.html.dom.HTMLDirectoryElementIp");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "or.apache.html.dom.HTMLDirectoryElementIp");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLWmlElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      boolean boolean0 = dOMAttributeIterator0.setPosition(32768);
      assertEquals(32768, dOMAttributeIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QName qName0 = new QName("org.apache.html.dom.HTMLDirectoryElementImpl");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRANCE;
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLDirectoryElementImpl");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLScriptElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = new QName("or.pahe.html.dom.HTMLDirectoryElementIp", "or.pahe.html.dom.HTMLDirectoryElementIp");
      Locale locale0 = new Locale("or.pahe.html.dom.HTMLDirectoryElementIp");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "or.pahe.html.dom.HTMLDirectoryElementIp");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLWmlElementImpl0, locale0);
      QName qName1 = new QName("*");
      wMLWmlElementImpl0.setXmlLang("http://www.w3.org/XML/1998/namespace");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = new QName("xml", "xml");
      Locale locale0 = new Locale("xml");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "xml");
      hTMLOListElementImpl0.setDir("xml");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLOListElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("xml", "xml");
      Locale locale0 = new Locale("xml");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "xml");
      hTMLOListElementImpl0.setAttribute("xml", (String) null);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLOListElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QName qName0 = new QName("xmlns", "xmlns");
      Locale locale0 = new Locale("xmlns", "xmlns", "xmlns");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "xmlns");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(wMLDocumentImpl0, "xmlns", "xmlns", "xmlns");
      wMLWmlElementImpl0.setAttributeNodeNS(pSVIAttrNSImpl0);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLWmlElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QName qName0 = new QName("xml");
      Locale locale0 = Locale.GERMAN;
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "xml");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLWmlElementImpl0, locale0);
      QName qName1 = new QName("xml", "*");
      wMLWmlElementImpl0.setXmlLang("<<unknown namespace>>");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "xml");
      hTMLOListElementImpl0.setDir("xml");
      QName qName0 = new QName("xml", "*");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLOListElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QName qName0 = new QName("xmlns", "xmlns");
      Locale locale0 = new Locale("xmlns");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "xmlns");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLWmlElementImpl0, locale0);
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(wMLDocumentImpl0, "yb6&M6kP2-=qBusung");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) entityReferenceImpl0);
      NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName0);
      assertFalse(nodePointer1.isContainer());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QName qName0 = new QName("org.apache.html.dom.HTMLDirectoryElementImpl", "");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "&OPL", "&OPL", "");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, documentTypeImpl0, (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      boolean boolean0 = dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      assertEquals(Integer.MIN_VALUE, dOMAttributeIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QName qName0 = new QName("org.apache.html.dom.HTMLDirectoryElementImpl", "");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "&OPL");
      Locale locale0 = Locale.FRANCE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLOListElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
