/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 30 10:09:07 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator;
import org.apache.html.dom.HTMLDivElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLIFrameElementImpl;
import org.apache.html.dom.HTMLLabelElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMAttributeIterator_ESTest extends DOMAttributeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("7$L})CpU1q~l&", "*");
      Locale locale0 = new Locale("*");
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "*");
      hTMLLabelElementImpl0.setDir("7$L})CpU1q~l&");
      hTMLLabelElementImpl0.setLang("7$L})CpU1q~l&");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLLabelElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
      assertEquals(0, dOMAttributeIterator0.getPosition());
      assertNotNull(nodePointer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = new QName("valign", "");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDivElementImpl hTMLDivElementImpl0 = new HTMLDivElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.CANADA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLDivElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      // Undeclared exception!
//      try { 
        dOMAttributeIterator0.getNodePointer();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 2147483647, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("7$L})C@pUq~l&", "*");
      Locale locale0 = Locale.CANADA;
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "*");
      hTMLLabelElementImpl0.setDir("7$L})C@pUq~l&");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLLabelElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
      
      boolean boolean0 = dOMAttributeIterator0.setPosition(1);
      assertEquals(1, dOMAttributeIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      DOMAttributeIterator dOMAttributeIterator0 = null;
//      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, (QName) null);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: null
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DOMAttributeIterator dOMAttributeIterator0 = null;
//      try {
        dOMAttributeIterator0 = new DOMAttributeIterator((NodePointer) null, (QName) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("M Nhn'U-m7w9", "M Nhn'U-m7w9");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
//      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'M Nhn'U-m7w9:M Nhn'U-m7w9'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, locale0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = null;
//      try {
        dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, (QName) null);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.util.Locale cannot be cast to org.w3c.dom.Node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QName qName0 = new QName("0+ ;");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLIFrameElementImpl hTMLIFrameElementImpl0 = new HTMLIFrameElementImpl(hTMLDocumentImpl0, "3/");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLIFrameElementImpl0, (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MAX_VALUE);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("valign", "");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDivElementImpl hTMLDivElementImpl0 = new HTMLDivElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.CANADA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLDivElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("xmlns");
      Locale locale0 = Locale.GERMAN;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "xmlns");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLLabelElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      dOMAttributeIterator0.getNodePointer();
      // Undeclared exception!
//      try { 
        dOMAttributeIterator0.getNodePointer();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QName qName0 = new QName("*");
      Locale locale0 = Locale.GERMANY;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "*");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "/Zopu:oL/]", "/Zopu:oL/]", "*");
      hTMLLabelElementImpl0.setAttributeNodeNS(attrNSImpl0);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLLabelElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("*");
      HTMLDivElementImpl hTMLDivElementImpl0 = new HTMLDivElementImpl(hTMLDocumentImpl0, "*");
      Locale locale0 = Locale.JAPAN;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLDivElementImpl0, locale0);
      hTMLDivElementImpl0.setTitle("<<unknown namespace>>");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = new QName("xmlns");
      QName qName1 = new QName("xmlns", ")");
      Locale locale0 = Locale.GERMAN;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "xmlns");
      hTMLLabelElementImpl0.setDir(")");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLLabelElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = new QName("xml", "xml");
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "xml");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "xml", "xml", "xml");
      hTMLLabelElementImpl0.setAttributeNodeNS(attrNSImpl0);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLLabelElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("xmlns", "xmlns");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDivElementImpl hTMLDivElementImpl0 = new HTMLDivElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.PRC;
      hTMLDivElementImpl0.setAttribute("xmlns", "xmlns");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLDivElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("xmlns", "*");
      Locale locale0 = Locale.CANADA;
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "*");
      hTMLLabelElementImpl0.setDir("*");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLLabelElementImpl0, locale0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QName qName0 = new QName("xmlns", "xmlns");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDivElementImpl hTMLDivElementImpl0 = new HTMLDivElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.ITALY;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLDivElementImpl0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "<<unknown namespace>>");
      NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName0);
      assertNotNull(nodePointer1);
      
      QName qName1 = new QName("xmlns", "http://www.w3.org/XML/1998/namespace");
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName1);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, (QName) null, hTMLDocumentImpl0);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, (QName) null);
      assertEquals(0, dOMAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QName qName0 = new QName("0+ ;");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLIFrameElementImpl hTMLIFrameElementImpl0 = new HTMLIFrameElementImpl(hTMLDocumentImpl0, "3/");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLIFrameElementImpl0, (Locale) null);
      DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
      int int0 = dOMAttributeIterator0.getPosition();
      assertEquals(0, int0);
  }
}
