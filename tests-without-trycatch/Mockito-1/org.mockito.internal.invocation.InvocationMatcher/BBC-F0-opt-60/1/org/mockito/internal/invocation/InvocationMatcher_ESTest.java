/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 19 22:51:03 GMT 2021
 */

package org.mockito.internal.invocation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import java.nio.charset.Charset;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hamcrest.Matcher;
import org.hamcrest.core.IsNull;
import org.hamcrest.text.IsEqualIgnoringWhiteSpace;
import org.hamcrest.text.StringContainsInOrder;
import org.junit.runner.RunWith;
import org.mockito.internal.creation.util.MockitoMethodProxy;
import org.mockito.internal.invocation.InvocationImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.invocation.MockitoMethod;
import org.mockito.internal.invocation.realmethod.DefaultRealMethod;
import org.mockito.internal.matchers.AnyVararg;
import org.mockito.internal.matchers.LocalizedMatcher;
import org.mockito.internal.stubbing.StubbedInvocationMatcher;
import org.mockito.invocation.Invocation;
import org.mockito.stubbing.Answer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvocationMatcher_ESTest extends InvocationMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocation0).getArguments();
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher(invocation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocation0).getArguments();
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher(invocation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocation0).getArguments();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocation0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      invocationMatcher1.getInvocation();
      assertFalse(list0.isEmpty());
      assertEquals(9, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Charset charset0 = Charset.defaultCharset();
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod(mockitoMethodProxy0);
      InvocationImpl invocationImpl0 = new InvocationImpl(charset0, mockitoMethod0, objectArray0, (-1974), defaultRealMethod0);
      invocationImpl0.ignoreForVerification();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Invocation invocation0 = invocationMatcher0.getInvocation();
      assertSame(invocationImpl0, invocation0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Charset charset0 = Charset.defaultCharset();
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod(mockitoMethodProxy0);
      InvocationImpl invocationImpl0 = new InvocationImpl(charset0, mockitoMethod0, objectArray0, (-1974), defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Invocation invocation0 = invocationMatcher0.getInvocation();
      assertSame(invocationImpl0, invocation0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocation0).getArguments();
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher(invocation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
//      try { 
        InvocationMatcher.createFrom((List<Invocation>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(invocation0).toString();
      doReturn(objectArray0).when(invocation0).getArguments();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocation0);
      Answer<AnyVararg> answer0 = (Answer<AnyVararg>) mock(Answer.class, new ViolatedAssumptionAnswer());
      StubbedInvocationMatcher stubbedInvocationMatcher0 = new StubbedInvocationMatcher(invocationMatcher0, answer0);
      // Undeclared exception!
//      try { 
        stubbedInvocationMatcher0.captureArgumentsFrom((Invocation) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher((Invocation) null, (List<Matcher>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher((Invocation) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Charset charset0 = Charset.defaultCharset();
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod(mockitoMethodProxy0);
      InvocationImpl invocationImpl0 = new InvocationImpl(charset0, mockitoMethod0, objectArray0, (-1974), defaultRealMethod0);
      LinkedList<Invocation> linkedList0 = new LinkedList<Invocation>();
      linkedList0.add((Invocation) invocationImpl0);
      List<InvocationMatcher> list0 = InvocationMatcher.createFrom(linkedList0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<Invocation> vector0 = new Vector<Invocation>();
      List<InvocationMatcher> list0 = InvocationMatcher.createFrom(vector0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector<Invocation> vector0 = new Vector<Invocation>();
      Object[] objectArray0 = new Object[9];
      objectArray0[5] = (Object) vector0;
      objectArray0[6] = (Object) vector0;
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      Invocation invocation1 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocation1).getArguments();
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher(invocation1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      IsEqualIgnoringWhiteSpace isEqualIgnoringWhiteSpace0 = new IsEqualIgnoringWhiteSpace("");
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn(isEqualIgnoringWhiteSpace0).when(invocation0).getMock();
      Invocation invocation1 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocation1).getArguments();
      doReturn(object0).when(invocation1).getMock();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocation1);
      boolean boolean0 = invocationMatcher0.matches(invocation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Class<StringContainsInOrder> class0 = StringContainsInOrder.class;
      Matcher<StringContainsInOrder> matcher0 = IsNull.notNullValue(class0);
      LocalizedMatcher localizedMatcher0 = new LocalizedMatcher(matcher0);
      localizedMatcher0.getLocation();
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocation0).getArguments();
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher(invocation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocation0).getArguments();
      doReturn((Method) null).when(invocation0).getMethod();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocation0);
      Method method0 = invocationMatcher0.getMethod();
      assertNull(method0);
  }
}
