/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 19 23:06:55 GMT 2021
 */

package org.mockito.internal.invocation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.lang.reflect.Method;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hamcrest.Matcher;
import org.hamcrest.core.StringContains;
import org.hamcrest.number.IsCloseTo;
import org.hamcrest.number.OrderingComparison;
import org.hamcrest.object.IsEventFrom;
import org.junit.runner.RunWith;
import org.mockito.Answers;
import org.mockito.internal.invocation.InvocationImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.invocation.MockitoMethod;
import org.mockito.internal.invocation.realmethod.RealMethod;
import org.mockito.internal.stubbing.StubbedInvocationMatcher;
import org.mockito.invocation.Invocation;
import org.mockito.invocation.Location;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvocationMatcher_ESTest extends InvocationMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IsCloseTo isCloseTo0 = new IsCloseTo((-6), (-6));
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      InvocationImpl invocationImpl0 = new InvocationImpl(isCloseTo0, mockitoMethod0, (Object[]) null, (-1202), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Answers answers0 = Answers.RETURNS_DEEP_STUBS;
      StubbedInvocationMatcher stubbedInvocationMatcher0 = new StubbedInvocationMatcher(invocationMatcher0, answers0);
      List<Matcher> list0 = (List<Matcher>)stubbedInvocationMatcher0.getMatchers();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OrderingComparison<Locale.FilteringMode>[] orderingComparisonArray0 = (OrderingComparison<Locale.FilteringMode>[]) Array.newInstance(OrderingComparison.class, 5);
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Location) null).when(invocation0).getLocation();
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      InvocationImpl invocationImpl0 = new InvocationImpl(orderingComparisonArray0[0], mockitoMethod0, orderingComparisonArray0, (-347), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher(invocation0, list0);
      invocationMatcher1.getLocation();
      assertEquals(5, list0.size());
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = new InvocationImpl((Object) null, mockitoMethod0, objectArray0, (-4087), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      invocationMatcher1.getInvocation();
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = new InvocationImpl(locale_FilteringMode0, mockitoMethod0, objectArray0, (-2310), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      invocationImpl0.ignoreForVerification();
      Invocation invocation0 = invocationMatcher0.getInvocation();
      assertTrue(invocation0.isVerified());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Class<StringContains> class0 = StringContains.class;
      IsEventFrom isEventFrom0 = new IsEventFrom(class0, (Object) null);
      InvocationImpl invocationImpl0 = new InvocationImpl(isEventFrom0, mockitoMethod0, (Object[]) null, 0, (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Invocation invocation0 = invocationMatcher0.getInvocation();
      assertFalse(invocation0.isIgnoredForVerification());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OrderingComparison<Locale.FilteringMode>[] orderingComparisonArray0 = (OrderingComparison<Locale.FilteringMode>[]) Array.newInstance(OrderingComparison.class, 5);
      OrderingComparison<Locale.FilteringMode> orderingComparison0 = (OrderingComparison<Locale.FilteringMode>) mock(OrderingComparison.class, new ViolatedAssumptionAnswer());
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      InvocationImpl invocationImpl0 = new InvocationImpl(orderingComparison0, mockitoMethod0, orderingComparisonArray0, 9, (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Invocation invocation0 = invocationMatcher0.getInvocation();
      assertSame(invocation0, invocationImpl0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[8];
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, 1111, (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      // Undeclared exception!
//      try { 
        invocationMatcher1.toString();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.reporting.PrintSettings", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OrderingComparison<Locale.FilteringMode>[] orderingComparisonArray0 = (OrderingComparison<Locale.FilteringMode>[]) Array.newInstance(OrderingComparison.class, 5);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null, (Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      InvocationImpl invocationImpl0 = new InvocationImpl(orderingComparisonArray0[0], mockitoMethod0, orderingComparisonArray0, (-347), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
//      try { 
        invocationMatcher0.hasSameMethod(invocationImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[21];
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, (-28), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      // Undeclared exception!
//      try { 
        invocationMatcher1.getMethod();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OrderingComparison<Locale.FilteringMode>[] orderingComparisonArray0 = (OrderingComparison<Locale.FilteringMode>[]) Array.newInstance(OrderingComparison.class, 5);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      InvocationImpl invocationImpl0 = new InvocationImpl(orderingComparisonArray0[0], mockitoMethod0, orderingComparisonArray0, (-347), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      // Undeclared exception!
//      try { 
        invocationMatcher1.getLocation();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<Invocation> vector0 = new Vector<Invocation>();
      vector0.add((Invocation) null);
      // Undeclared exception!
//      try { 
        InvocationMatcher.createFrom(vector0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OrderingComparison<Locale.FilteringMode>[] orderingComparisonArray0 = (OrderingComparison<Locale.FilteringMode>[]) Array.newInstance(OrderingComparison.class, 5);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      InvocationImpl invocationImpl0 = new InvocationImpl(orderingComparisonArray0[0], mockitoMethod0, orderingComparisonArray0, (-347), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
//      try { 
        invocationMatcher0.captureArgumentsFrom(invocationImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher((Invocation) null, (List<Matcher>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher((Invocation) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[21];
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, (-28), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Method method0 = invocationMatcher0.getMethod();
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocation0).getArguments();
      Vector<Invocation> vector0 = new Vector<Invocation>();
      vector0.add(invocation0);
      // Undeclared exception!
//      try { 
        InvocationMatcher.createFrom(vector0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector<Invocation> vector0 = new Vector<Invocation>();
      List<InvocationMatcher> list0 = InvocationMatcher.createFrom(vector0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null, (Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, (-2310), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
//      try { 
        invocationMatcher0.matches(invocationImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(invocation0).getMock();
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, (-2310), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      boolean boolean0 = invocationMatcher0.matches(invocation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[8];
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, 1111, (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
//      try { 
        invocationMatcher0.toString();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OrderingComparison<Locale.FilteringMode>[] orderingComparisonArray0 = (OrderingComparison<Locale.FilteringMode>[]) Array.newInstance(OrderingComparison.class, 5);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      InvocationImpl invocationImpl0 = new InvocationImpl(orderingComparisonArray0[0], mockitoMethod0, orderingComparisonArray0, (-347), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Location location0 = invocationMatcher0.getLocation();
      assertNotNull(location0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OrderingComparison<Locale.FilteringMode>[] orderingComparisonArray0 = (OrderingComparison<Locale.FilteringMode>[]) Array.newInstance(OrderingComparison.class, 5);
      OrderingComparison<Locale.FilteringMode> orderingComparison0 = (OrderingComparison<Locale.FilteringMode>) mock(OrderingComparison.class, new ViolatedAssumptionAnswer());
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      InvocationImpl invocationImpl0 = new InvocationImpl(orderingComparison0, mockitoMethod0, orderingComparisonArray0, (-347), (RealMethod) null);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
//      try { 
        invocationMatcher0.hasSimilarMethod(invocationImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }
}
