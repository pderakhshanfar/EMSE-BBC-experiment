/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 13:54:18 GMT 2021
 */

package org.apache.commons.math3.complex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.complex.Complex;
import org.apache.commons.math3.complex.ComplexField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Complex_ESTest extends Complex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = Complex.valueOf(2.0, Double.POSITIVE_INFINITY);
      complex1.multiply(17);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Complex complex0 = new Complex(Double.POSITIVE_INFINITY);
      Complex complex1 = complex0.INF.divide(Double.POSITIVE_INFINITY);
      Complex complex2 = complex1.NaN.sin();
      Complex complex3 = complex0.sqrt();
      complex3.NaN.readResolve();
      Complex complex4 = complex0.cosh();
      Complex complex5 = complex4.INF.sqrt1z();
      Complex complex6 = Complex.valueOf(Double.POSITIVE_INFINITY);
      Complex complex7 = complex6.NaN.sqrt1z();
      Complex complex8 = complex3.cos();
      Complex complex9 = complex8.add(Double.POSITIVE_INFINITY);
      Complex.valueOf(4995.0, 0.3416208028793335);
      Complex complex10 = complex8.ZERO.sin();
      complex8.I.negate();
      Complex complex11 = complex0.divide(complex2);
      complex8.nthRoot(345);
      Complex complex12 = complex1.divide(complex11);
      complex7.log();
      complex10.multiply(345);
      complex6.pow((-2942.96881));
      complex3.multiply((-720));
      complex11.sqrt1z();
      complex5.add((double) (-720));
      complex0.I.conjugate();
      complex12.pow(748.780495054);
      complex5.sin();
      complex9.pow(complex6);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = Complex.ZERO;
      complex1.getField();
      Complex complex2 = complex0.reciprocal();
      complex2.nthRoot(1155);
      Complex complex3 = complex1.createComplex(2984.8677942994, Double.POSITIVE_INFINITY);
      Complex complex4 = Complex.I;
      complex4.asin();
      complex4.multiply(1.0);
      complex3.sqrt1z();
      Complex complex5 = Complex.ZERO;
      complex5.cosh();
      complex0.multiply((-289));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.acos();
      Complex complex2 = complex0.conjugate();
      Complex complex3 = complex2.createComplex(3.723173861662589E-14, 3.723173861662589E-14);
      Complex complex4 = complex0.cosh();
      complex2.conjugate();
      Complex complex5 = Complex.valueOf(3.723173861662589E-14);
      complex5.nthRoot(318);
      Complex complex6 = complex4.log();
      Complex complex7 = complex3.acos();
      complex5.atan();
      Complex complex8 = new Complex(318, 827.8);
      complex8.abs();
      Complex complex9 = Complex.I;
      Complex complex10 = complex4.exp();
      Complex complex11 = new Complex(1892.16);
      Complex complex12 = complex6.add((double) 318);
      complex12.multiply(complex9);
      complex10.atan();
      complex7.tan();
      complex8.pow(1892.16);
      Complex complex13 = Complex.I;
      complex6.cosh();
      complex1.multiply((-1989));
      complex9.subtract((double) (-1989));
      complex6.sqrt1z();
      complex13.toString();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = Complex.valueOf((-1.0), Double.POSITIVE_INFINITY);
      complex0.ONE.multiply(complex1);
      Complex complex2 = complex0.multiply((-978));
      complex2.multiply((double) (-978));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = new Complex(3.723173861662589E-14);
      Complex complex2 = complex0.add(complex1);
      Complex complex3 = complex1.acos();
      Complex complex4 = complex2.conjugate();
      Complex complex5 = complex2.createComplex(3.723173861662589E-14, 3.723173861662589E-14);
      complex5.cosh();
      Complex complex6 = Complex.valueOf(3.723173861662589E-14, 3.723173861662589E-14);
      complex4.nthRoot(318);
      Complex complex7 = complex5.log();
      complex4.atan();
      complex4.abs();
      Complex complex8 = complex1.reciprocal();
      Complex complex9 = complex6.exp();
      complex4.NaN.negate();
      complex9.ONE.tan();
      complex1.add(1.0);
      complex3.multiply(complex7);
      complex0.atan();
      complex8.tan();
      complex8.acos();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1.05387548454467E-309);
      Complex complex1 = complex0.tanh();
      Complex complex2 = complex0.NaN.subtract(complex1);
      complex2.ONE.sqrt1z();
      Complex complex3 = complex0.ONE.divide(complex1);
      Complex complex4 = complex0.subtract(8.800375280770822E-5);
      Complex complex5 = complex4.ONE.tanh();
      complex5.ONE.multiply(489.417067);
      complex5.INF.subtract(6.283185307179586);
      complex1.reciprocal();
      Complex complex6 = complex4.ONE.pow(complex3);
      complex3.ONE.reciprocal();
      Complex complex7 = complex4.ONE.cosh();
      complex7.INF.divide(complex2);
      Complex.valueOf((-2512.11), (-2512.11));
      Complex complex8 = complex4.pow(1.1169051769031446);
      complex8.ZERO.cosh();
      Complex complex9 = complex1.tanh();
      complex6.subtract(1.1169051769031446);
      complex8.acos();
      Complex complex10 = complex7.tan();
      complex10.sinh();
      complex7.INF.cosh();
      Complex complex11 = complex4.reciprocal();
      complex11.I.readResolve();
      Complex complex12 = complex9.add(complex4);
      complex12.createComplex(2.2695322877552826E-4, 6.283185307179586);
      Complex complex13 = complex12.NaN.subtract(2329.0);
      complex7.add(complex1);
      complex11.getField();
      complex13.cos();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Complex complex0 = Complex.valueOf(3.4637009373878283E-174, 3.4637009373878283E-174);
      Complex complex1 = complex0.I.reciprocal();
      Complex complex2 = complex0.cos();
      complex2.INF.sqrt1z();
      Complex complex3 = complex1.atan();
      Complex complex4 = complex3.ZERO.pow(3.4637009373878283E-174);
      Complex complex5 = complex4.ONE.sin();
      complex5.conjugate();
      Complex complex6 = complex4.NaN.multiply(complex0);
      Complex complex7 = complex1.pow(3.4637009373878283E-174);
      Complex complex8 = complex0.cos();
      Complex complex9 = complex8.NaN.subtract(3.4637009373878283E-174);
      complex9.ONE.getArgument();
      Complex complex10 = complex0.subtract(3.4637009373878283E-174);
      complex10.sqrt1z();
      complex3.reciprocal();
      Complex complex11 = complex2.cos();
      complex1.conjugate();
      complex10.cosh();
      Complex complex12 = complex2.sinh();
      complex12.NaN.toString();
      complex0.reciprocal();
      Complex complex13 = complex7.pow(3.4637009373878283E-174);
      complex11.pow(complex13);
      complex10.readResolve();
      Complex complex14 = Complex.I;
      Complex complex15 = complex6.add(complex14);
      complex15.nthRoot(1276);
      complex5.tanh();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1193.3798421144331, 1193.3798421144331);
//      try { 
        complex0.divide((Complex) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // null is not allowed
//         //
//         verifyException("org.apache.commons.math3.util.MathUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Complex complex0 = Complex.valueOf(2664.437050640703, 2664.437050640703);
      Complex complex1 = Complex.I;
      complex1.ONE.multiply(37);
      complex1.I.divide(2664.437050640703);
      Complex complex2 = Complex.I;
      complex1.INF.subtract(complex0);
      Complex complex3 = Complex.ZERO;
      complex0.ZERO.divide(2664.437050640703);
      complex1.toString();
      complex0.subtract(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = new Complex((-1953.85184), Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Complex complex0 = Complex.valueOf(2664.437050640703, 2664.437050640703);
      Complex complex1 = complex0.acos();
      Complex complex2 = complex1.ONE.multiply(37);
      complex2.ONE.reciprocal();
      Complex complex3 = complex2.INF.add(Double.NaN);
      complex1.I.divide(2664.437050640703);
      complex1.I.readResolve();
      Complex complex4 = complex1.INF.subtract(complex0);
      complex1.acos();
      complex0.ZERO.divide(2664.437050640703);
      complex1.toString();
      Complex complex5 = new Complex(2561.235281132339, 37);
      complex3.subtract(complex4);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
//      try { 
        complex0.NaN.pow((Complex) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // null is not allowed
//         //
//         verifyException("org.apache.commons.math3.util.MathUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = Complex.ONE;
      complex1.multiply(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Complex complex0 = new Complex(Double.POSITIVE_INFINITY);
      Complex complex1 = complex0.add(Double.POSITIVE_INFINITY);
      Complex complex2 = Complex.valueOf(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      Complex complex3 = complex2.ONE.sin();
      Complex complex4 = new Complex(Double.POSITIVE_INFINITY);
      Complex complex5 = complex3.I.pow(complex4);
      complex5.ONE.divide(complex2);
      complex3.ONE.toString();
      complex2.I.hashCode();
      complex0.ONE.pow(complex1);
      complex1.INF.readResolve();
      Complex complex6 = complex1.add(complex0);
      complex6.ONE.tan();
      complex1.getField();
      complex1.createComplex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      Complex complex7 = complex6.subtract(complex1);
      Complex.valueOf(Double.POSITIVE_INFINITY);
      complex1.sqrt1z();
      Complex complex8 = Complex.valueOf(Double.POSITIVE_INFINITY, 912.15652446395);
      complex8.readResolve();
      complex8.subtract(Double.POSITIVE_INFINITY);
      complex8.abs();
      Complex complex9 = new Complex(6.283185307179586);
      complex9.I.asin();
      complex6.add(complex9);
      complex2.readResolve();
      complex5.pow(912.15652446395);
      complex0.cosh();
      complex7.multiply(553);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Complex complex0 = Complex.valueOf(207.21996422457);
      complex0.readResolve();
//      try { 
        complex0.NaN.subtract((Complex) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // null is not allowed
//         //
//         verifyException("org.apache.commons.math3.util.MathUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.subtract(0.129232261);
      Complex complex2 = complex1.multiply(Double.POSITIVE_INFINITY);
      Complex complex3 = Complex.valueOf((-195.0), (-195.0));
      Complex complex4 = new Complex((-389.392), (-389.392));
      complex4.sqrt1z();
      complex3.multiply((-1234));
      complex2.sqrt1z();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = Complex.valueOf(1808.7, (-2.0697130057384643E245));
      complex1.sqrt1z();
      Complex complex2 = Complex.ONE;
      complex2.multiply(1434);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.multiply(2147483640);
      complex0.pow(complex1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = 2044.64987671;
      Complex complex0 = Complex.valueOf(2044.64987671, 2044.64987671);
      Complex complex1 = null;
//      try { 
        complex0.I.add((Complex) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // null is not allowed
//         //
//         verifyException("org.apache.commons.math3.util.MathUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Complex complex0 = new Complex(20.0);
      Complex complex1 = complex0.multiply(834.347);
      complex0.abs();
      Complex complex2 = complex0.conjugate();
      Complex complex3 = Complex.valueOf(834.347, 20.0);
      complex2.tan();
      complex3.tan();
      complex1.reciprocal();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      complex0.abs();
      Complex complex1 = new Complex(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Complex complex0 = Complex.valueOf(2664.437050640703, 2664.437050640703);
      Complex complex1 = complex0.acos();
      complex1.readResolve();
      Complex complex2 = Complex.valueOf(2664.437050640703);
      Complex complex3 = complex2.ONE.sqrt();
      complex2.equals(complex0);
      complex3.multiply(0.0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = new Complex(-0.0, -0.0);
      Complex complex2 = complex1.multiply((-136.6477181));
      complex0.abs();
      Complex complex3 = new Complex(-0.0, 3643.432968044816);
      Complex complex4 = complex3.conjugate();
      Complex complex5 = complex3.acos();
      complex0.tan();
      complex5.tan();
      complex4.reciprocal();
      complex2.acos();
      complex4.add(complex3);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-4.7989172862560625E-8), 0.0);
      Complex complex1 = complex0.sqrt();
      Complex complex2 = Complex.I;
      Complex complex3 = complex0.reciprocal();
      complex1.add((-1.8058492822440396E-244));
      complex3.getField();
      complex1.divide((-314.3247));
      Complex complex4 = Complex.ZERO;
      Complex complex5 = new Complex(1793.0, (-314.3247));
      Complex complex6 = complex5.createComplex((-20.0), (-4.7989172862560625E-8));
      complex4.readResolve();
      complex0.sqrt();
      complex4.cosh();
      Complex complex7 = complex6.tanh();
      complex7.divide(0.0);
      Complex complex8 = new Complex((-314.3247), 5.569079331271999E8);
      complex3.getField();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Complex complex0 = Complex.valueOf(20.0, 20.0);
      Complex complex1 = complex0.multiply(834.347);
      complex0.abs();
      Complex complex2 = complex0.conjugate();
      Complex complex3 = complex1.acos();
      complex2.tan();
      complex3.tan();
      complex1.reciprocal();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = Complex.valueOf((-911.5), (-4053.8889546));
      Complex complex2 = complex0.acos();
      complex2.ONE.createComplex((-911.5), (-911.5));
      Complex complex3 = complex0.multiply(37);
      complex0.divide(1.6520521364942393E-7);
      Complex complex4 = Complex.I;
      complex4.readResolve();
      Complex complex5 = complex3.subtract(complex1);
      Complex.valueOf((-911.5), Double.POSITIVE_INFINITY);
      complex4.divide(Double.POSITIVE_INFINITY);
      complex3.toString();
      complex0.acos();
      Complex complex6 = Complex.I;
      complex6.createComplex((-20.0), (-20.0));
      Complex complex7 = complex1.multiply(0.0);
      Complex complex8 = Complex.valueOf((double) 37, 1606.81941203);
      complex8.pow(complex5);
      complex6.sqrt1z();
      Complex complex9 = complex7.asin();
      complex9.add(complex6);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.exp();
      complex0.tanh();
      Complex complex2 = new Complex((-2757.6758));
      complex2.subtract((-2757.6758));
      Complex complex3 = complex0.conjugate();
      Complex complex4 = complex3.acos();
      complex2.tan();
      complex0.toString();
      Complex complex5 = complex4.sqrt1z();
      Complex complex6 = Complex.ZERO;
      Complex complex7 = complex6.sqrt();
      complex1.reciprocal();
      complex6.add((-20.0));
      complex2.getField();
      complex0.divide((-2757.6758));
      complex7.readResolve();
      complex5.cosh();
//      try { 
        complex0.INF.multiply((Complex) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // null is not allowed
//         //
//         verifyException("org.apache.commons.math3.util.MathUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Complex complex0 = new Complex((-777.635319758485));
      Complex complex1 = complex0.subtract(990.229204047);
      Complex complex2 = new Complex(33.43413);
      Complex complex3 = complex2.conjugate();
      Complex complex4 = Complex.valueOf((-777.635319758485), (-777.635319758485));
      complex1.acos();
      Complex.valueOf(148.9470708873843);
      complex4.getImaginary();
      Complex complex5 = complex4.add((-1204.163484161));
      complex3.getArgument();
      complex5.sin();
      complex1.exp();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Complex complex0 = new Complex((-1187.8139525150282));
      complex0.getField();
      Complex complex1 = complex0.divide(Double.NaN);
      Complex complex2 = Complex.ZERO;
      Complex complex3 = complex2.createComplex(Double.NaN, (-1827.964136736));
      complex0.readResolve();
      Complex complex4 = complex3.cosh();
      complex4.tanh();
      complex2.divide(1.4385227981629147E-8);
      Complex complex5 = complex1.pow((-2.7943366835352838E-8));
      Complex complex6 = complex5.cos();
      complex6.multiply((-1187.8139525150282));
      Complex complex7 = new Complex((-387.96979325422456), (-2.7943366835352838E-8));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1830.6533662), 834.347);
      complex0.sqrt();
      complex0.getReal();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Complex complex0 = Complex.I;
      complex0.abs();
      Complex complex1 = Complex.valueOf(491.237143, 1.0);
      Complex complex2 = complex0.multiply(complex1);
      complex2.tan();
      Complex complex3 = Complex.valueOf(1.8609623908996582, 1.8609623908996582);
      complex3.isInfinite();
      Complex complex4 = complex1.multiply((-2144601897));
      Complex complex5 = complex1.reciprocal();
      Complex complex6 = complex4.add(6.473860152384321E-297);
      complex4.sinh();
      complex6.log();
      complex5.multiply(complex3);
      complex3.sin();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Complex complex0 = new Complex(20.0);
      complex0.multiply(834.347);
      complex0.abs();
      complex0.conjugate();
      Complex complex1 = complex0.cosh();
      complex0.tanh();
      Complex complex2 = complex1.divide(2.0);
      complex0.pow(20.0);
      complex2.cos();
      complex1.multiply(2.0);
      Complex complex3 = new Complex((-387.96979325422456), 1.6520521364942393E-7);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      Complex complex1 = complex0.tanh();
      Complex complex2 = Complex.NaN;
      Complex complex3 = complex0.multiply(complex2);
      complex3.ZERO.exp();
      Complex complex4 = complex2.tan();
      complex0.getArgument();
      complex4.abs();
      Complex complex5 = Complex.valueOf(Double.NaN, 20.0);
      complex1.add(complex5);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.multiply((-1555));
      Complex complex2 = complex0.ZERO.log();
      Complex complex3 = complex0.pow(418.0);
      complex1.log();
      complex2.cos();
      Complex complex4 = complex3.sinh();
//      try { 
        complex4.INF.nthRoot((-1555));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cannot compute nth root for null or negative n: -1,555
//         //
//         verifyException("org.apache.commons.math3.complex.Complex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.ZERO.atan();
      Complex complex2 = complex1.subtract(1017.0351113218773);
      Complex complex3 = complex1.conjugate();
      Complex complex4 = complex2.sqrt1z();
      Complex complex5 = complex3.sqrt();
      Complex complex6 = Complex.I;
      Complex complex7 = complex0.reciprocal();
      complex0.add(1017.0351113218773);
      Complex complex8 = Complex.I;
      complex8.getField();
      Complex complex9 = complex7.divide(1017.0351113218773);
      complex4.readResolve();
      complex0.cosh();
      complex1.tanh();
      Complex complex10 = complex9.divide((-3.2936025225250634E-8));
      complex5.pow(1017.0351113218773);
      complex4.cos();
      complex10.subtract((-790.691864));
      Complex complex11 = complex10.conjugate();
      complex8.multiply((-1086));
      complex11.toString();
      complex3.divide(1017.0351113218773);
      complex9.sqrt();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-4995.0), (-4995.0));
      Complex complex1 = complex0.tan();
      Complex complex2 = Complex.ZERO;
      complex0.getImaginary();
      Complex complex3 = complex2.asin();
      complex3.equals(complex1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.ZERO.atan();
      complex1.subtract(1017.0351113218773);
      Complex complex2 = complex1.conjugate();
      Complex complex3 = complex2.ZERO.acos();
      complex1.toString();
      complex0.INF.sqrt1z();
      complex3.ZERO.sqrt();
      Complex complex4 = Complex.NaN;
      Complex complex5 = new Complex(1.0);
      // Undeclared exception!
      complex2.nthRoot(5754);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Complex complex0 = new Complex(590.1933507857);
      Complex complex1 = complex0.ZERO.multiply((-2077.9));
      complex0.INF.abs();
      Complex complex2 = complex0.conjugate();
      complex0.atan();
      Complex complex3 = complex0.sinh();
      Complex complex4 = complex1.divide((-2077.9));
      Complex complex5 = Complex.I;
      complex5.exp();
      Complex complex6 = Complex.ONE;
      complex1.subtract(complex2);
      Complex complex7 = complex6.divide(complex3);
      complex5.divide(complex4);
      complex7.add(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, (-1653.71));
      Complex complex1 = complex0.I.exp();
      complex0.isNaN();
      complex1.getArgument();
      Complex complex2 = complex1.atan();
      complex1.NaN.tanh();
      Complex complex3 = complex2.atan();
      complex3.divide(complex0);
      Complex complex4 = complex0.asin();
      complex2.ONE.getArgument();
      Complex complex5 = complex2.INF.add(complex4);
      complex5.NaN.sin();
      complex2.I.hashCode();
      Complex complex6 = Complex.valueOf(0.0, (-1492.3917248158));
      complex2.multiply(complex6);
      Complex complex7 = complex2.log();
      complex1.ZERO.sinh();
      Complex complex8 = Complex.valueOf((-1662.284), (-2070.305));
      complex8.I.negate();
      Complex complex9 = complex1.acos();
      complex6.nthRoot(2523);
      complex9.log();
      complex4.sin();
      complex7.hashCode();
      complex8.isInfinite();
      complex3.equals("");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      Complex complex1 = complex0.ONE.conjugate();
      Complex complex2 = new Complex(-0.0, (-1.0));
      Complex complex3 = complex0.NaN.subtract(complex2);
      complex0.INF.tanh();
      complex0.NaN.getField();
      Complex complex4 = complex0.multiply(724);
      complex0.sin();
      Complex complex5 = Complex.valueOf(1274.039553, 1660.8454);
      complex5.atan();
      Complex complex6 = complex2.divide(complex5);
      complex6.ZERO.sinh();
      Complex complex7 = complex6.I.pow(complex3);
      complex7.subtract((double) 724);
      complex7.INF.nthRoot(724);
      complex2.negate();
      complex4.log();
      complex1.createComplex((-1.0), 1274.039553);
      complex7.nthRoot(724);
      complex1.add(1274.039553);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Complex complex0 = new Complex((-1.4672600326020399E299));
      Complex complex1 = new Complex(3926.22);
      complex0.NaN.subtract(complex1);
      Complex complex2 = complex0.asin();
      complex2.divide(complex1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Complex complex0 = new Complex((-777.635319758485));
      Complex complex1 = complex0.subtract(990.229204047);
      Complex complex2 = new Complex(33.43413);
      Complex complex3 = complex2.conjugate();
      complex0.acos();
      Complex complex4 = complex3.tan();
      complex3.toString();
      Complex complex5 = complex1.sqrt1z();
      Complex complex6 = complex5.sqrt();
      Complex complex7 = Complex.I;
      complex7.reciprocal();
      complex2.add(990.229204047);
      complex5.getField();
      Complex complex8 = complex4.divide(33.43413);
      complex0.readResolve();
      Complex complex9 = complex6.cosh();
      complex6.tanh();
      Complex complex10 = complex5.divide(990.229204047);
      Complex complex11 = complex10.pow(33.43413);
      Complex complex12 = complex11.cos();
      complex8.subtract(33.43413);
      complex9.conjugate();
      Complex complex13 = complex12.multiply(233);
      complex6.toString();
      complex13.divide((double) 4007);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Complex complex0 = new Complex((-777.635319758485));
      Complex complex1 = Complex.INF;
      complex0.divide(complex1);
      Complex complex2 = complex1.log();
      Complex complex3 = complex2.divide(complex1);
      complex3.getArgument();
      Complex complex4 = Complex.valueOf(0.0);
      Complex complex5 = Complex.INF;
      Complex complex6 = complex0.ZERO.acos();
      Complex complex7 = complex5.cos();
      Complex complex8 = complex0.atan();
      complex1.pow(complex5);
      complex3.createComplex(0.0, Double.NaN);
      complex7.sqrt();
      Complex complex9 = complex8.reciprocal();
      complex4.atan();
      complex3.subtract(complex4);
      complex9.getField();
      Complex complex10 = complex0.reciprocal();
      complex6.readResolve();
      complex10.exp();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.exp();
      assertNotNull(complex1);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.tanh();
      assertNotNull(complex2);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.557407724654902, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = new Complex((-2757.6758));
      assertNotNull(complex3);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals((-2757.6758), complex3.getReal(), 0.01);
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      
      Complex complex4 = complex3.subtract((-2757.6758));
      assertNotNull(complex4);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals((-2757.6758), complex3.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex0.conjugate();
      assertNotNull(complex5);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex5.acos();
      assertNotNull(complex6);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex3.tan();
      assertNotNull(complex7);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals((-2757.6758), complex3.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.7485147202221557, complex7.getReal(), 0.01);
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      
      String string0 = complex0.toString();
      assertNotNull(string0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      
      Complex complex8 = complex6.sqrt1z();
      assertNotNull(complex8);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-1.3312243736150495), complex8.getImaginary(), 0.01);
      assertEquals(1.03998876557881, complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      
      Complex complex9 = Complex.ZERO;
      assertNotNull(complex9);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      
      Complex complex10 = complex9.sqrt();
      assertNotNull(complex10);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      
      Complex complex11 = complex1.reciprocal();
      assertNotNull(complex11);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-0.8414709848078965), complex11.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      
      Complex complex12 = complex9.add((-20.0));
      assertNotNull(complex12);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-20.0), complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      
      ComplexField complexField0 = complex3.getField();
      assertNotNull(complexField0);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals((-2757.6758), complex3.getReal(), 0.01);
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      
      Complex complex13 = complex0.divide((-2757.6758));
      assertNotNull(complex13);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals((-3.62624206949925E-4), complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      
      Complex complex14 = (Complex)complex10.readResolve();
      assertNotNull(complex14);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertTrue(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertTrue(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex14);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      
      Complex complex15 = complex8.cosh();
      assertNotNull(complex15);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals((-1.2025094596072587), complex15.getImaginary(), 0.01);
      assertEquals(0.3775997334601025, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-1.3312243736150495), complex8.getImaginary(), 0.01);
      assertEquals(1.03998876557881, complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      
      Complex complex16 = complex15.tanh();
      assertNotNull(complex16);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals((-1.2025094596072587), complex15.getImaginary(), 0.01);
      assertEquals(0.3775997334601025, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals((-1.2034243604296349), complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(1.485232376859621, complex16.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-1.3312243736150495), complex8.getImaginary(), 0.01);
      assertEquals(1.03998876557881, complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex6);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      
      Complex complex17 = complex6.divide(549.97245145);
      assertNotNull(complex17);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0028561363803832336, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(0.0016025777012935924, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex14));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex17);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex14);
      
      Complex complex18 = complex3.pow((-2127.96));
      assertNotNull(complex18);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals((-2757.6758), complex3.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(0.0, complex18.getReal(), 0.01);
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isNaN());
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex11));
      assertTrue(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex5));
      assertTrue(complex18.equals((Object)complex14));
      assertTrue(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex6));
      assertTrue(complex18.equals((Object)complex4));
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex6);
      
      Complex complex19 = complex15.cos();
      assertNotNull(complex19);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals((-1.2025094596072587), complex15.getImaginary(), 0.01);
      assertEquals(0.3775997334601025, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertFalse(complex19.isNaN());
      assertEquals(1.6866253727086589, complex19.getReal(), 0.01);
      assertEquals(0.5582008483365009, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-1.3312243736150495), complex8.getImaginary(), 0.01);
      assertEquals(1.03998876557881, complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex18));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex19);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex18);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex17);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex17);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex14);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      
      Complex complex20 = complex16.subtract((-2855.824467));
      assertNotNull(complex20);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals((-1.2025094596072587), complex15.getImaginary(), 0.01);
      assertEquals(0.3775997334601025, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals((-1.2034243604296349), complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(1.485232376859621, complex16.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex20.isNaN());
      assertFalse(complex20.isInfinite());
      assertEquals(2857.3096993768595, complex20.getReal(), 0.01);
      assertEquals((-1.2034243604296349), complex20.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-1.3312243736150495), complex8.getImaginary(), 0.01);
      assertEquals(1.03998876557881, complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex19));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex18));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex18));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex15, complex20);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex19);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex18);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex17);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex19);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex20);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex18);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex17);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex19);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex14);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex20);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      
      Complex complex21 = complex4.conjugate();
      assertNotNull(complex21);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals((-2757.6758), complex3.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
      assertEquals(0.0, complex21.getReal(), 0.01);
      assertFalse(complex21.isNaN());
      assertEquals(-0.0, complex21.getImaginary(), 0.01);
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex13));
      assertTrue(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex11));
      assertTrue(complex21.equals((Object)complex14));
      assertTrue(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex5));
      assertTrue(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex17));
      assertTrue(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex0));
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex21);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex21);
      assertNotSame(complex4, complex13);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex0);
      
      Complex complex22 = complex17.multiply((-1561));
      assertNotNull(complex22);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0028561363803832336, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(0.0016025777012935924, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals((-2.5016237917192976), complex22.getImaginary(), 0.01);
      assertEquals((-4.458428889778228), complex22.getReal(), 0.01);
      assertFalse(complex22.isNaN());
      assertFalse(complex22.isInfinite());
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex20));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex21));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex21));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex7));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex17, complex20);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex22);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex19);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex21);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex10);
      assertNotSame(complex5, complex21);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex22);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex17);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex21);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex22);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex14);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, complex14);
      assertNotSame(complex22, complex10);
      assertNotSame(complex22, complex21);
      assertNotSame(complex22, complex9);
      assertNotSame(complex22, complex3);
      assertNotSame(complex22, complex15);
      assertNotSame(complex22, complex17);
      assertNotSame(complex22, complex6);
      assertNotSame(complex22, complex8);
      
      String string1 = complex15.toString();
      assertNotNull(string1);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals((-1.2025094596072587), complex15.getImaginary(), 0.01);
      assertEquals(0.3775997334601025, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-1.3312243736150495), complex8.getImaginary(), 0.01);
      assertEquals(1.03998876557881, complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex20));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex22));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex19));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex21));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex18));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex21));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex22));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(string1.equals((Object)string0));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex22));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex21));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      
      Complex complex23 = complex15.divide((-8.008561371849434E-8));
      assertNotNull(complex23);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals((-1.2025094596072587), complex15.getImaginary(), 0.01);
      assertEquals(0.3775997334601025, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-1.3312243736150495), complex8.getImaginary(), 0.01);
      assertEquals(1.03998876557881, complex8.getReal(), 0.01);
      assertEquals(1.5015299299998505E7, complex23.getImaginary(), 0.01);
      assertFalse(complex23.isNaN());
      assertFalse(complex23.isInfinite());
      assertEquals((-4714950.862303283), complex23.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex20));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex22));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex19));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex21));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex18));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex21));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex22));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex22));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex21));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex8));
      assertFalse(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex0));
      assertFalse(complex23.equals((Object)complex22));
      assertFalse(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex14));
      assertFalse(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex17));
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.ZERO.atan();
      assertNotNull(complex1);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = Complex.ONE;
      assertNotNull(complex2);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      complex2.ZERO.hashCode();
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.sqrt();
      assertNotNull(complex3);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex0.sinh();
      assertNotNull(complex4);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex0.add((-261.3));
      assertNotNull(complex5);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals((-261.3), complex5.getReal(), 0.01);
      assertEquals(1.0, complex5.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      
      Complex complex6 = Complex.ZERO;
      assertNotNull(complex6);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex1));
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      
      Complex complex7 = complex6.divide((-5.2305110482722706E-8));
      assertNotNull(complex7);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      
      Complex complex8 = complex2.reciprocal();
      assertNotNull(complex8);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex3));
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      
      Complex complex9 = Complex.valueOf(1017.0351113218773);
      assertNotNull(complex9);
      assertEquals(1017.0351113218773, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      
      Complex complex10 = complex9.I.tanh();
      assertNotNull(complex10);
      assertEquals(1017.0351113218773, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(1.557407724654902, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      
      boolean boolean0 = complex2.equals(complex9);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1017.0351113218773, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertFalse(boolean0);
      
      Complex complex11 = complex7.divide((-261.3));
      assertNotNull(complex11);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      
      Complex complex12 = complex1.divide(1100.967853073);
      assertNotNull(complex12);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      
      Complex complex13 = complex7.pow(Double.NaN);
      assertNotNull(complex13);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex7));
      assertTrue(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      
      Complex complex14 = complex7.sinh();
      assertNotNull(complex14);
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertEquals(-0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex2));
      assertTrue(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex5);
      
      Complex complex15 = complex14.subtract((-261.3));
      assertNotNull(complex15);
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertEquals(-0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(261.3, complex15.getReal(), 0.01);
      assertEquals(-0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex2));
      assertTrue(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertTrue(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex9);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex5);
      
      Complex complex16 = complex12.tan();
      assertNotNull(complex16);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex4));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex13));
      assertTrue(complex16.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex15));
      assertTrue(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex14));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex16);
      
      Complex complex17 = (Complex)complex13.readResolve();
      assertNotNull(complex17);
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex6));
      assertTrue(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex15));
      assertTrue(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertTrue(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex16));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex13);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex5);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = complex7.equals(complex16);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex4));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex13));
      assertTrue(complex16.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex1));
      assertFalse(boolean1 == boolean0);
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex15));
      assertTrue(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertTrue(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex17));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex15));
      assertTrue(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex16));
      assertTrue(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex17));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex6);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex16);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      Complex complex1 = Complex.valueOf((-4995.0));
      assertNotNull(complex1);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.divide(complex1);
      assertNotNull(complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.log();
      assertNotNull(complex3);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex1.divide(complex0);
      assertNotNull(complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      
      double double0 = complex3.getArgument();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertEquals(Double.NaN, double0, 0.01);
      
      Complex complex5 = Complex.valueOf(Double.NaN);
      assertNotNull(complex5);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = Complex.INF;
      assertNotNull(complex6);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      
      Complex complex7 = complex4.acos();
      assertNotNull(complex7);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      
      Complex complex8 = complex4.cos();
      assertNotNull(complex8);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      
      Complex complex9 = complex5.atan();
      assertNotNull(complex9);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      
      Complex complex10 = complex7.pow(complex2);
      assertNotNull(complex10);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex9);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      
      Complex complex11 = Complex.valueOf(0.0);
      assertNotNull(complex11);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      
      Complex complex12 = new Complex(0.0, (-1.686490951669855E-7));
      assertNotNull(complex12);
      assertEquals((-1.686490951669855E-7), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      
      Complex complex13 = complex9.pow(complex12);
      assertNotNull(complex13);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals((-1.686490951669855E-7), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex12));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex1));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex12));
      assertNotSame(complex5, complex8);
      assertSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex3);
      assertSame(complex9, complex13);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex12);
      assertSame(complex13, complex5);
      assertNotSame(complex13, complex4);
      assertSame(complex13, complex3);
      
      Complex complex14 = complex9.log();
      assertNotNull(complex14);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex12));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex4));
      assertNotSame(complex5, complex8);
      assertSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex10);
      assertSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex3);
      assertSame(complex9, complex13);
      assertSame(complex9, complex14);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex14, complex2);
      assertSame(complex14, complex5);
      assertSame(complex14, complex10);
      assertSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex9);
      
      Complex complex15 = complex10.tan();
      assertNotNull(complex15);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex4));
      assertTrue(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex13));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex1));
      assertSame(complex15, complex9);
      assertSame(complex15, complex5);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex2);
      assertSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertSame(complex15, complex3);
      assertNotSame(complex15, complex8);
      assertSame(complex15, complex13);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex13);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex5);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex11);
      assertSame(complex10, complex14);
      assertSame(complex10, complex13);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex12);
      assertSame(complex10, complex9);
      assertSame(complex10, complex15);
      assertNotSame(complex10, complex1);
      
      double double1 = complex14.getArgument();
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(double1, double0, 0.01);
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex12));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex4));
      assertNotSame(complex5, complex8);
      assertSame(complex5, complex13);
      assertSame(complex5, complex15);
      assertNotSame(complex5, complex12);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex10);
      assertSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex15);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex3);
      assertSame(complex9, complex13);
      assertSame(complex9, complex14);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex14, complex2);
      assertSame(complex14, complex5);
      assertSame(complex14, complex10);
      assertSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex9);
      assertSame(complex14, complex15);
      assertEquals(Double.NaN, double1, 0.01);
      
      boolean boolean0 = complex3.isNaN();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertSame(complex3, complex15);
      assertSame(complex3, complex5);
      assertSame(complex3, complex13);
      assertSame(complex3, complex14);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertTrue(boolean0);
      
      Complex complex16 = complex7.tanh();
      assertNotNull(complex16);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(0.9171523356672743, complex16.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex13));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex14);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex13);
      
      Complex complex17 = complex9.multiply(2835);
      assertNotNull(complex17);
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertTrue(complex17.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex12));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertSame(complex17, complex3);
      assertNotSame(complex17, complex8);
      assertSame(complex17, complex15);
      assertSame(complex17, complex5);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex7);
      assertSame(complex17, complex9);
      assertSame(complex17, complex10);
      assertNotSame(complex17, complex0);
      assertSame(complex17, complex13);
      assertSame(complex17, complex14);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex12);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex16);
      assertSame(complex5, complex13);
      assertSame(complex5, complex15);
      assertNotSame(complex5, complex12);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex17);
      assertSame(complex5, complex10);
      assertSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex10);
      assertSame(complex9, complex17);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex15);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex3);
      assertSame(complex9, complex13);
      assertNotSame(complex9, complex16);
      assertSame(complex9, complex14);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      
      double double2 = complex3.getImaginary();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-4995.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex17));
      assertTrue(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertSame(complex3, complex15);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex16);
      assertSame(complex3, complex13);
      assertSame(complex3, complex14);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex17);
      assertNotSame(complex3, complex4);
      assertEquals(Double.NaN, double2, 0.01);
      
      Complex complex18 = complex9.asin();
      assertNotNull(complex18);
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex4));
      assertTrue(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex12));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertNotSame(complex18, complex4);
      assertSame(complex18, complex3);
      assertNotSame(complex18, complex1);
      assertSame(complex18, complex17);
      assertNotSame(complex18, complex2);
      assertSame(complex18, complex10);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex11);
      assertSame(complex18, complex13);
      assertSame(complex18, complex14);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex8);
      assertSame(complex18, complex9);
      assertSame(complex18, complex15);
      assertSame(complex18, complex5);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex16);
      assertSame(complex5, complex13);
      assertSame(complex5, complex15);
      assertSame(complex5, complex18);
      assertNotSame(complex5, complex12);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex17);
      assertSame(complex5, complex10);
      assertSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex10);
      assertSame(complex9, complex17);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex15);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex18);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex3);
      assertSame(complex9, complex13);
      assertNotSame(complex9, complex16);
      assertSame(complex9, complex14);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = complex5.equals(object0);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(boolean1 == boolean0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex16);
      assertSame(complex5, complex13);
      assertSame(complex5, complex15);
      assertSame(complex5, complex18);
      assertNotSame(complex5, complex12);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex17);
      assertSame(complex5, complex10);
      assertSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertFalse(boolean1);
      
      Complex complex19 = complex0.cosh();
      assertNotNull(complex19);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex7));
      assertTrue(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex6));
      assertTrue(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex0));
      assertTrue(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex3));
      assertTrue(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex12));
      assertTrue(complex19.equals((Object)complex15));
      assertTrue(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex11));
      assertTrue(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex1));
      assertTrue(complex19.equals((Object)complex13));
      assertTrue(complex19.equals((Object)complex14));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex18);
      
      double double3 = complex9.getArgument();
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex16));
      assertTrue(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertEquals(double3, double1, 0.01);
      assertEquals(double3, double2, 0.01);
      assertEquals(double3, double0, 0.01);
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex12));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex16);
      assertSame(complex5, complex13);
      assertSame(complex5, complex15);
      assertSame(complex5, complex18);
      assertNotSame(complex5, complex12);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex17);
      assertSame(complex5, complex10);
      assertSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex10);
      assertSame(complex9, complex17);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex15);
      assertNotSame(complex9, complex19);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex18);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex3);
      assertSame(complex9, complex13);
      assertNotSame(complex9, complex16);
      assertSame(complex9, complex14);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertEquals(Double.NaN, double3, 0.01);
      
      Complex complex20 = complex0.tanh();
      assertNotNull(complex20);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertTrue(complex20.isNaN());
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex12));
      assertTrue(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex1));
      assertTrue(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex7));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertSame(complex20, complex9);
      assertNotSame(complex20, complex1);
      assertSame(complex20, complex17);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex5);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex12);
      assertSame(complex20, complex15);
      assertSame(complex20, complex18);
      assertSame(complex20, complex3);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex11);
      assertSame(complex20, complex14);
      assertSame(complex20, complex13);
      assertNotSame(complex20, complex16);
      assertSame(complex20, complex10);
      assertNotSame(complex20, complex2);
      
      Complex complex21 = complex11.negate();
      assertNotNull(complex21);
      assertEquals(-0.0, complex21.getReal(), 0.01);
      assertFalse(complex21.isNaN());
      assertEquals(-0.0, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex13));
      assertTrue(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex16));
      assertTrue(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex18));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex10));
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex1);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex21);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.negate();
      assertNotNull(complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.ONE.pow(complex0);
      assertNotNull(complex2);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex1.ZERO.divide(complex0);
      assertNotNull(complex3);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex1.subtract(complex0);
      assertNotNull(complex4);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex3.I.tanh();
      assertNotNull(complex5);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.557407724654902, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      
      Complex complex6 = complex4.sqrt();
      assertNotNull(complex6);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      
      Complex complex7 = complex6.ZERO.multiply(complex0);
      assertNotNull(complex7);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      
      Complex complex8 = complex4.I.sqrt1z();
      assertNotNull(complex8);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.4142135623730951, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      
      double double0 = complex4.abs();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertEquals(0.0, double0, 0.01);
      
      Complex complex9 = complex5.subtract((-5046.86));
      assertNotNull(complex9);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.557407724654902, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(5046.86, complex9.getReal(), 0.01);
      assertEquals(1.557407724654902, complex9.getImaginary(), 0.01);
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      
      Complex complex10 = complex2.log();
      assertNotNull(complex10);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex7));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex10);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      
      Complex complex11 = complex4.add(complex7);
      assertNotNull(complex11);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertTrue(complex6.equals((Object)complex7));
      assertTrue(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex6));
      assertTrue(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      
      Complex complex12 = complex10.sinh();
      assertNotNull(complex12);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex11));
      assertTrue(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Complex complex0 = new Complex(0.0, 0.0);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.sqrt1z();
      assertNotNull(complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.exp();
      assertNotNull(complex2);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      double double0 = complex0.abs();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertEquals(0.0, double0, 0.01);
      
      Complex complex3 = complex0.I.sqrt();
      assertNotNull(complex3);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      double double1 = complex3.ONE.getArgument();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertEquals(0.0, double1, 0.01);
      
      ComplexField complexField0 = complex0.I.getField();
      assertNotNull(complexField0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      
      Complex complex4 = complex0.sqrt1z();
      assertNotNull(complex4);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = complex0.equals(object0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertFalse(boolean0);
      
      Complex complex5 = complex3.cos();
      assertNotNull(complex5);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals((-0.4986113866728328), complex5.getImaginary(), 0.01);
      assertEquals(0.9583581328330069, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = complex0.pow(complex3);
      assertNotNull(complex6);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex5.conjugate();
      assertNotNull(complex7);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals((-0.4986113866728328), complex5.getImaginary(), 0.01);
      assertEquals(0.9583581328330069, complex5.getReal(), 0.01);
      assertEquals(0.9583581328330069, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.4986113866728328, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      
      Complex complex8 = complex5.ONE.pow(0.0);
      assertNotNull(complex8);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals((-0.4986113866728328), complex5.getImaginary(), 0.01);
      assertEquals(0.9583581328330069, complex5.getReal(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      
      Complex complex9 = complex5.atan();
      assertNotNull(complex9);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals((-0.4986113866728328), complex5.getImaginary(), 0.01);
      assertEquals(0.9583581328330069, complex5.getReal(), 0.01);
      assertEquals(0.8288689890130707, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-0.24876496197917067), complex9.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      
      ComplexField complexField1 = complex6.getField();
      assertNotNull(complexField1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex3);
      assertSame(complexField1, complexField0);
      
      double double2 = complex9.getReal();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals((-0.4986113866728328), complex5.getImaginary(), 0.01);
      assertEquals(0.9583581328330069, complex5.getReal(), 0.01);
      assertEquals(0.8288689890130707, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-0.24876496197917067), complex9.getImaginary(), 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertEquals(0.8288689890130707, double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.divide((-4995.0));
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2.002002002002002E-4), complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.reciprocal();
      assertNotNull(complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2.002002002002002E-4), complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-4995.0), complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = (Complex)complex0.readResolve();
      assertNotNull(complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      boolean boolean0 = complex2.equals(complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2.002002002002002E-4), complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-4995.0), complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(boolean0);
      
      Complex complex4 = complex1.divide((-4995.0));
      assertNotNull(complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2.002002002002002E-4), complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(4.0080120160200245E-8, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex4.divide(2728.893465);
      assertNotNull(complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2.002002002002002E-4), complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(4.0080120160200245E-8, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.4687315820223947E-11, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = complex2.pow(1510.6);
      assertNotNull(complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2.002002002002002E-4), complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-4995.0), complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getReal(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex1.sinh();
      assertNotNull(complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2.002002002002002E-4), complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-2.0020020153754155E-4), complex7.getReal(), 0.01);
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      
      Complex complex8 = complex5.subtract(20.0);
      assertNotNull(complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2.002002002002002E-4), complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(4.0080120160200245E-8, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.4687315820223947E-11, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals((-19.999999999985313), complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      
      Complex complex9 = new Complex(2225.972968278912);
      assertNotNull(complex9);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(2225.972968278912, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      
      Complex complex10 = complex9.tan();
      assertNotNull(complex10);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(2225.972968278912, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals((-6.417819679826157), complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      
      Complex complex11 = (Complex)complex5.readResolve();
      assertNotNull(complex11);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2.002002002002002E-4), complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(4.0080120160200245E-8, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.4687315820223947E-11, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(1.4687315820223947E-11, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex11);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = complex0.equals(object0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(boolean1 == boolean0);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Complex complex0 = new Complex(3926.22, 3926.22);
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.ONE.divide(3926.22);
      assertNotNull(complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.atan();
      assertNotNull(complex2);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      String string0 = complex2.NaN.toString();
      assertNotNull(string0);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals("(NaN, NaN)", string0);
      
      Complex complex3 = complex0.divide(3926.22);
      assertNotNull(complex3);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = Complex.ONE;
      assertNotNull(complex4);
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex4.sqrt1z();
      assertNotNull(complex5);
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex2.sqrt();
      assertNotNull(complex6);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.2532633324339526, complex6.getReal(), 0.01);
      assertEquals(5.08069400644373E-5, complex6.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex2.reciprocal();
      assertNotNull(complex7);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals((-5.162095484978652E-5), complex7.getImaginary(), 0.01);
      assertEquals(0.6366713849534303, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      
      Complex complex8 = complex6.add(3926.22);
      assertNotNull(complex8);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.2532633324339526, complex6.getReal(), 0.01);
      assertEquals(5.08069400644373E-5, complex6.getImaginary(), 0.01);
      assertEquals(5.08069400644373E-5, complex8.getImaginary(), 0.01);
      assertEquals(3927.473263332434, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      
      ComplexField complexField0 = complex8.getField();
      assertNotNull(complexField0);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.2532633324339526, complex6.getReal(), 0.01);
      assertEquals(5.08069400644373E-5, complex6.getImaginary(), 0.01);
      assertEquals(5.08069400644373E-5, complex8.getImaginary(), 0.01);
      assertEquals(3927.473263332434, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex5.divide(5.94407068841904E-215);
      assertNotNull(complex9);
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      
      Complex complex10 = (Complex)complex2.readResolve();
      assertNotNull(complex10);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(1.2734895003185757E-4, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(1.570668977842111, complex10.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      
      Complex complex11 = complex0.cosh();
      assertNotNull(complex11);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      
      Complex complex12 = complex2.tanh();
      assertNotNull(complex12);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(2.0231761927149367E-5, complex12.getImaginary(), 0.01);
      assertEquals(0.9171321086305468, complex12.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      
      Complex complex13 = complex1.divide(5.94407068841904E-215);
      assertNotNull(complex13);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(4.284907030357186E210, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex4));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex4);
      
      Complex complex14 = Complex.valueOf((-2127.96), 1316.601);
      assertNotNull(complex14);
      assertFalse(complex14.isInfinite());
      assertEquals((-2127.96), complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(1316.601, complex14.getImaginary(), 0.01);
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      
      Complex complex15 = complex14.pow((-2127.96));
      assertNotNull(complex15);
      assertFalse(complex14.isInfinite());
      assertEquals((-2127.96), complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(1316.601, complex14.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(-0.0, complex15.getReal(), 0.01);
      assertEquals(-0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex11));
      assertTrue(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex0));
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex0);
      
      Complex complex16 = complex13.cos();
      assertNotNull(complex16);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex16.isInfinite());
      assertEquals((-0.4249178803135611), complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(4.284907030357186E210, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex4));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex4);
      
      Complex complex17 = complex13.subtract((-1107.453));
      assertNotNull(complex17);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex17.isInfinite());
      assertEquals(4.284907030357186E210, complex17.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(4.284907030357186E210, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex4));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex17);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex4);
      
      Complex complex18 = complex2.conjugate();
      assertNotNull(complex18);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertEquals(1.570668977842111, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals((-1.2734895003185757E-4), complex18.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex0));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex0);
      
      Complex complex19 = complex14.multiply(4007);
      assertNotNull(complex19);
      assertFalse(complex14.isInfinite());
      assertEquals((-2127.96), complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(1316.601, complex14.getImaginary(), 0.01);
      assertEquals((-8526735.72), complex19.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(5275620.207, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isNaN());
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex4));
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex19);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex4);
      
      String string1 = complex14.toString();
      assertNotNull(string1);
      assertFalse(complex14.isInfinite());
      assertEquals((-2127.96), complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(1316.601, complex14.getImaginary(), 0.01);
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex19));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex19);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      assertEquals("(-2127.96, 1316.601)", string1);
      
      Complex complex20 = complex12.divide(2230.675197084336);
      assertNotNull(complex20);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex20.isNaN());
      assertEquals(4.111455176573035E-4, complex20.getReal(), 0.01);
      assertEquals(9.069792838327084E-9, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(2.0231761927149367E-5, complex12.getImaginary(), 0.01);
      assertEquals(0.9171321086305468, complex12.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex19));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex20);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex19);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex20);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Complex complex0 = new Complex(3926.22, 3926.22);
      assertNotNull(complex0);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ONE.divide(3926.22);
      assertNotNull(complex1);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.atan();
      assertNotNull(complex2);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      String string0 = complex2.NaN.toString();
      assertNotNull(string0);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals("(NaN, NaN)", string0);
      
      Complex complex3 = complex0.divide(3926.22);
      assertNotNull(complex3);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex3.atan();
      assertNotNull(complex4);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0172219678978514, complex4.getReal(), 0.01);
      assertEquals(0.4023594781085251, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex4.INF.sqrt();
      assertNotNull(complex5);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0172219678978514, complex4.getReal(), 0.01);
      assertEquals(0.4023594781085251, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex3.ONE.divide(3926.22);
      assertNotNull(complex6);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2.546979028174682E-4, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      
      Complex complex7 = complex6.ZERO.tanh();
      assertNotNull(complex7);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2.546979028174682E-4, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      
      boolean boolean0 = complex7.equals(complex1);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2.546979028174682E-4, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertFalse(boolean0);
      
      Complex complex8 = complex2.divide(67.008225);
      assertNotNull(complex8);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertEquals(1.9004972901738194E-6, complex8.getImaginary(), 0.01);
      assertEquals(0.02343994304941089, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      
      Complex complex9 = complex4.divide(2182.9571);
      assertNotNull(complex9);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0172219678978514, complex4.getReal(), 0.01);
      assertEquals(0.4023594781085251, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex9.isNaN());
      assertEquals(1.843185457508648E-4, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(4.6598348996315653E-4, complex9.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      
      Complex complex10 = complex6.pow((-5.5299180508885456E281));
      assertNotNull(complex10);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2.546979028174682E-4, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      
      Complex complex11 = complex2.sinh();
      assertNotNull(complex11);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertEquals(3.195039245242941E-4, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(2.3009793610574136, complex11.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      
      Complex complex12 = Complex.I;
      assertNotNull(complex12);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(1.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex3));
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex3);
      
      Complex complex13 = complex12.subtract(2182.9571);
      assertNotNull(complex13);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(1.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals((-2182.9571), complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(1.0, complex13.getImaginary(), 0.01);
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex9));
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex3);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex9);
      
      Complex complex14 = complex5.tan();
      assertNotNull(complex14);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0172219678978514, complex4.getReal(), 0.01);
      assertEquals(0.4023594781085251, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex10));
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      
      Complex complex15 = (Complex)complex14.readResolve();
      assertNotNull(complex15);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0172219678978514, complex4.getReal(), 0.01);
      assertEquals(0.4023594781085251, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex7));
      assertTrue(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex8));
      assertTrue(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex10));
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Complex complex16 = (Complex)complex10.readResolve();
      assertNotNull(complex16);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertTrue(complex16.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex16.getReal(), 0.01);
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2.546979028174682E-4, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex1));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex11));
      assertTrue(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex12));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex4));
      assertTrue(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex12));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex12));
      assertTrue(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex13));
      assertTrue(complex10.equals((Object)complex15));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex3);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex12);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex13);
      
      boolean boolean1 = complex0.equals(complex16);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertTrue(complex16.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex16.getReal(), 0.01);
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2.546979028174682E-4, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex1));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex11));
      assertTrue(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex12));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex4));
      assertTrue(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(boolean1 == boolean0);
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex12));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex12));
      assertTrue(complex10.equals((Object)complex16));
      assertTrue(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex13));
      assertTrue(complex10.equals((Object)complex15));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex3);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex12);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex13);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Complex complex0 = new Complex((-777.635319758485));
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = Complex.INF;
      assertNotNull(complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.divide(complex1);
      assertNotNull(complex2);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.log();
      assertNotNull(complex3);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex3.divide(complex1);
      assertNotNull(complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      
      double double0 = complex4.getArgument();
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertEquals(Double.NaN, double0, 0.01);
      
      Complex complex5 = Complex.valueOf(0.0);
      assertNotNull(complex5);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = Complex.INF;
      assertNotNull(complex6);
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      
      Complex complex7 = complex0.ZERO.acos();
      assertNotNull(complex7);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      
      Complex complex8 = complex6.cos();
      assertNotNull(complex8);
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex4));
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      
      Complex complex9 = complex0.atan();
      assertNotNull(complex9);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals((-1.5695103776830575), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      
      Complex complex10 = complex1.pow(complex6);
      assertNotNull(complex10);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex6);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      
      Complex complex11 = Complex.valueOf((-1990.53));
      assertNotNull(complex11);
      assertEquals((-1990.53), complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      
      Complex complex12 = complex11.I.pow(complex10);
      assertNotNull(complex12);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals((-1990.53), complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex6);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex11);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex11);
      
      Complex complex13 = complex0.log();
      assertNotNull(complex13);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(6.656257673614814, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(3.141592653589793, complex13.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      
      Complex complex14 = complex2.createComplex((-5.003410681432538E-8), (-1990.53));
      assertNotNull(complex14);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex14.isNaN());
      assertEquals((-1990.53), complex14.getImaginary(), 0.01);
      assertEquals((-5.003410681432538E-8), complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex10);
      
      Complex complex15 = complex14.sqrt();
      assertNotNull(complex15);
      assertEquals(31.547820843522345, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals((-31.547820844315332), complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex14.isNaN());
      assertEquals((-1990.53), complex14.getImaginary(), 0.01);
      assertEquals((-5.003410681432538E-8), complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex10);
      
      Complex complex16 = complex0.reciprocal();
      assertNotNull(complex16);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-0.0012859498206827542), complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex7));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex7);
      
      Complex complex17 = complex0.atan();
      assertNotNull(complex17);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals((-1.5695103776830575), complex17.getReal(), 0.01);
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex2));
      assertTrue(complex17.equals((Object)complex9));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex2);
      
      Complex complex18 = complex7.subtract(complex4);
      assertNotNull(complex18);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex15));
      assertTrue(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex17));
      assertTrue(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex12));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex2);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex9);
      assertSame(complex18, complex12);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex1);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex12);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex12);
      
      ComplexField complexField0 = complex6.getField();
      assertNotNull(complexField0);
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex18));
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex13);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex18);
      
      Complex complex19 = complex18.reciprocal();
      assertNotNull(complex19);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertTrue(complex19.isNaN());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex15));
      assertTrue(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex17));
      assertTrue(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex2));
      assertTrue(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex14));
      assertTrue(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex13));
      assertTrue(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex12));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex19);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex2);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex9);
      assertSame(complex18, complex12);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex7);
      assertSame(complex18, complex19);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex1);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex12);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex13);
      assertSame(complex19, complex12);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex11);
      assertSame(complex19, complex18);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex15);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex12);
      
      Complex complex20 = (Complex)complex9.readResolve();
      assertNotNull(complex20);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1.5695103776830575), complex20.getReal(), 0.01);
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isNaN());
      assertFalse(complex20.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals((-1.5695103776830575), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex14));
      assertTrue(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex10));
      assertTrue(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex18));
      assertTrue(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex16);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex20);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex19);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      
      Complex complex21 = complex6.exp();
      assertNotNull(complex21);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex21.equals((Object)complex14));
      assertTrue(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex9));
      assertTrue(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex13));
      assertTrue(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex20));
      assertTrue(complex21.equals((Object)complex19));
      assertTrue(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex11));
      assertTrue(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex18));
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex6);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex21);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex13);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex18);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Complex complex0 = new Complex((-4995.0), 2728.893465);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-4995.0), complex0.getReal(), 0.01);
      assertEquals(2728.893465, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.multiply((-1313));
      assertNotNull(complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-4995.0), complex0.getReal(), 0.01);
      assertEquals(2728.893465, complex0.getImaginary(), 0.01);
      assertEquals(6558435.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-3583037.119545), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.reciprocal();
      assertNotNull(complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-4995.0), complex0.getReal(), 0.01);
      assertEquals(2728.893465, complex0.getImaginary(), 0.01);
      assertEquals((-1.5418149215307733E-4), complex2.getReal(), 0.01);
      assertEquals((-8.423320647857488E-5), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.I.exp();
      assertNotNull(complex3);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-4995.0), complex0.getReal(), 0.01);
      assertEquals(2728.893465, complex0.getImaginary(), 0.01);
      assertEquals(6558435.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-3583037.119545), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.5403023058681398, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex2.sqrt1z();
      assertNotNull(complex4);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-4995.0), complex0.getReal(), 0.01);
      assertEquals(2728.893465, complex0.getImaginary(), 0.01);
      assertEquals((-1.5418149215307733E-4), complex2.getReal(), 0.01);
      assertEquals((-8.423320647857488E-5), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex4.isInfinite());
      assertEquals(0.9999999916616503, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-1.2987201571996764E-8), complex4.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex1.exp();
      assertNotNull(complex5);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-4995.0), complex0.getReal(), 0.01);
      assertEquals(2728.893465, complex0.getImaginary(), 0.01);
      assertEquals(6558435.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-3583037.119545), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Complex complex0 = new Complex((-777.635319758485));
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      
      Complex complex1 = Complex.INF;
      assertNotNull(complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.divide(complex1);
      assertNotNull(complex2);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex1.log();
      assertNotNull(complex3);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex3.divide(complex1);
      assertNotNull(complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      
      double double0 = complex4.getArgument();
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertEquals(Double.NaN, double0, 0.01);
      
      Complex complex5 = Complex.valueOf(0.0);
      assertNotNull(complex5);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = Complex.INF;
      assertNotNull(complex6);
      assertTrue(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      
      Complex complex7 = complex0.ZERO.acos();
      assertNotNull(complex7);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      
      Complex complex8 = complex6.cos();
      assertNotNull(complex8);
      assertTrue(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      
      Complex complex9 = complex0.atan();
      assertNotNull(complex9);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals((-1.5695103776830575), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      
      double double1 = complex0.getArgument();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertEquals(3.141592653589793, double1, 0.01);
      
      Complex complex10 = Complex.I;
      assertNotNull(complex10);
      assertEquals(1.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      
      ComplexField complexField0 = complex10.getField();
      assertNotNull(complexField0);
      assertEquals(1.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      
      Complex complex11 = complex9.sqrt1z();
      assertNotNull(complex11);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals((-1.5695103776830575), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(1.2096953441486056, complex11.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      
      double double2 = complex2.abs();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertEquals(0.0, double2, 0.01);
      
      Complex complex12 = new Complex(3.141592653589793, Double.NaN);
      assertNotNull(complex12);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(3.141592653589793, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      
      Complex complex13 = complex12.subtract(0.0);
      assertNotNull(complex13);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(3.141592653589793, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex11));
      assertTrue(complex13.equals((Object)complex8));
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex4);
      
      Complex complex14 = complex4.log();
      assertNotNull(complex14);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex11);
      assertSame(complex14, complex13);
      assertNotSame(complex14, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      
      Complex complex15 = Complex.ZERO;
      assertNotNull(complex15);
      assertFalse(complex15.isInfinite());
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex0));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex14));
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex6);
      assertSame(complex15, complex2);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex14);
      
      Complex complex16 = complex4.sinh();
      assertNotNull(complex16);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex11);
      assertSame(complex16, complex13);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex7);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Complex complex0 = new Complex(3926.22, 3926.22);
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.atan();
      assertNotNull(complex1);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.2734895003185757E-4, complex1.getImaginary(), 0.01);
      assertEquals(1.570668977842111, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      String string0 = complex1.NaN.toString();
      assertNotNull(string0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.2734895003185757E-4, complex1.getImaginary(), 0.01);
      assertEquals(1.570668977842111, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals("(NaN, NaN)", string0);
      
      Complex complex2 = complex0.divide(3926.22);
      assertNotNull(complex2);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.atan();
      assertNotNull(complex3);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.4023594781085251, complex3.getImaginary(), 0.01);
      assertEquals(1.0172219678978514, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex3.INF.sqrt();
      assertNotNull(complex4);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.4023594781085251, complex3.getImaginary(), 0.01);
      assertEquals(1.0172219678978514, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex2.ONE.divide(3926.22);
      assertNotNull(complex5);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(2.546979028174682E-4, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = complex5.ZERO.tanh();
      assertNotNull(complex6);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(2.546979028174682E-4, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex0.createComplex(Double.NaN, 989.9);
      assertNotNull(complex7);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(989.9, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      
      Complex complex8 = complex0.sqrt();
      assertNotNull(complex8);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(68.84305910133749, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(28.515728755026526, complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      
      Complex complex9 = complex7.reciprocal();
      assertNotNull(complex9);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(989.9, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      
      Complex complex10 = complex0.atan();
      assertNotNull(complex10);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(1.570668977842111, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(1.2734895003185757E-4, complex10.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      
      Complex complex11 = complex8.subtract(complex0);
      assertNotNull(complex11);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(68.84305910133749, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(28.515728755026526, complex8.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals((-3857.3769408986623), complex11.getReal(), 0.01);
      assertEquals((-3897.7042712449734), complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      
      ComplexField complexField0 = complex8.getField();
      assertNotNull(complexField0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(68.84305910133749, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(28.515728755026526, complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      
      Complex complex12 = complex0.reciprocal();
      assertNotNull(complex12);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(1.273489514087341E-4, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals((-1.273489514087341E-4), complex12.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex7));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex7);
      
      Complex complex13 = (Complex)complex10.readResolve();
      assertNotNull(complex13);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(1.570668977842111, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(1.2734895003185757E-4, complex10.getImaginary(), 0.01);
      assertEquals(1.2734895003185757E-4, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(1.570668977842111, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertTrue(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertTrue(complex13.equals((Object)complex10));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      
      Complex complex14 = complex6.exp();
      assertNotNull(complex14);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(1.0, complex14.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(2.546979028174682E-4, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex12));
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex12);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Complex complex0 = new Complex(3926.22, 3926.22);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ONE.divide(3926.22);
      assertNotNull(complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.atan();
      assertNotNull(complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      String string0 = complex2.NaN.toString();
      assertNotNull(string0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals("(NaN, NaN)", string0);
      
      Complex complex3 = complex0.divide(3926.22);
      assertNotNull(complex3);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex3.atan();
      assertNotNull(complex4);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.4023594781085251, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.0172219678978514, complex4.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex4.INF.sqrt();
      assertNotNull(complex5);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.4023594781085251, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.0172219678978514, complex4.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      
      Complex complex6 = complex3.ONE.divide(3926.22);
      assertNotNull(complex6);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(2.546979028174682E-4, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex6.ZERO.tanh();
      assertNotNull(complex7);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(2.546979028174682E-4, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      
      Complex complex8 = complex0.createComplex(Double.NaN, 989.9);
      assertNotNull(complex8);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(989.9, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex5));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      
      Complex complex9 = complex0.sqrt();
      assertNotNull(complex9);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(28.515728755026526, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(68.84305910133749, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      
      Complex complex10 = complex8.tanh();
      assertNotNull(complex10);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(989.9, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      
      Complex complex11 = complex0.multiply((-395));
      assertNotNull(complex11);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals((-1550856.9), complex11.getImaginary(), 0.01);
      assertEquals((-1550856.9), complex11.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      
      double double0 = complex10.getImaginary();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(989.9, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertEquals(Double.NaN, double0, 0.01);
      
      Complex complex12 = complex1.asin();
      assertNotNull(complex12);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex12.isInfinite());
      assertEquals(2.546979055712205E-4, complex12.getReal(), 0.01);
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      
      boolean boolean0 = complex8.equals(complex9);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(989.9, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(28.515728755026526, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(68.84305910133749, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex11));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex11);
      assertFalse(boolean0);
      
      Complex complex13 = complex11.cosh();
      assertNotNull(complex13);
      assertEquals(Double.NEGATIVE_INFINITY, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals((-1550856.9), complex11.getImaginary(), 0.01);
      assertEquals((-1550856.9), complex11.getReal(), 0.01);
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      
      double double1 = complex8.getArgument();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(989.9, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertEquals(double1, double0, 0.01);
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex0);
      assertEquals(Double.NaN, double1, 0.01);
      
      Complex complex14 = complex3.tanh();
      assertNotNull(complex14);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(0.27175258531951174, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(1.0839233273386946, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex4);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      
      Complex complex15 = complex10.negate();
      assertNotNull(complex15);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(989.9, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex12));
      assertTrue(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex14);
      assertSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex0);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex15);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.tanh();
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.reciprocal();
      assertNotNull(complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.add(0.0);
      assertNotNull(complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      ComplexField complexField0 = complex3.getField();
      assertNotNull(complexField0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex0.divide(0.0);
      assertNotNull(complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex2);
      
      Complex complex5 = (Complex)complex3.readResolve();
      assertNotNull(complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex3.cosh();
      assertNotNull(complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      
      Complex complex7 = complex0.tanh();
      assertNotNull(complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      
      Complex complex8 = complex7.divide(Double.POSITIVE_INFINITY);
      assertNotNull(complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      
      Complex complex9 = complex1.pow(0.0);
      assertNotNull(complex9);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      
      Complex complex10 = complex4.cos();
      assertNotNull(complex10);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertSame(complex4, complex10);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      
      Complex complex11 = complex1.subtract((-698.9917057275));
      assertNotNull(complex11);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(698.9917057275, complex11.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex8));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      
      Complex complex12 = complex0.conjugate();
      assertNotNull(complex12);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertTrue(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      
      Complex complex13 = complex4.multiply(1492);
      assertNotNull(complex13);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertSame(complex4, complex10);
      assertSame(complex4, complex13);
      assertNotSame(complex13, complex7);
      assertSame(complex13, complex4);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex1);
      
      String string0 = complex1.toString();
      assertNotNull(string0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex12));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertEquals("(0.0, 0.0)", string0);
      
      Complex complex14 = complex2.divide((double) 4007);
      assertNotNull(complex14);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertTrue(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertSame(complex14, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertSame(complex14, complex10);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex5);
      assertSame(complex14, complex2);
      assertNotSame(complex14, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertSame(complex2, complex14);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Complex complex0 = new Complex((-777.635319758485));
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      
      Complex complex1 = Complex.INF;
      assertNotNull(complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.divide(complex1);
      assertNotNull(complex2);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.log();
      assertNotNull(complex3);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex3.divide(complex1);
      assertNotNull(complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      
      double double0 = complex4.getArgument();
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertEquals(Double.NaN, double0, 0.01);
      
      Complex complex5 = Complex.valueOf(0.0);
      assertNotNull(complex5);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = new Complex((-777.635319758485), 3708.77);
      assertNotNull(complex6);
      assertFalse(complex6.isNaN());
      assertEquals(3708.77, complex6.getImaginary(), 0.01);
      assertEquals((-777.635319758485), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      
      Complex complex7 = complex6.atan();
      assertNotNull(complex7);
      assertFalse(complex6.isNaN());
      assertEquals(3708.77, complex6.getImaginary(), 0.01);
      assertEquals((-777.635319758485), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(2.582764431168229E-4, complex7.getImaginary(), 0.01);
      assertEquals((-1.5707421727509), complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      
      Complex complex8 = complex1.sqrt();
      assertNotNull(complex8);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      
      Complex complex9 = new Complex(1149.962);
      assertNotNull(complex9);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1149.962, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      
      Complex complex10 = complex9.divide(2.0);
      assertNotNull(complex10);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1149.962, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex10.isInfinite());
      assertEquals(574.981, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      
      Complex complex11 = complex5.tanh();
      assertNotNull(complex11);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      
      Complex complex12 = complex4.createComplex((-1737.282359545856), 0.0);
      assertNotNull(complex12);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-1737.282359545856), complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex0));
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex0);
      
      Complex complex13 = complex4.sqrt();
      assertNotNull(complex13);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      
      Complex complex14 = complex7.reciprocal();
      assertNotNull(complex14);
      assertFalse(complex6.isNaN());
      assertEquals(3708.77, complex6.getImaginary(), 0.01);
      assertEquals((-777.635319758485), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(2.582764431168229E-4, complex7.getImaginary(), 0.01);
      assertEquals((-1.5707421727509), complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals((-0.6366417037186842), complex14.getReal(), 0.01);
      assertEquals((-1.0468271472480062E-4), complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex0));
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex11);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex0);
      
      Complex complex15 = complex6.atan();
      assertNotNull(complex15);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals((-1.5707421727509), complex15.getReal(), 0.01);
      assertEquals(2.582764431168229E-4, complex15.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(3708.77, complex6.getImaginary(), 0.01);
      assertEquals((-777.635319758485), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex2));
      assertTrue(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex11);
      
      Complex complex16 = complex2.subtract(complex9);
      assertNotNull(complex16);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals((-1149.962), complex16.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1149.962, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      
      ComplexField complexField0 = complex11.getField();
      assertNotNull(complexField0);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      
      Complex complex17 = complex4.reciprocal();
      assertNotNull(complex17);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex6));
      assertTrue(complex17.equals((Object)complex8));
      assertTrue(complex17.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex16));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex15);
      assertSame(complex17, complex13);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex6);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      
      Complex complex18 = (Complex)complex3.readResolve();
      assertNotNull(complex18);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals(0.7853981633974483, complex18.getImaginary(), 0.01);
      assertTrue(complex18.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex18.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex2));
      assertTrue(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex7));
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex18);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex7);
      
      Complex complex19 = complex11.exp();
      assertNotNull(complex19);
      assertFalse(complex19.isNaN());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertEquals(1.0, complex19.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex18));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex11);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Complex complex0 = new Complex(3926.22, 3926.22);
      assertNotNull(complex0);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.ONE.divide(3926.22);
      assertNotNull(complex1);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.atan();
      assertNotNull(complex2);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      String string0 = complex2.NaN.toString();
      assertNotNull(string0);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals("(NaN, NaN)", string0);
      
      Complex complex3 = complex0.divide(3926.22);
      assertNotNull(complex3);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = Complex.INF;
      assertNotNull(complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex1.acos();
      assertNotNull(complex5);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.5705416288893255, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      
      Complex complex6 = complex0.cos();
      assertNotNull(complex6);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      
      Complex complex7 = complex3.atan();
      assertNotNull(complex7);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(1.0172219678978514, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.4023594781085251, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = complex1.pow(complex2);
      assertNotNull(complex8);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertEquals((-2.3869401193070883E-9), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(2.264932683345212E-6, complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      
      Complex complex9 = Complex.valueOf(715.31011);
      assertNotNull(complex9);
      assertFalse(complex9.isInfinite());
      assertEquals(715.31011, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      
      Complex complex10 = complex2.pow(complex0);
      assertNotNull(complex10);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isInfinite());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      
      Complex complex11 = complex10.log();
      assertNotNull(complex11);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isInfinite());
      assertTrue(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.7853981633974483, complex11.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      
      Complex complex12 = Complex.valueOf(3926.22);
      assertNotNull(complex12);
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(3926.22, complex12.getReal(), 0.01);
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      
      Complex complex13 = complex12.tan();
      assertNotNull(complex13);
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(3926.22, complex12.getReal(), 0.01);
      assertEquals((-0.971254750030613), complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      
      double double0 = complex2.getArgument();
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertEquals(8.10794327444853E-5, double0, 0.01);
      
      boolean boolean0 = complex2.isNaN();
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertFalse(boolean0);
      
      Complex complex14 = complex12.tanh();
      assertNotNull(complex14);
      assertEquals(1.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(3926.22, complex12.getReal(), 0.01);
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex5);
      
      Complex complex15 = complex7.multiply(10);
      assertNotNull(complex15);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(10.172219678978514, complex15.getReal(), 0.01);
      assertEquals(4.023594781085251, complex15.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(1.0172219678978514, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.4023594781085251, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      
      Complex complex16 = complex15.exp();
      assertNotNull(complex16);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(10.172219678978514, complex15.getReal(), 0.01);
      assertEquals(4.023594781085251, complex15.getImaginary(), 0.01);
      assertEquals((-16631.3451457643), complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals((-20200.563473862243), complex16.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(1.0172219678978514, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.4023594781085251, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex5);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex15);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex16);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      
      double double1 = complex8.getImaginary();
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertEquals((-2.3869401193070883E-9), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(2.264932683345212E-6, complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertEquals(double1, double0, 0.01);
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertEquals((-2.3869401193070883E-9), double1, 0.01);
      
      Complex complex17 = complex8.asin();
      assertNotNull(complex17);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertEquals((-2.3869399761556685E-9), complex17.getImaginary(), 0.01);
      assertEquals(2.264932683347148E-6, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals((-2.3869401193070883E-9), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(2.264932683345212E-6, complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex16);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      
      boolean boolean1 = complex11.equals(complex17);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertEquals((-2.3869399761556685E-9), complex17.getImaginary(), 0.01);
      assertEquals(2.264932683347148E-6, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals((-2.3869401193070883E-9), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(2.264932683345212E-6, complex8.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isInfinite());
      assertTrue(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.7853981633974483, complex11.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(boolean1 == boolean0);
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex15));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex16);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex3);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex15);
      assertFalse(boolean1);
      
      Complex complex18 = complex5.cosh();
      assertNotNull(complex18);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.5705416288893255, complex5.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertEquals(2.5085924240276967, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(-0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex16));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex8);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex16);
      
      double double2 = complex0.getArgument();
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertEquals(0.7853981633974483, double2, 0.01);
      
      Complex complex19 = complex14.tanh();
      assertNotNull(complex19);
      assertEquals(1.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex19.isInfinite());
      assertEquals(0.7615941559557649, complex19.getReal(), 0.01);
      assertFalse(complex19.isNaN());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(3926.22, complex12.getReal(), 0.01);
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex5));
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex19);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex9);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex16);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex19);
      assertNotSame(complex12, complex5);
      
      Complex complex20 = complex11.negate();
      assertNotNull(complex20);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertTrue(complex20.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex20.getReal(), 0.01);
      assertFalse(complex20.isNaN());
      assertEquals((-0.7853981633974483), complex20.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isInfinite());
      assertTrue(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.7853981633974483, complex11.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex19));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex19));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex4);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex20);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex19);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex3);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex19);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Complex complex0 = new Complex((-1188.8670275), (-1188.8670275));
      assertNotNull(complex0);
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.tan();
      assertNotNull(complex1);
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.multiply(0);
      assertNotNull(complex2);
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.conjugate();
      assertNotNull(complex3);
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      double double0 = complex1.abs();
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertEquals(1.0, double0, 0.01);
      
      Complex complex4 = complex3.multiply(complex2);
      assertNotNull(complex4);
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex1.tan();
      assertNotNull(complex5);
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals((-0.7615941559557649), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      
      boolean boolean0 = complex5.isInfinite();
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals((-0.7615941559557649), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertFalse(boolean0);
      
      Complex complex6 = complex4.multiply((-1));
      assertNotNull(complex6);
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(-0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      
      Complex complex7 = complex3.reciprocal();
      assertNotNull(complex7);
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals((-1.0), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = complex2.add((-1153.6780960267));
      assertNotNull(complex8);
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals((-1153.6780960267), complex8.getReal(), 0.01);
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      
      Complex complex9 = complex4.sinh();
      assertNotNull(complex9);
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex2));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      
      Complex complex10 = complex4.log();
      assertNotNull(complex10);
      assertEquals((-1188.8670275), complex0.getReal(), 0.01);
      assertEquals((-1188.8670275), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Complex complex0 = new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      assertNotNull(complex0);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.log();
      assertNotNull(complex1);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7853981633974483, complex1.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = Complex.ONE;
      assertNotNull(complex2);
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex0.INF.reciprocal();
      assertNotNull(complex3);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex0.ONE.add(complex2);
      assertNotNull(complex4);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(2.0, complex4.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex2.INF.multiply(complex0);
      assertNotNull(complex5);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = complex0.cos();
      assertNotNull(complex6);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      
      Complex complex7 = complex6.I.add(2.6735267639160156);
      assertNotNull(complex7);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getImaginary(), 0.01);
      assertEquals(2.6735267639160156, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      
      double double0 = complex2.abs();
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertEquals(1.0, double0, 0.01);
      
      complex1.hashCode();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7853981633974483, complex1.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      
      Complex complex8 = complex3.NaN.acos();
      assertNotNull(complex8);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      
      Complex complex9 = complex0.NaN.sinh();
      assertNotNull(complex9);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      
      Complex complex10 = Complex.valueOf(Double.POSITIVE_INFINITY, 0.0);
      assertNotNull(complex10);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertTrue(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      
      Complex complex11 = complex4.tanh();
      assertNotNull(complex11);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(2.0, complex4.getReal(), 0.01);
      assertEquals(0.9640275800758169, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      
      Complex complex12 = new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      assertNotNull(complex12);
      assertEquals(Double.POSITIVE_INFINITY, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      
      Complex complex13 = (Complex)complex12.readResolve();
      assertNotNull(complex13);
      assertEquals(Double.POSITIVE_INFINITY, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertTrue(complex13.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex13.getReal(), 0.01);
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertTrue(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex11));
      assertTrue(complex13.equals((Object)complex12));
      assertTrue(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex9);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex4);
      
      Complex complex14 = complex3.multiply(complex12);
      assertNotNull(complex14);
      assertTrue(complex14.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex14.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex4));
      assertTrue(complex14.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex9));
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex4);
      assertSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex9);
      
      Complex complex15 = complex4.atan();
      assertNotNull(complex15);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(1.1071487177940904, complex15.getReal(), 0.01);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(2.0, complex4.getReal(), 0.01);
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex14));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex15);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex15);
      
      Complex complex16 = complex4.multiply(complex1);
      assertNotNull(complex16);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7853981633974483, complex1.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex16.getReal(), 0.01);
      assertTrue(complex16.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex16.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(2.0, complex4.getReal(), 0.01);
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex15));
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex4);
      assertSame(complex16, complex14);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex15);
      assertSame(complex16, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex15);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex15);
      
      Complex complex17 = complex10.pow(complex11);
      assertNotNull(complex17);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertTrue(complex17.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(2.0, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertTrue(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(0.9640275800758169, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex5));
      assertTrue(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex7));
      assertTrue(complex17.equals((Object)complex8));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex15);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex15);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.ZERO.asin();
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.NaN.pow(complex1);
      assertNotNull(complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.INF.multiply(complex0);
      assertNotNull(complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex1.I.exp();
      assertNotNull(complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = Complex.NaN;
      assertNotNull(complex5);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex0.divide(complex5);
      assertNotNull(complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex5);
      
      Complex complex7 = complex6.I.add(4150.495849176523);
      assertNotNull(complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.0, complex7.getImaginary(), 0.01);
      assertEquals(4150.495849176523, complex7.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      
      double double0 = complex6.getArgument();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex5);
      assertEquals(Double.NaN, double0, 0.01);
      
      double double1 = complex6.getArgument();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex5);
      assertEquals(Double.NaN, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Complex complex0 = new Complex(3708.77, 3708.77);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      
      double double0 = complex0.getArgument();
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertEquals(0.7853981633974483, double0, 0.01);
      
      Complex complex1 = Complex.valueOf(0.0);
      assertNotNull(complex1);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.INF.divide(0.0);
      assertNotNull(complex2);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex0.pow(complex1);
      assertNotNull(complex3);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      double double1 = complex0.getArgument();
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertEquals(0.7853981633974483, double1, 0.01);
      
      Complex complex4 = complex0.tan();
      assertNotNull(complex4);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex4.subtract(complex2);
      assertNotNull(complex5);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = complex4.add(complex0);
      assertNotNull(complex6);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(3709.77, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(3708.77, complex6.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex6.NaN.log();
      assertNotNull(complex7);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(3709.77, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(3708.77, complex6.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      
      List<Complex> list0 = complex7.I.nthRoot(85);
      assertNotNull(list0);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(3709.77, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(3708.77, complex6.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(85, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      
      Complex complex8 = complex7.I.divide(complex4);
      assertNotNull(complex8);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(3709.77, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(3708.77, complex6.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      
      Complex complex9 = complex0.multiply(0.7853981633974483);
      assertNotNull(complex9);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(2912.861146463554, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(2912.861146463554, complex9.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      
      String string0 = complex9.toString();
      assertNotNull(string0);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(2912.861146463554, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(2912.861146463554, complex9.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertEquals("(2912.861146463554, 2912.861146463554)", string0);
      
      Complex complex10 = Complex.valueOf(0.7853981633974483, 3708.77);
      assertNotNull(complex10);
      assertFalse(complex10.isNaN());
      assertEquals(0.7853981633974483, complex10.getReal(), 0.01);
      assertEquals(3708.77, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      
      Complex complex11 = complex3.pow(0.7853981633974483);
      assertNotNull(complex11);
      assertFalse(complex0.isNaN());
      assertEquals(3708.77, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(3708.77, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Complex complex0 = new Complex((-1348.3951809246203));
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.I.sqrt1z();
      assertNotNull(complex1);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.4142135623730951, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.I.tanh();
      assertNotNull(complex2);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.4142135623730951, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.557407724654902, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.INF.sqrt();
      assertNotNull(complex3);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.4142135623730951, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex1.I.subtract((-1.0));
      assertNotNull(complex4);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.4142135623730951, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = complex0.equals(object0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertFalse(boolean0);
      
      double double0 = complex0.abs();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertEquals(1348.3951809246203, double0, 0.01);
      
      Complex complex5 = Complex.valueOf((-1.0));
      assertNotNull(complex5);
      assertFalse(complex5.isNaN());
      assertEquals((-1.0), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      
      Complex complex6 = Complex.valueOf(1348.3951809246203);
      assertNotNull(complex6);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1348.3951809246203, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      
      Complex complex7 = complex6.ONE.atan();
      assertNotNull(complex7);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1348.3951809246203, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.7853981633974483, complex7.getReal(), 0.01);
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      
      Complex complex8 = complex0.ONE.pow(0.0);
      assertNotNull(complex8);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      
      Complex complex9 = complex0.divide(734.138541597398);
      assertNotNull(complex9);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals((-1.8367039795931066), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      
      Complex complex10 = complex9.I.add(complex5);
      assertNotNull(complex10);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals((-1.0), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals((-1.8367039795931066), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals((-1.0), complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      
      Complex complex11 = complex6.divide((-1.0));
      assertNotNull(complex11);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1348.3951809246203, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals((-1348.3951809246203), complex11.getReal(), 0.01);
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex10);
      
      Complex complex12 = complex1.acos();
      assertNotNull(complex12);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.4142135623730951, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(0.8813735870195434, complex12.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      
      Complex complex13 = complex4.log();
      assertNotNull(complex13);
      assertFalse(complex13.isNaN());
      assertEquals(0.7853981633974483, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(0.3465735902799727, complex13.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.4142135623730951, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex9));
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      
      Complex complex14 = complex13.INF.conjugate();
      assertNotNull(complex14);
      assertFalse(complex13.isNaN());
      assertEquals(0.7853981633974483, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(0.3465735902799727, complex13.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.4142135623730951, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      
      Complex complex15 = complex13.NaN.atan();
      assertNotNull(complex15);
      assertFalse(complex13.isNaN());
      assertEquals(0.7853981633974483, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(0.3465735902799727, complex13.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.4142135623730951, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex12));
      assertTrue(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      
      Complex complex16 = complex5.atan();
      assertNotNull(complex16);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals((-0.7853981633974483), complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals((-1.0), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      
      Complex complex17 = complex16.ZERO.sqrt1z();
      assertNotNull(complex17);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals((-0.7853981633974483), complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertEquals(1.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertFalse(complex5.isNaN());
      assertEquals((-1.0), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex15));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex2);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex14);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex3);
      
      Complex complex18 = complex6.add((-1860.098836085378));
      assertNotNull(complex18);
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals((-511.70365516075776), complex18.getReal(), 0.01);
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1348.3951809246203, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex4);
      
      Complex complex19 = complex11.tanh();
      assertNotNull(complex19);
      assertFalse(complex19.isNaN());
      assertEquals((-1.0), complex19.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1348.3951809246203, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals((-1348.3951809246203), complex11.getReal(), 0.01);
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex16));
      assertTrue(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex14));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex3));
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex4);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex3);
      
      Complex complex20 = (Complex)complex18.readResolve();
      assertNotNull(complex20);
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals((-511.70365516075776), complex18.getReal(), 0.01);
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertEquals((-511.70365516075776), complex20.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1348.3951809246203, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex19));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex3));
      assertTrue(complex20.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex20);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex5);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex4);
      
      boolean boolean1 = complex6.equals(complex20);
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals((-511.70365516075776), complex18.getReal(), 0.01);
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertEquals((-511.70365516075776), complex20.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1348.3951809246203, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex14));
      assertTrue(complex18.equals((Object)complex20));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex19));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex3));
      assertTrue(complex20.equals((Object)complex18));
      assertTrue(boolean1 == boolean0);
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex20);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex5);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex4);
      assertFalse(boolean1);
      
      Complex complex21 = Complex.valueOf(0.0);
      assertNotNull(complex21);
      assertEquals(0.0, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isNaN());
      assertEquals(0.0, complex21.getReal(), 0.01);
      assertFalse(complex21.isInfinite());
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex6));
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex6);
      
      Complex complex22 = complex21.INF.sqrt1z();
      assertNotNull(complex22);
      assertEquals(0.0, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isNaN());
      assertEquals(0.0, complex21.getReal(), 0.01);
      assertFalse(complex21.isInfinite());
      assertFalse(complex22.isInfinite());
      assertTrue(complex22.isNaN());
      assertEquals(Double.NaN, complex22.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex22.getImaginary(), 0.01);
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex20));
      assertTrue(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex12));
      assertTrue(complex22.equals((Object)complex3));
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex22);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex6);
      assertNotSame(complex22, complex17);
      assertNotSame(complex22, complex20);
      assertNotSame(complex22, complex1);
      assertNotSame(complex22, complex2);
      assertNotSame(complex22, complex0);
      assertNotSame(complex22, complex14);
      assertNotSame(complex22, complex8);
      assertNotSame(complex22, complex13);
      assertNotSame(complex22, complex7);
      assertNotSame(complex22, complex16);
      assertNotSame(complex22, complex21);
      assertNotSame(complex22, complex10);
      assertNotSame(complex22, complex11);
      assertNotSame(complex22, complex9);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, complex5);
      assertNotSame(complex22, complex19);
      assertNotSame(complex22, complex6);
      assertNotSame(complex22, complex3);
      assertNotSame(complex22, complex15);
      assertNotSame(complex22, complex18);
      assertNotSame(complex22, complex12);
      
      boolean boolean2 = complex16.isInfinite();
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals((-0.7853981633974483), complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals((-1.0), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex22));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex21));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex20));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex18));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex22);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex21);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex20);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex18);
      assertNotSame(complex16, complex19);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex22);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex21);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex3);
      assertFalse(boolean2);
      
      Complex complex23 = complex10.multiply(complex17);
      assertNotNull(complex23);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1348.3951809246203), complex0.getReal(), 0.01);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals((-0.7853981633974483), complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertEquals(1.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertFalse(complex5.isNaN());
      assertEquals((-1.0), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex23.isNaN());
      assertEquals(1.0, complex23.getImaginary(), 0.01);
      assertEquals((-1.0), complex23.getReal(), 0.01);
      assertFalse(complex23.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals((-1.8367039795931066), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals((-1.0), complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex22));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex21));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex20));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex18));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex22));
      assertFalse(complex17.equals((Object)complex21));
      assertFalse(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex18));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex20));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex0));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex21));
      assertTrue(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex14));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex8));
      assertFalse(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex21));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex19));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex22));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex20));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex21));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex23);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex22);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex21);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex20);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex18);
      assertNotSame(complex16, complex19);
      assertNotSame(complex16, complex23);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex2);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex23);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex22);
      assertNotSame(complex17, complex21);
      assertNotSame(complex17, complex19);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex20);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex14);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex22);
      assertNotSame(complex5, complex23);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex21);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex3);
      assertNotSame(complex23, complex4);
      assertNotSame(complex23, complex6);
      assertNotSame(complex23, complex3);
      assertNotSame(complex23, complex10);
      assertNotSame(complex23, complex11);
      assertNotSame(complex23, complex1);
      assertNotSame(complex23, complex0);
      assertNotSame(complex23, complex16);
      assertNotSame(complex23, complex21);
      assertNotSame(complex23, complex7);
      assertNotSame(complex23, complex9);
      assertNotSame(complex23, complex5);
      assertNotSame(complex23, complex14);
      assertNotSame(complex23, complex20);
      assertNotSame(complex23, complex8);
      assertNotSame(complex23, complex17);
      assertNotSame(complex23, complex2);
      assertNotSame(complex23, complex12);
      assertNotSame(complex23, complex13);
      assertNotSame(complex23, complex15);
      assertNotSame(complex23, complex18);
      assertNotSame(complex23, complex19);
      assertNotSame(complex23, complex22);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex22);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex21);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex19);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex20);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex23);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex19);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex23);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex22);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex20);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex21);
      assertNotSame(complex10, complex5);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.asin();
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.cosh();
      assertNotNull(complex2);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.ONE.negate();
      assertNotNull(complex3);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex3.INF.negate();
      assertNotNull(complex4);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex4.INF.pow(48.3);
      assertNotNull(complex5);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      
      Complex complex6 = complex3.I.divide(1.0);
      assertNotNull(complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      
      String string0 = complex2.ONE.toString();
      assertNotNull(string0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertEquals("(1.0, 0.0)", string0);
      
      Complex complex7 = complex1.add(0.0);
      assertNotNull(complex7);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = complex6.subtract(complex7);
      assertNotNull(complex8);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(1.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex8);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      
      Complex complex9 = complex3.atan();
      assertNotNull(complex9);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-0.7853981633974483), complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      
      Complex complex10 = complex3.multiply(434);
      assertNotNull(complex10);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertEquals((-434.0), complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      
      Complex complex11 = complex10.ZERO.cos();
      assertNotNull(complex11);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertEquals((-434.0), complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      
      Complex complex12 = complex10.INF.log();
      assertNotNull(complex12);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertEquals((-434.0), complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertTrue(complex12.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.7853981633974483, complex12.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex7);
      
      Complex complex13 = complex3.ONE.cosh();
      assertNotNull(complex13);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      
      Complex complex14 = complex0.divide(complex9);
      assertNotNull(complex14);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-0.7853981633974483), complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertEquals(-0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex1));
      assertTrue(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertTrue(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex4));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      
      Complex complex15 = complex6.subtract(complex14);
      assertNotNull(complex15);
      assertEquals(1.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-0.7853981633974483), complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertEquals(-0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertFalse(complex15.equals((Object)complex11));
      assertTrue(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex0));
      assertTrue(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex1));
      assertTrue(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertTrue(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex4));
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex7);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex15);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      
      complex0.hashCode();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      
      Complex complex16 = complex3.tan();
      assertNotNull(complex16);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals((-1.557407724654902), complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex2);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      
      Complex complex17 = complex12.multiply(1.0);
      assertNotNull(complex17);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex17.getReal(), 0.01);
      assertTrue(complex17.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex17.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertEquals((-434.0), complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertTrue(complex12.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.7853981633974483, complex12.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex17);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex0);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      
      Complex complex18 = Complex.valueOf(1612.28517, 1.0);
      assertNotNull(complex18);
      assertEquals(1612.28517, complex18.getReal(), 0.01);
      assertEquals(1.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex16));
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex16);
      
      String string1 = complex5.toString();
      assertNotNull(string1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1.0), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(string1.equals((Object)string0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex14));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex17);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex14);
      assertEquals("(NaN, NaN)", string1);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Complex complex0 = new Complex(3926.22, 3926.22);
      assertNotNull(complex0);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.ONE.divide(3926.22);
      assertNotNull(complex1);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.atan();
      assertNotNull(complex2);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      String string0 = complex2.NaN.toString();
      assertNotNull(string0);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(1.570668977842111, complex2.getReal(), 0.01);
      assertEquals(1.2734895003185757E-4, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals("(NaN, NaN)", string0);
      
      Complex complex3 = complex0.divide(3926.22);
      assertNotNull(complex3);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex3.atan();
      assertNotNull(complex4);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertEquals(0.4023594781085251, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0172219678978514, complex4.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex4.INF.sqrt();
      assertNotNull(complex5);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertEquals(0.4023594781085251, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0172219678978514, complex4.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex3.ONE.divide(3926.22);
      assertNotNull(complex6);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(2.546979028174682E-4, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      
      Complex complex7 = complex6.ZERO.tanh();
      assertNotNull(complex7);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(2.546979028174682E-4, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = complex0.createComplex(Double.NaN, 989.9);
      assertNotNull(complex8);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(989.9, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      
      Complex complex9 = complex0.sqrt();
      assertNotNull(complex9);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(68.84305910133749, complex9.getReal(), 0.01);
      assertEquals(28.515728755026526, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      
      Complex complex10 = complex8.reciprocal();
      assertNotNull(complex10);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(989.9, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      
      Complex complex11 = complex1.atan();
      assertNotNull(complex11);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(2.5469789730996403E-4, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      
      Complex complex12 = complex9.subtract(complex0);
      assertNotNull(complex12);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(68.84305910133749, complex9.getReal(), 0.01);
      assertEquals(28.515728755026526, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-3857.3769408986623), complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-3897.7042712449734), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex12);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      
      ComplexField complexField0 = complex9.getField();
      assertNotNull(complexField0);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(68.84305910133749, complex9.getReal(), 0.01);
      assertEquals(28.515728755026526, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex12));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex12);
      
      Complex complex13 = complex1.reciprocal();
      assertNotNull(complex13);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(3926.22, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(-0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      
      Complex complex14 = (Complex)complex11.readResolve();
      assertNotNull(complex14);
      assertFalse(complex14.isInfinite());
      assertEquals(2.5469789730996403E-4, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(2.546979028174682E-4, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(2.5469789730996403E-4, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex3));
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex3);
      
      Complex complex15 = complex7.exp();
      assertNotNull(complex15);
      assertEquals(3926.22, complex0.getImaginary(), 0.01);
      assertEquals(3926.22, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(1.0, complex15.getReal(), 0.01);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(2.546979028174682E-4, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex0);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex10);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.ONE.multiply((-88.5432061));
      assertNotNull(complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.INF.cosh();
      assertNotNull(complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.INF.negate();
      assertNotNull(complex3);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex0.acos();
      assertNotNull(complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex1.ONE.cosh();
      assertNotNull(complex5);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = Complex.valueOf(0.0);
      assertNotNull(complex6);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      
      Complex complex7 = complex4.INF.reciprocal();
      assertNotNull(complex7);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      
      Complex complex8 = complex7.I.tanh();
      assertNotNull(complex8);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(1.557407724654902, complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      
      Complex complex9 = complex0.sqrt1z();
      assertNotNull(complex9);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex4));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      
      Complex complex10 = complex9.I.createComplex((-88.5432061), 3818.0);
      assertNotNull(complex10);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(3818.0, complex10.getImaginary(), 0.01);
      assertEquals((-88.5432061), complex10.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      
      Complex complex11 = complex0.I.tanh();
      assertNotNull(complex11);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.557407724654902, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      
      Complex complex12 = complex11.ONE.multiply(1);
      assertNotNull(complex12);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.557407724654902, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex7);
      
      Complex complex13 = complex0.multiply(complex4);
      assertNotNull(complex13);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex3));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertSame(complex4, complex13);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex6);
      assertSame(complex13, complex4);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex3);
      
      double double0 = complex3.getArgument();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex13));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      
      Complex complex14 = complex1.add(complex4);
      assertNotNull(complex14);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      
      Complex complex15 = complex0.add(complex14);
      assertNotNull(complex15);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex5));
      assertTrue(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex8));
      assertTrue(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      
      complex3.isInfinite();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex13));
      
      Complex complex16 = complex13.INF.divide(complex8);
      assertNotNull(complex16);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(1.557407724654902, complex8.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex2));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex1));
      assertTrue(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex11));
      assertTrue(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex14));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex3));
      
      Complex complex17 = complex4.sin();
      assertNotNull(complex17);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex5));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex0));
      assertTrue(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex6));
      assertTrue(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      
      List<Complex> list0 = complex17.NaN.nthRoot(1);
      assertNotNull(list0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(list0.contains(complex12));
      assertTrue(list0.contains(complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex5));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex0));
      assertTrue(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex6));
      assertTrue(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      
      Complex complex18 = (Complex)complex2.readResolve();
      assertNotNull(complex18);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex12));
      assertTrue(complex18.equals((Object)complex15));
      assertTrue(complex18.equals((Object)complex4));
      assertTrue(complex18.equals((Object)complex14));
      assertTrue(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex7));
      assertTrue(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex8));
      assertTrue(complex18.equals((Object)complex16));
      assertTrue(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex6));
      assertTrue(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex11));
      
      Complex complex19 = complex13.cos();
      assertNotNull(complex19);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex0));
      assertTrue(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertTrue(complex19.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex3));
      
      Complex complex20 = complex19.ONE.sinh();
      assertNotNull(complex20);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      assertEquals(1.1752011936438014, complex20.getReal(), 0.01);
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex0));
      assertTrue(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertTrue(complex19.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex3));
      
      Complex complex21 = complex20.INF.sinh();
      assertNotNull(complex21);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      assertEquals(1.1752011936438014, complex20.getReal(), 0.01);
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex20));
      assertTrue(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertTrue(complex19.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex15));
      assertTrue(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex0));
      assertTrue(complex21.equals((Object)complex14));
      assertTrue(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex6));
      assertTrue(complex21.equals((Object)complex16));
      assertTrue(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex3));
      assertTrue(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex11));
      assertTrue(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex20));
      assertTrue(complex21.equals((Object)complex4));
      assertTrue(complex21.equals((Object)complex19));
      assertTrue(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex20));
      assertTrue(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex3));
      
      complex8.hashCode();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(1.557407724654902, complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex21));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex20));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex21));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex21));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex14));
      
      Complex complex22 = Complex.valueOf((-88.5432061));
      assertNotNull(complex22);
      assertFalse(complex22.isNaN());
      assertFalse(complex22.isInfinite());
      assertEquals((-88.5432061), complex22.getReal(), 0.01);
      assertEquals(0.0, complex22.getImaginary(), 0.01);
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex12));
      assertTrue(complex22.equals((Object)complex1));
      
      Complex complex23 = complex22.INF.sqrt();
      assertNotNull(complex23);
      assertFalse(complex22.isNaN());
      assertFalse(complex22.isInfinite());
      assertEquals((-88.5432061), complex22.getReal(), 0.01);
      assertEquals(0.0, complex22.getImaginary(), 0.01);
      assertTrue(complex23.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex23.getReal(), 0.01);
      assertEquals(Double.NaN, complex23.getImaginary(), 0.01);
      assertFalse(complex23.isInfinite());
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex12));
      assertTrue(complex22.equals((Object)complex1));
      assertTrue(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex10));
      assertTrue(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex8));
      assertFalse(complex23.equals((Object)complex0));
      assertTrue(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex22));
      assertTrue(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex20));
      assertTrue(complex23.equals((Object)complex17));
      assertTrue(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex3));
      assertTrue(complex23.equals((Object)complex14));
      assertTrue(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex11));
      assertTrue(complex23.equals((Object)complex4));
      assertTrue(complex23.equals((Object)complex16));
      assertTrue(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex6));
      
      double double1 = complex0.abs();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertNotEquals(double1, double0, 0.01);
      
      double double2 = complex20.getReal();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      assertEquals(1.1752011936438014, complex20.getReal(), 0.01);
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex21));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertTrue(complex4.equals((Object)complex23));
      assertFalse(complex4.equals((Object)complex22));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex19.equals((Object)complex18));
      assertTrue(complex19.equals((Object)complex23));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex22));
      assertTrue(complex19.equals((Object)complex21));
      assertFalse(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex20));
      assertTrue(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertTrue(complex19.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex22));
      assertFalse(complex20.equals((Object)complex21));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex23));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex15));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex22));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex23));
      assertTrue(complex13.equals((Object)complex2));
      assertTrue(complex13.equals((Object)complex21));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex20));
      assertTrue(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex3));
      
      Complex complex24 = complex2.divide((double) 1);
      assertNotNull(complex24);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex24.getImaginary(), 0.01);
      assertFalse(complex24.isInfinite());
      assertEquals(Double.NaN, complex24.getReal(), 0.01);
      assertTrue(complex24.isNaN());
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex20));
      assertTrue(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex22));
      assertTrue(complex2.equals((Object)complex23));
      assertTrue(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex22));
      assertTrue(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex1));
      assertTrue(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex20));
      assertTrue(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex6));
      assertTrue(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex3));
      assertTrue(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex12));
      assertFalse(complex24.equals((Object)complex5));
      assertTrue(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex10));
      
      Complex complex25 = complex24.ONE.multiply(1);
      assertNotNull(complex25);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex24.getImaginary(), 0.01);
      assertFalse(complex24.isInfinite());
      assertEquals(Double.NaN, complex24.getReal(), 0.01);
      assertTrue(complex24.isNaN());
      assertFalse(complex25.isNaN());
      assertFalse(complex25.isInfinite());
      assertEquals(0.0, complex25.getImaginary(), 0.01);
      assertEquals(1.0, complex25.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex24));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex20));
      assertTrue(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex22));
      assertTrue(complex2.equals((Object)complex23));
      assertTrue(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex18));
      assertTrue(complex2.equals((Object)complex24));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex22));
      assertTrue(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex1));
      assertTrue(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex20));
      assertTrue(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex6));
      assertTrue(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex3));
      assertTrue(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex12));
      assertFalse(complex24.equals((Object)complex5));
      assertTrue(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex25.equals((Object)complex2));
      assertFalse(complex25.equals((Object)complex1));
      assertFalse(complex25.equals((Object)complex19));
      assertFalse(complex25.equals((Object)complex4));
      assertFalse(complex25.equals((Object)complex23));
      assertFalse(complex25.equals((Object)complex0));
      assertFalse(complex25.equals((Object)complex16));
      assertFalse(complex25.equals((Object)complex10));
      assertFalse(complex25.equals((Object)complex17));
      assertTrue(complex25.equals((Object)complex12));
      assertFalse(complex25.equals((Object)complex22));
      assertFalse(complex25.equals((Object)complex9));
      assertFalse(complex25.equals((Object)complex20));
      assertFalse(complex25.equals((Object)complex24));
      assertFalse(complex25.equals((Object)complex13));
      assertFalse(complex25.equals((Object)complex7));
      assertFalse(complex25.equals((Object)complex11));
      assertFalse(complex25.equals((Object)complex3));
      assertFalse(complex25.equals((Object)complex6));
      assertFalse(complex25.equals((Object)complex15));
      assertFalse(complex25.equals((Object)complex5));
      assertFalse(complex25.equals((Object)complex18));
      assertFalse(complex25.equals((Object)complex21));
      assertFalse(complex25.equals((Object)complex8));
      assertFalse(complex25.equals((Object)complex14));
      
      Complex complex26 = complex24.I.sqrt();
      assertNotNull(complex26);
      assertEquals(0.7071067811865476, complex26.getReal(), 0.01);
      assertFalse(complex26.isInfinite());
      assertFalse(complex26.isNaN());
      assertEquals(0.7071067811865475, complex26.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex24.getImaginary(), 0.01);
      assertFalse(complex24.isInfinite());
      assertEquals(Double.NaN, complex24.getReal(), 0.01);
      assertTrue(complex24.isNaN());
      assertFalse(complex26.equals((Object)complex10));
      assertFalse(complex26.equals((Object)complex16));
      assertFalse(complex26.equals((Object)complex0));
      assertFalse(complex26.equals((Object)complex8));
      assertFalse(complex26.equals((Object)complex5));
      assertFalse(complex26.equals((Object)complex1));
      assertFalse(complex26.equals((Object)complex3));
      assertFalse(complex26.equals((Object)complex19));
      assertFalse(complex26.equals((Object)complex15));
      assertFalse(complex26.equals((Object)complex23));
      assertFalse(complex26.equals((Object)complex13));
      assertFalse(complex26.equals((Object)complex21));
      assertFalse(complex26.equals((Object)complex14));
      assertFalse(complex26.equals((Object)complex18));
      assertFalse(complex26.equals((Object)complex7));
      assertFalse(complex26.equals((Object)complex6));
      assertFalse(complex26.equals((Object)complex24));
      assertFalse(complex26.equals((Object)complex11));
      assertFalse(complex26.equals((Object)complex4));
      assertFalse(complex26.equals((Object)complex20));
      assertFalse(complex26.equals((Object)complex17));
      assertFalse(complex26.equals((Object)complex12));
      assertFalse(complex26.equals((Object)complex9));
      assertFalse(complex26.equals((Object)complex22));
      assertFalse(complex26.equals((Object)complex25));
      assertFalse(complex26.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex25));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex24));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex25));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex22));
      assertTrue(complex2.equals((Object)complex23));
      assertTrue(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex21));
      assertTrue(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex18));
      assertTrue(complex2.equals((Object)complex24));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex20));
      assertTrue(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex25));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex22));
      assertTrue(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex1));
      assertTrue(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex20));
      assertTrue(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex6));
      assertTrue(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex3));
      assertTrue(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex12));
      assertFalse(complex24.equals((Object)complex5));
      assertTrue(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex24.equals((Object)complex25));
      
      Complex complex27 = complex2.subtract(Double.POSITIVE_INFINITY);
      assertNotNull(complex27);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex27.getReal(), 0.01);
      assertTrue(complex27.isNaN());
      assertEquals(Double.NaN, complex27.getImaginary(), 0.01);
      assertFalse(complex27.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-88.5432061), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex25));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex26));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex27.equals((Object)complex21));
      assertFalse(complex27.equals((Object)complex7));
      assertFalse(complex27.equals((Object)complex5));
      assertTrue(complex27.equals((Object)complex9));
      assertFalse(complex27.equals((Object)complex10));
      assertFalse(complex27.equals((Object)complex8));
      assertFalse(complex27.equals((Object)complex25));
      assertTrue(complex27.equals((Object)complex2));
      assertTrue(complex27.equals((Object)complex16));
      assertFalse(complex27.equals((Object)complex0));
      assertFalse(complex27.equals((Object)complex3));
      assertTrue(complex27.equals((Object)complex18));
      assertFalse(complex27.equals((Object)complex22));
      assertFalse(complex27.equals((Object)complex26));
      assertFalse(complex27.equals((Object)complex12));
      assertFalse(complex27.equals((Object)complex20));
      assertTrue(complex27.equals((Object)complex23));
      assertFalse(complex27.equals((Object)complex1));
      assertFalse(complex27.equals((Object)complex6));
      assertFalse(complex27.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex24));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex26));
      assertFalse(complex1.equals((Object)complex25));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex26));
      assertFalse(complex2.equals((Object)complex22));
      assertTrue(complex2.equals((Object)complex23));
      assertTrue(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex21));
      assertTrue(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex18));
      assertTrue(complex2.equals((Object)complex24));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex20));
      assertTrue(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex25));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      
      Complex complex28 = complex11.atan();
      assertNotNull(complex28);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex28.isNaN());
      assertFalse(complex28.isInfinite());
      assertEquals((-1.5707963267948966), complex28.getReal(), 0.01);
      assertEquals(0.7617262217813369, complex28.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.557407724654902, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex25));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex26));
      assertFalse(complex0.equals((Object)complex27));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex28.equals((Object)complex21));
      assertFalse(complex28.equals((Object)complex1));
      assertFalse(complex28.equals((Object)complex5));
      assertFalse(complex28.equals((Object)complex10));
      assertFalse(complex28.equals((Object)complex16));
      assertFalse(complex28.equals((Object)complex22));
      assertFalse(complex28.equals((Object)complex26));
      assertFalse(complex28.equals((Object)complex2));
      assertFalse(complex28.equals((Object)complex0));
      assertFalse(complex28.equals((Object)complex3));
      assertFalse(complex28.equals((Object)complex15));
      assertFalse(complex28.equals((Object)complex19));
      assertFalse(complex28.equals((Object)complex6));
      assertFalse(complex28.equals((Object)complex8));
      assertFalse(complex28.equals((Object)complex11));
      assertFalse(complex28.equals((Object)complex23));
      assertFalse(complex28.equals((Object)complex9));
      assertFalse(complex28.equals((Object)complex7));
      assertFalse(complex28.equals((Object)complex14));
      assertFalse(complex28.equals((Object)complex13));
      assertFalse(complex28.equals((Object)complex20));
      assertFalse(complex28.equals((Object)complex18));
      assertFalse(complex28.equals((Object)complex24));
      assertFalse(complex28.equals((Object)complex27));
      assertFalse(complex28.equals((Object)complex4));
      assertFalse(complex28.equals((Object)complex25));
      assertFalse(complex28.equals((Object)complex12));
      assertFalse(complex28.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex24));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex27));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex22));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex26));
      assertFalse(complex11.equals((Object)complex25));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex21));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex23));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex18));
      assertTrue(complex11.equals((Object)complex8));
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      double double0 = 1013.9270841376009;
      Complex complex0 = new Complex(1013.9270841376009);
      assertNotNull(complex0);
      assertEquals(1013.9270841376009, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.INF.tan();
      assertNotNull(complex1);
      assertEquals(1013.9270841376009, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.add(complex0);
      assertNotNull(complex2);
      assertEquals(1013.9270841376009, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex0.I.asin();
      assertNotNull(complex3);
      assertEquals(1013.9270841376009, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.8813735870195428, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex2.INF.divide(complex1);
      assertNotNull(complex4);
      assertEquals(1013.9270841376009, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex4);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex2);
      
      Complex complex5 = complex0.INF.sqrt();
      assertNotNull(complex5);
      assertEquals(1013.9270841376009, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      
      Complex complex6 = complex0.log();
      assertNotNull(complex6);
      assertEquals(1013.9270841376009, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(6.921586272431027, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      
      complex0.hashCode();
      assertEquals(1013.9270841376009, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      
      int int0 = (-1293);
//      try { 
        complex3.nthRoot((-1293));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cannot compute nth root for null or negative n: -1,293
//         //
//         verifyException("org.apache.commons.math3.complex.Complex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Complex complex0 = new Complex((-1591.0), (-1591.0));
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.ZERO.log();
      assertNotNull(complex1);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = Complex.ZERO;
      assertNotNull(complex2);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.NaN.divide(complex1);
      assertNotNull(complex3);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex2.sin();
      assertNotNull(complex4);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex2));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex0.pow(complex2);
      assertNotNull(complex5);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = complex5.ONE.cos();
      assertNotNull(complex6);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.5403023058681398, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex6.NaN.divide((-1591.0));
      assertNotNull(complex7);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.5403023058681398, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = Complex.valueOf((-1591.0), (-1591.0));
      assertNotNull(complex8);
      assertEquals((-1591.0), complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-1591.0), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      
      Complex complex9 = complex8.I.createComplex((-1591.0), (-438.9137));
      assertNotNull(complex9);
      assertEquals((-1591.0), complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-1591.0), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-438.9137), complex9.getImaginary(), 0.01);
      assertEquals((-1591.0), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      
      Complex complex10 = complex9.exp();
      assertNotNull(complex10);
      assertEquals((-1591.0), complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-1591.0), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-438.9137), complex9.getImaginary(), 0.01);
      assertEquals((-1591.0), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      
      double double0 = complex9.abs();
      assertEquals((-1591.0), complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-1591.0), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-438.9137), complex9.getImaginary(), 0.01);
      assertEquals((-1591.0), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      
      Complex complex11 = complex2.multiply((-1591.0));
      assertNotNull(complex11);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      
      Complex complex12 = complex11.NaN.sin();
      assertNotNull(complex12);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex7);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      
      Complex complex13 = complex0.divide(1650.432136153344);
      assertNotNull(complex13);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals((-0.9639899545994892), complex13.getReal(), 0.01);
      assertEquals((-0.9639899545994892), complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      
      Complex complex14 = complex11.tan();
      assertNotNull(complex14);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertEquals(-0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex2));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex12);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      
      List<Complex> list0 = complex9.INF.nthRoot(3273);
      assertNotNull(list0);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertEquals((-1591.0), complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-1591.0), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-438.9137), complex9.getImaginary(), 0.01);
      assertEquals((-1591.0), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(list0.contains(complex14));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex10);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      
      Complex complex15 = complex11.sqrt1z();
      assertNotNull(complex15);
      assertFalse(complex15.isInfinite());
      assertEquals(1.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex12);
      
      Complex complex16 = complex14.add(complex9);
      assertNotNull(complex16);
      assertEquals((-438.9137), complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals((-1591.0), complex16.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1591.0), complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-1591.0), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-438.9137), complex9.getImaginary(), 0.01);
      assertEquals((-1591.0), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex11.isNaN());
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertEquals(-0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex15));
      assertTrue(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex2));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex4);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex17 = complex6.ZERO.pow(complex9);
      assertNotNull(complex17);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.5403023058681398, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals((-1591.0), complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-1591.0), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-438.9137), complex9.getImaginary(), 0.01);
      assertEquals((-1591.0), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex8));
      assertTrue(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex5));
      assertTrue(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex14));
      assertTrue(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      
      Complex complex18 = complex17.sqrt();
      assertNotNull(complex18);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.5403023058681398, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals((-1591.0), complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-1591.0), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-438.9137), complex9.getImaginary(), 0.01);
      assertEquals((-1591.0), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex8));
      assertTrue(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex5));
      assertTrue(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex16));
      assertTrue(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex14));
      assertTrue(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      
      Complex complex19 = complex14.NaN.multiply(0);
      assertNotNull(complex19);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertTrue(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertEquals(-0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex4));
      assertTrue(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex15));
      assertTrue(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex18));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex17));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex2));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex16));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex18));
      
      Complex complex20 = complex5.add((-1591.0));
      assertNotNull(complex20);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex20.isInfinite());
      assertEquals((-1590.0), complex20.getReal(), 0.01);
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isNaN());
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex14));
      
      Complex complex21 = complex11.pow(complex6);
      assertNotNull(complex21);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.5403023058681398, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex14));
      assertTrue(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex8));
      assertTrue(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex10));
      assertTrue(complex21.equals((Object)complex19));
      assertTrue(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex1));
      assertTrue(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex11));
      assertTrue(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex15));
      assertTrue(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex18));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex17));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      
      complex21.hashCode();
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.5403023058681398, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex21));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex14));
      assertTrue(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex8));
      assertTrue(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex10));
      assertTrue(complex21.equals((Object)complex19));
      assertTrue(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex1));
      assertTrue(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex11));
      assertTrue(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex15));
      assertTrue(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex18));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex21));
      assertFalse(complex11.equals((Object)complex17));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      
      double double1 = complex21.NaN.abs();
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.5403023058681398, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex21));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex14));
      assertTrue(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex8));
      assertTrue(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex10));
      assertTrue(complex21.equals((Object)complex19));
      assertTrue(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex1));
      assertTrue(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex11));
      assertTrue(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex6));
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex15));
      assertTrue(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex18));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex21));
      assertFalse(complex11.equals((Object)complex17));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      
      Complex complex22 = complex2.exp();
      assertNotNull(complex22);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex22.isInfinite());
      assertEquals(1.0, complex22.getReal(), 0.01);
      assertFalse(complex22.isNaN());
      assertEquals(0.0, complex22.getImaginary(), 0.01);
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex9));
      assertTrue(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex21));
      assertTrue(complex22.equals((Object)complex15));
      
      Complex complex23 = complex5.atan();
      assertNotNull(complex23);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex23.getImaginary(), 0.01);
      assertFalse(complex23.isInfinite());
      assertEquals(0.7853981633974483, complex23.getReal(), 0.01);
      assertFalse(complex23.isNaN());
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex22));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex14));
      assertTrue(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex0));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex22));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex8));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex14));
      
      Complex complex24 = complex21.add(complex19);
      assertNotNull(complex24);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertTrue(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.5403023058681398, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
      assertTrue(complex24.isNaN());
      assertEquals(Double.NaN, complex24.getImaginary(), 0.01);
      assertFalse(complex24.isInfinite());
      assertEquals(Double.NaN, complex24.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertEquals(-0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex22));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex23));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex8));
      assertTrue(complex19.equals((Object)complex21));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex23));
      assertTrue(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex22));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex20));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex14));
      assertTrue(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex23));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex22));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex23));
      assertFalse(complex6.equals((Object)complex21));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex22));
      assertTrue(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex8));
      assertTrue(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex23));
      assertTrue(complex21.equals((Object)complex19));
      assertTrue(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex1));
      assertTrue(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex11));
      assertTrue(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex6));
      assertTrue(complex24.equals((Object)complex21));
      assertTrue(complex24.equals((Object)complex17));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex4));
      assertFalse(complex24.equals((Object)complex22));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex15));
      assertTrue(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex18));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex21));
      assertFalse(complex11.equals((Object)complex22));
      assertFalse(complex11.equals((Object)complex23));
      assertFalse(complex11.equals((Object)complex17));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex19));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex2));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex20));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex16));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex22));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex23));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex21));
      
      Complex complex25 = complex13.pow(287.00670646964);
      assertNotNull(complex25);
      assertFalse(complex0.isInfinite());
      assertEquals((-1591.0), complex0.getReal(), 0.01);
      assertEquals((-1591.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex25.isNaN());
      assertFalse(complex25.isInfinite());
      assertEquals(3.0461912253993347E38, complex25.getImaginary(), 0.01);
      assertEquals((-2.9514107486376356E38), complex25.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals((-0.9639899545994892), complex13.getReal(), 0.01);
      assertEquals((-0.9639899545994892), complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex14));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex25.equals((Object)complex8));
      assertFalse(complex25.equals((Object)complex10));
      assertFalse(complex25.equals((Object)complex0));
      assertFalse(complex25.equals((Object)complex3));
      assertFalse(complex25.equals((Object)complex7));
      assertFalse(complex25.equals((Object)complex9));
      assertFalse(complex25.equals((Object)complex2));
      assertFalse(complex25.equals((Object)complex19));
      assertFalse(complex25.equals((Object)complex13));
      assertFalse(complex25.equals((Object)complex18));
      assertFalse(complex25.equals((Object)complex20));
      assertFalse(complex25.equals((Object)complex21));
      assertFalse(complex25.equals((Object)complex23));
      assertFalse(complex25.equals((Object)complex6));
      assertFalse(complex25.equals((Object)complex11));
      assertFalse(complex25.equals((Object)complex16));
      assertFalse(complex25.equals((Object)complex24));
      assertFalse(complex25.equals((Object)complex5));
      assertFalse(complex25.equals((Object)complex12));
      assertFalse(complex25.equals((Object)complex14));
      assertFalse(complex25.equals((Object)complex1));
      assertFalse(complex25.equals((Object)complex15));
      assertFalse(complex25.equals((Object)complex22));
      assertFalse(complex25.equals((Object)complex17));
      assertFalse(complex25.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex20));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex22));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex21));
      assertFalse(complex13.equals((Object)complex23));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex19));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex24));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Complex complex0 = new Complex(0.0, 0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.sqrt1z();
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.exp();
      assertNotNull(complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      double double0 = complex0.abs();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertEquals(0.0, double0, 0.01);
      
      Complex complex3 = complex0.I.sqrt();
      assertNotNull(complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      double double1 = complex3.ONE.getArgument();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertEquals(0.0, double1, 0.01);
      
      ComplexField complexField0 = complex0.I.getField();
      assertNotNull(complexField0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      
      Complex complex4 = complex0.sqrt1z();
      assertNotNull(complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      
      double double2 = complex0.abs();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertEquals(0.0, double2, 0.01);
      
      Complex complex5 = complex4.subtract(0.0);
      assertNotNull(complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = complex5.I.log();
      assertNotNull(complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(1.5707963267948966, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex0.add(complex4);
      assertNotNull(complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      
      Complex complex8 = complex7.sinh();
      assertNotNull(complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(1.1752011936438014, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Complex complex0 = new Complex(1.9144186973571777, (-3487.0872603274));
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.cos();
      assertNotNull(complex1);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.NaN.asin();
      assertNotNull(complex2);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.ONE.sqrt1z();
      assertNotNull(complex3);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      double double0 = complex1.INF.abs();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      
      Complex complex4 = (Complex)complex0.ZERO.readResolve();
      assertNotNull(complex4);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex1.multiply((-508));
      assertNotNull(complex5);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex2.cosh();
      assertNotNull(complex6);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex2);
      
      complex5.I.hashCode();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      
      Complex complex7 = (Complex)complex2.readResolve();
      assertNotNull(complex7);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = complex0.I.divide((double) (-508));
      assertNotNull(complex8);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals((-0.001968503937007874), complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      
      Complex complex9 = complex2.sqrt();
      assertNotNull(complex9);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      
      boolean boolean0 = complex1.isInfinite();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertTrue(boolean0);
      
      String string0 = complex3.toString();
      assertNotNull(string0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertEquals("(0.0, 0.0)", string0);
      
      Complex complex10 = complex0.negate();
      assertNotNull(complex10);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-3487.0872603274), complex0.getImaginary(), 0.01);
      assertEquals(1.9144186973571777, complex0.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals((-1.9144186973571777), complex10.getReal(), 0.01);
      assertEquals(3487.0872603274, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ZERO.atan();
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.subtract(1017.0351113218773);
      assertNotNull(complex2);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals((-1017.0351113218773), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex1.conjugate();
      assertNotNull(complex3);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex3.ZERO.acos();
      assertNotNull(complex4);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex0.tan();
      assertNotNull(complex5);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.7615941559557649, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      
      String string0 = complex5.toString();
      assertNotNull(string0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.7615941559557649, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertEquals("(0.0, 0.7615941559557649)", string0);
      
      Complex complex6 = complex0.INF.sqrt1z();
      assertNotNull(complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex5.ZERO.sqrt();
      assertNotNull(complex7);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.7615941559557649, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      
      Complex complex8 = complex0.reciprocal();
      assertNotNull(complex8);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals((-1.0), complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      
      Complex complex9 = complex3.NaN.add(1017.0351113218773);
      assertNotNull(complex9);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertTrue(complex9.isNaN());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      
      ComplexField complexField0 = complex0.getField();
      assertNotNull(complexField0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      
      Complex complex10 = complex5.divide(1017.0351113218773);
      assertNotNull(complex10);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.7615941559557649, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(7.488376236744604E-4, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      
      Complex complex11 = (Complex)complex0.readResolve();
      assertNotNull(complex11);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(1.0, complex11.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      
      Complex complex12 = complex0.cosh();
      assertNotNull(complex12);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.5403023058681398, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      
      Complex complex13 = complex12.ZERO.tanh();
      assertNotNull(complex13);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.5403023058681398, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertTrue(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertTrue(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex9));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex9);
      
      Complex complex14 = complex3.divide((-2174.47728952));
      assertNotNull(complex14);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(-0.0, complex14.getReal(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      
      Complex complex15 = complex0.pow((-1107.453));
      assertNotNull(complex15);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(0.6530241527544586, complex15.getReal(), 0.01);
      assertEquals(0.7573370820970814, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex4);
      
      Complex complex16 = complex8.cos();
      assertNotNull(complex16);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(1.5430806348152437, complex16.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals((-1.0), complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      
      Complex complex17 = complex16.subtract(1.1220467571570283E-7);
      assertNotNull(complex17);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(1.5430806348152437, complex16.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertEquals(1.543080522610568, complex17.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals((-1.0), complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex0);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex15);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      
      Complex complex18 = complex12.conjugate();
      assertNotNull(complex18);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex18.getReal(), 0.01);
      assertEquals(-0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.5403023058681398, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex0));
      assertTrue(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex7);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      
      Complex complex19 = complex18.INF.multiply(4007);
      assertNotNull(complex19);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex18.getReal(), 0.01);
      assertEquals(-0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertFalse(complex19.isNaN());
      assertTrue(complex19.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex19.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex19.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.5403023058681398, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex0));
      assertTrue(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex11));
      assertTrue(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex19);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex19);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      
      String string1 = complex0.toString();
      assertNotNull(string1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertEquals("(0.0, 1.0)", string1);
      
      Complex complex20 = complex4.divide(1017.0351113218773);
      assertNotNull(complex20);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(-0.0, complex20.getImaginary(), 0.01);
      assertEquals(0.0015444858385992946, complex20.getReal(), 0.01);
      assertFalse(complex20.isNaN());
      assertFalse(complex20.isInfinite());
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex18));
      assertTrue(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex17));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex12));
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex2);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex12);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Complex complex0 = Complex.valueOf(521.02);
      assertNotNull(complex0);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      double double0 = complex0.ONE.abs();
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, double0, 0.01);
      
      Complex complex1 = complex0.subtract(1545.2889014084);
      assertNotNull(complex1);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      ComplexField complexField0 = complex1.NaN.getField();
      assertNotNull(complexField0);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.acos();
      assertNotNull(complex2);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertEquals(3.141592653589793, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-7.624881312424452), complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.I.sqrt();
      assertNotNull(complex3);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertEquals(3.141592653589793, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-7.624881312424452), complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      List<Complex> list0 = complex3.INF.nthRoot(1);
      assertNotNull(list0);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertEquals(3.141592653589793, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-7.624881312424452), complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(complex1));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex2.ONE.multiply(1);
      assertNotNull(complex4);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertEquals(3.141592653589793, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-7.624881312424452), complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex4.I.asin();
      assertNotNull(complex5);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertEquals(3.141592653589793, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-7.624881312424452), complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.8813735870195428, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      
      ComplexField complexField1 = complex2.ZERO.getField();
      assertNotNull(complexField1);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertEquals(3.141592653589793, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-7.624881312424452), complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertSame(complexField1, complexField0);
      
      Complex complex6 = Complex.valueOf(1.0, 271.59196751);
      assertNotNull(complex6);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(271.59196751, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      
      Complex complex7 = (Complex)complex1.readResolve();
      assertNotNull(complex7);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-1024.2689014084), complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      
      boolean boolean0 = complex2.equals(complex7);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertEquals(3.141592653589793, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-7.624881312424452), complex2.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-1024.2689014084), complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertFalse(boolean0);
      
      Complex complex8 = complex5.subtract(1545.2889014084);
      assertNotNull(complex8);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertEquals(3.141592653589793, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-7.624881312424452), complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.8813735870195428, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals((-1545.2889014084), complex8.getReal(), 0.01);
      assertEquals(0.8813735870195428, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      
      Complex complex9 = complex2.subtract(complex1);
      assertNotNull(complex9);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertEquals(3.141592653589793, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-7.624881312424452), complex2.getImaginary(), 0.01);
      assertEquals(1027.41049406199, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals((-7.624881312424452), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      
      Complex complex10 = complex5.negate();
      assertNotNull(complex10);
      assertEquals(521.02, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1024.2689014084), complex1.getReal(), 0.01);
      assertEquals(3.141592653589793, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-7.624881312424452), complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.8813735870195428, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertEquals((-0.8813735870195428), complex10.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.exp();
      assertNotNull(complex1);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.tanh();
      assertNotNull(complex2);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(1.557407724654902, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.ONE.sqrt();
      assertNotNull(complex3);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(1.557407724654902, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex3.ZERO.sinh();
      assertNotNull(complex4);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(1.557407724654902, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex1.ZERO.add((-5.2305110482722706E-8));
      assertNotNull(complex5);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-5.2305110482722706E-8), complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex0.INF.divide(3019.0);
      assertNotNull(complex6);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertTrue(complex6.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      
      Complex complex7 = complex1.reciprocal();
      assertNotNull(complex7);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-0.8414709848078965), complex7.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      
      boolean boolean0 = complex7.equals(complex2);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(1.557407724654902, complex2.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-0.8414709848078965), complex7.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertFalse(boolean0);
      
      Complex complex8 = complex0.divide((-5.2305110482722706E-8));
      assertNotNull(complex8);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1.9118590722226225E7), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex3.divide(4082.764);
      assertNotNull(complex9);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(1.557407724654902, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(2.449321097178284E-4, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      
      Complex complex10 = complex7.pow((-1369.8633));
      assertNotNull(complex10);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-0.8414709848078965), complex7.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.9917035012336691, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.1285463560000124, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      
      Complex complex11 = complex10.sinh();
      assertNotNull(complex11);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-0.8414709848078965), complex7.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.9917035012336691, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.1285463560000124, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.19656847041403244, complex11.getImaginary(), 0.01);
      assertEquals(1.1528483738931448, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex11);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex0);
      
      Complex complex12 = complex9.subtract(4082.764);
      assertNotNull(complex12);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(1.557407724654902, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(2.449321097178284E-4, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals((-4082.7637550678905), complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      
      Complex complex13 = complex7.tan();
      assertNotNull(complex13);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-0.8414709848078965), complex7.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex13.isNaN());
      assertEquals(0.2710930380620365, complex13.getReal(), 0.01);
      assertEquals((-0.7982351826521867), complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      
      Complex complex14 = (Complex)complex0.readResolve();
      assertNotNull(complex14);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex9));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex9);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = complex11.equals(object0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-0.8414709848078965), complex7.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.9917035012336691, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.1285463560000124, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.19656847041403244, complex11.getImaginary(), 0.01);
      assertEquals(1.1528483738931448, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(boolean1 == boolean0);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex14));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex14);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = Complex.valueOf(0.0, 0.0);
      assertNotNull(complex1);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.ONE.multiply(complex0);
      assertNotNull(complex2);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.cos();
      assertNotNull(complex3);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex0.divide(complex1);
      assertNotNull(complex4);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex4.ZERO.negate();
      assertNotNull(complex5);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      
      Complex complex6 = complex4.sin();
      assertNotNull(complex6);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      
      String string0 = complex3.ZERO.toString();
      assertNotNull(string0);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertEquals("(0.0, 0.0)", string0);
      
      Complex complex7 = complex1.log();
      assertNotNull(complex7);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex7.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = complex6.divide(0.0);
      assertNotNull(complex8);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex4);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      
      Complex complex9 = complex8.I.divide(complex3);
      assertNotNull(complex9);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex9.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex4);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      
      Complex complex10 = complex9.NaN.cosh();
      assertNotNull(complex10);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex9);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex6);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertSame(complex6, complex10);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex4);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertSame(complex8, complex10);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex8);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      
      Complex complex11 = complex4.divide(complex1);
      assertNotNull(complex11);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex8);
      assertSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex6);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      
      Complex complex12 = complex5.add((-811.7737396478));
      assertNotNull(complex12);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals((-811.7737396478), complex12.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex8);
      assertSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex2);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      
      Complex complex13 = complex12.NaN.tanh();
      assertNotNull(complex13);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals((-811.7737396478), complex12.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex8);
      assertSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex13);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex5);
      assertSame(complex13, complex10);
      assertNotSame(complex13, complex9);
      assertSame(complex13, complex6);
      assertSame(complex13, complex8);
      assertSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex0);
      
      Complex complex14 = complex8.add(6.283185307179586);
      assertNotNull(complex14);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex8);
      assertSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex13);
      assertSame(complex4, complex14);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex14);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex13);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex8);
      assertSame(complex6, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex8, complex12);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex13);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertSame(complex8, complex14);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertSame(complex8, complex4);
      assertSame(complex8, complex10);
      assertSame(complex8, complex11);
      assertSame(complex14, complex6);
      assertSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertSame(complex14, complex13);
      assertSame(complex14, complex8);
      assertSame(complex14, complex11);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex12);
      
      Complex complex15 = complex14.cosh();
      assertNotNull(complex15);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertNotSame(complex15, complex3);
      assertSame(complex15, complex6);
      assertNotSame(complex15, complex1);
      assertSame(complex15, complex10);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex7);
      assertSame(complex15, complex13);
      assertSame(complex15, complex8);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertSame(complex15, complex14);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex8);
      assertSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex13);
      assertSame(complex4, complex15);
      assertSame(complex4, complex14);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex14);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex13);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex8);
      assertSame(complex6, complex11);
      assertSame(complex6, complex15);
      assertNotSame(complex6, complex1);
      assertNotSame(complex8, complex12);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex13);
      assertNotSame(complex8, complex3);
      assertSame(complex8, complex15);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertSame(complex8, complex14);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertSame(complex8, complex4);
      assertSame(complex8, complex10);
      assertSame(complex8, complex11);
      assertSame(complex14, complex6);
      assertSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertSame(complex14, complex13);
      assertSame(complex14, complex8);
      assertSame(complex14, complex11);
      assertNotSame(complex14, complex3);
      assertSame(complex14, complex15);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex12);
      
      Complex complex16 = complex7.sin();
      assertNotNull(complex16);
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex7.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex13));
      assertTrue(complex16.equals((Object)complex14));
      assertTrue(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex12));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex0));
      assertTrue(complex16.equals((Object)complex4));
      assertTrue(complex16.equals((Object)complex8));
      assertTrue(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex15));
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex15);
      
      Complex complex17 = complex12.sinh();
      assertNotNull(complex17);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex17.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals((-811.7737396478), complex12.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex9));
      assertTrue(complex17.equals((Object)complex13));
      assertTrue(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex5));
      assertTrue(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex1));
      assertTrue(complex17.equals((Object)complex8));
      assertTrue(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex7));
      assertTrue(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex12));
      assertTrue(complex17.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex16);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex8);
      assertSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex13);
      assertSame(complex4, complex15);
      assertSame(complex4, complex14);
      assertNotSame(complex4, complex17);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex17);
      
      Complex complex18 = complex7.multiply(6.283185307179586);
      assertNotNull(complex18);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex18.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex18.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex18.getImaginary(), 0.01);
      assertTrue(complex18.isInfinite());
      assertTrue(complex7.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex15));
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex6);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex15);
      
      Complex complex19 = complex12.exp();
      assertNotNull(complex19);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex19.getReal(), 0.01);
      assertFalse(complex19.isNaN());
      assertEquals(-0.0, complex19.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals((-811.7737396478), complex12.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex6));
      assertTrue(complex19.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex18));
      assertTrue(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex12));
      assertTrue(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex17));
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex5);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex18);
      assertSame(complex4, complex8);
      assertSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex13);
      assertSame(complex4, complex15);
      assertNotSame(complex4, complex19);
      assertSame(complex4, complex14);
      assertNotSame(complex4, complex17);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex19);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.conjugate();
      assertNotNull(complex1);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = Complex.valueOf(585.4249, 585.4249);
      assertNotNull(complex2);
      assertEquals(585.4249, complex2.getReal(), 0.01);
      assertEquals(585.4249, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex0.divide(complex2);
      assertNotNull(complex3);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(585.4249, complex2.getReal(), 0.01);
      assertEquals(585.4249, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(8.540805148533997E-4, complex3.getImaginary(), 0.01);
      assertEquals(8.540805148533997E-4, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex2.INF.createComplex((-123.499788534), 5.621509038251498E-9);
      assertNotNull(complex4);
      assertEquals(585.4249, complex2.getReal(), 0.01);
      assertEquals(585.4249, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-123.499788534), complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(5.621509038251498E-9, complex4.getImaginary(), 0.01);
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = Complex.valueOf(Double.POSITIVE_INFINITY, 0.0);
      assertNotNull(complex5);
      assertFalse(complex5.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex2.cosh();
      assertNotNull(complex6);
      assertEquals(585.4249, complex2.getReal(), 0.01);
      assertEquals(585.4249, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(7.820093726086544E253, complex6.getImaginary(), 0.01);
      assertEquals(4.0924194666891906E253, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      
      double double0 = complex2.abs();
      assertEquals(585.4249, complex2.getReal(), 0.01);
      assertEquals(585.4249, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertEquals(827.915833330913, double0, 0.01);
      
      Complex complex7 = complex0.add((-41.91360920034192));
      assertNotNull(complex7);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getImaginary(), 0.01);
      assertEquals((-41.91360920034192), complex7.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      
      Complex complex8 = complex0.conjugate();
      assertNotNull(complex8);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals((-1.0), complex8.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.NaN.sin();
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = Complex.INF;
      assertNotNull(complex2);
      assertFalse(complex2.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.ZERO.multiply(2.0);
      assertNotNull(complex3);
      assertFalse(complex2.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex3.ONE.negate();
      assertNotNull(complex4);
      assertFalse(complex2.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals((-1.0), complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex4.INF.tanh();
      assertNotNull(complex5);
      assertFalse(complex2.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals((-1.0), complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex1);
      
      Complex complex6 = complex2.ZERO.acos();
      assertNotNull(complex6);
      assertFalse(complex2.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      
      double double0 = complex2.I.getArgument();
      assertFalse(complex2.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(1.5707963267948966, double0, 0.01);
      
      Complex complex7 = complex0.multiply(complex2);
      assertNotNull(complex7);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertTrue(complex7.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      
      Complex complex8 = complex7.subtract(complex2);
      assertNotNull(complex8);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertTrue(complex7.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      
      Complex complex9 = complex1.multiply(2.0);
      assertNotNull(complex9);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex8));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex9);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      complex0.INF.hashCode();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = Complex.I;
      assertNotNull(complex1);
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.ZERO.pow(complex1);
      assertNotNull(complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex0.log();
      assertNotNull(complex3);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      boolean boolean0 = complex0.isInfinite();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertFalse(boolean0);
      
      Complex complex4 = complex0.cos();
      assertNotNull(complex4);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      
      boolean boolean1 = complex0.equals(complex4);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(boolean1 == boolean0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, (-1653.71));
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.I.exp();
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      boolean boolean0 = complex0.isNaN();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertFalse(boolean0);
      
      double double0 = complex1.getArgument();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(1.0, double0, 0.01);
      
      Complex complex2 = complex1.atan();
      assertNotNull(complex2);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.6130955854417586, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.NaN.tanh();
      assertNotNull(complex3);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex2.atan();
      assertNotNull(complex4);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.6130955854417586, complex2.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.35872743878207747, complex4.getImaginary(), 0.01);
      assertEquals(0.7830861270913829, complex4.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex4.divide(complex0);
      assertNotNull(complex5);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.6130955854417586, complex2.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.35872743878207747, complex4.getImaginary(), 0.01);
      assertEquals(0.7830861270913829, complex4.getReal(), 0.01);
      assertEquals((-2.169228212818919E-4), complex5.getReal(), 0.01);
      assertEquals(4.735329211841151E-4, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex0.asin();
      assertNotNull(complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals((-8.103923799659627), complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      
      double double1 = complex2.ONE.getArgument();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.6130955854417586, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(0.0, double1, 0.01);
      
      Complex complex7 = complex2.INF.add(complex6);
      assertNotNull(complex7);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.6130955854417586, complex2.getImaginary(), 0.01);
      assertEquals((-8.103923799659627), complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertTrue(complex7.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      
      complex2.I.hashCode();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.6130955854417586, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex8 = Complex.valueOf(0.0, (-1492.3917248158));
      assertNotNull(complex8);
      assertFalse(complex8.isInfinite());
      assertEquals((-1492.3917248158), complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex2.multiply(complex8);
      assertNotNull(complex9);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.6130955854417586, complex2.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-1492.3917248158), complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals((-1172.1217197398794), complex9.getImaginary(), 0.01);
      assertEquals(914.9787782343788, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      
      Complex complex10 = complex2.log();
      assertNotNull(complex10);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.6130955854417586, complex2.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals((-0.0036450179509712657), complex10.getReal(), 0.01);
      assertEquals(0.6628101281838482, complex10.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      
      Complex complex11 = complex1.ZERO.sinh();
      assertNotNull(complex11);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      
      Complex complex12 = Complex.valueOf((-1662.284), (-2070.305));
      assertNotNull(complex12);
      assertEquals((-2070.305), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-1662.284), complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      
      Complex complex13 = complex12.I.negate();
      assertNotNull(complex13);
      assertEquals((-2070.305), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-1662.284), complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(-0.0, complex13.getReal(), 0.01);
      assertEquals((-1.0), complex13.getImaginary(), 0.01);
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      
      Complex complex14 = complex1.acos();
      assertNotNull(complex14);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1653.71), complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals((-0.8216834706126773), complex14.getImaginary(), 0.01);
      assertEquals(1.1612894529345954, complex14.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex7));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex7);
      
//      try { 
        complex8.nthRoot((-1013));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cannot compute nth root for null or negative n: -1,013
//         //
//         verifyException("org.apache.commons.math3.complex.Complex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ZERO.acos();
      assertNotNull(complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.5707963267948966, complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.reciprocal();
      assertNotNull(complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.INF.asin();
      assertNotNull(complex1);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      
      Complex complex2 = complex0.cos();
      assertNotNull(complex2);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      
      Complex complex3 = complex2.ZERO.pow(complex1);
      assertNotNull(complex3);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex3);
      assertSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex1);
      
      List<Complex> list0 = complex0.INF.nthRoot(2656);
      assertNotNull(list0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(complex1));
      assertSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      
      Complex complex4 = complex3.I.sqrt1z();
      assertNotNull(complex4);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex4.tanh();
      assertNotNull(complex5);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.8883855615856606, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      
      Complex complex6 = complex5.ONE.multiply(2656);
      assertNotNull(complex6);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.8883855615856606, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(2656.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex2.negate();
      assertNotNull(complex7);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      
      Complex complex8 = complex7.divide(2781.439467623);
      assertNotNull(complex8);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex8);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex3);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex8);
      assertSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertSame(complex8, complex0);
      assertSame(complex8, complex1);
      
      ComplexField complexField0 = complex0.getField();
      assertNotNull(complexField0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex8);
      
      Complex complex9 = complex1.sqrt();
      assertNotNull(complex9);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertSame(complex0, complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex8);
      assertSame(complex1, complex9);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex7);
      assertSame(complex1, complex8);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex0);
      assertSame(complex9, complex3);
      assertSame(complex9, complex8);
      
      Complex complex10 = Complex.I;
      assertNotNull(complex10);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(1.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      
      Complex complex11 = complex10.ZERO.conjugate();
      assertNotNull(complex11);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(1.0, complex10.getImaginary(), 0.01);
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      
      Complex complex12 = complex11.INF.exp();
      assertNotNull(complex12);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(1.0, complex10.getImaginary(), 0.01);
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex8));
      assertTrue(complex12.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex10));
      assertTrue(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex11));
      assertTrue(complex12.equals((Object)complex0));
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      
      String string0 = complex6.INF.toString();
      assertNotNull(string0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.8883855615856606, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(2656.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex8);
      assertSame(complex1, complex9);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex7);
      assertSame(complex1, complex8);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex9);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      
      Complex complex13 = complex9.ZERO.multiply(complex10);
      assertNotNull(complex13);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(1.0, complex10.getImaginary(), 0.01);
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex3);
      assertSame(complex0, complex7);
      assertSame(complex0, complex2);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex7);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex7);
      assertSame(complex9, complex2);
      assertSame(complex9, complex0);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex3);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      
      Complex complex14 = Complex.NaN;
      assertNotNull(complex14);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex11));
      assertSame(complex14, complex2);
      assertSame(complex14, complex0);
      assertSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex7);
      assertSame(complex14, complex1);
      assertSame(complex14, complex9);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex11);
      
      Complex complex15 = complex14.ONE.atan();
      assertNotNull(complex15);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.7853981633974483, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex2));
      assertSame(complex14, complex2);
      assertSame(complex14, complex0);
      assertNotSame(complex14, complex15);
      assertSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex7);
      assertSame(complex14, complex1);
      assertSame(complex14, complex9);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex11);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex2);
      
      Complex complex16 = complex14.ZERO.conjugate();
      assertNotNull(complex16);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex1));
      assertTrue(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex11));
      assertSame(complex14, complex2);
      assertSame(complex14, complex0);
      assertNotSame(complex14, complex15);
      assertSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex16);
      assertSame(complex14, complex7);
      assertSame(complex14, complex1);
      assertSame(complex14, complex9);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex11);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex7);
      
      Complex complex17 = complex6.pow(complex14);
      assertNotNull(complex17);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.8883855615856606, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(2656.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex10));
      assertTrue(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertSame(complex0, complex2);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertSame(complex14, complex2);
      assertSame(complex14, complex0);
      assertNotSame(complex14, complex15);
      assertSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex16);
      assertSame(complex14, complex7);
      assertSame(complex14, complex1);
      assertSame(complex14, complex9);
      assertSame(complex14, complex17);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex11);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex7);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex17);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex16);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex15);
      assertSame(complex2, complex17);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertSame(complex3, complex8);
      assertSame(complex3, complex9);
      assertSame(complex3, complex14);
      assertSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex12);
      assertSame(complex3, complex17);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex4);
      assertSame(complex17, complex3);
      assertSame(complex17, complex0);
      assertSame(complex17, complex14);
      assertNotSame(complex17, complex16);
      assertSame(complex17, complex7);
      assertSame(complex17, complex1);
      assertSame(complex17, complex2);
      assertSame(complex17, complex8);
      assertSame(complex17, complex9);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex12);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex9);
      
      Complex complex18 = complex9.cosh();
      assertNotNull(complex18);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex13));
      assertTrue(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertSame(complex0, complex2);
      assertSame(complex0, complex8);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex7);
      assertSame(complex1, complex18);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex17);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex18, complex3);
      assertSame(complex18, complex17);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex15);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex13);
      assertSame(complex18, complex14);
      assertSame(complex18, complex0);
      assertSame(complex18, complex9);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex4);
      assertSame(complex18, complex7);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex2);
      assertNotSame(complex18, complex16);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex7);
      assertSame(complex9, complex14);
      assertSame(complex9, complex2);
      assertSame(complex9, complex0);
      assertSame(complex9, complex8);
      assertSame(complex9, complex18);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex12);
      assertSame(complex9, complex17);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex3);
      
      Complex complex19 = complex18.ONE.log();
      assertNotNull(complex19);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex19.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex13));
      assertTrue(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex17));
      assertTrue(complex19.equals((Object)complex13));
      assertTrue(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex18));
      assertTrue(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertSame(complex0, complex8);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex7);
      assertSame(complex1, complex18);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex19);
      assertSame(complex1, complex9);
      assertSame(complex1, complex17);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex18, complex3);
      assertNotSame(complex18, complex19);
      assertSame(complex18, complex17);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex15);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex13);
      assertSame(complex18, complex14);
      assertSame(complex18, complex0);
      assertSame(complex18, complex9);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex4);
      assertSame(complex18, complex7);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex2);
      assertNotSame(complex18, complex16);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex12);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex19);
      assertSame(complex9, complex7);
      assertSame(complex9, complex14);
      assertSame(complex9, complex2);
      assertSame(complex9, complex0);
      assertSame(complex9, complex8);
      assertSame(complex9, complex18);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex12);
      assertSame(complex9, complex17);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex3);
      
      Complex complex20 = complex19.sin();
      assertNotNull(complex20);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex19.getReal(), 0.01);
      assertFalse(complex20.isNaN());
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertEquals(0.0, complex20.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex19));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex13));
      assertTrue(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex17));
      assertTrue(complex19.equals((Object)complex13));
      assertTrue(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex18));
      assertTrue(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex12));
      assertTrue(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex4));
      assertTrue(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex7));
      assertTrue(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex14));
      assertTrue(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex20);
      assertSame(complex0, complex8);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex7);
      assertSame(complex1, complex18);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex19);
      assertSame(complex1, complex9);
      assertSame(complex1, complex17);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex18, complex3);
      assertNotSame(complex18, complex19);
      assertSame(complex18, complex17);
      assertNotSame(complex18, complex20);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex15);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex13);
      assertSame(complex18, complex14);
      assertSame(complex18, complex0);
      assertSame(complex18, complex9);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex4);
      assertSame(complex18, complex7);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex2);
      assertNotSame(complex18, complex16);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex20);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex12);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex8);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex19);
      assertSame(complex9, complex7);
      assertSame(complex9, complex14);
      assertSame(complex9, complex2);
      assertSame(complex9, complex0);
      assertNotSame(complex9, complex20);
      assertSame(complex9, complex8);
      assertSame(complex9, complex18);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex12);
      assertSame(complex9, complex17);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex3);
      
      String string1 = complex20.ONE.toString();
      assertNotNull(string1);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex19.getReal(), 0.01);
      assertFalse(complex20.isNaN());
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertEquals(0.0, complex20.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex19));
      assertFalse(complex18.equals((Object)complex20));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex13));
      assertTrue(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex17));
      assertTrue(complex19.equals((Object)complex13));
      assertTrue(complex19.equals((Object)complex20));
      assertTrue(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex18));
      assertTrue(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex12));
      assertTrue(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex4));
      assertTrue(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex7));
      assertTrue(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex14));
      assertTrue(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(string1.equals((Object)string0));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex20));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex20);
      assertSame(complex0, complex8);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex7);
      assertSame(complex1, complex18);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex19);
      assertSame(complex1, complex9);
      assertSame(complex1, complex17);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex18, complex3);
      assertNotSame(complex18, complex19);
      assertSame(complex18, complex17);
      assertNotSame(complex18, complex20);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex15);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex13);
      assertSame(complex18, complex14);
      assertSame(complex18, complex0);
      assertSame(complex18, complex9);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex4);
      assertSame(complex18, complex7);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex2);
      assertNotSame(complex18, complex16);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex20);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex12);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex8);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex19);
      assertSame(complex9, complex7);
      assertSame(complex9, complex14);
      assertSame(complex9, complex2);
      assertSame(complex9, complex0);
      assertNotSame(complex9, complex20);
      assertSame(complex9, complex8);
      assertSame(complex9, complex18);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex12);
      assertSame(complex9, complex17);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex3);
      
      double double0 = complex1.getImaginary();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex19));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex20);
      assertSame(complex0, complex8);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex7);
      
      Complex complex21 = Complex.valueOf(0.0);
      assertNotNull(complex21);
      assertFalse(complex21.isInfinite());
      assertEquals(0.0, complex21.getReal(), 0.01);
      assertFalse(complex21.isNaN());
      assertEquals(0.0, complex21.getImaginary(), 0.01);
      assertTrue(complex21.equals((Object)complex11));
      assertTrue(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex8));
      assertTrue(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex2));
      assertTrue(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex12));
      assertTrue(complex21.equals((Object)complex16));
      
      double double1 = complex4.abs();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex19));
      assertTrue(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex21));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex21));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertNotEquals(double1, double0, 0.01);
      
      Complex complex22 = complex3.log();
      assertNotNull(complex22);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex22.getReal(), 0.01);
      assertTrue(complex22.isNaN());
      assertEquals(Double.NaN, complex22.getImaginary(), 0.01);
      assertFalse(complex22.isInfinite());
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex19));
      assertTrue(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex21));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex4));
      assertTrue(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex11));
      
      Complex complex23 = complex2.multiply(17);
      assertNotNull(complex23);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex23.getImaginary(), 0.01);
      assertFalse(complex23.isInfinite());
      assertTrue(complex23.isNaN());
      assertEquals(Double.NaN, complex23.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex19));
      assertTrue(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex11));
      assertTrue(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex15));
      
      Complex complex24 = complex23.asin();
      assertNotNull(complex24);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex23.getImaginary(), 0.01);
      assertFalse(complex23.isInfinite());
      assertTrue(complex23.isNaN());
      assertEquals(Double.NaN, complex23.getReal(), 0.01);
      assertTrue(complex24.isNaN());
      assertEquals(Double.NaN, complex24.getImaginary(), 0.01);
      assertFalse(complex24.isInfinite());
      assertEquals(Double.NaN, complex24.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex19));
      assertTrue(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex11));
      assertTrue(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex15));
      assertTrue(complex24.equals((Object)complex12));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex19));
      assertFalse(complex24.equals((Object)complex4));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex6));
      assertFalse(complex24.equals((Object)complex5));
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      double double0 = complex0.abs();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      Complex complex1 = complex0.createComplex(2981.26, 2981.26);
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2981.26, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(2981.26, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.NaN.multiply(1981);
      assertNotNull(complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex1.asin();
      assertNotNull(complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2981.26, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(2981.26, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.7853981498402475, complex3.getReal(), 0.01);
      assertEquals(9.039822078841226, complex3.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex0.add(0.0);
      assertNotNull(complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex1.tanh();
      assertNotNull(complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2981.26, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(2981.26, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.tanh();
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = Complex.NaN;
      assertNotNull(complex2);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex0.multiply(complex2);
      assertNotNull(complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex2);
      
      Complex complex4 = complex2.tan();
      assertNotNull(complex4);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertSame(complex4, complex2);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex1.subtract(complex2);
      assertNotNull(complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex5);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex3);
      assertSame(complex5, complex2);
      
      List<Complex> list0 = complex1.nthRoot(1);
      assertNotNull(list0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertFalse(list0.contains(complex3));
      assertTrue(list0.contains(complex0));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      double double0 = complex0.getReal();
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, double0, 0.01);
      
      Complex complex1 = complex0.add(0.0);
      assertNotNull(complex1);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      String string0 = complex1.toString();
      assertNotNull(string0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals("(0.0, 1.0)", string0);
      
      Complex complex2 = (Complex)complex0.readResolve();
      assertNotNull(complex2);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.NaN.exp();
      assertNotNull(complex3);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex3.NaN.sqrt();
      assertNotNull(complex4);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex0.ZERO.conjugate();
      assertNotNull(complex5);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex0.ONE.sqrt();
      assertNotNull(complex6);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex6.atan();
      assertNotNull(complex7);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.7853981633974483, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      
      Complex complex8 = complex6.INF.asin();
      assertNotNull(complex8);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      
      double double1 = complex1.getArgument();
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertEquals(1.5707963267948966, double1, 0.01);
      
      Complex complex9 = complex1.createComplex(1.5707963267948966, 0.0);
      assertNotNull(complex9);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(1.5707963267948966, complex9.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      
      Complex complex10 = complex6.log();
      assertNotNull(complex10);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.INF.sin();
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      int int0 = 0;
//      try { 
        complex0.nthRoot(0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cannot compute nth root for null or negative n: 0
//         //
//         verifyException("org.apache.commons.math3.complex.Complex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Complex complex0 = new Complex(0.0, 0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.ZERO.exp();
      assertNotNull(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = complex0.equals(object0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertFalse(boolean0);
      
      Complex complex2 = complex1.ZERO.cos();
      assertNotNull(complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex1.pow(complex0);
      assertNotNull(complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex1.NaN.conjugate();
      assertNotNull(complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      
      String string0 = complex3.ZERO.toString();
      assertNotNull(string0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertEquals("(0.0, 0.0)", string0);
      
      Complex complex5 = complex3.NaN.atan();
      assertNotNull(complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex3.ZERO.sinh();
      assertNotNull(complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      
      Complex complex7 = complex0.divide(0.0);
      assertNotNull(complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      
      Complex complex8 = complex5.exp();
      assertNotNull(complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertSame(complex5, complex8);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex7);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex7);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      
      Complex complex9 = Complex.ONE;
      assertNotNull(complex9);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex3));
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      
      Complex complex10 = complex9.I.subtract(complex2);
      assertNotNull(complex10);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex10.isInfinite());
      assertEquals((-1.0), complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(1.0, complex10.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      
      Complex complex11 = complex6.divide(complex9);
      assertNotNull(complex11);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex10));
      assertTrue(complex9.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = Complex.INF;
      assertNotNull(complex1);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.INF.acos();
      assertNotNull(complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.ZERO.divide(1.0);
      assertNotNull(complex3);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex0.subtract(complex1);
      assertNotNull(complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex0.sinh();
      assertNotNull(complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex0.I.asin();
      assertNotNull(complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex5.NaN.reciprocal();
      assertNotNull(complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      
      Complex complex8 = complex7.ZERO.divide(complex0);
      assertNotNull(complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      
      double double0 = (-1.6072409939877762E-146);
      Complex complex9 = complex8.INF.log();
      assertNotNull(complex9);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      assertTrue(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.7853981633974483, complex9.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      
      Complex complex10 = complex7.cosh();
      assertNotNull(complex10);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      
      Complex complex11 = complex8.I.createComplex((-1.6072409939877762E-146), 478.69772825876964);
      assertNotNull(complex11);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(478.69772825876964, complex11.getImaginary(), 0.01);
      assertEquals((-1.6072409939877762E-146), complex11.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      
      ComplexField complexField0 = complex11.ONE.getField();
      assertNotNull(complexField0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(478.69772825876964, complex11.getImaginary(), 0.01);
      assertEquals((-1.6072409939877762E-146), complex11.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      
      Complex complex12 = complex7.ONE.acos();
      assertNotNull(complex12);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertTrue(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      
      Complex complex13 = Complex.valueOf(0.05970507860183716, (-2496.0985));
      assertNotNull(complex13);
      assertEquals(0.05970507860183716, complex13.getReal(), 0.01);
      assertEquals((-2496.0985), complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      
      Complex complex14 = complex8.NaN.log();
      assertNotNull(complex14);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex10));
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex5);
      assertSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertSame(complex14, complex10);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertSame(complex14, complex7);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex13);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex12);
      
      double double1 = complex0.getArgument();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertEquals(0.0, double1, 0.01);
      
      Complex complex15 = complex0.multiply((-1467));
      assertNotNull(complex15);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals((-1467.0), complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex9));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex9);
      
      Complex complex16 = Complex.valueOf(0.0, 2.214268207550049);
      assertNotNull(complex16);
      assertEquals(2.214268207550049, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex1));
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex1);
      
      Complex complex17 = complex0.pow(complex4);
      assertNotNull(complex17);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex15));
      assertTrue(complex17.equals((Object)complex7));
      assertTrue(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex13));
      assertTrue(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex8));
      assertTrue(complex17.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex13));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex13);
      
      double double2 = complex15.abs();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals((-1467.0), complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex9));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex9);
      assertEquals(1467.0, double2, 0.01);
      
      boolean boolean0 = complex9.isInfinite();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      assertTrue(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.7853981633974483, complex9.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex7));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex16);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex15);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex7);
      assertTrue(boolean0);
      
      boolean boolean1 = complex1.isInfinite();
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(boolean1 == boolean0);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertTrue(boolean1);
      
      Complex complex18 = complex6.multiply((double) (-1467));
      assertNotNull(complex18);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.8813735870195428, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals((-1292.9750521576693), complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(-0.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex13));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex13);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex13);
      
      Complex complex19 = complex7.subtract(Double.POSITIVE_INFINITY);
      assertNotNull(complex19);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex1));
      assertTrue(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex0));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex19);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex16);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex19);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex14);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex1);
      assertSame(complex19, complex2);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex5);
      assertSame(complex19, complex14);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex13);
      assertSame(complex19, complex10);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex11);
      assertSame(complex19, complex7);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex0);
      
      Complex complex20 = Complex.valueOf(0.0);
      assertNotNull(complex20);
      assertEquals(0.0, complex20.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex17));
      assertTrue(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex14));
      assertTrue(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex9));
      assertTrue(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex16));
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex16);
      
      Complex complex21 = complex5.tan();
      assertNotNull(complex21);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertFalse(complex21.isNaN());
      assertFalse(complex21.isInfinite());
      assertEquals(2.3945753355078105, complex21.getReal(), 0.01);
      assertEquals(0.0, complex21.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex15));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex21);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex19);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex15);
      
//      try { 
        complex0.nthRoot((-1467));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cannot compute nth root for null or negative n: -1,467
//         //
//         verifyException("org.apache.commons.math3.complex.Complex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.log();
      assertNotNull(complex1);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      
      Complex complex2 = Complex.valueOf(2.0582268590356215E-7);
      assertNotNull(complex2);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(2.0582268590356215E-7, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex0.ONE.createComplex(0.0, 0.0);
      assertNotNull(complex3);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex2.ZERO.divide((-8605.37472164));
      assertNotNull(complex4);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(2.0582268590356215E-7, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      
      ComplexField complexField0 = complex3.getField();
      assertNotNull(complexField0);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      Complex complex5 = complex1.INF.exp();
      assertNotNull(complex5);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      
      double double0 = complex3.ZERO.getArgument();
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertEquals(0.0, double0, 0.01);
      
      Complex complex6 = complex5.I.subtract(complex2);
      assertNotNull(complex6);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(2.0582268590356215E-7, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertEquals((-2.0582268590356215E-7), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      
      Complex complex7 = complex0.exp();
      assertNotNull(complex7);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex0);
      
      Complex complex8 = complex3.acos();
      assertNotNull(complex8);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      
      boolean boolean0 = complex1.isNaN();
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertTrue(boolean0);
      
      String string0 = complex8.toString();
      assertNotNull(string0);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertEquals("(1.5707963267948966, -0.0)", string0);
      
      boolean boolean1 = complex0.equals(complex7);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(boolean1 == boolean0);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-4.7989172862560625E-8), 0.0);
      assertNotNull(complex0);
      assertEquals((-4.7989172862560625E-8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ZERO.acos();
      assertNotNull(complex1);
      assertEquals((-4.7989172862560625E-8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.5707963267948966, complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      double double0 = complex0.getImaginary();
      assertEquals((-4.7989172862560625E-8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertEquals(0.0, double0, 0.01);
      
      Complex complex2 = complex0.add((-1.230153548825964E-8));
      assertNotNull(complex2);
      assertEquals((-4.7989172862560625E-8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals((-6.029070835082026E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      double double1 = complex0.getArgument();
      assertEquals((-4.7989172862560625E-8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertEquals(3.141592653589793, double1, 0.01);
      
      Complex complex3 = complex0.sin();
      assertNotNull(complex3);
      assertEquals((-4.7989172862560625E-8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-4.7989172862560605E-8), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Complex complex0 = new Complex((-5.5957016861703E-8), (-5.5957016861703E-8));
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.INF.divide(Double.POSITIVE_INFINITY);
      assertNotNull(complex1);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.acos();
      assertNotNull(complex2);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.5707963827519136, complex2.getReal(), 0.01);
      assertEquals(5.59570169202512E-8, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.ZERO.createComplex(1853.0, Double.POSITIVE_INFINITY);
      assertNotNull(complex3);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.5707963827519136, complex2.getReal(), 0.01);
      assertEquals(5.59570169202512E-8, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1853.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      ComplexField complexField0 = complex1.getField();
      assertNotNull(complexField0);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      
      Complex complex4 = complex0.exp();
      assertNotNull(complex4);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-5.595701373051533E-8), complex4.getImaginary(), 0.01);
      assertEquals(0.9999999440429832, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex0.pow(complex1);
      assertNotNull(complex5);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      
      double double0 = complex3.getImaginary();
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.5707963827519136, complex2.getReal(), 0.01);
      assertEquals(5.59570169202512E-8, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1853.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      
      boolean boolean0 = complex4.isNaN();
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-5.595701373051533E-8), complex4.getImaginary(), 0.01);
      assertEquals(0.9999999440429832, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertFalse(boolean0);
      
      Complex complex6 = complex5.sin();
      assertNotNull(complex6);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex5);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      
      Complex complex7 = complex6.ZERO.tan();
      assertNotNull(complex7);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex7);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex5);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      
      Complex complex8 = complex5.multiply(0);
      assertNotNull(complex8);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex8.INF.conjugate();
      assertNotNull(complex9);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex9.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      
      double double1 = complex0.abs();
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertEquals(7.913517215576036E-8, double1, 0.01);
      
      Complex complex10 = complex5.multiply(complex4);
      assertNotNull(complex10);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-5.595701373051533E-8), complex4.getImaginary(), 0.01);
      assertEquals(0.9999999440429832, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertSame(complex5, complex10);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertSame(complex10, complex5);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      
      Complex complex11 = complex8.tan();
      assertNotNull(complex11);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex5);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertSame(complex5, complex10);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex11);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex11);
      assertNotSame(complex8, complex3);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex10);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertSame(complex11, complex8);
      
      boolean boolean1 = complex1.isInfinite();
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(boolean1 == boolean0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex5);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertFalse(boolean1);
      
      Complex complex12 = complex1.multiply((-1));
      assertNotNull(complex12);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertSame(complex12, complex11);
      assertSame(complex12, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex10);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex5);
      assertSame(complex1, complex11);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      
      Complex complex13 = complex5.reciprocal();
      assertNotNull(complex13);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertSame(complex1, complex13);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertSame(complex13, complex12);
      assertSame(complex13, complex5);
      assertNotSame(complex13, complex7);
      assertSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertSame(complex13, complex8);
      assertNotSame(complex13, complex4);
      assertSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertSame(complex5, complex8);
      assertSame(complex5, complex1);
      assertSame(complex5, complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex11);
      assertSame(complex5, complex12);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex6);
      
      Complex complex14 = complex4.add((-5.5957016861703E-8));
      assertNotNull(complex14);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals((-5.595701373051533E-8), complex14.getImaginary(), 0.01);
      assertEquals(0.9999998880859663, complex14.getReal(), 0.01);
      assertEquals((-5.595701373051533E-8), complex4.getImaginary(), 0.01);
      assertEquals(0.9999999440429832, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex6));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex6);
      
      Complex complex15 = complex2.sinh();
      assertNotNull(complex15);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.5707963827519136, complex2.getReal(), 0.01);
      assertEquals(5.59570169202512E-8, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex15.isNaN());
      assertEquals(2.3012990427134374, complex15.getReal(), 0.01);
      assertEquals(1.4040614979199812E-7, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex12);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex5);
      
      Complex complex16 = complex4.log();
      assertNotNull(complex16);
      assertFalse(complex0.isNaN());
      assertEquals((-5.5957016861703E-8), complex0.getReal(), 0.01);
      assertEquals((-5.5957016861703E-8), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-5.5957016861703E-8), complex16.getImaginary(), 0.01);
      assertEquals((-5.595701680922889E-8), complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals((-5.595701373051533E-8), complex4.getImaginary(), 0.01);
      assertEquals(0.9999999440429832, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex6));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex14);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex6);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Complex complex0 = new Complex((-777.635319758485));
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      
      Complex complex1 = Complex.INF;
      assertNotNull(complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.divide(complex1);
      assertNotNull(complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex1.log();
      assertNotNull(complex3);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex3.divide(complex1);
      assertNotNull(complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      
      double double0 = complex4.getArgument();
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertEquals(Double.NaN, double0, 0.01);
      
      Complex complex5 = Complex.valueOf(0.0);
      assertNotNull(complex5);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      
      Complex complex6 = Complex.INF;
      assertNotNull(complex6);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      
      Complex complex7 = complex0.ZERO.acos();
      assertNotNull(complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      
      Complex complex8 = complex6.cos();
      assertNotNull(complex8);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      
      Complex complex9 = complex0.atan();
      assertNotNull(complex9);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals((-1.5695103776830575), complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      
      Complex complex10 = complex1.pow(complex6);
      assertNotNull(complex10);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      
      Complex complex11 = Complex.valueOf((-1990.53));
      assertNotNull(complex11);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals((-1990.53), complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex1);
      
      Complex complex12 = complex11.I.pow(complex10);
      assertNotNull(complex12);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals((-1990.53), complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex10));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertTrue(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      
      Complex complex13 = complex0.log();
      assertNotNull(complex13);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(3.141592653589793, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(6.656257673614814, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex8));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex8);
      
      Complex complex14 = complex2.tan();
      assertNotNull(complex14);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex2);
      
      double double1 = complex13.NaN.getArgument();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(3.141592653589793, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(6.656257673614814, complex13.getReal(), 0.01);
      assertEquals(double1, double0, 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex8));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex8);
      assertEquals(Double.NaN, double1, 0.01);
      
      boolean boolean0 = complex3.isNaN();
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertFalse(boolean0);
      
      Complex complex15 = complex2.tanh();
      assertNotNull(complex15);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex11));
      assertTrue(complex15.equals((Object)complex2));
      assertTrue(complex15.equals((Object)complex14));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex2);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      
      Complex complex16 = complex8.multiply((-395));
      assertNotNull(complex16);
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertTrue(complex16.isNaN());
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex0);
      assertSame(complex16, complex12);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex14);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex1);
      
      double double2 = complex15.getImaginary();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex11));
      assertTrue(complex15.equals((Object)complex2));
      assertTrue(complex15.equals((Object)complex14));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex2);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertEquals(0.0, double2, 0.01);
      
      Complex complex17 = complex13.asin();
      assertNotNull(complex17);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(1.1262244107223192, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(2.6863335342099655, complex17.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(3.141592653589793, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(6.656257673614814, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex8));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex8);
      
      boolean boolean1 = complex9.equals(complex11);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals((-1.5695103776830575), complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals((-1990.53), complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(boolean1 == boolean0);
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex2));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex2);
      assertFalse(boolean1);
      
      Complex complex18 = complex2.cosh();
      assertNotNull(complex18);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals(1.0, complex18.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex17));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex7));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex7);
      
      double double3 = complex6.getArgument();
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex14);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertEquals(0.7853981633974483, double3, 0.01);
      
      Complex complex19 = complex13.tanh();
      assertNotNull(complex19);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-777.635319758485), complex0.getReal(), 0.01);
      assertEquals((-8.100604914716712E-22), complex19.getImaginary(), 0.01);
      assertEquals(0.9999966926715865, complex19.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertFalse(complex19.isNaN());
      assertFalse(complex13.isNaN());
      assertEquals(3.141592653589793, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(6.656257673614814, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex8));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex17);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex19);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex18);
      assertNotSame(complex13, complex8);
      
      Complex complex20 = complex1.negate();
      assertNotNull(complex20);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex20.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex20.getReal(), 0.01);
      assertFalse(complex20.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex20.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex7));
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex20);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex7);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.negate();
      Complex complex2 = complex1.ONE.pow(complex0);
      Complex complex3 = complex1.ZERO.divide(complex0);
      Complex complex4 = complex1.subtract(complex0);
      Complex complex5 = complex3.I.tanh();
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.557407724654902, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex4.sqrt();
      complex6.ZERO.multiply(complex0);
      Complex complex7 = complex4.I.sqrt1z();
      assertEquals(1.4142135623730951, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      complex1.equals(complex4);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      
      Complex complex8 = complex1.cos();
      Complex complex9 = complex8.INF.pow(complex1);
      Complex complex10 = complex8.NaN.conjugate();
      Complex complex11 = complex3.atan();
      assertSame(complex3, complex10);
      
      complex9.getField();
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertTrue(complex9.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex2));
      
      double double0 = complex1.getReal();
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      Complex complex1 = Complex.ZERO;
      Complex complex2 = complex0.INF.add(complex1);
      Complex complex3 = complex2.INF.conjugate();
      complex0.NaN.getArgument();
      Complex complex4 = Complex.valueOf(255.0);
      complex4.ONE.getArgument();
      Complex complex5 = complex0.NaN.add(0.0);
      Complex complex6 = complex0.add(complex4);
      Complex complex7 = complex4.multiply((-2162));
      Complex complex8 = complex7.NaN.log();
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertEquals((-551310.0), complex7.getReal(), 0.01);
      
      complex6.hashCode();
      assertSame(complex6, complex8);
      
      complex2.getArgument();
      Complex complex9 = complex3.subtract(255.0);
      Complex complex10 = complex3.subtract(complex4);
      assertTrue(complex10.equals((Object)complex9));
      
      double double0 = complex3.getImaginary();
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
      
      Complex complex11 = complex3.multiply((double) (-2162));
      assertTrue(complex3.isInfinite());
      assertTrue(complex11.equals((Object)complex2));
      
      Complex complex12 = Complex.valueOf((-1.0), Double.NaN);
      assertSame(complex12, complex5);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Complex complex0 = new Complex((-9.537874867759656E-8));
      complex0.getField();
      Complex complex1 = complex0.ONE.sqrt();
      complex1.ZERO.abs();
      Complex complex2 = complex0.asin();
      Complex complex3 = complex2.ZERO.subtract((-9.537874867759656E-8));
      Complex complex4 = Complex.valueOf((-9.537874867759656E-8), 20.0);
      assertFalse(complex4.isNaN());
      
      Complex complex5 = complex2.I.log();
      assertFalse(complex5.isInfinite());
      
      complex2.hashCode();
      Complex complex6 = complex0.subtract(complex2);
      assertEquals((-1.1102230246251565E-16), complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex3.sqrt();
      Complex complex8 = complex7.pow((-9.537874867759656E-8));
      assertEquals(1.000000770918588, complex8.getReal(), 0.01);
      assertEquals((-9.537874867759671E-8), complex2.getReal(), 0.01);
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.NaN.acos();
      complex1.INF.getField();
      Complex complex2 = complex0.INF.subtract((-2128.97715));
      complex1.ZERO.getArgument();
      Complex complex3 = complex0.log();
      complex0.INF.abs();
      Complex complex4 = complex3.I.pow(complex0);
      complex4.I.multiply(complex2);
      assertEquals(6.123233995736766E-17, complex4.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = Complex.valueOf((-2128.97715), 0.0);
      complex1.reciprocal();
      Complex complex6 = Complex.INF;
      Complex complex7 = complex3.pow(complex6);
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.isInfinite());
      
      Complex complex8 = complex2.asin();
      Complex complex9 = complex1.reciprocal();
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      
      Complex complex10 = complex0.multiply(2126.1776360611);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(2126.1776360611, complex10.getReal(), 0.01);
  }
}
