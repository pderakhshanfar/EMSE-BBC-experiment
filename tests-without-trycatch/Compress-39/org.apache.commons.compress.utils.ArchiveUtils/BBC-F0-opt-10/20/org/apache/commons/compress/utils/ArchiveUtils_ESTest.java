/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 17:01:41 GMT 2021
 */

package org.apache.commons.compress.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.archivers.ArchiveEntry;
import org.apache.commons.compress.archivers.ar.ArArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.utils.ArchiveUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArchiveUtils_ESTest extends ArchiveUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-5);
      boolean boolean0 = ArchiveUtils.isArrayZero(byteArray0, 1293);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = ArchiveUtils.isArrayZero(byteArray0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = new byte[2];
      boolean boolean0 = ArchiveUtils.isEqualWithNull(byteArray0, 0, 1, byteArray1, (byte)7, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[0];
      boolean boolean0 = ArchiveUtils.isEqual(byteArray1, (-335), (int) (byte)0, byteArray0, (-123), 2012);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      byte[] byteArray1 = new byte[2];
      // Undeclared exception!
//      try { 
        ArchiveUtils.isEqual(byteArray0, (int) (byte) (-6), (int) (byte) (-38), byteArray1, (int) (byte)38, 207, true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
//      try { 
        ArchiveUtils.isEqual(byteArray0, (int) (byte)0, (int) (byte)7, byteArray0, (-128), (int) (byte)0, true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)84;
      boolean boolean0 = ArchiveUtils.isEqual(byteArray0, byteArray1, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      String string0 = ArchiveUtils.toAsciiString(byteArray0, (int) (byte)0, (int) (byte)7);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      String string0 = ArchiveUtils.toAsciiString(byteArray0, (int) (byte)0, (int) (byte)0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = ArchiveUtils.toAsciiString(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = ArchiveUtils.toAsciiBytes("");
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = ArchiveUtils.sanitize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      boolean boolean0 = ArchiveUtils.matchAsciiBuffer("", byteArray0, 0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = ArchiveUtils.matchAsciiBuffer("", byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-128);
      boolean boolean0 = ArchiveUtils.isEqualWithNull(byteArray0, 5, (byte) (-111), byteArray0, (byte)113, 32);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)123;
      byte[] byteArray1 = new byte[0];
      boolean boolean0 = ArchiveUtils.isEqual(byteArray0, byteArray1, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = new byte[2];
      byteArray1[1] = (byte)7;
      boolean boolean0 = ArchiveUtils.isEqual(byteArray1, byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      boolean boolean0 = ArchiveUtils.isEqual(byteArray0, (int) (byte)0, (int) (byte) (-1), byteArray0, 1262, (int) (byte) (-1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
//      try { 
        ArchiveUtils.toString((ArchiveEntry) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
//      try { 
        ArchiveUtils.toAsciiString(byteArray0, 7, 7);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
//      try { 
        ArchiveUtils.toAsciiString((byte[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
//      try { 
        ArchiveUtils.toAsciiBytes((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
//      try { 
        ArchiveUtils.sanitize((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
//      try { 
        ArchiveUtils.matchAsciiBuffer((String) null, byteArray0, (int) (byte)3, 2360);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
//      try { 
        ArchiveUtils.matchAsciiBuffer("Th*\"{V", byteArray0, (-378), 63);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -378
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
//      try { 
        ArchiveUtils.matchAsciiBuffer((String) null, byteArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
//      try { 
        ArchiveUtils.isEqualWithNull((byte[]) null, 0, (-1522), (byte[]) null, 0, (-15));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
//      try { 
        ArchiveUtils.isEqualWithNull(byteArray0, (byte)69, 0, byteArray0, (byte)69, (byte)69);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 69
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
//      try { 
        ArchiveUtils.isEqual((byte[]) null, (byte[]) null, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
//      try { 
        ArchiveUtils.isEqual((byte[]) null, byteArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
//      try { 
        ArchiveUtils.isEqual((byte[]) null, 302, 302, (byte[]) null, 302, 302, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
//      try { 
        ArchiveUtils.isEqual((byte[]) null, 302, 302, (byte[]) null, 302, 302);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
//      try { 
        ArchiveUtils.isEqual(byteArray0, (-779), 63, byteArray0, (int) (byte)0, (int) (byte)30);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -779
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
//      try { 
        ArchiveUtils.isArrayZero((byte[]) null, 4);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      boolean boolean0 = ArchiveUtils.isEqual(byteArray0, (int) (byte)0, 1, byteArray0, (int) (byte)0, (int) (byte)0, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      boolean boolean0 = ArchiveUtils.isEqual((byte[]) null, 1731, 735, (byte[]) null, 1137, 0, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte[] byteArray1 = new byte[8];
      byteArray1[1] = (byte)45;
      boolean boolean0 = ArchiveUtils.isEqual(byteArray1, (int) (byte)0, 4347, byteArray0, (int) (byte)0, 1059, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      boolean boolean0 = ArchiveUtils.isEqual(byteArray0, 1, 1, byteArray0, 1, 1, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      boolean boolean0 = ArchiveUtils.matchAsciiBuffer("", byteArray0, (int) (byte) (-38), (int) (byte) (-38));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = ArchiveUtils.sanitize("&\u0000v\uFFFD");
      assertEquals("&?v?", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)100;
      boolean boolean0 = ArchiveUtils.isArrayZero(byteArray0, 1293);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
//      try { 
        ArchiveUtils.isArrayZero(byteArray0, 1293);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 7
//         //
//         verifyException("org.apache.commons.compress.utils.ArchiveUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      boolean boolean0 = ArchiveUtils.isArrayZero(byteArray0, (-2282));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)69;
      boolean boolean0 = ArchiveUtils.isEqual(byteArray0, (-3817), (int) (byte)0, byteArray0, (int) (byte)0, 3140, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte) (-116);
      boolean boolean0 = ArchiveUtils.isEqual(byteArray0, 7, 17, byteArray0, (-2821), (int) (byte)0, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      boolean boolean0 = ArchiveUtils.isEqual(byteArray0, 2, (int) (byte)0, byteArray0, (int) (byte)0, 2, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, "i]}j\"TbS");
      String string0 = ArchiveUtils.toString((ArchiveEntry) tarArchiveEntry0);
      assertEquals("d       0 i]}j\"TbS/", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry("u4~|CP1$!:+", 9151314442816847872L);
      String string0 = ArchiveUtils.toString((ArchiveEntry) arArchiveEntry0);
      assertEquals("- 9151314442816847872 u4~|CP1$!:+", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = ArchiveUtils.toAsciiBytes("org.apache.commons.compress.utils.ArchiveUtils");
      assertEquals(46, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      String string0 = ArchiveUtils.toAsciiString(byteArray0);
      assertEquals("\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      boolean boolean0 = ArchiveUtils.isEqual(byteArray0, byteArray0, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      boolean boolean0 = ArchiveUtils.isEqual(byteArray0, byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      boolean boolean0 = ArchiveUtils.matchAsciiBuffer("&\uFFFDvv\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
//      try { 
        ArchiveUtils.toAsciiString((byte[]) null, 1, 1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }
}
