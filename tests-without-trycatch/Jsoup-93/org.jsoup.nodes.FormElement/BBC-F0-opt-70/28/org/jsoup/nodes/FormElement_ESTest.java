/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 16:50:49 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("32cS\"znh!VX{AP6");
      FormElement formElement0 = new FormElement(tag0, "32cS\"znh!VX{AP6", (Attributes) null);
      Node[] nodeArray0 = new Node[4];
      Document document0 = Document.createShell("32cS\"znh!VX{AP6");
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) formElement0;
      nodeArray0[2] = (Node) formElement0;
      nodeArray0[3] = (Node) formElement0;
      formElement0.addChildren(nodeArray0);
      formElement0.removeChild(nodeArray0[1]);
      assertEquals("32cS\"znh!VX{AP6", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("ON");
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("keygen");
      FormElement formElement0 = new FormElement(tag0, "j:;t_,%`[6y!6", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      Elements elements0 = formElement1.elements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("GQDJUZ*QNF{%SP5");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "GQDJUZ*QNF{%SP5", attributes0);
      formElement0.setSiblingIndex((-787));
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertSame(formElement0, formElement1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("table", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "+4Y@", attributes0);
      Document document0 = new Document("UTF-");
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals(0, formElement1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tag tag0 = Tag.valueOf("32cS\"znh!VX{AP6");
      FormElement formElement0 = new FormElement(tag0, "32cS\"znh!VX{AP6", (Attributes) null);
      Node[] nodeArray0 = new Node[4];
      Document document0 = Document.createShell("32cS\"znh!VX{AP6");
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) formElement0;
      nodeArray0[2] = (Node) formElement0;
      nodeArray0[3] = (Node) formElement0;
      formElement0.addChildren(nodeArray0);
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals("32cS\"znh!VX{AP6", formElement1.tagName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tag tag0 = Tag.valueOf("oGC+l$0fFXqD");
      CDataNode cDataNode0 = new CDataNode("POST");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("method", "method");
      attributes1.vals = null;
      FormElement formElement0 = new FormElement(tag0, "ogc+l$0ffxqd", attributes1);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode(";&vD");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.put("method", ";&vD");
      Tag tag0 = Tag.valueOf("eZ>XI8*65-5)OVA");
      Attributes attributes1 = attributes0.put("i|~", "vq1K9C3N!r<YGTtYE92");
      FormElement formElement0 = new FormElement(tag0, "eZ>XI8*65-5)OVA", attributes1);
      String[] stringArray0 = new String[1];
      attributes1.vals = stringArray0;
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("Kqv,:Q|[/%~h!", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("type", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      CDataNode cDataNode0 = new CDataNode("");
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(node0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("table", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "+4Y@", attributes0);
      Document document0 = new Document("UTF-");
      // Undeclared exception!
//      try { 
        formElement0.removeChild(document0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Must be true
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("type", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      CDataNode cDataNode0 = new CDataNode("");
      CDataNode cDataNode1 = (CDataNode)cDataNode0.doClone(formElement0);
      cDataNode1.setSiblingIndex((-1434875528));
      // Undeclared exception!
//      try { 
        formElement0.removeChild(cDataNode1);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("name", "name");
      FormElement formElement0 = new FormElement(tag0, "select", attributes1);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.appendTo(formElement0);
      // Undeclared exception!
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("Charset must not be null", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
//      try { 
        formElement1.formData();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.FormElement", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "select");
      FormElement formElement0 = new FormElement(tag0, "select", attributes1);
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      formElement0.addElement(formElement0);
      // Undeclared exception!
//      try { 
        formElement0.formData();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("type", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("type");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = null;
//      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("TYPE", "TYPE", attributes0);
      attributes0.put(attribute0);
      attributes0.put("name", "TYPE");
      Tag tag0 = Tag.valueOf("keygen");
      FormElement formElement0 = new FormElement(tag0, "name", attributes0);
      attribute0.setValue("radio");
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement0.val("name");
      formElement1.attr("CHECKED", ".>c]7d;c'JaDU@ac^");
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("TYPE", "TYPE", attributes0);
      attributes0.put(attribute0);
      attributes0.put("name", "TYPE");
      Tag tag0 = Tag.valueOf("keygen");
      FormElement formElement0 = new FormElement(tag0, "name", attributes0);
      attribute0.setValue("radio");
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.attr("CHECKED", ".>c]7d;c'JaDU@ac^");
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("TYPE", "TYPE", attributes0);
      attributes0.add("TYPE", "name");
      attributes0.put("name", "TYPE");
      Tag tag0 = Tag.valueOf("keygen");
      FormElement formElement0 = new FormElement(tag0, "name", attributes0);
      attribute0.setValue("radio");
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("name", "name");
      attributes0.put(attribute0);
      Tag tag0 = Tag.valueOf("keygen");
      FormElement formElement0 = new FormElement(tag0, "name", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.attr("TYPE", "checkbox");
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      attributes0.add("name", "FFOR");
      FormElement formElement0 = new FormElement(tag0, "ON", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("name", "TYPE");
      Tag tag0 = Tag.valueOf("keygen");
      FormElement formElement0 = new FormElement(tag0, "name", attributes0);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("GQDJUZ*QNF{%SP5");
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag1 = Tag.valueOf("select", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("GQDJUZ*QNF{%SP5");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("disabled", "-]B");
      FormElement formElement0 = new FormElement(tag0, "-]B", attributes1);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag1, "jBP@sxzb", attributes0);
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tag tag0 = Tag.valueOf("GQDJUZ*QNF{%SP5");
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag1 = Tag.valueOf("select", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("GQDJUZ*QNF{%SP5");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "-]B", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag1, "3;!C", attributes0);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("n");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("method", "POST");
      Tag tag0 = Tag.valueOf("1C){]Gfe\")\"o");
      FormElement formElement0 = new FormElement(tag0, "nohref", attributes1);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Malformed URL: nohref
//         //
//         verifyException("org.jsoup.helper.HttpConnection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Tag tag0 = Tag.valueOf("GQDJUZ*QNF{%SP5");
      CDataNode cDataNode0 = new CDataNode("Header name must not be empty");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      attributes0.put("action", "");
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Tag tag0 = Tag.valueOf("32cS\"znh!VX{AP6");
      FormElement formElement0 = new FormElement(tag0, "32cS\"znh!VX{AP6", (Attributes) null);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Tag tag0 = Tag.valueOf("32cS\"znh!VX{AP6");
      FormElement formElement0 = new FormElement(tag0, "32cS\"znh!VX{AP6", (Attributes) null);
      Document document0 = Document.createShell("32cS\"znh!VX{AP6");
      formElement0.addElement(document0);
      formElement0.formData();
  }
}
