/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 19:43:16 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf(":S", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "checkbox", attributes0);
      Element element0 = formElement0.appendElement("S+#TU ',R4W-2,L?");
      formElement0.removeChild(element0);
      assertEquals(":S", formElement0.nodeName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tag tag0 = Tag.valueOf("http:/");
      FormElement formElement0 = new FormElement(tag0, "http:/", (Attributes) null);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf("O?aZk.9LV3g{gAs");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "bdi", attributes0);
      Document document0 = new Document("POST");
      FormElement formElement1 = formElement0.addElement(document0);
      Elements elements0 = formElement1.elements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("9$Qgi");
      FormElement formElement0 = new FormElement(tag0, "9$Qgi", (Attributes) null);
      Document document0 = Document.createShell("9$Qgi");
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.siblingIndex = (-2444);
      FormElement formElement2 = formElement0.addElement(document0);
      assertEquals("9$qgi", formElement2.normalName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("video", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      Document document0 = Document.createShell("a&9uNGr?TH)MVQ~K!");
      FormElement formElement1 = formElement0.addElement(document0);
      assertSame(formElement1, formElement0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tag tag0 = Tag.valueOf("9$Qgi");
      FormElement formElement0 = new FormElement(tag0, "9$Qgi", (Attributes) null);
      Document document0 = Document.createShell("9$Qgi");
      Element element0 = document0.appendChild(formElement0);
      FormElement formElement1 = formElement0.addElement(element0);
      assertEquals(1, formElement1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("method", parseSettings0);
      CDataNode cDataNode0 = new CDataNode(" ");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, ":matches(%s)", attributes0);
      formElement0.append("8RtO,9IrI|s");
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals(0, formElement1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("h$n/;(Se", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("h$n/;(Se", false);
      Attribute attribute0 = new Attribute("h$n/;(Se", "on");
      Attributes attributes2 = attributes1.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "h$n/;(Se", attributes2);
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf("method");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("method", "gLSv");
      attributes0.put(attribute0);
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "fe)", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("2xvfb3oEY", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("wv12%:&;N3\"|");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("method", parseSettings0);
      CDataNode cDataNode0 = new CDataNode(" ");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, ":matches(%s)", attributes0);
      formElement0.append("8RtO,9IrI|s");
      formElement0.reparentChild(formElement0);
      Node node0 = formElement0.unwrap();
      // Undeclared exception!
//      try { 
        formElement0.removeChild(node0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tag tag0 = Tag.valueOf("K6");
      CDataNode cDataNode0 = new CDataNode("K6");
      Attributes attributes0 = cDataNode0.attributes();
      cDataNode0.siblingIndex = (-2291);
      FormElement formElement0 = new FormElement(tag0, "13X{xI1&|`OY8m_xWQ", attributes0);
      cDataNode0.parentNode = (Node) formElement0;
      // Undeclared exception!
//      try { 
        formElement0.removeChild(cDataNode0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      FormElement formElement0 = new FormElement(tag0, "select", attributes1);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement0.prependChild(formElement1);
      // Undeclared exception!
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("9$$gi");
      FormElement formElement0 = new FormElement(tag0, "9$$gi", (Attributes) null);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
//      try { 
        formElement1.formData();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.FormElement", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      FormElement formElement0 = new FormElement(tag0, "select", attributes1);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      formElement0.addElement(formElement0);
      // Undeclared exception!
//      try { 
        formElement0.formData();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = null;
//      try {
        formElement0 = new FormElement((Tag) null, "", attributes0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      attributes0.put("name", "k");
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("disabled", "select", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "select", attributes1);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tag tag0 = Tag.valueOf("method");
      FormElement formElement0 = new FormElement(tag0, "select", (Attributes) null);
      Element element0 = new Element("select");
      formElement0.addElement(element0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tag tag0 = Tag.valueOf("9$Qgi");
      FormElement formElement0 = new FormElement(tag0, "9$Qgi", (Attributes) null);
      Document document0 = Document.createShell("9$Qgi");
      FormElement formElement1 = formElement0.addElement(document0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("method");
      Attributes attributes0 = new Attributes();
      attributes0.put("method", "POST");
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Malformed URL: POST
//         //
//         verifyException("org.jsoup.helper.HttpConnection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("action");
      CDataNode cDataNode0 = new CDataNode("");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.put("action", "");
      FormElement formElement0 = new FormElement(tag0, "t-vd']DnHTz<c", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("O?aZk.9LV3g{gAs");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "bdi", attributes0);
      Elements elements0 = formElement0.elements();
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("video", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      Document document0 = Document.createShell("a&9uNGr?TH)MVQ~K!");
      // Undeclared exception!
//      try { 
        formElement0.removeChild(document0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Must be true
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }
}
