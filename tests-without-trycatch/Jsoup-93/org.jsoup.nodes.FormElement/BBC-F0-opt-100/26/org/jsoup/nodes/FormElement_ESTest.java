/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 16:41:34 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("mXZ+");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "method", attributes0);
      Element element0 = formElement0.appendElement(">T>Fk.Gu(Wl");
      formElement0.removeChild(element0);
      assertEquals("mxz+", formElement0.normalName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tag tag0 = Tag.valueOf("object");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.select.Evaluator$IsFirstChild");
      CDataNode cDataNode0 = new CDataNode("");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "]3X&4L)u2:$o", attributes0);
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("]3X&4L)u2:$o");
      Document document0 = parser0.parseInput((Reader) stringReader0, "]3X&4L)u2:$o");
      formElement0.addElement(document0);
      Elements elements0 = formElement0.elements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("?]WU");
      FormElement formElement0 = new FormElement(tag0, "?]WU", (Attributes) null);
      formElement0.setSiblingIndex((-1));
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals("?]WU", formElement1.nodeName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("nav", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("nav");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "radio", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      assertSame(formElement0, formElement1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      formElement0.prependElement("option");
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals("select", formElement1.normalName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tag tag0 = Tag.valueOf("C)'unaIahH7.,MhRW");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      FormElement formElement0 = new FormElement(tag0, "C)'unaIahH7.,MhRW", attributes1);
      Attribute attribute0 = new Attribute(".", "C)'unaIahH7.,MhRW");
      attributes1.put(attribute0);
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("method", "pUTM");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      Tag tag0 = Tag.valueOf("pUTM", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "method", attributes1);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("4$g!Th\"w,T", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "4$g!Th\"w,T", (Attributes) null);
      // Undeclared exception!
//      try { 
        formElement0.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tag tag0 = Tag.valueOf(";WU");
      FormElement formElement0 = new FormElement(tag0, ";WU", (Attributes) null);
      CDataNode cDataNode0 = new CDataNode(";WU");
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(node0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("nav", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("radio");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "nav", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(cDataNode0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Must be true
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("radio", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      DocumentType documentType0 = new DocumentType("1i~CFK?J*", "radio", "PT", "+!4h-mM[kLMSp%K5", "select");
      documentType0.setSiblingIndex((-1882322201));
      documentType0.setParentNode(formElement0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(documentType0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes0);
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) formElement0;
      nodeArray0[1] = (Node) pseudoTextElement0;
      nodeArray0[2] = (Node) formElement0;
      nodeArray0[3] = (Node) formElement0;
      CDataNode cDataNode0 = new CDataNode("select");
      nodeArray0[4] = (Node) cDataNode0;
      nodeArray0[5] = (Node) formElement0;
      pseudoTextElement0.addChildren(nodeArray0);
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      attributes0.put("NAME", "NAME");
      // Undeclared exception!
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("seamless");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "Q<Y?|KE}*-OrA,~?1UU", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
//      try { 
        formElement1.formData();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.FormElement", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.add("method", "pUTM");
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "ID4`&a5d!yU)I7C`E-m", attributes0);
      formElement0.addElement(formElement0);
      // Undeclared exception!
//      try { 
        formElement0.formData();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tag tag0 = Tag.valueOf("cN/y4$98c],]");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = null;
//      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tag tag0 = Tag.valueOf("object");
      Attributes attributes0 = new Attributes();
      attributes0.add("type", "radio");
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      Attributes attributes1 = attributes0.put("name", "oethR");
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement0.val("fItX\"0;v*9'H");
      attributes1.put("checked", "object");
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tag tag0 = Tag.valueOf("object");
      Attributes attributes0 = new Attributes();
      attributes0.add("type", "radio");
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      Attributes attributes1 = attributes0.put("name", "oethR");
      FormElement formElement1 = formElement0.addElement(formElement0);
      attributes1.put("checked", "l0");
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tag tag0 = Tag.valueOf("object");
      Attributes attributes0 = new Attributes();
      attributes0.add("type", "radio");
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      attributes0.put("name", "oethR");
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tag tag0 = Tag.valueOf(" object");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("type", "checkbox");
      FormElement formElement0 = new FormElement(tag0, " object", attributes0);
      attributes1.put("name", " object");
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement0.prependElement("option");
      attributes0.add("name", "name");
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("object");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      attributes0.put("name", "oethR");
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("MXZ+");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "on", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      Attribute attribute0 = new Attribute("name", "name", attributes0);
      attributes0.put(attribute0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tag tag0 = Tag.valueOf("9eljct");
      Tag tag1 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("9eljct");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "3r{FQ+3A\">Bw$", attributes0);
      Attributes attributes1 = attributes0.add("disabled", "POST");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag1, "select", attributes1);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("MXZ+");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "on", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "jFJv#a8P@zCS%I", attributes0);
      attributes0.put("method", "POST");
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Malformed URL: jFJv#a8P@zCS%I
//         //
//         verifyException("org.jsoup.helper.HttpConnection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Tag tag0 = Tag.valueOf("?9WU");
      CDataNode cDataNode0 = new CDataNode("action");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("action", "select");
      FormElement formElement0 = new FormElement(tag0, "?9WU", attributes1);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      CDataNode cDataNode0 = new CDataNode("POST");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("POST", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "nak", attributes0);
      Elements elements0 = formElement0.elements();
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Tag tag0 = Tag.valueOf("method");
      CDataNode cDataNode0 = new CDataNode("MXZ+");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "on", attributes0);
      Document document0 = new Document("Array must not contain any null objects");
      formElement0.addElement(document0);
      formElement0.formData();
  }
}
