/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 16:39:58 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("id", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("id");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "id", attributes0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) cDataNode0;
      nodeArray0[1] = (Node) formElement0;
      formElement0.insertChildren(0, nodeArray0);
      formElement0.removeChild(cDataNode0);
      assertEquals(0, formElement0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("http:/");
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf("method");
      FormElement formElement0 = new FormElement(tag0, "method", (Attributes) null);
      formElement0.addElement(formElement0);
      Elements elements0 = formElement0.elements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("slect");
      FormElement formElement0 = new FormElement(tag0, "slect", (Attributes) null);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "slect", (Attributes) null);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) formElement0;
      DataNode dataNode0 = new DataNode("Rj^Gir$");
      nodeArray0[1] = (Node) dataNode0;
      nodeArray0[2] = (Node) formElement0;
      nodeArray0[3] = (Node) formElement0;
      nodeArray0[4] = (Node) pseudoTextElement0;
      nodeArray0[5] = (Node) pseudoTextElement0;
      formElement0.addChildren(nodeArray0);
      Document document0 = Parser.parse("LTM[LN'O", "LTM[LN'O");
      formElement0.addElement(document0);
      assertTrue(formElement0.hasParent());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", (Attributes) null);
      formElement0.setSiblingIndex((-1911246630));
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", (Attributes) null);
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      assertEquals("select", formElement1.normalName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tag tag0 = Tag.valueOf("div");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "div", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "POST", attributes0);
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      assertSame(formElement0, formElement1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("select");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "p", attributes0);
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tag tag0 = Tag.valueOf("slect");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "nwV", attributes0);
      Attributes attributes1 = attributes0.put("method", "http");
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf("2ms?boGK/");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "async", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("0B>CAb'+f", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "0B>CAb'+f", (Attributes) null);
      TextNode textNode0 = new TextNode("SELECT", (String) null);
      textNode0.setParentNode(formElement0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(textNode0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      attributes0.put("name", "select");
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.appendChild(formElement0);
      // Undeclared exception!
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("@1.g*e(Y ryc{Ujja!Q", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "@1.g*e(Y ryc{Ujja!Q", attributes0);
      formElement0.addElement((Element) null);
      // Undeclared exception!
//      try { 
        formElement0.formData();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.FormElement", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", (Attributes) null);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attribute attribute0 = new Attribute("name", "`@E(Z<=", attributes0);
      attributes1.put(attribute0);
      String[] stringArray0 = new String[0];
      attributes1.vals = stringArray0;
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes1);
      formElement0.addElement(pseudoTextElement0);
      // Undeclared exception!
//      try { 
        formElement0.formData();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FormElement formElement0 = null;
//      try {
        formElement0 = new FormElement((Tag) null, "D_+~", (Attributes) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "b)", attributes0);
      Attributes attributes1 = attributes0.put("name", "`g**:#n5#V5|Y");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "", attributes1);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("disabled", "select");
      attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "", attributes0);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tag tag0 = Tag.valueOf("2ms?boGK/");
      Attributes attributes0 = new Attributes();
      Tag tag1 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "2ms?boGK/", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag1, "method", attributes0);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tag tag0 = Tag.valueOf("2ms?boGK/");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "2ms?boGK/", attributes0);
      attributes0.put("method", "POST");
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Malformed URL: 2ms?boGK/
//         //
//         verifyException("org.jsoup.helper.HttpConnection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tag tag0 = Tag.valueOf("div");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("action", "(rEnNp");
      FormElement formElement0 = new FormElement(tag0, "div", attributes1);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("id", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("id");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "id", attributes0);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("2ms?boGK/");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "2ms?boGK/", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "method", attributes0);
      formElement0.addElement(pseudoTextElement0);
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("id", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("id");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "id", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(cDataNode0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Must be true
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }
}
