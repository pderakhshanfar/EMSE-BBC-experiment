/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 19:33:24 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("bh");
      CDataNode cDataNode0 = new CDataNode("v{57hqtI)9|");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "bh", attributes0);
      Element element0 = formElement0.appendElement("bh");
      formElement0.removeChild(element0);
      assertEquals("bh", formElement0.nodeName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tag tag0 = Tag.valueOf("n(]");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf("f\"s-A 1!*^J");
      CDataNode cDataNode0 = new CDataNode("Q2;6NJ!<U3");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "ylL%_3Lm-LA2", attributes0);
      Document document0 = new Document("ylL%_3Lm-LA2");
      FormElement formElement1 = formElement0.addElement(document0);
      Elements elements0 = formElement1.elements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("uR$BCyJ9M+fl] HoT");
      FormElement formElement0 = new FormElement(tag0, "uR$BCyJ9M+fl] HoT", (Attributes) null);
      formElement0.siblingIndex = 821;
      FormElement formElement1 = formElement0.addElement((Element) null);
      assertFalse(formElement1.hasParent());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tag tag0 = Tag.valueOf("f\"s-A 1!*^J");
      CDataNode cDataNode0 = new CDataNode("Q2;6NJ!<U3");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "ylL%_3Lm-LA2", attributes0);
      Document document0 = new Document("ylL%_3Lm-LA2");
      formElement0.siblingIndex = (-735);
      FormElement formElement1 = formElement0.addElement(document0);
      assertFalse(formElement1.isBlock());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("head", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "type", attributes0);
      formElement0.reparentChild(formElement0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals("head", formElement1.nodeName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Element element0 = new Element("select");
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "#cdata", attributes0);
      formElement0.html("#cdata");
      FormElement formElement1 = formElement0.addElement(element0);
      assertEquals("select", formElement1.tagName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tag tag0 = Tag.valueOf(">NAMW");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("method", "naTw");
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "naTw", attributes1);
      attributes1.vals = null;
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf(">]");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("method", "NAMW", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "NAMW", attributes1);
      String[] stringArray0 = new String[0];
      attributes1.vals = stringArray0;
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tag tag0 = Tag.valueOf("SB");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "radio", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tag tag0 = Tag.valueOf("tbod");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "z", attributes0);
      DataNode dataNode0 = new DataNode("tbod");
      dataNode0.setParentNode(formElement0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(dataNode0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("keygen");
      FormElement formElement0 = new FormElement(tag0, "keygen", attributes0);
      FormElement formElement1 = (FormElement)formElement0.appendChild(formElement0);
      formElement1.setSiblingIndex((-1));
      // Undeclared exception!
//      try { 
        formElement0.removeChild(formElement0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "name", attributes0);
      Attributes attributes1 = attributes0.add("name", "name");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) pseudoTextElement0;
      pseudoTextElement0.addChildren(nodeArray0);
      FormElement formElement0 = new FormElement(tag0, "*]Bq$:%|n!;$)A)[H#/", attributes1);
      formElement0.addElement(pseudoTextElement0);
      // Undeclared exception!
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("oZi n=lqn-xZ5`#5LN#");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "]S8FuXB8}T5[A h%z", attributes0);
      formElement0.addElement((Element) null);
      // Undeclared exception!
//      try { 
        formElement0.formData();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.FormElement", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes1 = attributes0.add("name", "name");
      FormElement formElement0 = new FormElement(tag0, "select", attributes1);
      String[] stringArray0 = new String[0];
      attributes1.vals = stringArray0;
      FormElement formElement1 = formElement0.addElement(formElement0);
      // Undeclared exception!
//      try { 
        formElement1.formData();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tag tag0 = Tag.valueOf("bh");
      CDataNode cDataNode0 = new CDataNode("v{57hqtI)9|");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = null;
//      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "\"");
      Tag tag0 = Tag.valueOf("keygen");
      FormElement formElement0 = new FormElement(tag0, "name", attributes1);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.attr("checked", "checked");
      attributes1.put("type", "RADIO");
      formElement0.val("r^FJlu%Y++x");
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "\"");
      Tag tag0 = Tag.valueOf("keygen");
      FormElement formElement0 = new FormElement(tag0, "name", attributes1);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.attr("checked", "checked");
      attributes1.put("type", "RADIO");
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "select");
      Tag tag0 = Tag.valueOf("keygen");
      FormElement formElement0 = new FormElement(tag0, "name", attributes1);
      formElement0.addElement(formElement0);
      attributes1.put("type", "RADIO");
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("keygen", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "*]Bq$:%|n!;$)A)[H#/", attributes1);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "name", attributes0);
      Attributes attributes1 = attributes0.add("name", "name");
      FormElement formElement0 = new FormElement(tag0, "*]Bq$:%|n!;$)A)[H#/", attributes1);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "name", attributes0);
      Attribute attribute0 = new Attribute("disabled", "NAM");
      attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "encoding", attributes0);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("bh");
      CDataNode cDataNode0 = new CDataNode("v{57hqtI)9|");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "bh", attributes0);
      Document document0 = new Document("+N(j *[KGF^g.");
      formElement0.addElement(document0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tag tag0 = Tag.valueOf("tbody");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("method", "POST");
      attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "METHOD", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Malformed URL: METHOD
//         //
//         verifyException("org.jsoup.helper.HttpConnection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tag tag0 = Tag.valueOf("bh");
      CDataNode cDataNode0 = new CDataNode("v{57hqtI)9|");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "bh", attributes0);
      attributes0.putIgnoreCase("action", "~Re#:X0Y");
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Tag tag0 = Tag.valueOf("tbod");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "z", attributes0);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "name", attributes0);
      FormElement formElement0 = new FormElement(tag0, "*]Bq$:%|n!;$)A)[H#/", attributes0);
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Tag tag0 = Tag.valueOf("bh");
      CDataNode cDataNode0 = new CDataNode("v{57hqtI)9|");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "bh", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(formElement0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Must be true
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }
}
