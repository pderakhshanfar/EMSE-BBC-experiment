/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 19:31:55 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "keygen", attributes0);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) formElement0;
      nodeArray0[1] = (Node) formElement0;
      nodeArray0[2] = (Node) formElement0;
      formElement0.addChildren(nodeArray0);
      formElement0.removeChild(formElement0);
      assertEquals("keygen", formElement0.nodeName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "keygen", attributes0);
      formElement0.addElement(formElement0);
      Elements elements0 = formElement0.elements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("METHOD");
      CDataNode cDataNode0 = new CDataNode("U3K&*kS UN/J");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "METHOD", attributes0);
      Document document0 = Parser.parseBodyFragmentRelaxed("METHOD", "METHOD");
      formElement0.setSiblingIndex(700);
      FormElement formElement1 = formElement0.addElement(document0);
      assertFalse(formElement1.hasParent());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "j|J8N( E", attributes0);
      formElement0.siblingIndex = (-1994709291);
      Document document0 = Parser.parseBodyFragmentRelaxed("pw7Y+", "pw7Y+");
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals("j|J8N( E", formElement1.baseUri());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("hgroup");
      FormElement formElement0 = new FormElement(tag0, "Y.7=L=d5?", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertTrue(formElement1.isBlock());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tag tag0 = Tag.valueOf("K8>O)I6TXK7%>oyy");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "K8>O)I6TXK7%>oyy", attributes0);
      Document document0 = Parser.parseBodyFragmentRelaxed("IpJ:0./5|@%,X", "K8>O)I6TXK7%>oyy");
      document0.prependChild(formElement0);
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals("k8>o)i6txk7%>oyy", formElement1.normalName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tag tag0 = Tag.valueOf("K8>O)I6TXK7%>oyy");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "K8>O)I6TXK7%>oyy", attributes0);
      formElement0.text("");
      Document document0 = Parser.parseBodyFragmentRelaxed("Jx3c", "Jx3c");
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals(1, formElement1.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      attributes0.add("wVB;", "select");
      attributes0.keys = null;
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("method", "WVB", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      Attributes attributes2 = attributes1.clone();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.FormElement", attributes2);
      String[] stringArray0 = new String[0];
      attributes2.vals = stringArray0;
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("|W(34oQS~FRDyhjv", parseSettings0);
      Attributes attributes0 = new Attributes();
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("checked", "3}G]NA|N*z1bnZv([");
      FormElement formElement0 = new FormElement(tag0, "Q^0F%T6akqmNPCo7", attributes0);
      FormElement formElement1 = formElement0.addElement(document0);
      CDataNode cDataNode0 = new CDataNode("checked");
      Node node0 = cDataNode0.doClone(formElement1);
      List<Node> list0 = Parser.parseXmlFragment("Q^0F%T6akqmNPCo7", "3}G]NA|N*z1bnZv([");
      formElement1.childNodes = list0;
      // Undeclared exception!
//      try { 
        formElement0.removeChild(node0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Collections$UnmodifiableList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("|W(34oQS~FRDyhjv", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "checked", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("|W(34oQS~FRDyhjv", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "Q^0F%T6akqmNPCo7", attributes0);
      CDataNode cDataNode0 = new CDataNode("checked");
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(node0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("ismap", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("mC");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "mC", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(formElement0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Must be true
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("|W(34oQS~FRDyhjv", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "Q^0F%T6akqmNPCo7", attributes0);
      CDataNode cDataNode0 = new CDataNode("checked");
      CDataNode cDataNode1 = (CDataNode)cDataNode0.doClone(formElement0);
      cDataNode1.setSiblingIndex((-2092492242));
      // Undeclared exception!
//      try { 
        formElement0.removeChild(cDataNode1);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      attributes0.putIgnoreCase("name", "select");
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.appendChild(formElement0);
      // Undeclared exception!
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tag tag0 = Tag.valueOf("^!+");
      FormElement formElement0 = new FormElement(tag0, "Rd8(I B?", (Attributes) null);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
//      try { 
        formElement1.formData();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.FormElement", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "keygen", attributes0);
      attributes0.putIgnoreCase("NAME", "NAME");
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      FormElement formElement1 = formElement0.addElement(formElement0);
      // Undeclared exception!
//      try { 
        formElement1.formData();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("f`a,!!s{'HN1Uvfe2{", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = null;
//      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "keygen", attributes0);
      attributes0.put("checked", "type");
      formElement0.val("name");
      attributes0.putIgnoreCase("name", "type");
      attributes0.putIgnoreCase("type", "checkbox");
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "keygen", attributes0);
      attributes0.put("checked", "type");
      attributes0.putIgnoreCase("name", "type");
      attributes0.putIgnoreCase("type", "checkbox");
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "keygen", attributes0);
      attributes0.putIgnoreCase("name", "type");
      attributes0.putIgnoreCase("type", "radio");
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "keygen", attributes0);
      attributes0.putIgnoreCase("NAME", "NAME");
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      attributes0.putIgnoreCase("name", "select");
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "keygen", attributes0);
      attributes0.putIgnoreCase("disabled", "JY7-@S`M/DC|>0Z");
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Tag tag0 = Tag.valueOf("K8>O)I6TXK7%>oyy");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "K8>O)I6TXK7%>oyy", attributes0);
      Document document0 = Parser.parseBodyFragmentRelaxed("Jx3c", "Jx3c");
      formElement0.addElement(document0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Tag tag0 = Tag.valueOf("Yr#");
      Attributes attributes0 = new Attributes();
      attributes0.add("METHOD", "POST");
      FormElement formElement0 = new FormElement(tag0, "Yr#", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Malformed URL: Yr#
//         //
//         verifyException("org.jsoup.helper.HttpConnection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Tag tag0 = Tag.valueOf("K8>O)I6TXK7%>oyy");
      Attributes attributes0 = new Attributes();
      attributes0.add("action", ":.o!(0KcbLI,");
      FormElement formElement0 = new FormElement(tag0, "K8>O)I6TXK7%>oyy", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Tag tag0 = Tag.valueOf("|W(34oQS~FRDyhjv");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "checked", attributes0);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.FormElement", attributes0);
      formElement0.addElement(formElement0);
      formElement0.formData();
  }
}
