/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 19:42:52 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("P,sq6bQ50D),OrN^2c");
      Attributes attributes0 = new Attributes();
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$IsLastChild", "org.jsoup.select.Evaluator$IsLastChild");
      FormElement formElement0 = new FormElement(tag0, "P,sq6bQ50D),OrN^2c", attributes0);
      Element element0 = document0.body();
      formElement0.prependChild(element0);
      formElement0.removeChild(element0);
      assertEquals("P,sq6bQ50D),OrN^2c", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "et?Wd", attributes0);
      formElement0.siblingIndex = (-1682);
      FormElement formElement1 = formElement0.addElement((Element) null);
      assertEquals(0, formElement1.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("html", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.Evaluator$IsNthChild", attributes0);
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("org.jsoup.select.Evaluator$IsNthChild");
      Document document0 = parser0.parseInput((Reader) stringReader0, "html");
      FormElement formElement1 = formElement0.addElement(document0);
      Elements elements0 = formElement1.elements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("method", "STOP");
      Tag tag0 = Tag.valueOf("method");
      attributes0.vals = null;
      FormElement formElement0 = new FormElement(tag0, "method", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("P,sq6bR50D_M,OrND2c");
      Attributes attributes1 = attributes0.put("method", "method");
      FormElement formElement0 = new FormElement(tag0, "P,sq6bR50D_M,OrND2c", attributes1);
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("kVX1 &=|", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "N>KO3N/m{|T8{BF;", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tag tag0 = Tag.valueOf("6yb8i,j{^DY`W");
      FormElement formElement0 = new FormElement(tag0, "D#wehexr`Xl(", (Attributes) null);
      CDataNode cDataNode0 = new CDataNode("[q._SA_@");
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(node0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("Qbc^o`h*C", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "Qbc^o`h*C", attributes0);
      CDataNode cDataNode0 = new CDataNode("5SCF(]<(");
      cDataNode0.siblingIndex = (-4045);
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(node0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("name", "select", attributes0);
      attributes0.put(attribute0);
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "method", attributes0);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) formElement0;
      Document document0 = new Document("select");
      nodeArray0[1] = (Node) document0;
      CDataNode cDataNode0 = new CDataNode("select");
      nodeArray0[2] = (Node) cDataNode0;
      nodeArray0[3] = (Node) formElement0;
      nodeArray0[4] = (Node) formElement0;
      nodeArray0[5] = (Node) formElement0;
      nodeArray0[6] = (Node) formElement0;
      nodeArray0[7] = (Node) formElement0;
      nodeArray0[8] = (Node) formElement0;
      formElement0.addChildren(nodeArray0);
      formElement0.addElement(formElement0);
      // Undeclared exception!
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "et?Wd", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
//      try { 
        formElement1.formData();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.FormElement", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("method", "method");
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, ":matchesOwn(", attributes1);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      FormElement formElement1 = formElement0.addElement(formElement0);
      // Undeclared exception!
//      try { 
        formElement1.formData();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = null;
//      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      attributes1.add("checked", "checked");
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "name", attributes1);
      formElement0.val("&^EF pwR1_ips'Yj*kp");
      attributes1.add("type", "radio");
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      attributes1.add("checked", "B\"");
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "name", attributes1);
      attributes1.add("type", "radio");
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "name", attributes1);
      attributes1.add("type", "radio");
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("name", "name");
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "name", attributes1);
      attributes1.add("type", "checkbox");
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "name", attributes1);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("name", "select", attributes0);
      attributes0.put(attribute0);
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "method", attributes0);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "name", attributes0);
      attributes0.add("disabled", "name");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "G(\"a2^$`VfMO", attributes0);
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "P,sq6bQ50D),OrN^2c", attributes0);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("P,sq6bQ50D),OrN^2c");
      CDataNode cDataNode0 = new CDataNode("P,sq6bQ50D),OrN^2c");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.add("method", "POST");
      FormElement formElement0 = new FormElement(tag0, "P,sq6bQ50D),OrN^2c", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Malformed URL: P,sq6bQ50D),OrN^2c
//         //
//         verifyException("org.jsoup.helper.HttpConnection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("P,sq6bQ50D),OrN^2c");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "P,sq6bQ50D),OrN^2c", attributes0);
      attributes0.add("action", "action");
      // Undeclared exception!
//      try { 
        formElement0.submit();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tag tag0 = Tag.valueOf("z_L?L/Bh3G$EtE");
      CDataNode cDataNode0 = new CDataNode("GET");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "z_L?L/Bh3G$EtE", attributes0);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tag tag0 = Tag.valueOf("P,sq6bQ50D),OrN^2c");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "P,sq6bQ50D),OrN^2c", attributes0);
      formElement0.addElement(formElement0);
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Tag tag0 = Tag.valueOf("P,sq6bQ50D),OrN^2c");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "P,sq6bQ50D),OrN^2c", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.removeChild(formElement0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Must be true
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }
}
