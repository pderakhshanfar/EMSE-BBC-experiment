/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 17:58:16 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Comment_ESTest extends Comment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Comment comment0 = new Comment("");
      StringBuilder stringBuilder0 = new StringBuilder("");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      comment0.outerHtmlHead(stringBuilder0, 5030, document_OutputSettings0);
      assertEquals("#comment", comment0.nodeName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Comment comment0 = new Comment("oM:Z:9'-S<RKrRE$v");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      comment0.outerHtmlTail(charArrayWriter0, (-1), document_OutputSettings0);
      assertEquals(Document.OutputSettings.Syntax.html, document_OutputSettings0.syntax());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Comment comment0 = new Comment("@324gYhY3o>g");
      String string0 = comment0.nodeName();
      assertEquals("#comment", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Comment comment0 = new Comment((String) null);
      comment0.getData();
      assertEquals("#comment", comment0.nodeName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Comment comment0 = new Comment("", "");
      comment0.getData();
      assertEquals("#comment", comment0.nodeName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Comment comment0 = new Comment("#comment");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      assertEquals("#comment", comment0.nodeName());
      assertNotNull(xmlDeclaration0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Comment comment0 = new Comment("font");
      comment0.setParentNode(comment0);
      // Undeclared exception!
      comment0.toString();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Comment comment0 = new Comment(">");
      Document document0 = new Document(">");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset((Charset) null);
      document0.outputSettings(document_OutputSettings1);
      comment0.parentNode = (Node) document0;
      // Undeclared exception!
//      try { 
        comment0.toString();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Document$OutputSettings", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Comment comment0 = new Comment("u%Vh=\"7y, W&", "!RZ^1I`N[~");
      comment0.siblingIndex = (-127518392);
      Node node0 = comment0.clone();
      comment0.setParentNode(node0);
      // Undeclared exception!
//      try { 
        comment0.toString();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: -127518391
//         //
//         verifyException("java.util.Collections$EmptyList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Comment comment0 = new Comment("\u001AiE9mc`Sd}T");
      Object object0 = new Object();
      comment0.value = object0;
      // Undeclared exception!
//      try { 
        comment0.toString();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.Object cannot be cast to java.lang.String
//         //
//         verifyException("org.jsoup.nodes.LeafNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Comment comment0 = new Comment("@324g?^YShY3on", "@324g?^YShY3on");
      Document document0 = Parser.parseBodyFragmentRelaxed("@324g?^YShY3on", "!WdS5SJ,U#T`K!MP?qJK");
      comment0.siblingIndex = (-780);
      comment0.setParentNode(document0);
      // Undeclared exception!
//      try { 
        comment0.toString();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Comment comment0 = new Comment("\"WRw2<{9S-0wU\"9PH");
      StringBuilder stringBuilder0 = new StringBuilder("GS");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(2294);
      // Undeclared exception!
      comment0.outerHtmlHead(stringBuilder0, 2294, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Comment comment0 = new Comment("p/Kc[", "p/Kc[");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "p/Kc[");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        comment0.outerHtmlHead(charBuffer0, (-4872), document_OutputSettings0);
//        fail("Expecting exception: ReadOnlyBufferException");
      
//      } catch(ReadOnlyBufferException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.StringCharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Comment comment0 = new Comment("");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        comment0.outerHtmlHead((Appendable) null, (-138782957), document_OutputSettings0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Comment comment0 = new Comment("`", "<");
      StringBuilder stringBuilder0 = new StringBuilder("");
      // Undeclared exception!
//      try { 
        comment0.outerHtmlHead(stringBuilder0, (-1376), document_OutputSettings0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // width must be > 0
//         //
//         verifyException("org.jsoup.internal.StringUtil", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Comment comment0 = new Comment("c/hoIxS", "c/hoIxS");
      Comment comment1 = new Comment((String) null);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      comment1.value = (Object) comment0;
      // Undeclared exception!
//      try { 
        comment1.outerHtmlHead(charArrayWriter0, 0, document_OutputSettings0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.jsoup.nodes.Comment cannot be cast to java.lang.String
//         //
//         verifyException("org.jsoup.nodes.LeafNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Comment comment0 = new Comment("c/hoIxS", "\"\"WRwS2<{X0S{wUhPH");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
//      try { 
        comment0.outerHtmlHead(pipedWriter0, 124, document_OutputSettings0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Pipe not connected
//         //
//         verifyException("java.io.PipedWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Comment comment0 = new Comment((String) null, "\"hM&)qw`fV");
      // Undeclared exception!
//      try { 
        comment0.isXmlDeclaration();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Comment", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Comment comment0 = new Comment("RCDATAEundTagName", (String) null);
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      comment0.value = (Object) charBuffer0;
      // Undeclared exception!
//      try { 
        comment0.isXmlDeclaration();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.nio.HeapCharBuffer cannot be cast to java.lang.String
//         //
//         verifyException("org.jsoup.nodes.LeafNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Comment comment0 = new Comment("\"\"WRwS2){X0S{wUhKH");
      Comment comment1 = new Comment("\"\"WRwS2){X0S{wUhKH", "\"\"WRwS2){X0S{wUhKH");
      comment1.value = (Object) comment0;
      // Undeclared exception!
//      try { 
        comment1.getData();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.jsoup.nodes.Comment cannot be cast to java.lang.String
//         //
//         verifyException("org.jsoup.nodes.LeafNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Comment comment0 = new Comment("r");
      // Undeclared exception!
//      try { 
        comment0.asXmlDeclaration();
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Comment comment0 = new Comment((String) null, "ForeignContent");
      // Undeclared exception!
//      try { 
        comment0.asXmlDeclaration();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Comment", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Comment comment0 = new Comment("\"\"WRwS2){X0S{wUhKH");
      Comment comment1 = new Comment("\"\"WRwS2){X0S{wUhKH", "\"\"WRwS2){X0S{wUhKH");
      comment1.value = (Object) comment0;
      // Undeclared exception!
//      try { 
        comment1.asXmlDeclaration();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.jsoup.nodes.Comment cannot be cast to java.lang.String
//         //
//         verifyException("org.jsoup.nodes.LeafNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Comment comment0 = new Comment("\"\"WRwS2){X0S{wUhKH");
      String string0 = comment0.getData();
      assertEquals("#comment", comment0.nodeName());
      assertEquals("\"\"WRwS2){X0S{wUhKH", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Comment comment0 = new Comment("@324gYhY3o>g");
      // Undeclared exception!
//      try { 
        comment0.asXmlDeclaration();
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Comment comment0 = new Comment("\"WRw2<{J0SwU\"PH");
      comment0.coreValue("c/hoIxS");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      assertEquals("#comment", comment0.nodeName());
      assertNull(xmlDeclaration0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Comment comment0 = new Comment("?col");
      boolean boolean0 = comment0.isXmlDeclaration();
      assertEquals("#comment", comment0.nodeName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Comment comment0 = new Comment("!c\"pc", "!c\"pc");
      boolean boolean0 = comment0.isXmlDeclaration();
      assertEquals("#comment", comment0.nodeName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Comment comment0 = new Comment("M");
      boolean boolean0 = comment0.isXmlDeclaration();
      assertEquals("#comment", comment0.nodeName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Comment comment0 = new Comment("\"WRw2<{9S-0wU\"9PH", "\"WRw2<{9S-0wU\"9PH");
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      // Undeclared exception!
//      try { 
        comment0.outerHtmlHead(charBuffer0, (-1), document_OutputSettings1);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Comment comment0 = new Comment("u%Vh=\"7y, W&", "!RZ^1I`N[~");
      String string0 = comment0.toString();
      assertEquals("\n<!--u%Vh=\"7y, W&-->", string0);
      assertEquals("#comment", comment0.nodeName());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Comment comment0 = new Comment("@324gYhY3o>g");
      boolean boolean0 = comment0.isXmlDeclaration();
      assertFalse(boolean0);
      assertEquals("#comment", comment0.nodeName());
  }
}
