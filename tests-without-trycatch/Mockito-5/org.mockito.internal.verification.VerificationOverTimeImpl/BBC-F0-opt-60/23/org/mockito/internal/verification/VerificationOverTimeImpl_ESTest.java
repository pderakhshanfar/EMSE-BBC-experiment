/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 23:44:11 GMT 2021
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.progress.MockingProgressImpl;
import org.mockito.internal.progress.ThreadSafeMockingProgress;
import org.mockito.internal.stubbing.InvocationContainerImpl;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationDataImpl;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.verification.After;
import org.mockito.verification.Timeout;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      After after0 = new After(0L, 1393L, noMoreInteractions0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(274L, 0L, after0, true);
      Timeout timeout0 = new Timeout(1202L, verificationOverTimeImpl0);
      VerificationOverTimeImpl verificationOverTimeImpl1 = new VerificationOverTimeImpl(0L, 1202L, timeout0, true, (Timer) null);
      long long0 = verificationOverTimeImpl1.getPollingPeriod();
      assertEquals(1202L, verificationOverTimeImpl1.getDuration());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2093L), (-1L), (VerificationMode) null, true, (Timer) null);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-1L), verificationOverTimeImpl0.getDuration());
      assertEquals((-2093L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Timeout timeout0 = new Timeout(0L, (VerificationMode) null);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, timeout0, false);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Timer timer0 = new Timer(1745L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1745L, (-1994L), (VerificationMode) null, false, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(1745L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-1994L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1715L, 1715L, (VerificationMode) null, true);
      verificationOverTimeImpl0.getDelegate();
      assertEquals(1715L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(1715L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Timer timer0 = new Timer(1L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1696L, 1696L, (VerificationMode) null, true, timer0);
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      MockSettingsImpl<Object> mockSettingsImpl0 = new MockSettingsImpl<Object>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      // Undeclared exception!
//      try { 
        verificationOverTimeImpl0.verify(verificationDataImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.verification.VerificationOverTimeImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      Timer timer0 = new Timer(83L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(83L, 83L, noMoreInteractions0, true, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertFalse(boolean0);
      assertEquals(83L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(83L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      VerificationMode verificationMode0 = threadSafeMockingProgress0.pullVerificationMode();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2447L, 3328L, verificationMode0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure((VerificationMode) null);
      assertEquals(3328L, verificationOverTimeImpl0.getDuration());
      assertEquals(2447L, verificationOverTimeImpl0.getPollingPeriod());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AtMost atMost0 = new AtMost(2264);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, atMost0, false);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(10L, 2950L, atMost0, false);
      MockingProgressImpl mockingProgressImpl0 = new MockingProgressImpl();
      MockSettingsImpl<NoMoreInteractions> mockSettingsImpl0 = new MockSettingsImpl<NoMoreInteractions>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(mockingProgressImpl0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      // Undeclared exception!
      verificationOverTimeImpl0.verify(verificationDataImpl0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      After after0 = new After(0L, 1393L, noMoreInteractions0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(274L, 0L, after0, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(0L, verificationOverTimeImpl0.getDuration());
      assertEquals(274L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      After after0 = new After((-1059L), (VerificationMode) null);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2447L, 3373L, after0, true);
      verificationOverTimeImpl0.getDelegate();
      assertEquals(2447L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(3373L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      VerificationMode verificationMode0 = threadSafeMockingProgress0.pullVerificationMode();
      After after0 = new After((-1059L), verificationMode0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2447L, 1756L, after0, true);
      MockSettingsImpl<AtMost> mockSettingsImpl0 = new MockSettingsImpl<AtMost>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      invocationContainerImpl0.getInvocationForStubbing();
      InvocationContainerImpl invocationContainerImpl1 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl1, (InvocationMatcher) null);
      verificationOverTimeImpl0.verify(verificationDataImpl0);
  }
}
