/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 30 15:12:35 GMT 2021
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.internal.verification.api.VerificationData;
import org.mockito.verification.Timeout;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2659L, 2659L, noMoreInteractions0, false);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(2659L, long0);
      assertEquals(2659L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-3547L), (-3547L), atMost0, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-3547L), long0);
      assertEquals((-3547L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AtMost atMost0 = new AtMost(1120);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, atMost0, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AtMost atMost0 = new AtMost(1);
      Timer timer0 = new Timer(1L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 889L, atMost0, false, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(889L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      Timer timer0 = new Timer(2288L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2288L, 2288L, noMoreInteractions0, false, timer0);
      verificationOverTimeImpl0.getDelegate();
      assertEquals(2288L, verificationOverTimeImpl0.getDuration());
      assertEquals(2288L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(901L, 901L, noMoreInteractions0, false);
      // Undeclared exception!
//      try { 
        verificationOverTimeImpl0.verify((VerificationData) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.verification.NoMoreInteractions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-3547L), (-3547L), noMoreInteractions0, true);
      verificationOverTimeImpl0.verify((VerificationData) null);
      assertEquals((-3547L), verificationOverTimeImpl0.getDuration());
      assertEquals((-3547L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-5L), (-5L), noMoreInteractions0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertEquals((-5L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-5L), verificationOverTimeImpl0.getDuration());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(3550L, (-1L), (VerificationMode) null, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure((VerificationMode) null);
      assertEquals((-1L), verificationOverTimeImpl0.getDuration());
      assertEquals(3550L, verificationOverTimeImpl0.getPollingPeriod());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-584L), (-584L), (VerificationMode) null, false);
      AtMost atMost0 = new AtMost(1012);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertEquals((-584L), verificationOverTimeImpl0.getDuration());
      assertEquals((-584L), verificationOverTimeImpl0.getPollingPeriod());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2534L), (-2534L), noMoreInteractions0, true);
      VerificationOverTimeImpl verificationOverTimeImpl1 = new VerificationOverTimeImpl((-2534L), 0L, verificationOverTimeImpl0, true);
      verificationOverTimeImpl1.verify((VerificationData) null);
      assertEquals((-2534L), verificationOverTimeImpl1.getPollingPeriod());
      assertEquals(0L, verificationOverTimeImpl1.getDuration());
      assertEquals((-2534L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      Timeout timeout0 = new Timeout((-1212L), noMoreInteractions0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1212L), 0L, timeout0, false);
      // Undeclared exception!
      verificationOverTimeImpl0.verify((VerificationData) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, atMost0, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(3550L, (-1L), (VerificationMode) null, true);
      verificationOverTimeImpl0.getDelegate();
      assertEquals((-1L), verificationOverTimeImpl0.getDuration());
      assertEquals(3550L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(3550L, (-1L), (VerificationMode) null, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(3550L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-1L), long0);
  }
}
