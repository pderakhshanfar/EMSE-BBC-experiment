/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 23:55:36 GMT 2021
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.progress.MockingProgressImpl;
import org.mockito.internal.progress.ThreadSafeMockingProgress;
import org.mockito.internal.stubbing.InvocationContainer;
import org.mockito.internal.stubbing.InvocationContainerImpl;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationDataImpl;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.verification.After;
import org.mockito.verification.Timeout;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      Timer timer0 = new Timer(10L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1L, 10L, noMoreInteractions0, false, timer0);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(1L, long0);
      assertEquals(10L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      After after0 = new After((-2418L), 0L, (VerificationMode) null);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1L), 0L, after0, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(0L, verificationOverTimeImpl0.getDuration());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Timer timer0 = new Timer((-803L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, false, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      After after0 = new After(0L, 0L, (VerificationMode) null);
      Timer timer0 = new Timer((-506L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-4033L), 10L, after0, true, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(10L, long0);
      assertEquals((-4033L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1313L, (-5206L), (VerificationMode) null, false);
      verificationOverTimeImpl0.getDelegate();
      assertEquals((-5206L), verificationOverTimeImpl0.getDuration());
      assertEquals(1313L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Timer timer0 = new Timer(0L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-1397L), (VerificationMode) null, true, timer0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl((InvocationContainer) null, (InvocationMatcher) null);
      // Undeclared exception!
//      try { 
        verificationOverTimeImpl0.verify(verificationDataImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2010L), (-2010L), noMoreInteractions0, false);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertFalse(boolean0);
      assertEquals((-2010L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-2010L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Timeout timeout0 = new Timeout(0L, (VerificationMode) null);
      After after0 = new After((-1773L), 0L, timeout0);
      Timer timer0 = new Timer(0L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1773L), 0L, after0, true, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(verificationOverTimeImpl0);
      assertTrue(boolean0);
      assertEquals((-1773L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(0L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AtMost atMost0 = new AtMost(1);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-4496L), atMost0, false);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertEquals((-4496L), verificationOverTimeImpl0.getDuration());
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      After after0 = new After((-223L), (-31L), (VerificationMode) null);
      Timer timer0 = new Timer(0L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(699L, (-1213L), after0, false, timer0);
      MockingProgressImpl mockingProgressImpl0 = new MockingProgressImpl();
      MockSettingsImpl<Object> mockSettingsImpl0 = new MockSettingsImpl<Object>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(mockingProgressImpl0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      // Undeclared exception!
      verificationOverTimeImpl0.verify(verificationDataImpl0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AtMost atMost0 = new AtMost(3333);
      Timer timer0 = new Timer(10L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 1923L, atMost0, true, timer0);
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      MockSettingsImpl<Integer> mockSettingsImpl0 = new MockSettingsImpl<Integer>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      verificationOverTimeImpl0.verify(verificationDataImpl0);
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(1923L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AtMost atMost0 = new AtMost(1);
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      MockSettingsImpl<String> mockSettingsImpl0 = new MockSettingsImpl<String>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-4496L), atMost0, false);
      verificationOverTimeImpl0.verify(verificationDataImpl0);
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-4496L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AtMost atMost0 = new AtMost(3333);
      Timer timer0 = new Timer(10L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 1923L, atMost0, true, timer0);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(0L, long0);
      assertEquals(1923L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(3287L, 3287L, noMoreInteractions0, true);
      verificationOverTimeImpl0.getDelegate();
      assertEquals(3287L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(3287L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2010L), (-2010L), noMoreInteractions0, false);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-2010L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-2010L), long0);
  }
}
