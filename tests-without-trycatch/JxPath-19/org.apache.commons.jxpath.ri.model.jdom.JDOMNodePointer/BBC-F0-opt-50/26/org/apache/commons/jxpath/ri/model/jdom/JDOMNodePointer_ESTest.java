/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 02:06:46 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Element element0 = new Element("n");
      Locale locale0 = Locale.PRC;
      CDATA cDATA0 = new CDATA("/@}?-6}z.E UbE_");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/text()[1]/n[1]", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Element element0 = new Element("N");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "T");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CDATA cDATA0 = new CDATA("eZuH");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Locale locale0 = Locale.US;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("R", (Locale) null);
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      namespaceResolver0.seal();
      NamespaceResolver namespaceResolver1 = jDOMNodePointer0.getNamespaceResolver();
      assertTrue(namespaceResolver1.isSealed());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Element element0 = new Element("o");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Text text0 = new Text("7GFdpDTg{Q");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      Text text1 = (Text)jDOMNodePointer0.getImmediateNode();
      assertEquals("7GFdpDTg{Q", text1.getValue());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null, "");
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CDATA cDATA0 = new CDATA("eZuH");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Index: ");
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(nodeNameTest0, false, jDOMNodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      QName qName0 = new QName((String) null, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, object0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Locale locale0 = Locale.US;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("T", locale0);
      QName qName0 = jDOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
//      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      QName qName0 = new QName("n", "n");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("i7Ll't");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.setValue(variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: n:n
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      LinkedList<JDOMNodePointer> linkedList0 = new LinkedList<JDOMNodePointer>();
      Document document0 = new Document(linkedList0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.setValue(document0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Root element not set
//         //
//         verifyException("org.jdom.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Element element0 = new Element("yn", "yn");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "yn");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.setValue(variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'yn'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Locale locale0 = Locale.US;
      Object object0 = new Object();
      Element element0 = new Element("T", "T");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, locale0, "<<unknown namespace>>");
      // Undeclared exception!
//      try { 
        jDOMNodePointer1.setValue(object0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer cannot be cast to org.jdom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, object0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.isLanguage("http://www.w3.org/2000/xmlns/");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Index: ");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Element element0 = new Element("N", "N", "N");
      // Undeclared exception!
//      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "iuU", (Namespace) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jdom.AttributeList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Locale locale0 = Locale.US;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("M'1yY$37oeG1<");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The name \"M'1yY$37oeG1<\" is not legal for JDOM/XML attributes: XML names cannot contain the character \"'\".
//         //
//         verifyException("org.jdom.Attribute", e);
//      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Element element0 = new Element("yes");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "yes");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, (QName) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      QName qName0 = new QName("xml");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, "xml");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: xml
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("p", "p");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("p", locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer((Object) jDOMNodePointer1, locale0);
      // Undeclared exception!
      jDOMNodePointer2.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("p");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("p", locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // JXPath internal error: compareChildNodes called for p
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Text text0 = new Text("7GFdpDTg{Q");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, variablePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4013);
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("id('", "wD8Gd's=\"Z,GjJx5");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'id(':wD8Gd's=\"Z,GjJx5'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Text text0 = new Text("");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      QName qName0 = new QName("]", "]");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "]");
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, true, (NodePointer) null);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Root element not set
//         //
//         verifyException("org.jdom.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Comment comment0 = new Comment("/text()");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("/text()");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'null'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CDATA cDATA0 = new CDATA("floor");
      Locale locale0 = Locale.forLanguageTag("xml");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "xml");
      jDOMNodePointer0.printPointerChain();
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(128);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, "");
      QName qName0 = new QName("hFBDOT*", "/");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, 128);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CDATA cDATA0 = new CDATA("%bE/F_gZ}beZajnYmU");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "%bE/F_gZ}beZajnYmU");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "Y{_*L ?<g6A`");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("T", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Element element0 = new Element("T", "R'");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Locale locale0 = Locale.US;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstructionTest0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("N", "N");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("N");
      QName qName0 = new QName("[g*k");
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Element element0 = new Element("org.apaGhe.coQmons.jxpath.ri.model.beans.BeanAttributeIterator");
      QName qName0 = new QName("org.apaGhe.coQmons.jxpath.ri.model.beans.BeanAttributeIterator", "org.apaGhe.coQmons.jxpath.ri.model.beans.BeanAttributeIterator");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "org.apaGhe.coQmons.jxpath.ri.model.beans.BeanAttributeIterator");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, "UNKNOWN()");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) nodeNameTest0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Locale locale0 = Locale.US;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("6eJqA2xcAS_E^4{D<zv");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LinkedList<Document> linkedList0 = new LinkedList<Document>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "Mc) J~xSw`");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Root element not set
//         //
//         verifyException("org.jdom.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("node()", (Locale) null);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertEquals("node()", object0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CDATA cDATA0 = new CDATA("%bE/F_gZ}beZajnYmU");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "%bE/F_gZ}beZajnYmU");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, "gv{Foe[Q ~6Axg,");
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Locale locale0 = Locale.US;
      Object object0 = new Object();
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("xc_CO5QO}%57.@(_");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(processingInstructionTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("nrod", "nrod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('nrod')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      CDATA cDATA0 = new CDATA("/@}?-6}z.E UbE_");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Element element0 = new Element("N", "N", "N");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("N", (Locale) null, "N");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('N')/N:N[1]", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Element element0 = new Element("org.apashe.commons.jxpath.ri.model.beans.BeanAttributeIterator", "\r");
      Locale locale0 = new Locale("E92");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("\r", locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      jDOMNodePointer1.printPointerChain();
      assertFalse(jDOMNodePointer1.isAttribute());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Element element0 = new Element("N");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.printPointerChain();
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("S8", "S8");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root JDOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CDATA cDATA0 = new CDATA("org.apache.commons.jxpath.ri.model.jdom.DOMNodePointer");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "org.apache.commons.jxpath.ri.model.jdom.DOMNodePointer");
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.DOMNodePointer", (String) null, "http://www.w3.org/2000/xmlns/");
      element0.addContent((Content) cDATA0);
      jDOMNodePointer0.remove();
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Locale locale0 = Locale.US;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("xml:T", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Element element0 = new Element("T", "T", "T");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("T:T", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "R9%0}Z<{Nu*nb!");
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path id('R9%0}Z<{Nu*nb!')/@null, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("bx;zDNz8*_.y6^r[H[", locale0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-983), (Object) qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Comment comment0 = new Comment(",#");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "'UoXF'J`V'");
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("F", "F");
      Element element0 = new Element("F", namespace0);
      Element element1 = element0.setAttribute("F", "");
      Namespace namespace1 = Namespace.NO_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute(element1, "F", namespace1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Element element0 = new Element("org.apaQe.commons.jxpa4hori.cmpiler.Path", "org.apaQe.commons.jxpa4hori.cmpiler.Path", "org.apaQe.commons.jxpa4hori.cmpiler.Path");
      element0.setAttribute("org.apaQe.commons.jxpa4hori.cmpiler.Path", "E.*#x*&nbc,Ou^vudO.");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute(element0, "org.apaQe.commons.jxpa4hori.cmpiler.Path", namespace0);
      assertNotNull(string0);
      assertEquals("E.*#x*&nbc,Ou^vudO.", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Attribute attribute0 = new Attribute("T", "6eJqA2xcAS_E^4{D<zv", namespace0);
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("T", string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      QName qName0 = new QName("^Dl'}X[@");
      String string0 = JDOMNodePointer.getLocalName(qName0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.apache.commons.jxpath.ri.model.dynamic.DynamicPointerFactory", "\"<=\"", 0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Attribute attribute0 = new Attribute("T", "6eJqA2xcAS_E^4{D<zv", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertEquals("xml", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Element element0 = new Element("N", "N", "N");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNotNull(string0);
      assertEquals("N", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Object object0 = new Object();
      String string0 = JDOMNodePointer.getPrefix(object0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("space", "space");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, processingInstruction0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("@(#) $RCSfile: EntityRef.java,v $ $Revision: 1.21 $ $Date: 2004/02/27 11:32:57 $ $Name: jdom_1_0 $");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Element element0 = new Element("T", "T", "T");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "T");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Text text0 = new Text("^Dl'}X[@");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) text0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) "processing-instruction()", (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("w", "w");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) null, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Text text0 = new Text("^Dl'}X[@");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) text0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      CDATA cDATA0 = new CDATA("=P</{J8");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      QName qName0 = new QName("T", "T");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Element element0 = new Element("T");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("T");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Object object0 = new Object();
      Element element0 = new Element("T", "T", "T");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Element element0 = new Element("T", "T", "T");
      QName qName0 = new QName("T");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "T");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CDATA cDATA0 = new CDATA("eZuH");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Index: ");
      Comment comment0 = new Comment("Index: ");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) comment0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Element element0 = new Element("T", "T", "T");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
//      try { 
        JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Element element0 = new Element("N");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "N");
      DocType docType0 = new DocType("N", (String) null);
      Document document0 = new Document(element0, docType0, "<<unknown namespace>>");
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Element element0 = new Element("T", "T", "T");
      element0.setText("T");
      Locale locale0 = Locale.UK;
      Element element1 = new Element("T", "T", "T");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "T");
      jDOMNodePointer0.setValue(element0);
      assertEquals(1, element1.getContentSize());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Locale locale0 = Locale.US;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("");
      assertFalse(jDOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Locale locale0 = Locale.US;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue((Object) null);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Element element0 = new Element("N");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null, "f<SP>");
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("N", "http://www.w3.org/XML/1998/namespace");
      jDOMNodePointer0.setValue(processingInstruction0);
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Locale locale0 = Locale.US;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      CDATA cDATA0 = new CDATA((String) null);
      jDOMNodePointer0.setValue(cDATA0);
      assertEquals(1, jDOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CDATA cDATA0 = new CDATA("%bE/F_gZ}beZajnYmU");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "%bE/F_gZ}beZajnYmU");
      jDOMNodePointer0.setValue(cDATA0);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CDATA cDATA0 = new CDATA("')");
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "]1{:g:5` ?!\"n");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, nodeNameTest0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.setValue(jDOMNodePointer1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("NN>|:1\"b*$");
      HashMap<CDATA, Object> hashMap0 = new HashMap<CDATA, Object>(115);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("double", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("bx;zDNz8*_.y6^r[H[", locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Comment comment0 = new Comment(",#");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "'UoXF'J`V'");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals(",#", object0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Element element0 = new Element("yes");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "yes");
      CDATA cDATA0 = new CDATA((String) null);
      element0.setContent((Content) cDATA0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      Element element0 = new Element("T", "T");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "T");
      LinkedList<JDOMNodePointer> linkedList0 = new LinkedList<JDOMNodePointer>();
      Document document0 = new Document(linkedList0);
      document0.addContent((Content) element0);
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Element element0 = new Element("T", "T");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Comment comment0 = new Comment("http://www.w3.org/2000/xmlns/");
      jDOMNodePointer0.setValue(comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Text text0 = new Text("%bE/F_gZ}beZajnYmU");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0, "]");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("%bE/F_gZ}beZajnYmU", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("NN>|:1\"b*$");
      HashMap<CDATA, Object> hashMap0 = new HashMap<CDATA, Object>(115);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("double", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      assertEquals("double", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.compiler.LocationPath", "org.apache.commons.jxpath.ri.compiler.LocationPath");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertTrue(nodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Element element0 = new Element("N", "N", "N");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Document document0 = new Document(linkedList0);
      Document document1 = document0.setContent((Content) element0);
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document1, locale0, "N");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("space", "space");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, processingInstruction0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Locale locale0 = Locale.US;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("T", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      jDOMNodePointer0.setValue(nodeNameTest0);
      assertEquals("xml:T", nodeNameTest0.toString());
      
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Element element0 = new Element("T");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LinkedList<CDATA> linkedList0 = new LinkedList<CDATA>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = new Locale("]", "http://www.w3.org/2000/xmlns/", "processing-instruction('xc_CO5QO}%57.@(_')");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.isLeaf();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Root element not set
//         //
//         verifyException("org.jdom.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CDATA cDATA0 = new CDATA("org.apache.commons.jxpath.ri.model.jdom.DOMNodePointer");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "org.apache.commons.jxpath.ri.model.jdom.DOMNodePointer");
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.DOMNodePointer", (String) null, "http://www.w3.org/2000/xmlns/");
      Element element1 = element0.addContent((Content) cDATA0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(element1, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, jDOMNodePointer0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Element element0 = new Element("T", "T", "T");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "T");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((NodePointer) jDOMNodePointer0, (Object) locale0);
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer(element0, locale0);
      element0.addContent((String) null);
      int int0 = jDOMNodePointer2.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Attribute attribute0 = new Attribute("c", "c");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(attribute0, locale0, "/processing-instruction('");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0);
      int int0 = jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Attribute attribute0 = new Attribute("c", "c", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(attribute0, locale0, "/processing-instruction('");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Element element0 = new Element("N");
      Document document0 = new Document();
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "java.lang.Integer@0000000005");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Root element not set
//         //
//         verifyException("org.jdom.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Element element0 = new Element("T", "R'");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("T", "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Unknown namespace prefix: T
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Element element0 = new Element("T");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("1/Ca;hr-W4e#<.Ht");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CDATA cDATA0 = new CDATA("floor");
      Locale locale0 = Locale.forLanguageTag("xml");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "xml");
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      LinkedList<CDATA> linkedList0 = new LinkedList<CDATA>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = new Locale("]", "http://www.w3.org/2000/xmlns/", "processing-instruction('xc_CO5QO}%57.@(_')");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Root element not set
//         //
//         verifyException("org.jdom.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("R", (Locale) null);
      jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("node()", (Locale) null);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Comment comment0 = new Comment("fuLQ'-6i&V8ce{|>o(");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "fuLQ'-6i&V8ce{|>o(");
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Element element0 = new Element("T", "T", "T");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "T");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.attributeIterator((QName) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("node()", (Locale) null);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Element element0 = new Element("N", "N");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("N", (Locale) null, "N");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      QName qName0 = new QName("^Dl'}X[@");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("EntityRef", locale0, "^Dl'}X[@");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.childIterator((NodeTest) null, false, variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: ^Dl'}X[@
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CDATA cDATA0 = new CDATA("%bE/F_gZ}beZajnYmU");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "%bE/F_gZ}beZajnYmU");
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "R9%0}Z<{Nu*nb!");
      boolean boolean0 = jDOMNodePointer0.isLanguage(",#");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("bx;zDNz8*_.y6^r[H[", locale0);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("http://www.w3.org/2000/xmlns/");
      assertFalse(nodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("N", (Locale) null);
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
