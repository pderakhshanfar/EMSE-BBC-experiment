/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 20:37:55 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Element element0 = new Element("o", "o", "o");
      Locale locale0 = Locale.GERMAN;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.commons.jxpath.ri.model.VariablePointerFactory", "o");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/processing-instruction('org.apache.commons.jxpath.ri.model.VariablePointerFactory')[1]/o:o[1]", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("prszerve", "prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("prszerve", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Element element0 = new Element("prszerve");
      QName qName0 = new QName("prszerve");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Element element0 = new Element("prszerve");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element1 = element0.setNamespace(namespace0);
      QName qName0 = new QName("prszerve", "prszerve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element1);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      Element element0 = new Element("prszrv", "prszrv");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszrv");
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Factory could not create a child node for path: ", locale0);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertEquals("Factory could not create a child node for path: ", object0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Locale locale0 = Locale.JAPAN;
      String string0 = JDOMNodePointer.findEnclosingAttribute(locale0, "", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Element element0 = new Element("prszerve");
      QName qName0 = new QName("prszerve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(91);
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(nodeTypeTest0, false, nodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
//      try { 
        JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
//      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("prszrve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszrve");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", (String) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
//      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      Document document0 = new Document();
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.setValue(document0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Root element not set
//         //
//         verifyException("org.jdom.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("YPOt(6", (Locale) null);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.setValue(jDOMNodePointer0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.String cannot be cast to org.jdom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      QName qName0 = new QName("prszerve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, document0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Root element not set
//         //
//         verifyException("org.jdom.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      QName qName0 = new QName("preserve", "preserve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, variablePointer0.WHOLE_COLLECTION);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.isLanguage("");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(58);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, (String) null);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Element element0 = new Element("prszerve");
      // Undeclared exception!
//      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "q4Yz09e0", (Namespace) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jdom.AttributeList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Element element0 = new Element("prszerve", "prszerve");
      QName qName0 = new QName("prszerve", "/Lo");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, (QName) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Integer integer0 = new Integer(47);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0);
      QName qName0 = new QName("<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: <<unknown namespace>>
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Comment comment0 = new Comment("mZ3KU5x<<");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, comment0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, jDOMNodePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Element element0 = new Element("prszerve");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      DocType docType0 = new DocType("prszerve");
      Document document0 = new Document(element0, docType0);
      Document document1 = document0.setContent((Content) docType0);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document1, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, namespace0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Root element not set
//         //
//         verifyException("org.jdom.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      Element element0 = new Element("prszDrve", "prszDrve", "prszDrve");
      QName qName0 = new QName("prszDrve");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, element0);
      // Undeclared exception!
//      try { 
        nodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("YPOt(6", locale0);
      QName qName0 = jDOMNodePointer0.getName();
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'null'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      QName qName0 = new QName("2{<]d;eE");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: 2{<]d;eE
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("przervo", "przervo", "przervo");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "przervo");
      QName qName0 = new QName("przervo", " is not a legal character in public IDs");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DocType docType0 = new DocType("m", "org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator", "m");
      Document document0 = new Document((Element) null, docType0, ".YpbvbZEox");
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      QName qName0 = new QName(" =4kmBo(A][lrZ5", "NUd;(2gB%y]xUHf}z");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer(jDOMNodePointer0, qName0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Element element0 = new Element("prszerve");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.attributeIterator((QName) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      Element element0 = new Element("pprsDre", "pprsDre", "pprsDre");
      QName qName0 = new QName("pprsDre", "pprsDre");
      Namespace namespace0 = Namespace.getNamespace("hRqw*qR?GVT0");
      element0.setNamespace(namespace0);
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, element0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Factory could not create a child node for path: ", locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Element element0 = new Element("prszerve");
      QName qName0 = new QName("prszerve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("$prszerve", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Unknown namespace prefix: ", locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-2423));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      QName qName0 = new QName("3T-emzlE@2>sj", "3T-emzlE@2>sj");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(47);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, nodeTypeTest0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Element element0 = new Element("vf8", "vf8", "vf8");
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("vf8", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Element element0 = new Element("prszerve");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      QName qName0 = new QName("prszeree");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) locale0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CDATA cDATA0 = new CDATA(":_*;r'm;e=\"#5r#}u$k");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      QName qName0 = new QName("<<unknown namespace>>", ";@ycEJX\"");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) qName0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      CDATA cDATA0 = new CDATA("'4Xio.2C~O}5C");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("'4Xio.2C~O}5C", object0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Element element0 = new Element("prszerve", "prszerve", "prszerve");
      QName qName0 = new QName("prszerve", "prszerve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      String string0 = jDOMNodePointer0.getNamespaceURI("prszerve");
      assertEquals("prszerve", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Element element0 = new Element("prszerve");
      QName qName0 = new QName("prszerve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null);
      Locale locale0 = Locale.lookup(linkedList0, list0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("t6", (Locale) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((NodePointer) jDOMNodePointer0, (Object) locale0);
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer((NodePointer) jDOMNodePointer0, (Object) locale0);
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer2);
      assertTrue(boolean0);
      assertFalse(jDOMNodePointer2.equals((Object)jDOMNodePointer0));
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      CDATA cDATA0 = new CDATA("'4Xio.2C~O}5C");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      boolean boolean0 = jDOMNodePointer0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("YPOt(6", (Locale) null);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("YPOt(6", (Locale) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, linkedList0);
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.commons.jxpath.ri.model.VariablePointerFactory", "o");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('org.apache.commons.jxpath.ri.model.VariablePointerFactory')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      CDATA cDATA0 = new CDATA("'4Xio.2C~O}5C");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('prszerve')/prszerve[1]", string0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('prszerve')", string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      CDATA cDATA0 = new CDATA("prszeree");
      Element element0 = new Element("prszeree");
      element0.addContent((Content) cDATA0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "prszeree");
      jDOMNodePointer0.remove();
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Element element0 = new Element("prszervoe", "prszervoe", "prszervoe");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszervoe");
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("prszervoe:prszervoe", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Element element0 = new Element("prszerve");
      QName qName0 = new QName("prszerve", "prszerve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Unknown namespace prefix: prszerve
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Element element0 = new Element("prszerve");
      QName qName0 = new QName("prszerve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertTrue(nodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0);
      QName qName0 = new QName("Cannot set duplicate attribute", "Cannot set duplicate attribute");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path /@Cannot set duplicate attribute:Cannot set duplicate attribute, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Element element0 = new Element("prszerneve", "prszerneve", "prszerneve");
      QName qName0 = new QName("prszerneve", "prszerneve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Comment comment0 = new Comment("/}e%T}b");
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "org.jdom.DataConversionException");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root JDOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      Element element0 = new Element("prszrv", "prszrv");
      Element element1 = element0.addContent("prszrv");
      Element element2 = new Element("prszrv");
      element2.addContent((Content) element1);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element2, locale0, "prszrv");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("prszrv", object0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Element element0 = new Element("y", "y", "y");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element1 = element0.setAttribute("y", "Factory ", namespace0);
      String string0 = JDOMNodePointer.findEnclosingAttribute(element1, "y", namespace0);
      assertEquals("Factory ", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Attribute attribute0 = new Attribute("K", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Integer integer0 = new Integer(47);
      String string0 = JDOMNodePointer.getLocalName(integer0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Attribute attribute0 = new Attribute("m", "m");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      attribute0.setNamespace(namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertEquals("xml", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = JDOMNodePointer.getPrefix((Object) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Element element0 = new Element("prszrve", "prszrve", "prszrve");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertEquals("prszrve", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Attribute attribute0 = new Attribute("m", "m");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Element element0 = new Element("prszerve");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element1 = element0.setNamespace(namespace0);
      QName qName0 = new QName("prszerve");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element1);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      assertEquals("http://www.w3.org/XML/1998/namespace", jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "'4Xio.2C~OT}5C");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, (Locale) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("fQhqX");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      CDATA cDATA0 = new CDATA("org.jdom.DescendanIterator");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) "4(indexx", (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      QName qName0 = new QName("2{<]d;eE");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) qName0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      Comment comment0 = new Comment("4(indexx");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) comment0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      QName qName0 = new QName("3T-emzlE@2>sj", "3T-emzlE@2>sj");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      Object object0 = new Object();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, object0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      QName qName0 = new QName("2{<]d;eE");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) variablePointer0.WHOLE_COLLECTION, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Element element0 = new Element("prszerve");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element1 = element0.setNamespace(namespace0);
      QName qName0 = new QName("prszerve", "prszerve");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element1, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Element element0 = new Element("prszerve");
      QName qName0 = new QName("prszerve", "prszerve");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Element element0 = new Element("o", "o");
      QName qName0 = new QName("*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Element element0 = new Element("prszeree");
      QName qName0 = new QName("prszeree", "prszeree");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Locale locale0 = new Locale("Unknown names/ace'prefix: ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("PdA$");
      HashMap<ProcessingInstruction, Locale.LanguageRange> hashMap0 = new HashMap<ProcessingInstruction, Locale.LanguageRange>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("space", hashMap0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("prszerve");
      Element element1 = element0.setText("prszerve");
      Element element2 = new Element("prszerve", "prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element2, locale0);
      jDOMNodePointer0.setValue(element1);
      assertEquals(1, element2.getContentSize());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("prszerve");
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("prszerve", "prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue(jDOMNodePointer0);
      assertEquals(1, jDOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("przervo", "przervo", "przervo");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "przervo");
      QName qName0 = new QName("przervo", " is not a legal character in public IDs");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(nodeNameTest0, locale0, "http://www.w3.org/XML/1998/namespace");
      jDOMNodePointer0.setValue(jDOMNodePointer1);
      assertEquals("przervo", jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Element element0 = new Element("prszerve");
      QName qName0 = new QName("prszerve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      Comment comment0 = new Comment("org.jdom.ContentList$FilterListIterator");
      jDOMNodePointer0.setValue(comment0);
      assertFalse(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("prszerve", "prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("U", "http://www.w3.org/2000/xmlns/");
      jDOMNodePointer0.setValue(processingInstruction0);
      assertEquals("http://www.w3.org/2000/xmlns/", processingInstruction0.getValue());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CDATA cDATA0 = new CDATA("prszerve");
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null, "http://www.w3.org/2000/xmlns/");
      jDOMNodePointer0.setValue(cDATA0);
      assertEquals(1, jDOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      QName qName0 = new QName("prszeree");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.setValue(variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: prszeree
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, cDATA0);
      jDOMNodePointer1.setValue(jDOMNodePointer1);
      assertEquals("http://www.w3.org/XML/1998/namespace", cDATA0.getValue());
      assertEquals("http://www.w3.org/XML/1998/namespace", cDATA0.getText());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      Text text0 = new Text((String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.setValue((Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      CDATA cDATA0 = new CDATA("prszerve");
      Element element0 = new Element("prszerve", "prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer1.setValue(jDOMNodePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HashMap<Integer, CDATA> hashMap0 = new HashMap<Integer, CDATA>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.jdom.DataConversionException", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null, "ARg.b`7|0Cl");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Comment comment0 = new Comment("mZ3KU5x<<");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("mZ3KU5x<<", object0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Element element0 = new Element("prszervoe", "prszervoe", "prszervoe");
      Element element1 = element0.setText("prszervoe");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "prszervoe");
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("prszervoe", object0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Element element0 = new Element("preserve");
      QName qName0 = new QName("preserve", "preserve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      Document document0 = new Document();
      Document document1 = document0.addContent((Content) element0);
      jDOMNodePointer0.setValue(document1);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Element element0 = new Element("m", "m", "m");
      Comment comment0 = new Comment("@-uixV]");
      Element element1 = element0.setContent((Content) comment0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element1);
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "");
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      HashMap<NodeNameTest, JDOMNodePointer> hashMap0 = new HashMap<NodeNameTest, JDOMNodePointer>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.jdom.DataConversionException", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "org.jdom.DataConversionException");
      QName qName0 = jDOMNodePointer0.getName();
      assertEquals("org.jdom.DataConversionException", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("prszerve", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, document0);
      boolean boolean0 = jDOMNodePointer1.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = new Document((Element) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null, "fQhqX");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.isLeaf();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Root element not set
//         //
//         verifyException("org.jdom.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("prszerve");
      element0.setText("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("YPOt(6", locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      CDATA cDATA0 = new CDATA("prszerve");
      Element element0 = new Element("prszerve");
      element0.addContent((Content) cDATA0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "prszerve");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, cDATA0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      CDATA cDATA0 = new CDATA("prszerve");
      Element element0 = new Element("prszerve");
      element0.addContent((Content) cDATA0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("prszerve", locale0);
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer(jDOMNodePointer0, element0);
      int int0 = jDOMNodePointer2.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      CDATA cDATA0 = new CDATA("prszerve");
      Element element0 = new Element("prszerve");
      Element element1 = element0.setText("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "prszerve");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, cDATA0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Attribute attribute0 = new Attribute("m", "m");
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(attribute0.NOTATION_TYPE, locale0, "7R8#bfL");
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, attribute0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Attribute attribute0 = new Attribute("h", "h");
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "i=F1kckk;");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(attribute0, locale0);
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer(jDOMNodePointer1, (QName) null, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Unknown namespace prefix: ", locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "i=F1kckk;");
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer(jDOMNodePointer0, (QName) null, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Element element0 = new Element("prszerve", "prszerve");
      QName qName0 = new QName("", "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The name \"\" is not legal for JDOM/XML attributes: XML names cannot be null or empty.
//         //
//         verifyException("org.jdom.Attribute", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("YPOt(6", (Locale) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("</");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = new Document((Element) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null, "?nTdz675^");
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.getNamespaceURI(" rwW;s1%\nvDX#y^");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Root element not set
//         //
//         verifyException("org.jdom.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("prszerve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("prszerve");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver1 = jDOMNodePointer0.getNamespaceResolver();
      assertSame(namespaceResolver1, namespaceResolver0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Element element0 = new Element("O");
      QName qName0 = new QName("*", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "O");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1181));
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, (Locale) null);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-472), (Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0);
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      QName qName0 = new QName("3T-emzlE@2>sj", "3T-emzlE@2>sj");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, variablePointer0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Locale locale0 = new Locale("space", "space");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("ABvT}tFT.Dd", locale0);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertEquals("ABvT}tFT.Dd", object0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("YPOt(6", locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4467);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Nip", "Nip");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'Nip:Nip'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "");
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("YPOt(6", locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("YPOt(6");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("!", (Locale) null, "org.jdom.DescendanIterator");
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("java.lang.Object@0000000007");
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "");
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
