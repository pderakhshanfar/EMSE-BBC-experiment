/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 20:27:18 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.util.TypeConverter;
import org.apache.commons.jxpath.util.TypeUtils;
import org.apache.html.dom.HTMLAreaElementImpl;
import org.apache.html.dom.HTMLBodyElementImpl;
import org.apache.html.dom.HTMLDListElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFormElementImpl;
import org.apache.html.dom.HTMLFrameSetElementImpl;
import org.apache.html.dom.HTMLInputElementImpl;
import org.apache.html.dom.HTMLLabelElementImpl;
import org.apache.html.dom.HTMLOptionElementImpl;
import org.apache.html.dom.HTMLParagraphElementImpl;
import org.apache.html.dom.HTMLParamElementImpl;
import org.apache.html.dom.HTMLScriptElementImpl;
import org.apache.html.dom.HTMLTableColElementImpl;
import org.apache.html.dom.HTMLTableElementImpl;
import org.apache.html.dom.HTMLTableRowElementImpl;
import org.apache.html.dom.HTMLTableSectionElementImpl;
import org.apache.wml.dom.WMLBigElementImpl;
import org.apache.wml.dom.WMLBrElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLInputElementImpl;
import org.apache.wml.dom.WMLMetaElementImpl;
import org.apache.wml.dom.WMLPostfieldElementImpl;
import org.apache.wml.dom.WMLTdElementImpl;
import org.apache.wml.dom.WMLWmlElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.Text;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "7Wu");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLInputElementImpl0, locale0, "7Wu");
      Node node0 = hTMLDocumentImpl0.importNode(hTMLInputElementImpl0, false);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(node0, locale0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.US;
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "/", "/", "/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "[");
      Locale locale0 = Locale.forLanguageTag("[");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParamElementImpl0, locale0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID((JXPathContext) null, "[");
      assertTrue(nullPointer0.isLeaf());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("1|Y29L95`(H>");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "Ar$$%_%NX", "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      // Undeclared exception!
      dOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getNamespaceURI("Il/P<W3j}");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(wMLDocumentImpl0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, element0);
      dOMNodePointer0.setValue(hTMLElement0);
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("7Wu");
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "Factory could not create a child node for path: ");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "2]e6[0n(;tN4P3qs<");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("DIV", "DIV");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "DIV");
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertEquals("DIV", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "");
      String string0 = DOMNodePointer.getLocalName(entityImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "\f4|S");
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertSame(object0, hTMLDocumentImpl0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Locale locale0 = new Locale("F~mZ");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      Object object0 = dOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      String string0 = DOMNodePointer.findEnclosingAttribute(deferredDocumentImpl0, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(":yO<S?iC;826");
      // Undeclared exception!
//      try { 
        DOMNodePointer.testNode((Node) null, (NodeTest) processingInstructionTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "dNlnF(h");
      QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("$j", "$j");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer(variablePointer0, qName0, "disabled");
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("1|Y29L95`(H>");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0, "}7Zmhdmt^Yo| ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLBrElementImpl wMLBrElementImpl0 = new WMLBrElementImpl(wMLDocumentImpl0, "m~hf)D WN9kT7SHxvN");
      TypeConverter typeConverter0 = mock(TypeConverter.class, new ViolatedAssumptionAnswer());
      doReturn(wMLBrElementImpl0).when(typeConverter0).convert(any() , any(java.lang.Class.class));
      TypeUtils.setTypeConverter(typeConverter0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue("profile");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.wml.dom.WMLBrElementImpl cannot be cast to java.lang.String
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "=");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementDefinitionImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(elementDefinitionImpl0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      hTMLDocumentImpl0.setReadOnly(true, true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(wMLDocumentImpl0, "xml");
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(documentTypeImpl0, false);
      QName qName0 = new QName("Factory could not create a child node for path: ");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.isLeaf();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CommentImpl commentImpl0 = new CommentImpl((CoreDocumentImpl) null, (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, commentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.isLanguage((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getValue();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      // Undeclared exception!
//      try { 
        DOMNodePointer.getPrefix((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "org.apache.commons.jxpath.util.TypeUtils$1");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getPointerByID((JXPathContext) null, "Unknown namespace prefix: ");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, (String) null, (String) null, "J[L#[?<");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLInputElementImpl wMLInputElementImpl0 = new WMLInputElementImpl(wMLDocumentImpl0, (String) null);
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) wMLInputElementImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, (String) null, (String) null, "IVy V5abxr`eC$");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) documentTypeImpl0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.DocumentTypeImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI("e");
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, (Locale) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "preserve");
      dOMNodePointer0.setValue(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "}7Zmhdmt^Yo| ");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.EntityImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "\f4|S");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
//      try { 
        DOMNodePointer.getLocalName((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HTMLFrameSetElementImpl hTMLFrameSetElementImpl0 = new HTMLFrameSetElementImpl((HTMLDocumentImpl) null, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFrameSetElementImpl0, (Locale) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getLanguage();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "5Y/!817T&,{o");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDListElementImpl hTMLDListElementImpl0 = new HTMLDListElementImpl(hTMLDocumentImpl0, "[");
      // Undeclared exception!
//      try { 
        DOMNodePointer.findEnclosingAttribute(hTMLDListElementImpl0, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.html.dom.HTMLElementImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      QName qName0 = new QName((String) null, "[");
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "9*O'f*0");
      HTMLElement hTMLElement0 = hTMLTableRowElementImpl0.insertCell(Integer.MIN_VALUE);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // DOM002 Illegal character
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      QName qName0 = new QName("X", "CW");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "<<unknown namespace>>", "<<unknown namespace>>", "<<unknown namespace>>");
      QName qName0 = new QName("BODY");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("dWu");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      QName qName0 = new QName("Factory could not create_a uhild node for path: ", "B`w{+IW55Q+;qiSfkx");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: Factory could not create_a uhild node for path: :B`w{+IW55Q+;qiSfkx
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.forLanguageTag("");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'null'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = new Locale("K1?LjAkK(~*35_:j", "org.apache.html.dom.HTMLParamElementImpl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "cWu");
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, locale0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, false, nodePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: HTTP://WWW.W3.ORG/2000/XMLNS/
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(93);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer(variablePointer0, (QName) null, (Object) null);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLMetaElementImpl wMLMetaElementImpl0 = new WMLMetaElementImpl(wMLDocumentImpl0, "=");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLMetaElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: '='
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("cWu");
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "Factory could not create a child node for path: ");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "cWu");
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, nodeNameTest0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null, "headers");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.attributeIterator((QName) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, false);
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "}7Zmhdmt^Yo| ");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.asPath();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.JXPathIntrospector", (String) null, "http://www.w3.org/XML/1998/namespace");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLBigElementImpl wMLBigElementImpl0 = new WMLBigElementImpl(wMLDocumentImpl0, "97*Rlk <|[R{::FeEq");
      String string0 = DOMNodePointer.getNamespaceURI((Node) wMLBigElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl((DocumentType) null);
      Element element0 = pSVIDocumentImpl0.createElementNS("*", ":i_w8zGa", "*");
      String string0 = DOMNodePointer.getNamespaceURI((Node) element0);
      assertNotNull(string0);
      assertEquals("*", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOptionElementImpl hTMLOptionElementImpl0 = new HTMLOptionElementImpl(hTMLDocumentImpl0, ":<[P0AIZcPmENP");
      String string0 = DOMNodePointer.getLocalName(hTMLOptionElementImpl0);
      assertEquals("<[P0AIZCPMENP", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "#8'aV}2", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
      String string0 = DOMNodePointer.getLocalName(pSVIElementNSImpl0);
      assertEquals("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      String string0 = DOMNodePointer.getPrefix(deferredDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, ": ");
      String string0 = DOMNodePointer.getPrefix(wMLWmlElementImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "[");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLParamElementImpl0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, deferredDocumentImpl0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("7Wu");
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "Factory could not create a child node for path: ");
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      Locale locale0 = Locale.US;
      WMLTdElementImpl wMLTdElementImpl0 = new WMLTdElementImpl(wMLDocumentImpl0, "org.apache.commons.jxpath.util.ClassLoaderUtil");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLTdElementImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      String string0 = dOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLPostfieldElementImpl wMLPostfieldElementImpl0 = new WMLPostfieldElementImpl(wMLDocumentImpl0, "xmnss:");
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLPostfieldElementImpl0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "xml");
      dOMNodePointer0.attributeIterator(qName0);
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "7-");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLScriptElementImpl0, locale0, "java.util.Locale@0000000007");
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("7Wu");
      QName qName0 = new QName(".e", "xmlns");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, (Locale) null);
      dOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("dWu");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      Object object0 = dOMNodePointer0.getBaseValue();
      assertSame(object0, element0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "!3S6B&,$Ag`");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLDocumentImpl0, locale0, "");
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      dOMNodePointer0.getNamespaceURI("color");
      QName qName0 = dOMNodePointer0.getName();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "fi-{.BW|2a");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLMetaElementImpl wMLMetaElementImpl0 = new WMLMetaElementImpl(wMLDocumentImpl0, "jVr4+lCu_");
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, wMLMetaElementImpl0, (Locale) null);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.US;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "/", "xmlns", "/");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(deferredDocumentImpl0, "xmlns", "FCW{<'<84uq2yg;ytL", "FCW{<'<84uq2yg;ytL");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, attrNSImpl0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "pres&erGve", "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer((QName) null, pSVIAttrNSImpl0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Locale locale0 = Locale.UK;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl((DocumentType) null);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(pSVIDocumentImpl0, "org.apache.commons.jxpath.ClassFunctions", "org.apache.commons.jxpath.ClassFunctions", "org.apache.commons.jxpath.ClassFunctions");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIDocumentImpl0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "8^ro%KX+w2");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0, "IVy V5abxr`eC$");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, documentTypeImpl0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer1.getPointerByID((JXPathContext) null, "");
      assertEquals(Integer.MIN_VALUE, nullPointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Locale locale0 = Locale.US;
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl((CoreDocumentImpl) null, "y[", "y[");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("y[", object0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.forLanguageTag("[");
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "[", (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      TextImpl textImpl0 = new TextImpl(deferredDocumentImpl0, (String) null);
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, (String) null);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      CDATASection cDATASection0 = deferredDocumentImpl0.createCDATASection("1|Y29L95`(H>");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "}7Zmhdmt^Yo| ");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, cDATASection0);
      Object object0 = dOMNodePointer1.getValue();
      assertEquals("1|Y29L95`(H>", object0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CommentImpl commentImpl0 = new CommentImpl((CoreDocumentImpl) null, (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, commentImpl0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CommentImpl commentImpl0 = new CommentImpl((CoreDocumentImpl) null, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, commentImpl0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("<<unknown namespace>>", object0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "-M_$D[iSs%.&");
      hTMLParagraphElementImpl0.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns", ">'");
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLParagraphElementImpl0);
      assertEquals(">'", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(deferredDocumentImpl0, (String) null, "Unknown namespace prefix: ", "Unknown namespace prefix: ");
      String string0 = DOMNodePointer.getPrefix(attrNSImpl0);
      assertEquals("Unknown namespace prefix", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      Object object0 = dOMNodePointer0.clone();
      boolean boolean0 = dOMNodePointer0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("AREA");
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(element0, locale0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CommentImpl commentImpl0 = new CommentImpl((CoreDocumentImpl) null, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, commentImpl0);
      boolean boolean0 = dOMNodePointer0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.forLanguageTag("mm_q50XD!!]oN^0~-");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "'I)", "%S*3/>Ck");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      // Undeclared exception!
      dOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.forLanguageTag("");
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "/", "http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, locale0, "/");
      HTMLFormElementImpl hTMLFormElementImpl0 = new HTMLFormElementImpl(hTMLDocumentImpl0, "XO:>F85Ts=QMweDX");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLFormElementImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id('/')/>F85TS=QMWEDX[1]", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("cWu");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("h[J)=]");
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer((NodePointer) null, qName0, processingInstructionTest0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "f)=G>`p7eP[f>u.4n", "http://www.w3.org/2000/xmlns/", (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Locale locale0 = Locale.US;
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl((CoreDocumentImpl) null, "9^'a5BS|.GHa", "bm]MMY!ZGji");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("R?_<v<#");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, comment0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/processing-instruction('9^'a5BS|.GHa')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.forLanguageTag("[");
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "[", (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/processing-instruction('[')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.forLanguageTag("");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      CDATASection cDATASection0 = deferredDocumentImpl0.createCDATASection("1|Y29L95`(H>");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "}7Zmhdmt^Yo| ");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, cDATASection0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id('}7Zmhdmt^Yo| ')/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("Cannot remove root DOM node");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/BODY[1]", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, false);
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "}7Zmhdmt^Yo| ");
      String string0 = dOMNodePointer0.asPath();
      assertEquals("id('}7Zmhdmt^Yo| ')", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "//WWW.W3.ORG/XML/1998/NAMESPACE");
      Locale locale0 = Locale.forLanguageTag("//WWW.W3.ORG/XML/1998/NAMESPACE");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParamElementImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      dOMNodePointer0.remove();
      assertTrue(dOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "y[");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParamElementImpl0, locale0);
      QName qName0 = new QName("y[", ">~$5@");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Unknown namespace prefix: y[
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("BODY", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "[");
      Locale locale0 = Locale.forLanguageTag("[");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParamElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, 0, (Object) hTMLBodyElementImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.setValue(dOMNodePointer0);
      assertTrue(dOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "7-");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLScriptElementImpl0, locale0, "java.util.Locale@0000000007");
      dOMNodePointer0.setValue("preserve");
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("preserve", object0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CommentImpl commentImpl0 = new CommentImpl((CoreDocumentImpl) null, "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, commentImpl0);
      dOMNodePointer0.setValue((Object) null);
      assertFalse(dOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("wp2L{:nZ");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'wp2L{:nZ'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("0xA?iJ{3BIZyL&1s>I");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0, "o4");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue((Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0, "");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue("");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      TextImpl textImpl0 = new TextImpl(hTMLDocumentImpl0, "org.jdom.Comment");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, (Locale) null);
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.setValue(hTMLLabelElementImpl0);
      assertEquals(Integer.MIN_VALUE, dOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "-M_$D[iSs%.&");
      hTMLParagraphElementImpl0.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns", "R");
      String string0 = DOMNodePointer.findEnclosingAttribute(hTMLParagraphElementImpl0, "xmlns");
      assertNotNull(string0);
      assertEquals("R", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      boolean boolean0 = dOMNodePointer0.isLanguage("Z&5G::TS%}Y");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "5:xtSo-qVKg'FgQ@x2[");
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getLinks();
      Locale locale0 = new Locale("K1?LjAkK(~*35_:j", "org.apache.html.dom.HTMLParamElementImpl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "cWu");
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "-M_$D[iSs%.&");
      hTMLParagraphElementImpl0.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns", "R");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParagraphElementImpl0, (Locale) null);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNotNull(string0);
      assertEquals("R", string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getNamespaceURI("");
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "7Wu");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLInputElementImpl0, locale0, "7Wu");
      dOMNodePointer0.getNamespaceURI("Sj}./In%czRp-D(i0W");
      String string0 = dOMNodePointer0.getNamespaceURI("Sj}./In%czRp-D(i0W");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ENGLISH;
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLTableCellElementImpl@0000000003");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.insertRow(2147483645);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = new QName("xml", "xml");
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertFalse(nodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      TextImpl textImpl0 = new TextImpl(hTMLDocumentImpl0, "org.jdom.Comment");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, (Locale) null);
      String string0 = dOMNodePointer0.getNamespaceURI((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(documentImpl0, "/PjfUmnSm#S", "/PjfUmnSm#S");
      QName qName0 = new QName("Cannot create path:", "Cannot create path:");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, processingInstructionImpl0);
      QName qName1 = dOMNodePointer0.getName();
      assertEquals("/PjfUmnSm#S", qName1.toString());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "8N7j\"%XxiOa'u,xwug", (String) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableColElementImpl hTMLTableColElementImpl0 = new HTMLTableColElementImpl(hTMLDocumentImpl0, "vsen");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLTableColElementImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("1|Y29L95`(H>");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) cDATASection0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "7Wu");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLInputElementImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "HTMLLinkElementImpl", "HTMLLinkElementImpl");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      TextImpl textImpl0 = new TextImpl();
      boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) deferredDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "#8'aV}2", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("FONT");
      boolean boolean0 = DOMNodePointer.testNode((Node) pSVIElementNSImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("cWu");
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "Factory could not create a child node for path: ");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "cWu");
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("CWU", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "[");
      QName qName0 = new QName("[", "[");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "[");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLLabelElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      QName qName0 = new QName("wml");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl((DocumentType) null);
      Element element0 = pSVIDocumentImpl0.createElementNS("wml", "wml");
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "Uno\" namep.ce pPefix: ");
      QName qName0 = new QName("*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLScriptElementImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      QName qName0 = new QName("*", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("Factory could not create_a uhild node for path: ", "B`w{+IW55Q+;qiSfkx");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "(UuCaiBKpZYk?Idz|Np");
      boolean boolean0 = DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl((HTMLDocumentImpl) null, "`9yek_0n]gJs[?rIqL,");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLTableSectionElementImpl0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      NodeIterator nodeIterator0 = dOMNodePointer0.childIterator(processingInstructionTest0, false, (NodePointer) null);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ENGLISH;
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "xmlns");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.insertRow(507);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = new QName("xmlns", "xmlns");
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals(1, nodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("dWu");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      QName qName0 = new QName("Factory could not create_a uhild node for path: ", "B`w{+IW55Q+;qiSfkx");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "!3S6B&,$Ag`");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isActual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      NodeIterator nodeIterator0 = dOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "%TT1y");
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("Cannot remove root DOM node");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0);
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("Cannot remove root DOM node");
      assertFalse(nodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("7Wu");
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "Factory could not create a child node for path: ");
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) hTMLDocumentImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "-M_$D[iSs%.&");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParagraphElementImpl0, (Locale) null);
      boolean boolean0 = dOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CommentImpl commentImpl0 = new CommentImpl((CoreDocumentImpl) null, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, commentImpl0);
      String string0 = dOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getNamespaceURI("b?[QQ-#8Zz`(");
      DOMNodePointer dOMNodePointer1 = (DOMNodePointer)dOMNodePointer0.getPointerByID((JXPathContext) null, "");
      assertTrue(dOMNodePointer1.isRoot());
  }
}
