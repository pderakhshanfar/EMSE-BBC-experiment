/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 20:25:24 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.util.TypeConverter;
import org.apache.commons.jxpath.util.TypeUtils;
import org.apache.html.dom.HTMLAreaElementImpl;
import org.apache.html.dom.HTMLBaseElementImpl;
import org.apache.html.dom.HTMLBaseFontElementImpl;
import org.apache.html.dom.HTMLBodyElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFontElementImpl;
import org.apache.html.dom.HTMLHeadingElementImpl;
import org.apache.html.dom.HTMLInputElementImpl;
import org.apache.html.dom.HTMLIsIndexElementImpl;
import org.apache.html.dom.HTMLLabelElementImpl;
import org.apache.html.dom.HTMLLegendElementImpl;
import org.apache.html.dom.HTMLMapElementImpl;
import org.apache.html.dom.HTMLMenuElementImpl;
import org.apache.html.dom.HTMLMetaElementImpl;
import org.apache.html.dom.HTMLOptionElementImpl;
import org.apache.html.dom.HTMLParagraphElementImpl;
import org.apache.html.dom.HTMLPreElementImpl;
import org.apache.html.dom.HTMLScriptElementImpl;
import org.apache.html.dom.HTMLStyleElementImpl;
import org.apache.html.dom.HTMLTableCaptionElementImpl;
import org.apache.html.dom.HTMLTableCellElementImpl;
import org.apache.html.dom.HTMLTableColElementImpl;
import org.apache.html.dom.HTMLTableElementImpl;
import org.apache.html.dom.HTMLTableRowElementImpl;
import org.apache.html.dom.HTMLTableSectionElementImpl;
import org.apache.html.dom.HTMLTextAreaElementImpl;
import org.apache.html.dom.HTMLTitleElementImpl;
import org.apache.wml.dom.WMLAccessElementImpl;
import org.apache.wml.dom.WMLBrElementImpl;
import org.apache.wml.dom.WMLDoElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLFieldsetElementImpl;
import org.apache.wml.dom.WMLNoopElementImpl;
import org.apache.wml.dom.WMLOptionElementImpl;
import org.apache.wml.dom.WMLPElementImpl;
import org.apache.wml.dom.WMLPrevElementImpl;
import org.apache.wml.dom.WMLSelectElementImpl;
import org.apache.wml.dom.WMLSmallElementImpl;
import org.apache.wml.dom.WMLStrongElementImpl;
import org.apache.wml.dom.WMLTemplateElementImpl;
import org.apache.wml.dom.WMLTimerElementImpl;
import org.apache.wml.dom.WMLTrElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.ElementImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.apache.xerces.dom.events.EventImpl;
import org.apache.xerces.dom3.UserDataHandler;
import org.apache.xerces.impl.XMLErrorReporter;
import org.apache.xerces.impl.dtd.XMLDTDDescription;
import org.apache.xerces.parsers.CachingParserPool;
import org.apache.xerces.parsers.DTDConfiguration;
import org.apache.xerces.parsers.IntegratedParserConfiguration;
import org.apache.xerces.parsers.NonValidatingConfiguration;
import org.apache.xerces.parsers.SecurityConfiguration;
import org.apache.xerces.util.SymbolTable;
import org.apache.xerces.util.XMLGrammarPoolImpl;
import org.apache.xerces.util.XMLResourceIdentifierImpl;
import org.apache.xerces.xni.grammars.XMLGrammarPool;
import org.apache.xerces.xni.parser.XMLComponentManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.Text;
import org.w3c.dom.events.EventException;
import org.w3c.dom.events.EventListener;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      dOMNodePointer0.compareChildNodePointers(nodePointer0, dOMNodePointer0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, attrNSImpl0, (Locale) null);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(deferredDocumentImpl0, "org.apache.wml.dom.WMLImgElementImpl", "org.apache.wml.dom.WMLImgElementImpl");
      deferredDocumentImpl0.setDeferredAttribute(9, "org.apache.wml.dom.WMLImgElementImpl", (String) null, "FOUN@T37", true, true, (Object) processingInstructionImpl0);
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getValue();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.DeferredDocumentImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      dOMNodePointer0.compareChildNodePointers(nodePointer0, dOMNodePointer0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>", "<<unknown namespace>>");
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, attrNSImpl0, (Locale) null);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "xml");
      hTMLPreElementImpl0.getWidth();
      QName qName0 = new QName("*");
      hTMLPreElementImpl0.getNextSibling();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "xml");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLPreElementImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      
      String string0 = DOMNodePointer.getLocalName(hTMLDocumentImpl0);
      assertEquals("#document", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl((HTMLDocumentImpl) null, "]");
      QName qName0 = new QName("*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLPreElementImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(deferredDocumentImpl0, "org.apache.wml.dom.WMLImgElementImpl", "org.apache.wml.dom.WMLImgElementImpl");
      deferredDocumentImpl0.setDeferredAttribute(9, "org.apache.wml.dom.WMLImgElementImpl", (String) null, "FOUN@T37", false, false, (Object) processingInstructionImpl0);
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getValue();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // type: 20
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createTHead();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLTableElementImpl0);
      int int0 = dOMNodePointer2.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.KOREA;
      Node node0 = hTMLDocumentImpl0.renameNode(hTMLElement0, "xml:space", "DocType");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, node0);
      // Undeclared exception!
      dOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.FRANCE;
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      dOMNodePointer0.setValue(hTMLElement0);
      assertEquals(Integer.MIN_VALUE, dOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(documentImpl0, ":K?a~d%s5qi");
      documentImpl0.getLength();
      Node node0 = entityReferenceImpl0.cloneNode(false);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, (Locale) null, ":K?a~d%s5qi");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer0.getName();
      documentImpl0.getTextContent();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, node0);
      DOMNodePointer.getPrefix(entityReferenceImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "p'BW>Mr+KSF171$Y", "p'BW>Mr+KSF171$Y");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "B<=AcT'Qk+g(0;uoTM", "http://www.w3.org/XML/1998/namespace", "B<=AcT'Qk+g(0;uoTM");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTemplateElementImpl wMLTemplateElementImpl0 = new WMLTemplateElementImpl(wMLDocumentImpl0, "B<=AcT'Qk+g(0;uoTM");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLTemplateElementImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/processing-instruction('p'BW>Mr+KSF171$Y')[1]/B<=AcT'Qk+g(0;uoTM[1]", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Element element0 = pSVIDocumentImpl0.createElementNS("id('", "id('", "id('");
      String string0 = DOMNodePointer.getNamespaceURI((Node) element0);
      assertEquals("id('", string0);
      assertNotNull(string0);
      
      Locale locale0 = Locale.GERMANY;
      locale0.getDisplayScript();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "id('");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.lookupTag(linkedList0, list0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIDocumentImpl0);
      pSVIDocumentImpl0.getReadOnly();
      dOMNodePointer1.getNamespaceResolver();
      DOMNodePointer.findEnclosingAttribute(pSVIDocumentImpl0, "id('");
      DOMNodePointer.getLocalName(pSVIDocumentImpl0);
      String string1 = dOMNodePointer0.asPath();
      assertEquals("id('id(&apos;')", string1);
      
      locale0.clone();
      dOMNodePointer0.namespacePointer("id('");
      int int0 = dOMNodePointer1.getLength();
      assertEquals(1, int0);
      
      dOMNodePointer0.getValue();
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      assertNotNull(namespaceResolver0);
      
      String string2 = dOMNodePointer0.getNamespaceURI("id('id(&apos;')");
      assertNull(string2);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      pSVIDocumentImpl0.addEventListener("kb3", eventListener0, true);
      ElementImpl elementImpl0 = new ElementImpl(pSVIDocumentImpl0, "o");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementImpl0, (Locale) null, "org.jdom.Document");
      QName qName0 = new QName("xml", ".~P1}Dv0HMh0=");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getLocale();
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
      assertTrue(boolean0);
      
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, ".");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("s$%h<");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer(variablePointer0, qName0, ".");
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      Text text0 = deferredDocumentImpl0.createTextNode("Eg^nQ9]u");
      boolean boolean0 = DOMNodePointer.testNode((Node) text0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer1 = (DOMNodePointer)dOMNodePointer0.getPointerByID((JXPathContext) null, "");
      assertEquals(Integer.MIN_VALUE, dOMNodePointer1.getIndex());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "c_^qH\"Ak;");
      boolean boolean0 = DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRANCE;
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer((QName) null, documentFragmentImpl0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer(dOMNodePointer0, qName0, (Object) null);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "G", ": !RMYJf4=>H&:|:B_i");
      Locale locale0 = Locale.TAIWAN;
      TextImpl textImpl0 = new TextImpl((CoreDocumentImpl) null, "d");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      String string0 = dOMNodePointer0.toString();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "G", ": !RMYJf4=>H&:|:B_i");
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, ": !RMYJf4=>H&:|:B_i");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      cDATASectionImpl0.getNodeType();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((short)4);
      DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) nodeTypeTest0);
      QName qName0 = new QName("=");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl1.createElement("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl1, "}.!dA6TPrR`>_YAj%");
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((Object) hTMLIsIndexElementImpl0);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer(nodePointer0, qName0, hTMLFontElementImpl0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ElementImpl elementImpl0 = new ElementImpl(pSVIDocumentImpl0, (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementImpl0, (Locale) null, "xmlns");
      QName qName0 = new QName("xmlns", (String) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "bSy'#z*?n=3");
      Node node0 = hTMLDocumentImpl0.renameNode(hTMLLabelElementImpl0, "?-Xf!R+9;5gwn", "UL");
      Locale locale0 = Locale.KOREA;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) set0, locale_FilteringMode0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0, "UL");
      dOMNodePointer0.setValue("?-Xf!R+9;5gwn");
      Locale locale1 = Locale.KOREAN;
      locale0.getDisplayLanguage(locale1);
      dOMNodePointer0.isCollection();
      dOMNodePointer0.getNamespaceResolver();
      QName qName0 = new QName("UL", "UL");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer.testNode(node0, (NodeTest) nodeNameTest0);
      HTMLTableColElementImpl hTMLTableColElementImpl0 = new HTMLTableColElementImpl(hTMLDocumentImpl0, "QPs:W:v~h%80zr1<|b");
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((Object) hTMLTableColElementImpl0);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0, "http://www.w3.org/XML/1998/namespace");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "?llKu:qS9gfyY<h<!G", "?llKu:qS9gfyY<h<!G", "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLPrevElementImpl wMLPrevElementImpl0 = new WMLPrevElementImpl(wMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.setValue(wMLPrevElementImpl0);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      hTMLDocumentImpl0.setReadOnly(true, true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI("/NMF=Wx{Zh)3CNh|");
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "+", (String) null);
      Locale locale0 = new Locale("Ur7o%\"M\u0004{S=g9]>zXG", ": !RMYJf4=>H&:|:Bi", "zfc.bF]iWJ");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      QName qName0 = new QName((String) null, "/processing-instruction('");
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.asPath();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "zfc.bF]iWJ", " is of unrecognized type and cannot be added", "*[`X.]");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAccessElementImpl wMLAccessElementImpl0 = new WMLAccessElementImpl(wMLDocumentImpl0, "S7+>U.mH|9C:");
      DOMNodePointer.getPrefix(wMLAccessElementImpl0);
      dOMNodePointer0.getValue();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      boolean boolean0 = false;
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      ElementImpl elementImpl0 = new ElementImpl(documentImpl0, (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementImpl0, (Locale) null, "xmlns");
      QName qName0 = new QName("xmlns", "<<unknown namespace>>");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(deferredDocumentImpl0, "id(", "zfc.bF]iWJ");
      Locale locale0 = new Locale("HTMLFormElementImpl", "HTMLFormElementImpl", "zfc.bF]iWJ");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<String> vector0 = new Vector<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) vector0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      assertEquals("id(", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(deferredDocumentImpl0, "id(", "zfc.bF]iWJ");
      Locale locale0 = new Locale("HTMLFormElementImpl", "HTMLFormElementImpl", "zfc.bF]iWJ");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "xmlns:");
      dOMNodePointer0.attributeIterator(qName0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/processing-instruction('id(')[1]", string0);
      
      DOMNodePointer.getPrefix(deferredDocumentImpl0);
      dOMNodePointer0.getValue();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(2);
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = DOMNodePointer.testNode((Node) attr0, (NodeTest) nodeTypeTest1);
      assertFalse(boolean0);
      
      String string0 = DOMNodePointer.getPrefix(attr0);
      assertEquals("http", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      QName qName0 = new QName("xml:lang", "OU`T\tBrv*>tN<CAl[7");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "xml:lang");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLMapElementImpl0);
      dOMNodePointer0.attributeIterator(qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: xml:lang:OU`T\tBrv*>tN<CAl[7
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getEncoding();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Vlyb~-!");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = new Boolean(true);
      Locale locale0 = Locale.ENGLISH;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer(nodePointer0, qName0, hTMLFontElementImpl0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment((String) null);
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("GNS\")DG5~E@+");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
      ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("ordered", "org.apache.commons.jxpath.ri.model.VariablePointer$1");
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      DOMNodePointer.getLocalName(documentImpl0);
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = new Locale("<<unknown namespace>>", "<<unknown namespace>>", "#document");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      Locale locale1 = (Locale)locale0.clone();
      SymbolTable symbolTable0 = new SymbolTable((short)9);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      XMLResourceIdentifierImpl xMLResourceIdentifierImpl0 = new XMLResourceIdentifierImpl((String) null, "#document", "caytt2EM dWH^pQ%", "org.apache.wml.dom.WMLFieldsetElementImpl");
      XMLDTDDescription xMLDTDDescription0 = new XMLDTDDescription(xMLResourceIdentifierImpl0, "");
      xMLGrammarPoolImpl0.removeGrammar(xMLDTDDescription0);
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SecurityConfiguration securityConfiguration1 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, "");
      Locale locale2 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(cDATASectionImpl0, locale1, "n8('/yGcgjYUDGP");
      TypeConverter typeConverter0 = mock(TypeConverter.class, new ViolatedAssumptionAnswer());
      doReturn(locale1).when(typeConverter0).convert(any() , any(java.lang.Class.class));
      TypeUtils.setTypeConverter(typeConverter0);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "`LyUJ", "'KfJp3or7", "xmlns");
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl((DocumentType) null);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl1, "IBhTQ2<]aJf8");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(wMLTrElementImpl0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.util.Locale cannot be cast to java.lang.String
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      HTMLStyleElementImpl hTMLStyleElementImpl0 = new HTMLStyleElementImpl(hTMLDocumentImpl0, ":wo*;IIm");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLStyleElementImpl0, locale0, ":wo*;IIm");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLStyleElementImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id(':wo*;IIm')/WO*;IIM[1]", string0);
      
      String string1 = DOMNodePointer.getLocalName(hTMLDocumentImpl0);
      assertEquals("#document", string1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "<Dq\"(aqv'4h^h o+}";
      ElementImpl elementImpl0 = new ElementImpl(hTMLDocumentImpl0, "<Dq\"(aqv'4h^h o+}");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "HTMTableCollementImpl");
      QName qName0 = new QName("HTMTableCollementImpl");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(elementImpl0, (Locale) null, "BODY");
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ElementImpl elementImpl0 = new ElementImpl(hTMLDocumentImpl0, "preserve");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "%M?7w\"!]C93d|uY");
      QName qName0 = new QName("<<unknown namespace>>", "g)6g@-84");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(elementImpl0, (Locale) null);
      QName qName1 = dOMNodePointer1.getName();
      NodePointer nodePointer0 = dOMNodePointer1.createAttribute((JXPathContext) null, qName1);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, nodePointer0);
      assertEquals(1, int0);
      assertEquals("preserve", qName1.toString());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      hTMLDocumentImpl0.writeln("<<unknown namespace>>");
      Text text0 = hTMLDocumentImpl0.createTextNode("/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0, (String) null);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path /text()[1]/@null, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLStyleElementImpl hTMLStyleElementImpl0 = new HTMLStyleElementImpl(hTMLDocumentImpl0, "xml");
      Locale locale0 = Locale.JAPANESE;
      locale0.getExtensionKeys();
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl0, "]");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableCellElementImpl0, locale0);
      dOMNodePointer0.getValue();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.writeln("http://www.w3.org/2000/xmlns/");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Factory could not create a child node for path: ");
      DOMNodePointer.testNode((Node) hTMLStyleElementImpl0, (NodeTest) nodeNameTest0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // DOM002 Illegal character
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      hTMLDocumentImpl0.getEncoding();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      hTMLElement0.getDir();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = Locale.ENGLISH;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      SymbolTable symbolTable0 = new SymbolTable();
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0);
      securityConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0, ",ifhs3\"IK");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id(',ifhs3&quot;IK')/BODY[1]", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName((String) null, "http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(nodeTypeTest0, true, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'http://www.w3.org/XML/1998/namespace'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ElementDefinitionImpl elementDefinitionImpl0 = hTMLDocumentImpl0.createElementDefinition("xmlns");
      elementDefinitionImpl0.needsSyncChildren(false);
      Locale locale0 = Locale.FRANCE;
      locale0.getDisplayCountry();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementDefinitionImpl0, locale0, "xml:lang");
      String string0 = "xml:space";
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "xml:space");
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      dOMNodePointer0.equals("xml:lang");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(elementDefinitionImpl0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment("r3u");
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "cd,7uDY9_U`)&d");
      cDATASectionImpl0.getNodeType();
      DOMNodePointer.getLocalName(hTMLDocumentImpl0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) cDATASectionImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      DocumentImpl documentImpl0 = new DocumentImpl((DocumentType) null, true);
      String string0 = "cellspacing";
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Element element0 = documentImpl0.createElementNS("5_UTD*LYYGKX16", "cellspacing");
      Node node0 = documentImpl0.cloneNode(true);
      DOMNodePointer.getPrefix(node0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, (Locale) null, "5_UTD*LYYGKX16");
      dOMNodePointer0.asPath();
      hTMLDocumentImpl0.getElementsByTagName("5_UTD*LYYGKX16");
      dOMNodePointer0.getLength();
      dOMNodePointer0.getNodeValue();
      dOMNodePointer0.getNamespaceResolver();
      dOMNodePointer0.getDefaultNamespaceURI();
      dOMNodePointer0.getNamespaceURI();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.isLanguage("id('5_UTD*LYYGKX16')");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl((HTMLDocumentImpl) null, ";");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "[<h>L_sMf\"Z{F";
      FileSystemHandling.shouldAllThrowIOExceptions();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "[<h>L_sMf\"Z{F");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLegendElementImpl0, locale0);
      Locale locale1 = Locale.CHINA;
      locale0.getDisplayCountry(locale1);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      nodeTypeTest0.toString();
      DOMNodePointer.testNode((Node) hTMLLegendElementImpl0, (NodeTest) nodeTypeTest0);
      dOMNodePointer0.isActual();
      dOMNodePointer0.isCollection();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl1, "\u4E2D\u56FD");
      hTMLInputElementImpl0.setAccessKey("node()");
      hTMLInputElementImpl0.toString();
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      dOMNodePointer0.setNamespaceResolver(namespaceResolver0);
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((Object) hTMLInputElementImpl0);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, (String) null);
      HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl(hTMLDocumentImpl0, "1I.pwV16cH011M");
      String string0 = DOMNodePointer.getLocalName(hTMLTableCaptionElementImpl0);
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
      dOMNodePointer0.toString();
      Object object0 = dOMNodePointer0.getValue();
      assertFalse(object0.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.isDefaultNamespace("g8&YonaN&@,n4H");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = "mns";
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "g8&YonaN&@,n4H");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "[");
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, basicVariables0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "xmlns:");
      UserDataHandler userDataHandler0 = mock(UserDataHandler.class, new ViolatedAssumptionAnswer());
      hTMLBodyElementImpl0.setUserData("Ch~2V/", (Object) hTMLDocumentImpl0, userDataHandler0);
      QName qName0 = new QName("xmlns:");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLBodyElementImpl0, (NodeTest) nodeNameTest0);
      Comment comment0 = hTMLDocumentImpl0.createComment("xmlns:");
      hTMLDocumentImpl0.abort();
      Locale locale0 = Locale.GERMANY;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      dOMNodePointer0.getName();
      dOMNodePointer0.equals(fileSystemHandling0);
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      hTMLDocumentImpl0.getEncoding();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = Locale.ENGLISH;
      locale0.getExtensionKeys();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      dOMNodePointer0.getValue();
      hTMLDocumentImpl0.writeln((String) null);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) nodeNameTest0);
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      QName qName1 = new QName("Factory could not create a child node for path: ");
      dOMNodePointer0.getNamespaceURI("root");
      QName qName2 = new QName("new");
      assertNull(qName2.getPrefix());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, ".]?oxV&%");
      hTMLPreElementImpl0.getWidth();
      QName qName0 = new QName(".]?oxV&%", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "*");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLPreElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      
      SymbolTable symbolTable0 = new SymbolTable();
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool0 = new CachingParserPool.ShadowedGrammarPool((XMLGrammarPool) null);
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, cachingParserPool_ShadowedGrammarPool0, (XMLComponentManager) null);
      Locale locale0 = securityConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLPreElementImpl0, locale0, "org.apache.html.dom.HTMLTableColElementImpl");
      dOMNodePointer0.isLanguage("An EntityRef is not allowed at the document root");
      boolean boolean1 = dOMNodePointer0.isLanguage("An EntityRef is not allowed at the document root");
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      hTMLDocumentImpl0.getEncoding();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = Locale.ENGLISH;
      locale0.getExtensionKeys();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      dOMNodePointer0.getValue();
      hTMLDocumentImpl0.writeln((String) null);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) nodeNameTest0);
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      dOMNodePointer0.getLength();
      dOMNodePointer0.asPath();
      dOMNodePointer0.getLanguage();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HTMLInputElementImpl hTMLInputElementImpl0 = null;
//      try {
        hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.html.dom.HTMLElementImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "igpgI");
      dOMNodePointer0.getNamespaceURI("igpgI");
      hTMLDocumentImpl0.createAttributeNS(": ", "refresh", "http://www.w3.org/XML/1998/namespace");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "[");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      String string0 = dOMNodePointer0.getNamespaceURI("igpgI");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, ":^P)+be/", ":^P)+be/", ":^P)+be/");
      Locale locale0 = Locale.ITALIAN;
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      QName qName0 = new QName(":^P)+be/");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      String string1 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
      
      String string2 = DOMNodePointer.getLocalName(documentTypeImpl0);
      assertEquals("^P)+be/", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      Text text0 = hTMLDocumentImpl0.createTextNode("preserve");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(text0, locale0);
      String string0 = dOMNodePointer1.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "datetime");
      cDATASectionImpl0.getNodeType();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "", "", "");
      Locale locale0 = Locale.ITALIAN;
      documentTypeImpl0.hasAttributes();
      locale0.getUnicodeLocaleAttributes();
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0, "");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, locale0);
      String string1 = dOMNodePointer1.getNamespaceURI("Factory did not assign a collection to variable '");
      assertNull(string1);
      
      dOMNodePointer1.asPath();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLFieldsetElementImpl wMLFieldsetElementImpl0 = new WMLFieldsetElementImpl(wMLDocumentImpl0, "HTMLTableSectionElementImpl");
      QName qName0 = new QName("enctype", "HTMLTableSectionElementImpl");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLFieldsetElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "datetime");
      cDATASectionImpl0.getNodeType();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "", "", "");
      Locale locale0 = Locale.ITALIAN;
      documentTypeImpl0.hasAttributes();
      locale0.getUnicodeLocaleAttributes();
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0, "RGzGbMT>fD<hK9?>eL2");
      QName qName0 = new QName("datetime");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((short)4);
      nodeTypeTest0.toString();
      DOMNodePointer.testNode((Node) documentTypeImpl0, (NodeTest) nodeTypeTest0);
      // Undeclared exception!
//      try { 
        DOMNodePointer.testNode((Node) null, (NodeTest) nodeTypeTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getNodeType();
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl1, "0V//", "|/lDL9Eu30j?G%:J?+", "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl1, "oD(>eH<}T");
      Locale locale1 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLSmallElementImpl0, locale1, "|/lDL9Eu30j?G%:J?+");
      dOMNodePointer0.setValue(locale1);
      dOMNodePointer0.getLanguage();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(wMLDocumentImpl1);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment((String) null);
      Locale locale0 = Locale.ITALIAN;
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string1 = dOMNodePointer0.asPath();
      dOMNodePointer0.getNode();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(")aU");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(comment0, locale0);
      Object object0 = dOMNodePointer1.getValue();
      assertTrue(object0.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("[ProcessingInstruction: ", "[ProcessingInstruction: ");
      hTMLDocumentImpl0.createComment("#document");
      Locale locale0 = Locale.ITALIAN;
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl((WMLDocumentImpl) null, "[ProcessingInstruction: ");
      Locale locale1 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLSmallElementImpl0, locale1, "http://www.w3.org/2000/xmlns/");
      WMLFieldsetElementImpl wMLFieldsetElementImpl0 = new WMLFieldsetElementImpl((WMLDocumentImpl) null, "org.apache.wml.dom.WMLBElementImpl@0000000005");
      dOMNodePointer0.setValue(wMLFieldsetElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getLanguage();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment("#document");
      Locale locale0 = Locale.ITALIAN;
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      QName qName0 = dOMNodePointer0.getName();
      HTMLTableColElementImpl hTMLTableColElementImpl0 = new HTMLTableColElementImpl(hTMLDocumentImpl1, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("[ProcessingInstruction: ", "[ProcessingInstruction: ");
      Locale locale0 = new Locale("[ProcessingInstruction: ", "p;ciPs$=]H<cYDQ");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "m/0", "m/0", "p;ciPs$=]H<cYDQ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSelectElementImpl wMLSelectElementImpl0 = new WMLSelectElementImpl(wMLDocumentImpl0, "[");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLSelectElementImpl0, locale0);
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "#document");
      QName qName1 = new QName("java.util.Locale@0000000007");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
      dOMNodePointer0.setValue(nodeNameTest0);
      Object object0 = dOMNodePointer0.getValue();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.isLeaf();
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      Locale locale1 = new Locale("Factory could not create a child node for path: ");
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, commentImpl0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.isLeaf();
      Locale locale1 = new Locale("_GLwVQv");
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      QName qName0 = dOMNodePointer0.getName();
      HTMLTableColElementImpl hTMLTableColElementImpl0 = new HTMLTableColElementImpl(hTMLDocumentImpl0, "_GLwVQv");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      documentImpl0.getNodeType();
      DOMNodePointer.getLocalName(documentImpl0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "", "", "#document");
      Locale locale0 = Locale.ITALIAN;
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(documentImpl0, "xmlns:");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, documentTypeImpl0);
      String string1 = dOMNodePointer0.asPath();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("#document");
      Locale locale0 = Locale.ITALIAN;
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, comment0);
      Locale locale1 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(comment0, locale1);
      dOMNodePointer2.asPath();
      dOMNodePointer0.isLanguage("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer2.getNode();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(dOMNodePointer2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertTrue(boolean0);
      
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.isNode();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "<<unknown namespace>>");
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      Node node0 = entityImpl0.cloneNode(true);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer2, node0);
      String string0 = dOMNodePointer3.asPath();
      assertEquals("id('<<unknown namespace>>')", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getOwnerDocument();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.isCollection();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>", "http://www.w3.org/XML/1998/namespace");
      documentTypeImpl0.isDefaultNamespace("<<unknown namespace>>");
      DOMNodePointer.getLocalName(documentTypeImpl0);
      Locale locale1 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale0, "xmlns");
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      DOMNodePointer.getPrefix(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      documentImpl0.getNodeType();
      DOMNodePointer.getLocalName(documentImpl0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "", "", "#document");
      Locale locale0 = Locale.ITALIAN;
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(documentImpl0, "xmlns:");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.asPath();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.isLeaf();
      Locale locale1 = new Locale("_GLwVQv");
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      QName qName0 = dOMNodePointer0.getName();
      HTMLTableColElementImpl hTMLTableColElementImpl0 = new HTMLTableColElementImpl(hTMLDocumentImpl0, "_GLwVQv");
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, hTMLTableColElementImpl0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.isDefaultNamespace("g8&YonaN&@,n4H");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = new QName("xmlns", "3");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "no'");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale1 = new Locale("xmlns");
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, documentFragmentImpl0, locale1);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("n7zO-8Q,{2UoA{u6h", "n7zO-8Q,{2UoA{u6h");
      Comment comment0 = hTMLDocumentImpl0.createComment("#document");
      Locale locale0 = Locale.ITALIAN;
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Boolean boolean0 = new Boolean("org.apache.wml.dom.WMLOneventElementImpl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "onenterforward");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl1);
      String string1 = dOMNodePointer0.asPath();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "", "Z5Oo?IN7!+((%0*d(>", "");
      Locale locale0 = Locale.ITALIAN;
      locale0.getUnicodeLocaleAttributes();
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0, "d9||-1`hg6");
      QName qName0 = dOMNodePointer0.getName();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentImpl0, locale0, "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) wMLTrElementImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "", "Z5Oo?IN7!+((%0*d(>", "");
      Locale locale0 = Locale.ITALIAN;
      locale0.getUnicodeLocaleAttributes();
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0, "d9||-1`hg6");
      dOMNodePointer0.getName();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentImpl0, locale0, "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "", "Z5Oo?IN7!+((%0*d(>", "");
      Locale locale0 = Locale.ITALIAN;
      locale0.getUnicodeLocaleAttributes();
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0, "d9||-1`hg6");
      dOMNodePointer0.getName();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentImpl0, locale0, "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createChild((JXPathContext) null, (QName) null, 25, (Object) wMLTrElementImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      DOMNodePointer.getLocalName(documentImpl0);
      Locale locale0 = Locale.KOREAN;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.isDefaultNamespace("g8&YonaN&@,n4H");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
      HTMLMenuElementImpl hTMLMenuElementImpl0 = new HTMLMenuElementImpl(hTMLDocumentImpl0, "org.apache.wml.dom.WMLSetvarElementImpl@0000000006");
      QName qName0 = new QName("xmlns", ">N).]l{*n/N5NveOC");
      QName qName1 = new QName(":H%\"3fddZ5l=", "xmlns");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path /text()[1]/@:H%\"3fddZ5l=:xmlns, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ElementImpl elementImpl0 = new ElementImpl(hTMLDocumentImpl0, (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementImpl0, (Locale) null, "<5q5Jv_ b&t&#BTLq");
      QName qName0 = new QName("KfJ3r7", "<J");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Unknown namespace prefix: KfJ3r7
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      dOMNodePointer1.asPath();
      dOMNodePointer0.isLanguage("P\"M<y011yI3,");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      Comment comment0 = hTMLDocumentImpl0.createComment("n8('/yGcgjYUDGP");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "N8('/YGCGJYUDGP", "Z5Oo?IN7!+((%0*d(>");
      Locale locale0 = Locale.ITALIAN;
      locale0.getUnicodeLocaleAttributes();
      Locale locale1 = Locale.ITALY;
      locale1.getDisplayScript();
      BasicVariables basicVariables0 = new BasicVariables();
      locale0.getDisplayVariant();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0, "dn||`hg6");
      dOMNodePointer0.getName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale2 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, locale0);
      dOMNodePointer0.getName();
      dOMNodePointer0.getDefaultNamespaceURI();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLScriptElementImpl0, locale0);
      dOMNodePointer0.compareChildNodePointers(dOMNodePointer2, dOMNodePointer0);
      dOMNodePointer0.getPointerByID((JXPathContext) null, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        dOMNodePointer1.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      Comment comment0 = hTMLDocumentImpl0.createComment("n8('/yGcgjYUDGP");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "N8('/YGCGJYUDGP", "Z5Oo?IN7!+((%0*d(>");
      Locale locale0 = Locale.ITALIAN;
      locale0.getUnicodeLocaleAttributes();
      Locale locale1 = Locale.ITALY;
      locale1.getDisplayScript();
      BasicVariables basicVariables0 = new BasicVariables();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0, "dn||`hg6");
      dOMNodePointer0.getName();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, locale1, "xml");
      QName qName1 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1, "[");
      DOMNodePointer.testNode((Node) comment0, (NodeTest) nodeNameTest0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLScriptElementImpl0);
      String string0 = dOMNodePointer2.asPath();
      assertEquals("id('xml')/N8('/YGCGJYUDGP[1]", string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      DOMNodePointer.getLocalName(documentImpl0);
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = new Locale("<<unknown namespace>>", "<<unknown namespace>>", "#document");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      locale0.clone();
      SymbolTable symbolTable0 = new SymbolTable((short)9);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SecurityConfiguration securityConfiguration1 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      DTDConfiguration dTDConfiguration0 = new DTDConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      SymbolTable symbolTable1 = new SymbolTable();
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable1, xMLGrammarPoolImpl0, securityConfiguration0);
      Locale locale1 = dTDConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(coreDocumentImpl0, locale1, (String) null);
      dOMNodePointer0.getName();
      dOMNodePointer0.getDefaultNamespaceURI();
      dOMNodePointer0.getPointerByID((JXPathContext) null, "#document");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale1 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      locale1.getUnicodeLocaleAttributes();
      Locale locale2 = Locale.ITALY;
      locale0.getDisplayScript();
      BasicVariables basicVariables1 = new BasicVariables();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale1, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer1.getName();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale2, "<<unknown namespace>>");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale3 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl0, locale2);
      dOMNodePointer2.getName();
      Locale locale4 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(hTMLDocumentImpl0, locale4);
      dOMNodePointer4.getDefaultNamespaceURI();
      dOMNodePointer0.getPointerByID((JXPathContext) null, "Factory could not create a child node for path: ");
      // Undeclared exception!
//      try { 
        dOMNodePointer4.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      Comment comment0 = hTMLDocumentImpl0.createComment("n8('/yGcgjYUDGP");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "N8('/YGCGJYUDGP", "Z5Oo?IN7!+((%0*d(>");
      Locale locale0 = Locale.ITALIAN;
      locale0.getUnicodeLocaleAttributes();
      Locale locale1 = Locale.ITALY;
      locale1.getDisplayScript();
      BasicVariables basicVariables0 = new BasicVariables();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0, "dn||`hg6");
      dOMNodePointer0.getName();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, locale1, "xml");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale2 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale2);
      dOMNodePointer0.getName();
      dOMNodePointer2.getDefaultNamespaceURI();
      // Undeclared exception!
//      try { 
        dOMNodePointer1.getPointerByID((JXPathContext) null, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.html.dom.HTMLDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = null;
      WMLTimerElementImpl wMLTimerElementImpl0 = new WMLTimerElementImpl((WMLDocumentImpl) null, "xml");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLTimerElementImpl0, locale0);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Vector<String> vector1 = new Vector<String>();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) vector1, locale_FilteringMode1);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLTimerElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.getDefaultNamespaceURI();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      DOMNodePointer.getLocalName(documentImpl0);
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = new Locale("<<unknown namespace>>", "<<unknown namespace>>", "#document");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      locale0.clone();
      SymbolTable symbolTable0 = new SymbolTable((short)9);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SecurityConfiguration securityConfiguration1 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      DTDConfiguration dTDConfiguration0 = new DTDConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      SymbolTable symbolTable1 = new SymbolTable();
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable1, xMLGrammarPoolImpl0, securityConfiguration0);
      Locale locale1 = dTDConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(coreDocumentImpl0, locale1, "J");
      HTMLMenuElementImpl hTMLMenuElementImpl0 = new HTMLMenuElementImpl((HTMLDocumentImpl) null, "JXPath: loaded from services: ");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", (String) null);
      EntityImpl entityImpl0 = new EntityImpl((CoreDocumentImpl) null, "JXPath: loaded from services: ");
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, entityImpl0, locale1);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(documentImpl0, "JXPath: loaded from services: ", "wu74qS");
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "JXPath: loaded from services: ");
      cDATASectionImpl0.hasChildNodes();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIAttrNSImpl0);
      dOMNodePointer1.asPath();
      dOMNodePointer0.isLanguage("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer1.getLength();
      FileSystemHandling.shouldAllThrowIOExceptions();
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer1.getNamespaceResolver();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(";F(ki'Z&M]");
      Locale locale0 = new Locale("<*K(+[u<D0", "<*K(+[u<D0");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.setValue(hTMLMetaElementImpl0);
      dOMNodePointer0.getNodeValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLMetaElementImpl0, locale0);
      dOMNodePointer1.getNamespaceURI();
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("preserve", (String) null);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, dOMNodePointer1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'preserve:null'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      DOMNodePointer.getLocalName(documentImpl0);
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = new Locale("<<unknown namespace>>", "<<unknown namespace>>", "#document");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      Locale locale1 = (Locale)locale0.clone();
      SymbolTable symbolTable0 = new SymbolTable((short)9);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SecurityConfiguration securityConfiguration1 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, "");
      Locale locale2 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(cDATASectionImpl0, locale1, "n8('/yGcgjYUDGP");
      String string1 = "'KfJp3or7";
      TypeConverter typeConverter0 = mock(TypeConverter.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(typeConverter0).convert(any() , any(java.lang.Class.class));
      TypeUtils.setTypeConverter(typeConverter0);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "`LyUJ", "'KfJp3or7", "xmlns");
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl((DocumentType) null);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl1, "IBhTQ2<]aJf8");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(wMLTrElementImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      DOMNodePointer.getLocalName(documentImpl0);
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = new Locale("<<unknown namespace>>", "<<unknown namespace>>", "#document");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      Locale locale1 = (Locale)locale0.clone();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentImpl0, locale1);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue((Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      String string0 = DOMNodePointer.getLocalName(documentImpl0);
      assertNotNull(string0);
      assertEquals("#document", string0);
      
      String string1 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = new Locale("<<unknown namespace>>", "<<unknown namespace>>", "#document");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      locale0.clone();
      SymbolTable symbolTable0 = new SymbolTable((short)9);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DTDConfiguration dTDConfiguration0 = new DTDConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      SymbolTable symbolTable1 = new SymbolTable();
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable1, xMLGrammarPoolImpl0, securityConfiguration0);
      Locale locale1 = dTDConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale1, "J");
      HTMLMenuElementImpl hTMLMenuElementImpl0 = new HTMLMenuElementImpl((HTMLDocumentImpl) null, "JXPath: loaded from services: ");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", (String) null);
      EntityImpl entityImpl0 = new EntityImpl((CoreDocumentImpl) null, "JXPath: loaded from services: ");
      boolean boolean0 = DOMNodePointer.testNode((Node) null, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(";F(ki'Z&M]");
      Locale locale0 = new Locale("<*K(+[u<D0", "<*K(+[u<D0");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.setValue(hTMLMetaElementImpl0);
      dOMNodePointer0.getNodeValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLMetaElementImpl0, locale0);
      dOMNodePointer1.getNamespaceURI();
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLMetaElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "o[", "PSX$J-?\"XDC", "PSX$J-?\"XDC");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale1);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      dOMNodePointer0.asPath();
      dOMNodePointer1.isLanguage("Z5Oo?IN7!+((%0*d(>");
      QName qName0 = dOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "Z5Oo?IN7!+((%0*d(>", "PSX$J-?\"XDC", "Z5Oo?IN7!+((%0*d(>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      dOMNodePointer0.asPath();
      dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer(dOMNodePointer0, qName0, "Z5Oo?IN7!+((%0*d(>");
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "6A?:A(7Cy;YnQ278)");
      QName qName0 = new QName("");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
//      try { 
        DOMNodePointer.testNode((Node) null, (NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, (String) null, "t}U*~=~2", ")z<Ftm>^pH']^7");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLStrongElementImpl wMLStrongElementImpl0 = new WMLStrongElementImpl(wMLDocumentImpl0, "KJd/n!-*=\"dapOq4L");
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      dOMNodePointer0.getNamespaceResolver();
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
      
      String string0 = dOMNodePointer0.getNamespaceURI("Xr\"uuGD`Hmi~2S:#~)");
      assertNull(string0);
      
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      assertNotNull(namespaceResolver0);
      
      dOMNodePointer0.remove();
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale1 = Locale.PRC;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(";F(ki'Z&M]");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      boolean boolean1 = dOMNodePointer0.isCollection();
      assertTrue(boolean1 == boolean0);
      
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
      assertFalse(dOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, (String) null, "t}U*~=~2", ")z<Ftm>^pH']^7");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLStrongElementImpl wMLStrongElementImpl0 = new WMLStrongElementImpl(wMLDocumentImpl0, "KJd/n!-*=\"dapOq4L");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLStrongElementImpl0, locale0, "WZ");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("WZ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      DOMNodePointer.testNode((Node) wMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) documentTypeImpl0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      DOMNodePointer.getLocalName(documentImpl0);
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = new Locale("<<unknown namespace>>", "<<unknown namespace>>", "#document");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "MM=gO-CqX)2lq=d[", "", "#document");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, "u");
      Locale locale1 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale1, "IBhTQ2<]aJf8");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(wMLDocumentImpl0, "$:~5]=G", "#document", "'KfJp3or7");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(wMLDocumentImpl1);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "6#Ww1McYC!{cp P=");
      Locale locale0 = Locale.CHINA;
      hTMLDocumentImpl0.getBaseURI();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "6#Ww1McYC!{cp P=");
      dOMNodePointer0.isLeaf();
      locale0.getUnicodeLocaleAttributes();
      locale0.getDisplayScript();
      dOMNodePointer0.isLanguage("$_Y8P|@'qqBb");
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.namespaceIterator();
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      BasicVariables basicVariables0 = new BasicVariables();
      dOMNodePointer0.setValue("http://www.w3.org/2000/xmlns/");
      dOMNodePointer0.getNodeValue();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "6#Ww1McYC!{cp P=");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTextAreaElementImpl0, locale0);
      String string1 = dOMNodePointer1.getNamespaceURI();
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(";F(ki'Z&M]");
      HTMLMenuElementImpl hTMLMenuElementImpl0 = new HTMLMenuElementImpl(hTMLDocumentImpl0, "9BR<&K*,Gfg");
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer((QName) null, object0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      DOMNodePointer.getLocalName(documentImpl0);
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = new Locale("<<unknown namespace>>", "<<unknown namespace>>", "#document");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      locale0.clone();
      SymbolTable symbolTable0 = new SymbolTable((short)9);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SecurityConfiguration securityConfiguration1 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      NonValidatingConfiguration nonValidatingConfiguration0 = new NonValidatingConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      DTDConfiguration dTDConfiguration0 = new DTDConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      SymbolTable symbolTable1 = new SymbolTable();
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable1, xMLGrammarPoolImpl0, securityConfiguration0);
      Locale locale1 = dTDConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale1, "J");
      HTMLMenuElementImpl hTMLMenuElementImpl0 = new HTMLMenuElementImpl((HTMLDocumentImpl) null, "JXPath: loaded from services: ");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", (String) null);
      EntityImpl entityImpl0 = new EntityImpl((CoreDocumentImpl) null, "JXPath: loaded from services: ");
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, entityImpl0, locale1);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "");
      cDATASectionImpl0.getNodeType();
      hTMLDocumentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      hTMLDocumentImpl0.getNamespaceURI();
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      dOMNodePointer0.asPath();
      dOMNodePointer1.isLanguage("");
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      dOMNodePointer1.equals(hTMLTableRowElementImpl0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "Cannot find an element by ID - no IdentityManager has been specified");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLNoopElementImpl wMLNoopElementImpl0 = new WMLNoopElementImpl(wMLDocumentImpl0, "6g^9");
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((Object) wMLNoopElementImpl0);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "6#Ww1McYC!{cp P=");
      Locale locale0 = Locale.CHINA;
      hTMLDocumentImpl0.getBaseURI();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "6#Ww1McYC!{cp P=");
      dOMNodePointer0.isLeaf();
      locale0.getUnicodeLocaleAttributes();
      locale0.clone();
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.getValue();
      QName qName0 = new QName((String) null, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("<<unknown namespace>>");
      VariablePointer variablePointer1 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      hTMLDocumentImpl3.createComment("<<unknown namespace>>");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, (String) null, (String) null, (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, "Qw");
      dOMNodePointer0.setValue("");
      dOMNodePointer0.getNodeValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(comment0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.getNamespaceURI();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      documentImpl0.getLastChild();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      documentImpl0.getNamespaceURI();
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      locale0.clone();
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.getValue();
      QName qName0 = new QName("<<unknown namespace>>", "JXPath: loaded from services: ");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, (String) null, "", "java.util.Locale@0000000008");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, (String) null);
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLDocumentImpl0, locale0, "span");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(wMLDocumentImpl0, (String) null, "Hdo81Uq");
      dOMNodePointer0.setValue(pSVIAttrNSImpl0);
      dOMNodePointer0.getNodeValue();
      // Undeclared exception!
//      try { 
        dOMNodePointer1.getNamespaceURI();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      hTMLDocumentImpl0.createComment("n8('/yGcgjYUDGP");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "N8('/YGCGJYUDGP", "Z5Oo?IN7!+((%0*d(>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0);
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.asPath();
      QName qName1 = new QName("", "Not a collection: ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment((String) null);
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(hTMLDocumentImpl0, "xml:space", "N8('/YGCGJYUDGP", "U-dO-GL( ");
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl(documentTypeImpl1);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, "Z5Oo?IN7!+((%0*d(>");
      HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      dOMNodePointer0.setValue(hTMLTitleElementImpl0);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, (String) null, "t}U*~=~2", ")z<Ftm>^pH']^7");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLStrongElementImpl wMLStrongElementImpl0 = new WMLStrongElementImpl(wMLDocumentImpl0, "KJd/n!-*=\"dapOq4L");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLStrongElementImpl0, locale0, "WZ");
      dOMNodePointer0.isLeaf();
      locale0.getUnicodeLocaleAttributes();
      locale0.getDisplayScript();
      dOMNodePointer0.isLanguage("KL:H6z~");
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        NodePointer.newChildNodePointer(dOMNodePointer0, qName0, "");
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      hTMLDocumentImpl0.createComment("n8('/yGcgjYUDGP");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "N8('/YGCGJYUDGP", "Z5Oo?IN7!+((%0*d(>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0);
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.asPath();
      String string0 = "q-v76'tIcHQ#";
      dOMNodePointer0.isLanguage("q-v76'tIcHQ#");
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "q-v76'tIcHQ#");
      dOMNodePointer0.equals(hTMLBaseElementImpl0);
      HTMLBaseElementImpl hTMLBaseElementImpl1 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "N8('/YGCGJYUDGP");
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((Object) hTMLBaseElementImpl1);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "6#Ww1McYC!{cp P=");
      Locale locale0 = Locale.CHINA;
      hTMLDocumentImpl0.getBaseURI();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "6#Ww1McYC!{cp P=");
      dOMNodePointer0.isLeaf();
      locale0.getUnicodeLocaleAttributes();
      locale0.clone();
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.getValue();
      QName qName0 = new QName((String) null, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment("<<unknown namespace>>");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl1, "<<unknown namespace>>", "H5nU`Vi' xSp", "We`A,]ev*!X");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, ",v~");
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLDocumentImpl0, locale1, "z");
      dOMNodePointer1.setValue((Object) null);
      dOMNodePointer0.getNodeValue();
      // Undeclared exception!
//      try { 
        dOMNodePointer1.getNamespaceURI();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "");
      documentImpl0.getNamespaceURI();
      Locale locale0 = Locale.TAIWAN;
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl((HTMLDocumentImpl) null, "");
      hTMLTableElementImpl0.getCaption();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0);
      dOMNodePointer0.asPath();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.hashCode();
      dOMNodePointer1.getLanguage();
      // Undeclared exception!
//      try { 
        DOMNodePointer.findEnclosingAttribute(hTMLTableElementImpl0, "http://www.w3.org/XML/1998/namespace");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      documentImpl0.getNamespaceURI();
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      locale0.clone();
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.getValue();
      QName qName0 = new QName("<<unknown namespace>>", "JXPath: loaded from services: ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("JXPath: loaded from services: ");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: <<unknown namespace>>:JXPath: loaded from services: 
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      hTMLDocumentImpl0.createComment("n8('/yGcgjYUDGP");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "N8('/YGCGJYUDGP", "Z5Oo?IN7!+((%0*d(>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl1, "Z5Oo?IN7!+((%0*d(>");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0, "");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "<<unknown namespace>>", "Z", "%>w");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(pSVIAttrNSImpl0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Locale locale1 = Locale.PRC;
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseFontElementImpl hTMLBaseFontElementImpl0 = new HTMLBaseFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      Node node0 = hTMLBaseFontElementImpl0.cloneNode(false);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale1, "o*{G=$|UwA");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(node0, locale0);
      dOMNodePointer1.getNodeValue();
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = new Locale(";F(ki1Z&M]");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "oQ7:p4*t!:ap vh$2");
      dOMNodePointer0.getName();
      dOMNodePointer0.getDefaultNamespaceURI();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "t}U*~=~2", "t}U*~=~2", "t}U*~=~2");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLNoopElementImpl wMLNoopElementImpl0 = new WMLNoopElementImpl(wMLDocumentImpl0, "t}U*~=~2");
      wMLNoopElementImpl0.cloneNode(true);
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "t}U*~=~2");
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      hTMLDocumentImpl0.createComment("n8('/yGcgjYUDGP");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "N8('/YGCGJYUDGP", "Z5Oo?IN7!+((%0*d(>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl1, "Z5Oo?IN7!+((%0*d(>");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0, "");
      HTMLBaseFontElementImpl hTMLBaseFontElementImpl0 = new HTMLBaseFontElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      hTMLBaseFontElementImpl0.cloneNode(false);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLDocumentImpl0, locale0, "http://www.w3.org/2000/xmlns/");
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "t}U*~=~2");
      hTMLTableElementImpl0.lookupNamespaceURI((String) null);
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = (HTMLTableSectionElementImpl)hTMLTableElementImpl0.createTFoot();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      hTMLTableSectionElementImpl0.getVAlign();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLTableElementImpl0);
      boolean boolean0 = dOMNodePointer0.isLeaf();
      String string0 = DOMNodePointer.getPrefix(hTMLTableSectionElementImpl0);
      assertNull(string0);
      
      boolean boolean1 = dOMNodePointer0.equals("t}U*~=~2");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      documentImpl0.getNamespaceURI();
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = Locale.TAIWAN;
      locale0.clone();
      QName qName0 = new QName("<<unknown namespace>>", "JXPath: loaded from services: ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment("<<unknown namespace>>");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "preserve", "<<unknown namespace>>", "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl1, "BASE");
      WMLBrElementImpl wMLBrElementImpl0 = new WMLBrElementImpl(wMLDocumentImpl0, "pO");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLSmallElementImpl0, locale0);
      String string1 = dOMNodePointer0.getNamespaceURI();
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "6#Ww1McYC!{cp P=");
      Locale locale0 = Locale.CHINA;
      hTMLDocumentImpl0.getBaseURI();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "6#Ww1McYC!{cp P=");
      dOMNodePointer0.isLeaf();
      locale0.getUnicodeLocaleAttributes();
      locale0.getDisplayScript();
      dOMNodePointer0.isLanguage("$_Y8P|@'qqBb");
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.namespaceIterator();
      dOMNodePointer0.getNamespaceURI("[");
      dOMNodePointer0.getNamespaceURI("+$bBB2qQx{;(Pn`d");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        variablePointer0.namespacePointer("<<unknown namespace>>");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: '6#WW1MCYC!{CP P='
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "JXPath: loaded from services: ");
      QName qName0 = new QName("");
      hTMLDocumentImpl0.abort();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "");
      cDATASectionImpl0.getNodeType();
      hTMLDocumentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      hTMLDocumentImpl0.getNamespaceURI();
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      locale0.clone();
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.getValue();
      QName qName0 = new QName((String) null, "F");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment("<<unknown namespace>>");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "`7OMM?j(c~KOR", "Factory ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, (String) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue("z");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getOwnerDocument();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.isLanguage("http://www.w3.org/XML/1998/namespace");
      QName qName0 = new QName("<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.getNamespaceURI("<<unknown namespace>>");
      variablePointer0.namespacePointer("u~T,rzfNXiETJ");
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "u~T,rzfNXiETJ");
      hTMLTableElementImpl0.createCaption();
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      SecurityConfiguration securityConfiguration1 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      NonValidatingConfiguration nonValidatingConfiguration0 = new NonValidatingConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration1);
      DTDConfiguration dTDConfiguration0 = new DTDConfiguration(symbolTable0, xMLGrammarPoolImpl0, nonValidatingConfiguration0);
      SymbolTable symbolTable1 = new SymbolTable();
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable1, xMLGrammarPoolImpl0, securityConfiguration1);
      integratedParserConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "<<unknown namespace>>");
      HTMLMenuElementImpl hTMLMenuElementImpl0 = new HTMLMenuElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      Locale locale1 = Locale.ROOT;
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, hTMLMenuElementImpl0, locale1);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(pSVIDocumentImpl0, "");
      cDATASectionImpl0.getNodeType();
      pSVIDocumentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      pSVIDocumentImpl0.getNamespaceURI();
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      Locale locale1 = new Locale("JXPath: loaded from services: ");
      dOMNodePointer0.getName();
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.getValue();
      QName qName0 = new QName("<<unknown namespace>>", "JXPath: loaded from services: ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment("<<unknown namespace>>");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "Qw", "N8('/YGCGJYUDGP", "(#Id2;");
      hTMLDocumentImpl0.compareDocumentPosition(cDATASectionImpl0);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, "z");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue("");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "Qw", "Qw", "9suf^,BAcEzj:B");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      documentTypeImpl0.lookupPrefix("Qw");
      WMLPElementImpl wMLPElementImpl0 = new WMLPElementImpl(wMLDocumentImpl0, "M");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLPElementImpl0, locale0);
      dOMNodePointer0.equals(locale0);
      dOMNodePointer0.isActual();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "t}U*~=~2");
      hTMLTableElementImpl0.lookupNamespaceURI("t}U*~=~2");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createTFoot();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0, (String) null);
      Locale locale1 = Locale.PRC;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTableElementImpl0, locale1, "o*{G=$|UwA");
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLTableElementImpl0, locale1);
      dOMNodePointer0.isCollection();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "#WC6+R5");
      DOMNodePointer.getNamespaceURI((Node) hTMLElement0);
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(hTMLElement0, locale1);
      dOMNodePointer3.isCollection();
      DOMNodePointer dOMNodePointer5 = new DOMNodePointer(hTMLElement0, locale0, "eN_{e-v4XOh&");
      dOMNodePointer5.getNamespaceURI("xmlns");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = dOMNodePointer4.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        variablePointer0.namespacePointer("http://www.w3.org/XML/1998/namespace");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'TFOOT'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Locale locale1 = Locale.PRC;
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseFontElementImpl hTMLBaseFontElementImpl0 = new HTMLBaseFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      Node node0 = hTMLBaseFontElementImpl0.cloneNode(false);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale1, "o*{G=$|UwA");
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("n8('/yGcgjYUDGP");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLScriptElementImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      DocumentFragment documentFragment0 = documentImpl0.createDocumentFragment();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentFragment0, (Locale) null);
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("|.Te<KO;7Zo");
      assertFalse(nodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NodePointer.newNodePointer((QName) null, (Object) null, locale0);
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSelectElementImpl wMLSelectElementImpl0 = new WMLSelectElementImpl(wMLDocumentImpl0, "/text()");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      hTMLTableElementImpl0.createCaption();
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      SecurityConfiguration securityConfiguration1 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      XMLGrammarPoolImpl xMLGrammarPoolImpl1 = new XMLGrammarPoolImpl();
      NonValidatingConfiguration nonValidatingConfiguration0 = new NonValidatingConfiguration(symbolTable0, xMLGrammarPoolImpl1, securityConfiguration0);
      DTDConfiguration dTDConfiguration0 = new DTDConfiguration(symbolTable0, xMLGrammarPoolImpl1, securityConfiguration0);
      SymbolTable symbolTable1 = new SymbolTable();
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable0, xMLGrammarPoolImpl0, nonValidatingConfiguration0);
      Locale locale1 = dTDConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "-H:XDgT:Ki-1HaAy3B!");
      HTMLMenuElementImpl hTMLMenuElementImpl0 = new HTMLMenuElementImpl(hTMLDocumentImpl0, "xmlns:");
      Locale locale2 = Locale.ROOT;
      QName qName0 = new QName("xmlns", (String) null);
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, wMLSelectElementImpl0, locale1);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      documentImpl0.getNamespaceURI();
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      locale0.clone();
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.getValue();
      QName qName0 = new QName("<<unknown namespace>>", "JXPath: loaded from services: ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment("<<unknown namespace>>");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "Qw", "N8('/YGCGJYUDGP", "(#Id2;");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, "z");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue("");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/text()");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, documentImpl0);
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      dOMNodePointer0.getNamespaceResolver();
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentImpl0, locale0, "<<unknown namespace>>");
      dOMNodePointer1.attributeIterator((QName) null);
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
      variablePointer0.setIndex(3299);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "DEL");
      QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
      dOMNodePointer1.isLeaf();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "");
      documentImpl0.getNamespaceURI();
      Locale locale0 = Locale.TAIWAN;
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl((HTMLDocumentImpl) null, "");
      hTMLTableElementImpl0.getCaption();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTableElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.asPath();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      QName qName0 = null;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSelectElementImpl wMLSelectElementImpl0 = new WMLSelectElementImpl(wMLDocumentImpl0, "/text()");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, deferredDocumentImpl0);
      String string0 = "Qw";
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI("Qw");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "t}U*~=~2");
      hTMLTableElementImpl0.lookupNamespaceURI("t}U*~=~2");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createTFoot();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0, (String) null);
      Locale locale1 = Locale.PRC;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTableElementImpl0, locale1, "o*{G=$|UwA");
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLTableElementImpl0, locale1);
      dOMNodePointer0.isCollection();
      dOMNodePointer1.getNamespaceURI("");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      VariablePointer variablePointer1 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        variablePointer1.namespacePointer((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'TFOOT'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "t}U*~=~2");
      hTMLTableElementImpl0.lookupNamespaceURI((String) null);
      hTMLTableElementImpl0.createTFoot();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      dOMNodePointer0.isCollection();
      dOMNodePointer0.getNamespaceURI("t}U*~=~2");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        variablePointer0.namespacePointer((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'null'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getOwnerDocument();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.isLanguage("http://www.w3.org/XML/1998/namespace");
      QName qName0 = new QName("<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.getNamespaceURI("<<unknown namespace>>");
      variablePointer0.namespacePointer("u~T,rzfNXiETJ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      dOMNodePointer1.getNamespaceURI((String) null);
      dOMNodePointer1.getNamespaceResolver();
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((Object) hTMLDocumentImpl0);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "n8('/yGcgjYUDGP";
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("n8('/yGcgjYUDGP", (String) null, "n8('/yGcgjYUDGP");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attr0, locale0, (String) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NodePointer nodePointer0 = null;
      Node node0 = null;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, (Node) null);
      QName qName0 = new QName("<<unknown namespace>>");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.attributeIterator(qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "");
      String string0 = "jNly_8p#ztD";
      documentImpl0.getNamespaceURI();
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "");
      locale0.clone();
      dOMNodePointer0.getLanguage();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, documentImpl0);
      dOMNodePointer0.asPath();
      // Undeclared exception!
//      try { 
        dOMNodePointer1.isLanguage((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      QName qName0 = null;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSelectElementImpl wMLSelectElementImpl0 = new WMLSelectElementImpl(wMLDocumentImpl0, "/text()");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, documentImpl0);
      dOMNodePointer0.getNamespaceURI("Qw");
      dOMNodePointer0.getNamespaceResolver();
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((Object) wMLSelectElementImpl0);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("*n");
      locale0.getDisplayLanguage();
      Locale locale1 = locale0.stripExtensions();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1, "");
      QName qName0 = dOMNodePointer0.getName();
      assertNull(qName0.getName());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "6#Ww1McYC!{cp P=");
      Locale locale0 = Locale.CHINA;
      String string0 = "standby";
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "standby");
      hTMLTableElementImpl0.getCaption();
      QName qName0 = new QName("standby");
      // Undeclared exception!
//      try { 
        NodePointer.newNodePointer(qName0, locale0, locale0);
//       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "");
      documentImpl0.getNamespaceURI();
      Locale locale0 = Locale.TAIWAN;
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl((HTMLDocumentImpl) null, "jNly_8p#ztD");
      hTMLTableElementImpl0.getCaption();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTableElementImpl0);
      dOMNodePointer0.asPath();
      String string0 = "";
      // Undeclared exception!
//      try { 
        dOMNodePointer1.isLanguage("P\"M<yA011yI3,");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.namespacePointer(";CB\"%=3}5D!/DQ/0N");
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "xml");
      hTMLTableElementImpl0.createCaption();
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-17);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SecurityConfiguration securityConfiguration1 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      SymbolTable symbolTable1 = new SymbolTable(3);
      DTDConfiguration dTDConfiguration0 = new DTDConfiguration(symbolTable1, xMLGrammarPoolImpl0, securityConfiguration0);
      Locale locale0 = dTDConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "<<unknown namespace>>");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: n8('/yGcgjYUDGP
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "t}U*~=~2");
      hTMLTableElementImpl0.lookupNamespaceURI("t}U*~=~2");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createTFoot();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0, (String) null);
      dOMNodePointer0.getNamespaceResolver();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      dOMNodePointer0.isCollection();
      dOMNodePointer0.getNamespaceURI(").$Yp&8:]o.[,Y>yzGx");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        variablePointer0.namespacePointer("t}U*~=~2");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'TFOOT'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgYUDGP");
      QName qName0 = new QName("n8('/yGcgYUDGP");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      String string0 = "";
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "", "8K53GTYRFT");
      documentTypeImpl0.isDefaultNamespace("8K53GTYRFT");
      DOMNodePointer.getLocalName(documentTypeImpl0);
      Locale locale0 = Locale.JAPAN;
      String string1 = "xmlns";
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "xmlns");
      DOMNodePointer.getNamespaceURI((Node) hTMLScriptElementImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLScriptElementImpl0, locale0);
      EventImpl eventImpl0 = new EventImpl();
      // Undeclared exception!
//      try { 
        documentTypeImpl0.dispatchEvent(eventImpl0);
//        fail("Expecting exception: EventException");
      
//      } catch(EventException e) {
//         //
//         // UNSPECIFIED_EVENT_TYPE_ERR: The Event's type was not specified by initializing the event before the method was called. 
//         //
//         verifyException("org.apache.xerces.dom.DocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      QName qName0 = null;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
      boolean boolean0 = false;
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "pnu~~");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSelectElementImpl wMLSelectElementImpl0 = new WMLSelectElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, wMLSelectElementImpl0);
      dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      dOMNodePointer0.getNamespaceResolver();
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((Object) wMLDocumentImpl0);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(documentImpl0, "JXPath: loaded from services: ", "wu74qS");
      pSVIAttrNSImpl0.getOwnerElement();
      Locale locale0 = Locale.forLanguageTag("*n");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIAttrNSImpl0, locale0, "*n");
      locale0.clone();
      dOMNodePointer0.getLanguage();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getValue();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.namespacePointer("ijEIa .-4CM}");
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "N8('/YGCGJYUDGP");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createCaption();
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      SecurityConfiguration securityConfiguration1 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration0);
      DTDConfiguration dTDConfiguration0 = new DTDConfiguration(symbolTable0, xMLGrammarPoolImpl0, securityConfiguration1);
      Locale locale0 = dTDConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0, "n8('/yGcgjYUDGP");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "8F;^wU+=m-V*<>w62I");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIDocumentImpl0);
      dOMNodePointer1.isLeaf();
      locale0.getUnicodeLocaleAttributes();
      locale0.getDisplayScript();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(pSVIDocumentImpl0, locale0);
      dOMNodePointer2.isLanguage("dI:UKBCxTrd7P[%_V");
      dOMNodePointer1.getBaseValue();
      dOMNodePointer0.remove();
      // Undeclared exception!
//      try { 
        dOMNodePointer2.namespaceIterator();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "F");
      cDATASectionImpl0.getNodeType();
      documentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      documentImpl0.getNamespaceURI();
      DOMNodePointer.findEnclosingAttribute(cDATASectionImpl0, "JXPath: loaded from services: ");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, (String) null);
      locale0.clone();
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.getValue();
      QName qName0 = new QName((String) null, "JXPath: loaded from services: ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment("<<unknown namespace>>");
//      try { 
        hTMLDocumentImpl0.createAttributeNS((String) null, "\"|x^.;lE{em}d");
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getOwnerDocument();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.isCollection();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>", "http://www.w3.org/XML/1998/namespace");
      documentTypeImpl0.isDefaultNamespace("<<unknown namespace>>");
      DOMNodePointer.getLocalName(documentTypeImpl0);
      Locale locale1 = Locale.JAPAN;
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getValue();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "6#Ww1McYC!{cp P=");
      Locale locale0 = Locale.CHINA;
      hTMLDocumentImpl0.getBaseURI();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "6#Ww1McYC!{cp P=");
      dOMNodePointer0.isLeaf();
      locale0.getUnicodeLocaleAttributes();
      locale0.getDisplayScript();
      dOMNodePointer0.isLanguage("$_Y8P|@'qqBb");
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.namespaceIterator();
      QName qName0 = new QName("<<unknown namespace>>", "}1WiD+e,KFLbV");
      DOMNodePointer.getNamespaceURI((Node) hTMLAreaElementImpl0);
      dOMNodePointer0.namespaceIterator();
      Object object0 = dOMNodePointer0.getBaseValue();
      assertSame(object0, hTMLAreaElementImpl0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(documentImpl0, "JXPath: loaded from services: ", "wu74qS");
      pSVIAttrNSImpl0.getOwnerElement();
      Locale locale0 = Locale.forLanguageTag("*n");
      Locale locale1 = locale0.stripExtensions();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale1);
      dOMNodePointer0.hashCode();
      dOMNodePointer0.getLanguage();
      DOMNodePointer.findEnclosingAttribute((Node) null, "*n");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      pSVIDocumentImpl0.getPreviousSibling();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue((Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = null;
      Locale locale0 = Locale.ITALIAN;
      locale0.stripExtensions();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      String string0 = "[&4C>:r}x#r z[Gg%N";
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "[&4C>:r}x#r z[Gg%N");
      documentTypeImpl0.isDefaultNamespace("[&4C>:r}x#r z[Gg%N");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getLocalName((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getOwnerDocument();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.isCollection();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>", "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      dOMNodePointer1.namespaceIterator();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.asPath();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "n8('/yGcgjYUDGP");
      QName qName0 = new QName("n8('/yGcgjYUDGP");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLScriptElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "6#Ww1McYC!{cp P=");
      Locale locale0 = Locale.CHINA;
      hTMLDocumentImpl0.getBaseURI();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "6#Ww1McYC!{cp P=");
      dOMNodePointer0.isLeaf();
      locale0.getUnicodeLocaleAttributes();
      locale0.getDisplayScript();
      dOMNodePointer0.isLanguage("$_Y8P|@'qqBb");
      dOMNodePointer0.getBaseValue();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(documentImpl0, "JXPath: loaded from services: ", "wu74qS");
      String string0 = "AkiX6=}VXf`yZ";
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "AkiX6=}VXf`yZ", "wu74qS", "RME1");
      documentTypeImpl0.isDefaultNamespace("RME1");
      DOMNodePointer.getLocalName(documentImpl0);
      Locale locale0 = Locale.JAPAN;
      String string1 = "org.apache.wml.dom.WMLBElementImpl";
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0, "org.apache.wml.dom.WMLBElementImpl");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) documentTypeImpl0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "8F;^wU+=m-V*<>w62I");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0);
      dOMNodePointer0.getNode();
      dOMNodePointer0.testNode((NodeTest) null);
      dOMNodePointer0.getBaseValue();
      JXPathContext jXPathContext0 = null;
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl(documentTypeImpl0);
      WMLDoElementImpl wMLDoElementImpl0 = new WMLDoElementImpl(wMLDocumentImpl1, "[fH");
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((JXPathContext) null, (Object) wMLDoElementImpl0);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getOwnerDocument();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.isCollection();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>", "http://www.w3.org/XML/1998/namespace");
      documentTypeImpl0.isDefaultNamespace("<<unknown namespace>>");
      DOMNodePointer.getLocalName(documentTypeImpl0);
      Locale locale1 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale0, "xmlns");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "8F;^wU+=m-V*<>w62I");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, locale0, "8F;^wU+=m-V*<>w62I");
      DOMNodePointer.getPrefix(pSVIDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "t}U*~=~2");
      hTMLTableElementImpl0.lookupNamespaceURI("t}U*~=~2");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createTFoot();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0, (String) null);
      dOMNodePointer0.getNamespaceResolver();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "", "<<unknown namespace>>", "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      dOMNodePointer0.setValue(wMLSmallElementImpl0);
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertSame(hTMLElement0, object0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "HR");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getBaseURI();
      Locale locale1 = Locale.PRC;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale1, "HR");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.isLeaf();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      coreDocumentImpl0.getStrictErrorChecking();
      ElementImpl elementImpl0 = new ElementImpl(coreDocumentImpl0, "TITLE");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementImpl0, locale0);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      dOMNodePointer0.getValue();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      dOMNodePointer0.isLanguage("xmlns");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      pSVIDocumentImpl0.getPreviousSibling();
      dOMNodePointer0.setValue((Object) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) wMLDocumentImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      coreDocumentImpl0.getPreviousSibling();
      coreDocumentImpl0.getBaseURI();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "vfy##ctf!", "vfy##ctf!", "vfy##ctf!");
      String string0 = "RME1";
      documentTypeImpl0.isDefaultNamespace("RME1");
      DOMNodePointer.getLocalName(documentTypeImpl0);
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0, "vfy##ctf!");
      dOMNodePointer0.getLength();
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) coreDocumentImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Locale locale1 = locale0.stripExtensions();
      locale0.getUnicodeLocaleKeys();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale1, "zg]");
      locale1.getDisplayName();
      boolean boolean0 = dOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
      
      TypeConverter typeConverter0 = mock(TypeConverter.class, new ViolatedAssumptionAnswer());
      TypeUtils.setTypeConverter(typeConverter0);
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
      
      dOMNodePointer0.getImmediateNode();
      dOMNodePointer0.getBaseValue();
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      String string0 = "";
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "");
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(documentTypeImpl0, true);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(coreDocumentImpl0, "jNly_8p#ztD");
      cDATASectionImpl0.getNodeType();
      coreDocumentImpl0.getNodeType();
      cDATASectionImpl0.hasChildNodes();
      documentImpl0.getNamespaceURI();
      DOMNodePointer.findEnclosingAttribute(cDATASectionImpl0, ")hCmgKz");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "");
      locale0.clone();
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.getValue();
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "l$w;");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((JXPathContext) null, (Object) "");
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "6#Ww1McYC!{cp P=");
      Locale locale0 = Locale.CHINA;
      hTMLDocumentImpl0.getBaseURI();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "6#Ww1McYC!{cp P=");
      dOMNodePointer0.isLeaf();
      locale0.getUnicodeLocaleAttributes();
      locale0.getDisplayScript();
      dOMNodePointer0.isLanguage("$_Y8P|@'qqBb");
      hTMLDocumentImpl0.write("");
      dOMNodePointer0.setIndex((-1979));
//      try { 
        hTMLDocumentImpl0.createDocumentType("http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>", "6#Ww1McYC!{cp P=");
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "HR");
      dOMNodePointer0.getNode();
      dOMNodePointer0.testNode((NodeTest) null);
      dOMNodePointer0.getBaseValue();
      JXPathContext jXPathContext0 = null;
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((JXPathContext) null, (Object) "HR");
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      coreDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "vfy##ctf!", "vfy##ctf!", "vfy##ctf!");
      String string0 = "RME1";
      documentTypeImpl0.isDefaultNamespace("RME1");
      DOMNodePointer.getLocalName(documentTypeImpl0);
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0, "vfy##ctf!");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) coreDocumentImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      coreDocumentImpl0.getStrictErrorChecking();
      ElementImpl elementImpl0 = new ElementImpl(coreDocumentImpl0, "TITLE");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementImpl0, locale0);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      dOMNodePointer0.getValue();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOptionElementImpl wMLOptionElementImpl0 = new WMLOptionElementImpl(wMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
//      try { 
        variablePointer0.createPath((JXPathContext) null, (Object) wMLOptionElementImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = null;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null, "");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getPrefix((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "t}U*~=~2");
      hTMLTableElementImpl0.lookupNamespaceURI((String) null);
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createTFoot();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0, (String) null);
      dOMNodePointer0.getNamespaceResolver();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "", "<<unknown namespace>>", "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      dOMNodePointer0.setValue(wMLSmallElementImpl0);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHeadingElementImpl hTMLHeadingElementImpl0 = new HTMLHeadingElementImpl(hTMLDocumentImpl0, "3UU,UoOUH;8(F[)@r>");
      DOMNodePointer.getLocalName(hTMLHeadingElementImpl0);
      Locale locale0 = Locale.PRC;
      List<Locale.LanguageRange> list0 = null;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<String> linkedList0 = new LinkedList<String>(set0);
      hTMLHeadingElementImpl0.normalize();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      hTMLDocumentImpl0.needsSyncChildren(true);
      Locale.getISOCountries();
      // Undeclared exception!
//      try { 
        Locale.filterTags((List<Locale.LanguageRange>) null, (Collection<String>) linkedList0, locale_FilteringMode0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      locale0.stripExtensions();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "RSP<j");
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLScriptElementImpl0, locale0, "");
      String string0 = dOMNodePointer0.getLanguage();
      assertNull(string0);
      
      boolean boolean0 = dOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getOwnerDocument();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.isCollection();
      dOMNodePointer0.equals((Object) null);
      dOMNodePointer0.equals(locale0);
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((Object) locale0);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "8F;^wU+=m-V*<>w62I");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      wMLDocumentImpl0.getElementById("LEGEND");
      Locale locale0 = new Locale("8F;^wU+=m-V*<>w62I", "8F;^wU+=m-V*<>w62I", "8F;^wU+=m-V*<>w62I");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "/");
      hTMLTableElementImpl0.getCaption();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, (Node) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.asPath();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "[GMa: .dh-@3RU");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParagraphElementImpl0, locale0, "CWtQHi\"4I~=_y");
      dOMNodePointer0.getNode();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLPreElementImpl0);
      dOMNodePointer0.childIterator((NodeTest) null, false, dOMNodePointer1);
//      try { 
        hTMLParagraphElementImpl0.setAttribute("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // DOM002 Illegal character
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      String string0 = "JXPath: loaded from services: ";
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(documentImpl0, "JXPath: loaded from services: ", "wu74qS");
      pSVIAttrNSImpl0.getOwnerElement();
      Locale locale0 = Locale.forLanguageTag("*n");
      Locale locale1 = locale0.stripExtensions();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale1);
      dOMNodePointer0.hashCode();
      dOMNodePointer0.getLanguage();
      DOMNodePointer.findEnclosingAttribute((Node) null, "*n");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOptionElementImpl hTMLOptionElementImpl0 = new HTMLOptionElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((Object) hTMLOptionElementImpl0);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      xMLErrorReporter0.getLocale();
      String string0 = "WJ";
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null, "WJ");
      dOMNodePointer0.getNamespaceURI("WJ");
      // Undeclared exception!
//      try { 
        JXPathContext.newContext((Object) null);
//       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
//      }
  }
}
