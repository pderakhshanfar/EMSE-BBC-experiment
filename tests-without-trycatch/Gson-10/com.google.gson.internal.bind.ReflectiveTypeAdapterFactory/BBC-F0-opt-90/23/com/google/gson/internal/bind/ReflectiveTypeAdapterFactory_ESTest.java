/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 07:27:02 GMT 2021
 */

package com.google.gson.internal.bind;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.FieldNamingPolicy;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.internal.ConstructorConstructor;
import com.google.gson.internal.Excluder;
import com.google.gson.internal.ObjectConstructor;
import com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Field;
import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReflectiveTypeAdapterFactory_ESTest extends ReflectiveTypeAdapterFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, ReflectiveTypeAdapterFactory.BoundField> hashMap0 = new HashMap<String, ReflectiveTypeAdapterFactory.BoundField>();
      ReflectiveTypeAdapterFactory.Adapter<Object> reflectiveTypeAdapterFactory_Adapter0 = new ReflectiveTypeAdapterFactory.Adapter<Object>((ObjectConstructor<Object>) null, hashMap0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Locale.LanguageRange> class0 = Locale.LanguageRange.class;
//      try { 
        gson0.fromJson("!}_CYROIx\"", class0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // org.evosuite.runtime.mock.java.lang.MockThrowable: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
//         //
//         verifyException("com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
//      try { 
        ReflectiveTypeAdapterFactory.excludeField((Field) null, false, (Excluder) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.gson.internal.bind.ReflectiveTypeAdapterFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FieldNamingPolicy fieldNamingPolicy0 = FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES;
      Gson gson0 = new Gson();
      Excluder excluder0 = gson0.excluder();
      ReflectiveTypeAdapterFactory reflectiveTypeAdapterFactory0 = new ReflectiveTypeAdapterFactory((ConstructorConstructor) null, fieldNamingPolicy0, excluder0);
      Class<Object> class0 = Object.class;
      TypeToken<Object> typeToken0 = TypeToken.get(class0);
      // Undeclared exception!
//      try { 
        reflectiveTypeAdapterFactory0.create(gson0, typeToken0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.gson.internal.bind.ReflectiveTypeAdapterFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FieldNamingPolicy fieldNamingPolicy0 = FieldNamingPolicy.IDENTITY;
      Gson gson0 = new Gson();
      Excluder excluder0 = gson0.excluder();
      ReflectiveTypeAdapterFactory reflectiveTypeAdapterFactory0 = new ReflectiveTypeAdapterFactory((ConstructorConstructor) null, fieldNamingPolicy0, excluder0);
      // Undeclared exception!
//      try { 
        reflectiveTypeAdapterFactory0.excludeField((Field) null, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.gson.internal.bind.ReflectiveTypeAdapterFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Locale.LanguageRange> class0 = Locale.LanguageRange.class;
      Gson gson0 = new Gson();
      String string0 = gson0.toJson((Object) null, (Type) class0);
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Locale.LanguageRange> class0 = Locale.LanguageRange.class;
      Locale.LanguageRange locale_LanguageRange0 = gson0.fromJson("{\"requireExpose\":false,\"serializeInnerClasses\":true,\"version\":java.lang.Double@0000000102,\"modifiers\":java.lang.Integer@0000000103,\"deserializationStrategies\":[],\"serializationStrategies\":[]}", class0);
      assertNotNull(locale_LanguageRange0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Excluder excluder0 = Excluder.DEFAULT;
      Gson gson0 = new Gson();
      JsonElement jsonElement0 = gson0.toJsonTree((Object) excluder0);
      assertFalse(jsonElement0.isJsonArray());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Locale.LanguageRange> class0 = Locale.LanguageRange.class;
      Locale.LanguageRange locale_LanguageRange0 = gson0.fromJson("null", class0);
      assertNull(locale_LanguageRange0);
  }
}
