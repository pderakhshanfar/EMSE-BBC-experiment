/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 04:01:13 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultParser_ESTest extends DefaultParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      defaultParser0.handleConcatenatedOptions("");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("true", "4y.Ur!W-Tw", true, "-4y.Ur!W-Tw");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "tau";
      stringArray0[1] = "-4y.Ur!W-Tw";
      stringArray0[2] = "-.=!";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      options0.addOption("L2", true, "L2");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-L2";
      stringArray0[1] = "-)";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("Y", "Bqtagtu", true, "-4y.Ur!W-Tw");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "--=!";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("Bqtagtu", "4y.Ur!W-Tw", true, "4y.Ur!W-Tw");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "--=!";
      options0.addOption("vH0", "Default option wasn't defined", false, "Bqtagtu");
//      try { 
        defaultParser0.parse(options0, stringArray0, true);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: '4y.Ur!W-Tw', 'Default option wasn't defined')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("true", "", false, "v%:KDFd\" APx+");
//      try { 
        defaultParser0.parse(options1, (String[]) null, true);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Missing required option: true
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("Bqtagtu", "4y.Ur!W-Tw", true, "-4y.Ur!W-Tw");
      String[] stringArray0 = new String[11];
      stringArray0[0] = "4y.Ur!W-Tw";
      stringArray0[1] = "-4y.Ur!W-Tw";
      stringArray0[2] = "-=!";
      DefaultParser defaultParser0 = new DefaultParser();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("Bqtagtu", "4y.Ur!W-Tw", true, "4y.Ur!W-Tw");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "--=!";
      Options options1 = options0.addOption("vH0", "Default option wasn't defined", false, "Bqtagtu");
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
//      try { 
        defaultParser0.parse(options1, stringArray0, properties0, false);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: '4y.Ur!W-Tw', 'Default option wasn't defined')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addOption("Bqtagtu", "4y.Ur!W-Tw", true, "-4y.Ur!W-Tw");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "4y.Ur!W-Tw";
      stringArray0[1] = "-4y.Ur!W-Tw";
      stringArray0[2] = "-=!";
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0, properties0, false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Properties properties0 = new Properties();
      properties0.put(optionGroup0, options0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-*{uvqCz+YW 1";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0, true);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.cli.OptionGroup cannot be cast to java.lang.String
//         //
//         verifyException("java.util.Properties", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addOption("Bqtagtu", "4y.Ur!W-Tw", true, "4y.Ur!W-Tw");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "--=!";
      options0.addOption("vH0", "Default option wasn't defined", false, "Bqtagtu");
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
//      try { 
        defaultParser0.parse(options1, stringArray0, properties0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: '4y.Ur!W-Tw', 'Default option wasn't defined')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addOption("Bqtagtu", "4y.Ur!W-Tw", true, "-4y.Ur!W-Tw");
      String[] stringArray0 = new String[11];
      stringArray0[0] = "4y.Ur!W-Tw";
      stringArray0[1] = "-4y.Ur!W-Tw";
      stringArray0[2] = "-=!";
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0, properties0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Options options0 = new Options();
      Properties properties0 = new Properties();
      Option option0 = new Option("true", false, "true");
      properties0.put(option0, option0);
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "true";
      stringArray0[1] = "true";
      stringArray0[2] = "true";
      stringArray0[3] = "true";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.cli.Option cannot be cast to java.lang.String
//         //
//         verifyException("java.util.Properties", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addOption("Bqtagtu", "4y.Ur!W-Tw", true, "-4y.Ur!W-Tw");
      String[] stringArray0 = new String[11];
      stringArray0[0] = "4y.Ur!W-Tw";
      stringArray0[1] = "-4y.Ur!W-Tw";
      stringArray0[2] = "-=!";
      DefaultParser defaultParser0 = new DefaultParser();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      defaultParser0.parse(options0, (String[]) null);
//      try { 
        defaultParser0.handleConcatenatedOptions("-L");
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: -L
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Option option0 = new Option("", "", true, "true");
      option0.addValueForProcessing("s");
      options0.addOption(option0);
      defaultParser0.parse(options0, (String[]) null, true);
      // Undeclared exception!
//      try { 
        defaultParser0.handleConcatenatedOptions("--Default option wasn't defined");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot add value, list full.
//         //
//         verifyException("org.apache.commons.cli.Option", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      // Undeclared exception!
//      try { 
        defaultParser0.handleConcatenatedOptions("A#p4m-YP^");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      CommandLine commandLine0 = defaultParser0.parse(options0, (String[]) null, (Properties) null, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Options options0 = new Options();
      Properties properties0 = new Properties();
      DefaultParser defaultParser0 = new DefaultParser();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, true, (String) null);
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      String[] stringArray0 = new String[9];
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0, properties0, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      options0.addOption("", "", false, "org.apache.commons.cli.Options");
      defaultParser0.parse(options0, (String[]) null, true);
      defaultParser0.handleConcatenatedOptions("--Default option wasn't defined");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Properties properties0 = new Properties();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-*{uvqCz+YW 1";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, properties0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-4y.!W-:w";
      Option option0 = new Option("tau", "4", true, "-4y.!W-:w");
      option0.setArgs((-7));
      options0.addOption(option0);
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: -4y.!W-:w
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addOption("1", "4y.Ur!W-Tw", true, "-1");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-1";
      stringArray0[1] = ", ";
      defaultParser0.parse(options1, stringArray0);
      defaultParser0.handleConcatenatedOptions("-1");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Option option0 = new Option("L2", true, "L2");
      Options options0 = new Options();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-L2";
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup1.setRequired(true);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Option option0 = new Option("L2", true, "L2");
      Options options0 = new Options();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-L2";
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      options0.addRequiredOption("L2", "KTn6/i(qpm|", true, "=");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-L2";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addOption("4", "4", true, "");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-4y.Ur!W-Tw";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-.=!";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-4y.!W-:w";
      Option option0 = new Option("tau", "4", true, "-4y.!W-:w");
      option0.setArgs(5);
      options0.addOption(option0);
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      Options options1 = options0.addOption("4y", "4y", true, "#B`CIr@");
      options1.addOption("4y", "#B`CIr@");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-4y.Ur!W-Tw";
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: -4y.Ur!W-Tw
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      Options options1 = options0.addOption("4y", "4y", true, "#B`CIr@");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-4y.Ur!W-Tw";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-1";
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: -1
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      options0.addOption("Bqtagtu", "T/YIg%@", false, "--L");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Bqtagtu";
      stringArray0[1] = "Bqtagtu";
      stringArray0[2] = "--=!";
      Properties properties0 = new Properties();
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: --=!
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("Bqtagtu", "4y.Ur!W-Tw", true, "-4y.Ur!W-Tw");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "--=!";
      options0.addOption("vH0", "Default option wasn't defined", false, "Bqtagtu");
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: '4y.Ur!W-Tw', 'Default option wasn't defined')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-&f=";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("Bqtau", "4y.Ur!W-Tw", true, "-4y.Ur!W-Tw");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "4y.Ur!W-Tw";
      stringArray0[1] = "Bqtau";
      stringArray0[2] = "4y.Ur!W-Tw";
      stringArray0[3] = "-4y.Ur!W-Tw";
      stringArray0[4] = "-";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("Bqtagtu", "4y.Ur!W-Tw", true, "-4y.Ur!W-Tw");
      String[] stringArray0 = new String[11];
      stringArray0[0] = "4y.Ur!W-Tw";
      stringArray0[1] = "-4y.Ur!W-Tw";
      stringArray0[2] = "-4";
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Properties properties0 = new Properties();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, properties0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[8];
      stringArray0[0] = " [ARG]";
      stringArray0[1] = "8Fi4uXo^";
      stringArray0[2] = "@HN[N|E+'&TE` ~#u";
      stringArray0[3] = "$L=fA3R!MxlhJTwj";
      stringArray0[4] = "K&C8vma>Cs~$zqw";
      stringArray0[5] = "org.apache.commons.cli.OptionValidator";
      stringArray0[6] = "--";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      options0.addOption("", true, "true");
      defaultParser0.parse(options0, (String[]) null, false);
      defaultParser0.handleConcatenatedOptions("--Defaut option wasn't defined");
      defaultParser0.handleConcatenatedOptions("--Defaut option wasn't defined");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addOption("Bqtagtu", "4y.Ur!W-Tw", true, "-4y.Ur!W-Tw");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "4y.Ur!W-Tw";
      stringArray0[1] = "-4y.Ur!W-Tw";
      stringArray0[2] = "--=!";
      DefaultParser defaultParser0 = new DefaultParser();
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Missing argument for option: Bqtagtu
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "1";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "*{uvqCz+YW 1";
      stringArray0[4] = "";
      Properties properties0 = new Properties();
      properties0.put("", "");
      DefaultParser defaultParser0 = new DefaultParser();
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0, false);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Default option wasn't defined
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Options options1 = options0.addOption("L2", true, "L2");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "L2";
      stringArray0[1] = "L2";
      stringArray0[2] = "-L2";
      stringArray0[3] = "^s4ZE]~G6qapdR";
      stringArray0[4] = "-L2";
      stringArray0[5] = "^s4ZE]~G6qapdR";
      Properties properties0 = new Properties();
      CommandLine commandLine0 = defaultParser0.parse(options1, stringArray0, properties0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Options options1 = options0.addOption("L2", true, "L2");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "L2";
      stringArray0[1] = "-L2";
      stringArray0[2] = "-g4?_pY6QHUhj?Gd1";
      stringArray0[3] = "L2";
      stringArray0[4] = "L2";
      stringArray0[5] = "-L2";
      stringArray0[6] = "L2";
      CommandLine commandLine0 = defaultParser0.parse(options1, stringArray0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("", "4y.Ur!W-Tw", true, "4y.Ur!W-Tw");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "4y.Ur!W-Tw";
      stringArray0[1] = "-4y.Ur!W-Tw";
      stringArray0[2] = "--7(p?F40OiXpJ";
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: --7(p?F40OiXpJ
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[11];
      DefaultParser defaultParser0 = new DefaultParser();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }
}
