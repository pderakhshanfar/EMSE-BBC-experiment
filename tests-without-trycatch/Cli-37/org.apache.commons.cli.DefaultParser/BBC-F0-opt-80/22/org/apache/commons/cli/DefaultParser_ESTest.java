/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 03:34:29 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultParser_ESTest extends DefaultParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "/0U\"n'";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Properties properties0 = new Properties();
      CommandLine commandLine0 = defaultParser0.parse(options0, (String[]) null, properties0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("1", "X8s'R^PLxYa", true, "X8s'R^PLxYa");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "--=";
      options1.addOption("1", " to desired type: ", true, "X8s'R^PLxYa");
//      try { 
        defaultParser0.parse(options1, stringArray0, false);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: 'X8s'R^PLxYa', ' to desired type: ')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[14];
      stringArray0[0] = "-=uYHi&04_M}/WMw";
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, true);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[24];
      stringArray0[0] = "--=";
      Options options1 = options0.addRequiredOption("S", "--=", true, "S");
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
      options1.addRequiredOption("S", "--", true, "FN>stXwOhf Abqyl<");
//      try { 
        defaultParser0.parse(options1, stringArray0, properties0, true);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: '--=', '--')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-='#FsHBiV:0_}/w";
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0, true);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[4];
      Properties properties0 = new Properties();
      // Undeclared exception!
//      try { 
        defaultParser0.parse((Options) null, stringArray0, properties0, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "mn<2QPgpt9]#}sd*-2";
      Properties properties0 = new Properties();
      Object object0 = new Object();
      properties0.put(object0, "mn<2QPgpt9]#}sd*-2");
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0, true);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.Object cannot be cast to java.lang.String
//         //
//         verifyException("java.util.Properties", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[24];
      stringArray0[0] = "--=";
      Options options1 = options0.addRequiredOption("S", "--=", true, "S");
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
      options1.addRequiredOption("S", "--", true, "FN>stXwOhf Abqyl<");
//      try { 
        defaultParser0.parse(options1, stringArray0, properties0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: '--=', '--')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("", "", true, "");
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ]";
      stringArray0[1] = " ]";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = " ]";
      stringArray0[5] = "";
      Properties properties0 = new Properties();
//      try { 
        defaultParser0.parse(options1, stringArray0, properties0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Missing required option: 
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Options options0 = new Options();
      Properties properties0 = new Properties();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "xl|2e,<$<3S.";
      stringArray0[1] = "O";
      stringArray0[2] = "(!";
      stringArray0[3] = "-=#5OHBi9:_KQ/MO";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[0];
      Properties properties0 = new Properties();
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, properties0, true);
      properties0.put(commandLine0, "arOGUqI{mvg@E {{V0U#");
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.cli.CommandLine cannot be cast to java.lang.String
//         //
//         verifyException("java.util.Properties", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-='#FsHBiV:0_}/w";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "X8s'R^PLxYa", true, "");
      Options options1 = options0.addOption(option0);
      Properties properties0 = new Properties();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "X8s'R^PLxYa";
      option0.addValueForProcessing(" ");
      defaultParser0.parse(options1, stringArray0, properties0, true);
      // Undeclared exception!
//      try { 
        defaultParser0.handleConcatenatedOptions("--1");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot add value, list full.
//         //
//         verifyException("org.apache.commons.cli.Option", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      // Undeclared exception!
//      try { 
        defaultParser0.handleConcatenatedOptions("Cannot add value, list full.");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "X8s'R^PLxYa", true, "");
      options0.addOption(option0);
      Properties properties0 = new Properties();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-X8s'R^PLxYa";
      stringArray0[1] = "-X8s'R^PLxYa";
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0, true);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Missing argument for option: 
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, true, "--/0U\"n'>");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      Properties properties0 = new Properties();
      CommandLine commandLine0 = defaultParser0.parse(options1, (String[]) null, properties0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Options options0 = new Options();
      Properties properties0 = new Properties();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[6];
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      options0.addOption("", "");
      Properties properties0 = new Properties();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      defaultParser0.parse(options0, stringArray0, properties0, true);
      defaultParser0.handleConcatenatedOptions("--yes");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "X8s'R^PLxYa", true, "");
      Options options1 = options0.addOption(option0);
      Properties properties0 = new Properties();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[0];
      defaultParser0.parse(options1, stringArray0, properties0, true);
      defaultParser0.handleConcatenatedOptions("--");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      defaultParser0.handleConcatenatedOptions("");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("1", "X8s'R^PLxYa", true, "1");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup1.setRequired(true);
      options0.addOptionGroup(optionGroup1);
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "X8s'R^PLxYa";
      stringArray0[1] = "-X8s'R^PLxYa";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("1", "X8s'R^PLxYa", true, "1");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "X8s'R^PLxYa";
      stringArray0[1] = "-X8s'R^PLxYa";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Options options1 = options0.addOption("", "[");
      Properties properties0 = new Properties();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "W";
      stringArray0[1] = "";
      defaultParser0.parse(options1, stringArray0, properties0, false);
//      try { 
        defaultParser0.handleConcatenatedOptions("--gw.N<?;j/cRpF");
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: --gw.N<?;j/cRpF
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-X8s'R^PLxYa";
      Options options1 = options0.addOption("X", "1", true, "'  (could be: ");
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      options0.addRequiredOption("P", "P", false, "-P=uLY=&04_M}/Mw");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-P=uLY=&04_M}/Mw";
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: -P=uLY=&04_M}/Mw
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[17];
      stringArray0[0] = "-#='#5OHBi9:_KQ/MOs";
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, properties0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DL&p";
      stringArray0[1] = "-iP'[s=2qn.j/WN:/Bv:";
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: -iP'[s=2qn.j/WN:/Bv:
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("X8", "X8", true, "0eoIN,:%me6-G\"PX7");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-X8s'RPLxYa";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addOption("X8", "X8", false, "X");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "X8";
      stringArray0[1] = "-X8s'RPLxYa";
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: -X8s'RPLxYa
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("P", "", true, "6");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "]";
      stringArray0[1] = "--=";
      stringArray0[2] = "P";
      stringArray0[3] = "-P=uLY=&04_M}/Mw";
      CommandLine commandLine0 = defaultParser0.parse(options1, stringArray0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      options0.addOption("X", "-X", true, "U6C{6drm7n=W[}Y");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "U6C{6drm7n=W[}Y";
      stringArray0[1] = "X";
      stringArray0[2] = "-X";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "U6C{6drm7n=W[}Y";
      stringArray0[1] = "X";
      stringArray0[2] = "-X";
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: -X
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("K", "X8s'R^PLxYa", true, "K");
      option0.addValueForProcessing("K");
      options0.addOption(option0);
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Q=~HTr[W4}dt";
      stringArray0[1] = "--=";
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: --=
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("1", "X8s'R^PLxYa", true, "1");
      Options options1 = options0.addOption(option0);
      DefaultParser defaultParser0 = new DefaultParser();
      options1.addOption("1", "-", true, "X8s'R^PLxYa");
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-X8s'R^PLxYa";
      stringArray0[1] = "--=";
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: 'X8s'R^PLxYa', '-')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "X8s'R^PLxYa", true, "");
      Options options1 = options0.addOption(option0);
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-X8s'R^PLxYa";
      stringArray0[1] = "--='#FsHBi9:0_}/Mw";
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: --='#FsHBi9:0_}/Mw
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[16];
      stringArray0[0] = "---";
      DefaultParser defaultParser0 = new DefaultParser();
      Options options1 = options0.addOption("", "---", false, "---");
      Option option0 = new Option("", "---=", false, "---");
      Options options2 = options1.addOption(option0);
//      try { 
        defaultParser0.parse(options2, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '---'  (could be: '---', '---=')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option((String) null, "X8s'R^PLxYa", true, "X8s'R^PLxYa");
      options0.addOption(option0);
      options0.addOption("", "X8s'R^PLxYa");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "X8s'R^PLxYa";
      stringArray0[2] = "-X8s'R^PLxYa";
      stringArray0[3] = "--yes";
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: --yes
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-/0U\"n'";
      Properties properties0 = new Properties();
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, properties0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "X8s'R^PLxYa", true, "");
      options0.addOption(option0);
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "X8s'R^PLxYa";
      stringArray0[1] = "-X8s'R^PLxYa";
      stringArray0[2] = "";
      stringArray0[3] = "-X8s'R^PLxYa";
      stringArray0[4] = "-@";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("1", "X8s'R^PLxYa", true, "1");
      Options options1 = options0.addOption(option0);
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-X8s'R^PLxYa";
      stringArray0[1] = "-";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("1", "X8s'R^PLxYa", true, "X8s'R^PLxYa");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "1";
      stringArray0[1] = "X8s'R^PLxYa";
      stringArray0[2] = "1";
      stringArray0[3] = "-X8s'R^PLxYa";
      stringArray0[4] = "-1";
      CommandLine commandLine0 = defaultParser0.parse(options1, stringArray0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "X8s'R^PLxYa", true, "");
      Options options1 = options0.addOption(option0);
      Properties properties0 = new Properties();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "X8s'R^PLxYa";
      defaultParser0.parse(options1, stringArray0, properties0, true);
      defaultParser0.handleConcatenatedOptions("--1");
      defaultParser0.handleConcatenatedOptions("--1");
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      options0.addRequiredOption("", "", true, "");
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ]";
//      try { 
        defaultParser0.parse(options0, stringArray0, true);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Missing required option: 
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "mn<2QPgpt9]#}sd*-2";
      Properties properties0 = new Properties();
      properties0.put("org.apache.commons.cli.AmbiguousOptionException", "OQG");
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0, true);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Default option wasn't defined
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("1", "X8s'R^PLxYa", true, "1");
      Options options1 = options0.addOption(option0);
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-";
      stringArray0[1] = "X8s'R^PLxYa";
      stringArray0[2] = "-X8s'R^PLxYa";
      stringArray0[3] = "1";
      stringArray0[4] = "-";
      stringArray0[5] = "-";
      stringArray0[6] = "-";
      stringArray0[7] = "--";
      CommandLine commandLine0 = defaultParser0.parse(options1, stringArray0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[14];
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }
}
