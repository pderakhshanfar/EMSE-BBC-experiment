/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 19 13:16:31 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[5];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-1181), (-1181), (-1181), true, false, charArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -1181 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = RandomStringUtils.randomNumeric(0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = RandomStringUtils.randomAscii(2302);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = RandomStringUtils.randomAscii(0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = RandomStringUtils.randomAlphanumeric(0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Random.setNextRandom((-268));
      String string0 = RandomStringUtils.randomAlphabetic(3299);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = RandomStringUtils.randomAlphabetic(0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = RandomStringUtils.random(1, false, false);
      assertNotNull(string0);
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = RandomStringUtils.random(2302, "uvZ5%hLoz");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = RandomStringUtils.random(16, 523, 3, false, false, (char[]) null);
      assertNotNull(string0);
      assertEquals("\u020B\u020B\u020B\u020B\u020B\u020B\u020B\u020B\u020B\u020B\u020B\u020B\u020B\u020B\u020B\u020B", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = RandomStringUtils.random(0, 0, 562, false, false, charArray0);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
      assertNotNull(string0);
      assertEquals(1, charArray0.length);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = RandomStringUtils.random(0, 0, 0, false, false);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = RandomStringUtils.random(0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomNumeric((-2401));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -2401 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomAscii((-283));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -283 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(128);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[9];
      // Undeclared exception!
      RandomStringUtils.random(46216, charArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-1), charArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -1 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(560, false, true);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-2843), false, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -2843 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56192, "!t,4}H[d)");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(567, 567, 15, false, false, (char[]) null, (java.util.Random) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[1];
      MockRandom mockRandom0 = new MockRandom(2254);
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(2254, 2254, (-3063), true, true, charArray0, (java.util.Random) mockRandom0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[9];
      MockRandom mockRandom0 = new MockRandom(1357L);
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(2243, 2243, 2243, true, true, charArray0, (java.util.Random) mockRandom0);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[6];
      // Undeclared exception!
      RandomStringUtils.random(46194, 0, 128, false, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[1];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(1, 128, 128, false, false, charArray0);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56192, 56192, (-1707), false, false);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-441), (-441), 0, false, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -441 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(9, 9, 9, true, true);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56319);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-169));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -169 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = RandomStringUtils.random(0, charArray0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertNotNull(string0);
      assertEquals(5, charArray0.length);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1);
      assertNotNull(mockRandom0);
      
      String string0 = RandomStringUtils.random(558, (-1017), 1, false, false, (char[]) null, (java.util.Random) mockRandom0);
      assertNotNull(string0);
      assertEquals("\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07\uFC07", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'r';
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      RandomStringUtils.random(56192, 0, 56192, true, false, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '0';
      MockRandom mockRandom0 = new MockRandom((-2288L));
      assertNotNull(mockRandom0);
      
      String string0 = RandomStringUtils.random(16, 0, (-349), true, true, charArray0, (java.util.Random) mockRandom0);
      assertArrayEquals(new char[] {'0', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertNotNull(string0);
      assertEquals(4, charArray0.length);
      assertEquals("0000000000000000", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      String string0 = RandomStringUtils.random(29, 0, 0, false, false, (char[]) null, (java.util.Random) mockRandom0);
      assertNotNull(string0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      RandomStringUtils.random(22, 0, 0, false, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[1];
      MockRandom mockRandom0 = new MockRandom((-1181));
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-113), 38, 562, false, false, charArray0, (java.util.Random) mockRandom0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -113 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[6];
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      String string0 = RandomStringUtils.random(0, 3158, 3158, false, false, charArray0, (java.util.Random) mockRandom0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertNotNull(string0);
      assertEquals(6, charArray0.length);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = RandomStringUtils.random(0, false, false);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = RandomStringUtils.random(2019, (char[]) null);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-936), (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -936 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt();
      // Undeclared exception!
      RandomStringUtils.random((int) (byte)14, 56191, (-2233), false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random((int) (byte)107, 56191, (-2233), false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(37, 56320, 37, false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = RandomStringUtils.random(962, (-1707), 962, false, false);
      assertEquals("\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955\uF955", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Random.setNextRandom(24);
      String string0 = RandomStringUtils.randomNumeric(24);
      assertEquals("888888888888888888888888", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Random.setNextRandom(127);
      String string0 = RandomStringUtils.randomAlphanumeric(127);
      assertEquals("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(22, 0, 0, true, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[4];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(872, 0, 0, true, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(3, 281, 16, false, false, charArray0, (java.util.Random) mockRandom0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The chars array must not be empty
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = RandomStringUtils.random(0, "\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(24);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = RandomStringUtils.random(16);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomAlphanumeric((-1928));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -1928 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomAlphabetic((-360));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -360 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      char[] charArray0 = new char[8];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(44, (-2507), 5496, true, true, charArray0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(57344);
  }
}
