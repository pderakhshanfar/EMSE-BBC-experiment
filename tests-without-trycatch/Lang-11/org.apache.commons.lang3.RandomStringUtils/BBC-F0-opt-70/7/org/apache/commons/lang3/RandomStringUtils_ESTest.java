/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 19 13:17:42 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(32, 0, (-1), true, false);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-270), (-270), 0, false, true, (char[]) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -270 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = RandomStringUtils.randomNumeric(0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = RandomStringUtils.randomAscii(0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = RandomStringUtils.randomAlphanumeric(0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Random.setNextRandom(36);
      String string0 = RandomStringUtils.randomAlphabetic(18);
      assertNotNull(string0);
      assertEquals("DDDDDDDDDDDDDDDDDD", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = RandomStringUtils.randomAlphabetic(0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = RandomStringUtils.random(0, charArray0);
      assertNotNull(string0);
      assertEquals(5, charArray0.length);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = RandomStringUtils.random(0, true, true);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[9];
      String string0 = RandomStringUtils.random(1, 1, 111, false, false, charArray0);
      assertNotNull(string0);
      assertEquals(9, charArray0.length);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[6];
      String string0 = RandomStringUtils.random(0, (-4774), (-1), false, false, charArray0);
      assertNotNull(string0);
      assertEquals(6, charArray0.length);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = RandomStringUtils.random(1597, (-1557), 1358, false, false);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = RandomStringUtils.random(0, (-7), (-2994), false, false);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = RandomStringUtils.random(0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(56192);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(56192);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomAscii((-2703));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -2703 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomAlphanumeric((-2820));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -2820 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56320, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(1881, false, true);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-1074), false, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -1074 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(57343, "@$rs,qeUz2");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(1, "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The chars array must not be empty
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(349, (-1), 0, false, true, charArray0, (java.util.Random) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[9];
      MockRandom mockRandom0 = new MockRandom(2122);
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(4403, 46325, Integer.MAX_VALUE, true, true, charArray0, (java.util.Random) mockRandom0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(6113, 119, 119, true, false, (char[]) null, (java.util.Random) mockRandom0);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
      RandomStringUtils.random(55296, 0, 55296, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[6];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(1, (-1), (-1), true, true, charArray0);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-1), (-2336), 0, false, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -1 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(128, 128, 128, true, false);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56319);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-1249));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -1249 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-1004), charArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -1004 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(36227, 56190, (-1453), false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[3];
      charArray0[0] = 'F';
      String string0 = RandomStringUtils.random(26, 0, 21, true, false, charArray0, (java.util.Random) mockRandom0);
      assertEquals("FFFFFFFFFFFFFFFFFFFFFFFFFF", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextGaussian();
      char[] charArray0 = new char[3];
      charArray0[2] = '8';
      String string0 = RandomStringUtils.random(44, 1, 44, true, true, charArray0, (java.util.Random) mockRandom0);
      assertEquals("88888888888888888888888888888888888888888888", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(56190, 0, 0, true, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(56190, 0, 0, false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[9];
      MockRandom mockRandom0 = new MockRandom(2122);
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-1031), 2122, 2254, false, false, charArray0, (java.util.Random) mockRandom0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -1031 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[5];
      MockRandom mockRandom0 = new MockRandom();
      String string0 = RandomStringUtils.random(0, 56319, 56319, true, true, charArray0, (java.util.Random) mockRandom0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = RandomStringUtils.random(1597, false, false);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = RandomStringUtils.random(1, (char[]) null);
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = RandomStringUtils.random(10, (String) null);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt();
      mockRandom0.nextInt();
      // Undeclared exception!
      RandomStringUtils.random(36227, 56190, (-1453), false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(1, 55296, 0, false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-3743L));
      // Undeclared exception!
      RandomStringUtils.random(869, 56320, 2231, false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-1419L));
      String string0 = RandomStringUtils.random(968, (-1731), (-675), false, false, (char[]) null, (java.util.Random) mockRandom0);
      assertEquals("\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D\uF93D", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Random.setNextRandom(205);
      String string0 = RandomStringUtils.randomNumeric(205);
      assertEquals("7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Random.setNextRandom((-855));
      String string0 = RandomStringUtils.randomAlphanumeric(123);
      assertEquals("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(56190, 0, 0, false, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1);
      char[] charArray0 = new char[8];
      // Undeclared exception!
      RandomStringUtils.random(1, 0, 0, false, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom(13);
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(407, (-1), 13, true, true, charArray0, (java.util.Random) mockRandom0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The chars array must not be empty
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = RandomStringUtils.random(0, "catG=s3M]");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomNumeric((-1029));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -1029 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = RandomStringUtils.random(35);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(123);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomAlphabetic((-5102));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -5102 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      char[] charArray0 = new char[2];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(14, 14, 929, false, false, charArray0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = RandomStringUtils.randomAscii(38);
      assertEquals("                                      ", string0);
  }
}
