/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 05:33:55 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[8];
      // Undeclared exception!
      RandomStringUtils.random(1, 0, (-985), true, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(56320, 56320, 56320, false, true, charArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The chars array must not be empty
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(2207);
      RandomStringUtils.randomNumeric(11);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RandomStringUtils.randomAscii(11);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(74);
      RandomStringUtils.randomAlphanumeric(584);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(74);
      RandomStringUtils.randomAlphabetic(1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RandomStringUtils.random(1, false, false);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomStringUtils.random(0, false, false);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RandomStringUtils.random(0, "org.apache.commons.lang3.RandomStringUtils");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandomStringUtils.random(127, (-729), 127, true, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[8];
      RandomStringUtils.random(0, 3522, 875, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RandomStringUtils.random(0, (-2844), 0, false, true);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RandomStringUtils.random(1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RandomStringUtils.random(0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomNumeric((-2996));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -2996 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(56191);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomAscii((-1509));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -1509 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomAlphanumeric((-1));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -1 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(748);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56320, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(1, charArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The chars array must not be empty
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(128, true, true);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56319, "=2?~s%/,");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[9];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(6019, 6019, 6019, false, true, charArray0, (Random) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[7];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(32, (-2548), 1, false, true, charArray0, (Random) mockRandom0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[7];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(32, 32, 32, true, true, charArray0, (Random) mockRandom0);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[4];
      // Undeclared exception!
      RandomStringUtils.random(1, 1, 0, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(127, 127, 127, true, true, (char[]) null);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(3618, (-2508), 3618, true, true);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-740), (-740), (-740), false, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -740 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(32, 32, 32, false, false);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56320);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[3];
      RandomStringUtils.random(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '2';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextDouble();
      RandomStringUtils.random(1488, 0, 0, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(2889, 0, 0, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(20L);
      // Undeclared exception!
      RandomStringUtils.random(850, 0, 0, false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[3];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-3126), (-1248), 0, true, true, charArray0, (Random) mockRandom0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -3126 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[3];
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(0, 1168, 0, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-2129), false, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -2129 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RandomStringUtils.random(1231, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-950), (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -950 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RandomStringUtils.random(499, "{qm \"ZZ,s3O!(!cV");
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(2079, 56319, 2334, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(31, 56169, 45336, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[3];
      mockRandom0.nextBytes(byteArray0);
      // Undeclared exception!
      RandomStringUtils.random(2079, 56319, 2334, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(499, (-1), (-2741), false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(2207);
      RandomStringUtils.random(11, 25, 2207, true, true);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      char[] charArray0 = new char[4];
      charArray0[0] = 'I';
      String string0 = RandomStringUtils.random(941, 0, 46224, true, true, charArray0, (Random) mockRandom0);
      assertEqualsstring0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      String string0 = RandomStringUtils.random(2852, 0, 0, false, false, (char[]) null, (Random) mockRandom0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom(38);
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(3, 3, 38, false, true, charArray0, (Random) mockRandom0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The chars array must not be empty
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(272);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.random((-2119));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -2119 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
//      try { 
        RandomStringUtils.randomAlphabetic((-5328));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requested random string length -5328 is less than 0.
//         //
//         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      char[] charArray0 = new char[5];
      // Undeclared exception!
//      try { 
        RandomStringUtils.random(2133, 30, (-1), true, true, charArray0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = RandomStringUtils.randomAscii(0);
      assertEquals("", string0);
  }
}
