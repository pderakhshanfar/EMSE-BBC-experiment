/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 14:48:49 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(121, "`v%~", "`v%~", (Options) null, "`v%~");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(1014);
      helpFormatter0.setLeftPadding((-1004));
      helpFormatter0.getLeftPadding();
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth((-1461));
      helpFormatter0.setOptPrefix("3A2?");
      String string0 = "(q@?ym<E";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("BXnVoD(RPtK", "(q@?ym<E", (Options) null, "(q@?ym<E");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(496);
      StringBuffer stringBuffer0 = new StringBuffer(1);
      Options options0 = new Options();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 496, options0, 496, 496);
      stringBuffer1.chars();
      StringBuffer stringBuffer2 = helpFormatter0.renderWrappedText(stringBuffer1, 496, 0, "=bw/~");
      stringBuffer2.ensureCapacity(0);
      helpFormatter0.renderWrappedText(stringBuffer2, 496, 0, "");
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.printHelp("=bw/~", "[ Options: [ short ", options0, "", true);
      helpFormatter0.setLongOptPrefix("");
      char[] charArray0 = new char[6];
      charArray0[0] = 'D';
      charArray0[1] = '';
      charArray0[2] = '~';
      charArray0[3] = 'I';
      charArray0[4] = 'n';
      charArray0[5] = '%';
      stringBuffer1.append(charArray0);
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getOptPrefix();
      helpFormatter0.renderOptions(stringBuffer1, 774, options0, 496, 1453);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "[ARG...]";
      helpFormatter0.rtrim("[ARG...]");
      int int0 = (-3127);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) null, 1683, "[ARG...]", "", options0, (-3127), (-3127), "[ARG...]");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1806), "&&Jb\"::tup8.", "&&Jb\"::tup8.", options0, 1221, (-1806), ".");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.defaultWidth = (-293);
      options0.addOption("arg", "arg", true, "--");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("arg", options0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~B");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.defaultWidth = 0;
      // Undeclared exception!
      helpFormatter0.printHelp("-", "-", options0, "\n");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasOption("-");
      helpFormatter0.setDescPadding((-4208));
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("arg", options0);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      File file0 = MockFile.createTempFile("df>q<Cm6$}Q@*Q23i:g", "usage: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1676, "df>q<Cm6$}Q@*Q23i:g", "df>q<Cm6$}Q@*Q23i:g", options0, 32, (-1346), "df>q<Cm6$}Q@*Q23i:g");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.rtrim("7rt");
      helpFormatter0.findWrapPos("7rt", (-2710), (-1000));
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]#f(5");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      helpFormatter0.defaultDescPad = (-3989);
      helpFormatter0.getDescPadding();
      helpFormatter0.getLongOptPrefix();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Options options0 = new Options();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "arg");
      options0.getOption("xF>o29z6fLWMNATpl(K");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("-", "--", options0, "[");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      Option option0 = new Option("arg", " ");
      Locale locale0 = Locale.JAPANESE;
      Object[] objectArray0 = new Object[1];
      mockPrintWriter0.flush();
      helpFormatter0.setSyntaxPrefix("arg");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "arg", objectArray0);
      helpFormatter0.printUsage(printWriter0, 3, "\n", options0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("-", options0, true);
      options0.addOption("arg", "arg", true, "--");
      // Undeclared exception!
//      try { 
        helpFormatter0.printOptions((PrintWriter) null, (-1847), options0, 471, 1435);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "6}QO8";
      String string1 = "@7y,8jg)k";
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      helpFormatter0.defaultArgName = "4G_[&ezVA^-M";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(24, "@7y,8jg)k", "6}QO8", (Options) null, "6}QO8", true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("arg", true, "--");
      int int0 = (-1);
      helpFormatter0.setLeftPadding((-1));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("--", "--", options0, "usage: ");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setWidth(1);
      // Undeclared exception!
      helpFormatter1.printHelp("usage: ", options0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.rtrim((String) null);
      // Undeclared exception!
//      try { 
        helpFormatter0.findWrapPos((String) null, 2550, 111);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "";
      helpFormatter0.rtrim("");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) null, 1683, "", "", options0, (-3145), (-3145), "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      helpFormatter0.setOptPrefix((String) null);
      Options options1 = options0.addOption("", "U!}hTA/&d%}", false, "");
      Object[] objectArray0 = new Object[0];
      mockPrintWriter0.printf("\n", objectArray0);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 32, "U!}hTA/&d%}", "", options1, 32, 399, (String) null, false);
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "--", false, "1;eiwA PZz)I;=z4wC`");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options0.hasOption("usage: ");
      optionGroup1.addOption(option0);
      options0.addOptionGroup(optionGroup0);
      options0.addOption("", false, ".B1\"?");
      PrintWriter printWriter0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 41, "");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option((String) null, "--", true, ".B1\"?");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup0.setRequired(true);
      optionGroup1.addOption(option0);
      options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("p", "s?0[wDLECX1", options0, "p");
      options0.addOption("p", true, "p");
      options0.toString();
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-2), ".B1\"?", options0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      String string1 = "org.apache.commons.cli.HelpFormatter$OptionComparator";
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('P');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      String string2 = "Q`Oo!42'JDp";
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) helpFormatter0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      objectArray0[1] = (Object) "org.apache.commons.cli.HelpFormatter$OptionComparator";
      objectArray0[2] = (Object) "org.apache.commons.cli.HelpFormatter$OptionComparator";
      PrintWriter printWriter0 = mockPrintWriter0.format("Q`Oo!42'JDp", objectArray0);
      int int0 = 0;
      Options options0 = null;
      helpFormatter0.createPadding(0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage(printWriter0, 0, "org.apache.commons.cli.HelpFormatter$OptionComparator", (Options) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("RUm }>Zj)$gIGNSf;nm");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) helpFormatter0;
      objectArray0[3] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      PrintWriter printWriter0 = mockPrintWriter1.printf("-", objectArray0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped(printWriter0, (-885), "RUm }>Zj)$gIGNSf;nm");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n");
      int int0 = (-592);
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 1, (-592), "~zyRb`H}#omU");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(comparator0).toString();
      doReturn(0).when(comparator0).compare(anyInt() , anyInt());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "--");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.setOptionComparator(comparator0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      Locale locale0 = new Locale("");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) comparator0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) mockPrintWriter0;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "", objectArray0);
      Options options0 = new Options();
      Option option0 = new Option("arg", "-", false, "--");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      Options options3 = options2.addOption("", false, "");
      helpFormatter0.printUsage(printWriter0, 31, "", options3);
      MockPrintWriter mockPrintWriter1 = null;
//      try {
        mockPrintWriter1 = new MockPrintWriter("");
//        fail("Expecting exception: FileNotFoundException");
      
//      } catch(Throwable e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) " ");
      int int0 = 1;
      String string0 = "f2?A.CglMJVo#i%";
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 1, 3234, "f2?A.CglMJVo#i%");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("-", "-", options0, "\n");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "#`2Di$tz+ !.QG-V";
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) mockPrintWriter0;
      objectArray0[3] = (Object) "#`2Di$tz+ !.QG-V";
      objectArray0[4] = (Object) mockPrintWriter0;
      objectArray0[5] = (Object) mockPrintWriter0;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) "#`2Di$tz+ !.QG-V";
      objectArray0[8] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("#`2Di$tz+ !.QG-V", objectArray0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped(printWriter0, 0, (-831), "#`2Di$tz+ !.QG-V");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("");
      Options options0 = new Options();
      options0.addOption("arg", "olaw.@Z4&o[-V<U~A", false, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("U!}hTA/&d%}");
      helpFormatter0.getNewLine();
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer("_V.rc7a");
      helpFormatter0.renderWrappedText(stringBuffer0, 6, 0, "olaw.@Z4&o[-V<U~A");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(74);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter1.renderOptions((StringBuffer) null, 3, options1, 106, 91);
      // Undeclared exception!
//      try { 
        helpFormatter1.renderWrappedText((StringBuffer) null, 74, 74, "usage: ");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "olaw.@Z4&o[-V<U~A", true, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("U!}hTA/&d%}");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1), "   ", options1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringWriter stringWriter0 = new StringWriter(74);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode1);
      Locale.lookup(linkedList0, list2);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) pipedOutputStream0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) pipedOutputStream0;
      PrintWriter printWriter0 = mockPrintWriter0.printf((Locale) null, "usage: ", objectArray0);
      // Undeclared exception!
      helpFormatter0.printWrapped(printWriter0, 0, "p9PtMe3y??Wvcs");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      Object object0 = new Object();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 83, " ", "4 /t{[i;(EY'4s 6", options0, 83, 83, "dEgM9cyAyhQ1CKXS", false);
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, "arg");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("qe:^cM({+-|J3,6", "dEgM9cyAyhQ1CKXS", options1, "eU");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1), "`oVpRWQ_Qi{x", options0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('o');
      Object object0 = new Object();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("arg");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(printWriter0, 74, "--", "usage: ", options0, 1, 7, "\n", true);
      helpFormatter1.getNewLine();
      // Undeclared exception!
//      try { 
        helpFormatter1.printWrapped(printWriter0, 1, (-2714), (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(74);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      byteArrayOutputStream0.close();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Object object0 = new Object();
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, "usage: ", (String) null, (Options) null, 12, 523, "!FGiB7MaS ", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((String) null, (String) null, options0, "~n(T?2.nAm+", true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)9;
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-1);
      byte byte1 = (byte) (-2);
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte)114;
      byteArray0[6] = (byte) (-45);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("w0g=0sn/@nlp`{U6P", "<", (Options) null, "<");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter0.append('o');
      boolean boolean0 = false;
      helpFormatter0.getDescPadding();
      helpFormatter0.getLongOptPrefix();
      Options options0 = new Options();
      Options options1 = options0.addOption((String) null, "bRp!}t/g'w", true, (String) null);
      helpFormatter0.printHelp(" [ARG]", "", options1, "", false);
      helpFormatter0.findWrapPos("--", (-356), 1);
      String string0 = "Cannot add value, list full.";
      Options options2 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options3 = options2.addOptionGroup(optionGroup0);
      Options options4 = options3.addOption("h5sBt", "usage: ", false, "arg");
      // Undeclared exception!
//      try { 
        options4.addOption((Option) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.Options", e);
//      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      helpFormatter0.setOptPrefix("p%hiqS");
      helpFormatter0.getLeftPadding();
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.setSyntaxPrefix(",K|! N\r4/X");
      helpFormatter0.getLeftPadding();
      helpFormatter0.getNewLine();
      MockFile mockFile0 = new MockFile(")7=:T[!");
      File file0 = MockFile.createTempFile(",K|! N\r4/X", ")7=:T[!", (File) mockFile0);
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter(file0, "ptp}gniQJZ9~dN");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // ptp}gniQJZ9~dN
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(74);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) helpFormatter0;
      objectArray0[1] = (Object) helpFormatter0;
      byteArrayOutputStream0.close();
      objectArray0[2] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.format("_,8*1xTq}\"?U", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = (Object) helpFormatter0;
      objectArray1[1] = (Object) printWriter0;
      objectArray1[2] = (Object) mockPrintWriter0;
      objectArray1[1] = (Object) mockPrintWriter1;
      Object object0 = new Object();
      objectArray1[4] = object0;
      objectArray1[5] = (Object) mockPrintWriter1;
      mockPrintWriter1.printf("--", objectArray1);
      Options options0 = null;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      mockPrintWriter1.append((CharSequence) "\n");
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1, "\n", "4 /t{[i;(EY'4s 6", (Options) null, 1902, 1, "_,8*1xTq}\"?U", false);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptionComparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('\"');
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter1.append((CharSequence) "--");
      String string0 = "\\3}l?\\u+@I$',@";
      helpFormatter1.printHelp(printWriter0, 106, "kXv}UQ>7", string0, options1, 106, 3, (String) null, true);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter0.append('o');
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      Option option0 = new Option("", false, "");
      options0.addOption(option0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((-1868), "G{ -wdFb=", "", options0, (String) null, false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Comparator<String> comparator0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp("Illegal option name '", "f", (Options) null, "\n", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.setDescPadding(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) comparator0;
      objectArray0[2] = (Object) helpFormatter0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) mockPrintWriter0;
      PrintWriter printWriter0 = mockPrintWriter0.format("cmdLineSyntax not provided", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      mockPrintWriter1.printf("", objectArray0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      printWriter0.append((CharSequence) "");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter2.printHelp("usage: ", (Options) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      helpFormatter0.getOptionComparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter0.printf("arg", objectArray0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter1.printUsage(printWriter0, (-492), (String) null, options0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.setDescPadding(105);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) comparator0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      PrintWriter printWriter0 = mockPrintWriter0.format(" ", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      mockPrintWriter0.printf("", objectArray0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      mockPrintWriter0.append((CharSequence) "--");
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter1, 74, (String) null, "", (Options) null, 105, 91, "", true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "olaw.@Z4&o[-V<U~A", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = new OptionGroup();
      helpFormatter0.printHelp("Fr0*F96#^MhSp__7", options1);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OptionGroup optionGroup0 = new OptionGroup();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((String) null, options0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "The option '", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      options1.addOption("", false, "usage: ");
      Option option0 = new Option("arg", "");
      Options options2 = options0.addOption(option0);
      options2.addOptionGroup(optionGroup0);
      // Undeclared exception!
      helpFormatter0.printHelp(1, "mljighQyX0R3xy", "T}rT;*?x", options2, "mljighQyX0R3xy", true);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasOption("\n");
      helpFormatter0.printHelp("VIt-w E8')q:", options0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      helpFormatter0.findWrapPos("VIt-w E8')q:", 8, 2);
      Options options1 = new Options();
      helpFormatter0.printHelp("VIt-w E8')q:", options0, true);
      helpFormatter0.getArgName();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getNewLine();
      MockPrintStream mockPrintStream1 = new MockPrintStream("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      mockPrintWriter0.printf(" ", (Object[]) null);
      // Undeclared exception!
//      try { 
        helpFormatter1.printOptions((PrintWriter) null, 32, options0, 90, 74);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter0.append('%');
      String string0 = "e=]2Z#*Oaf8";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-356), "B3D7L-a(_S~", "", options0, 351, 351, "e=]2Z#*Oaf8", false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasOption("-");
      helpFormatter0.printHelp("VIt-w E8')q:", options0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(4);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "VIt-w E8')q:";
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) mockPrintStream0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) byteArrayOutputStream0;
      objectArray0[5] = (Object) "VIt-w E8')q:";
      objectArray0[6] = (Object) helpFormatter0;
      objectArray0[7] = (Object) helpFormatter0;
      objectArray0[8] = object0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("}V}'y.q.}H}cu?$", objectArray0);
      helpFormatter0.printUsage(printWriter0, 4, "<", options0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-2595);
      helpFormatter0.setNewLine("y,T3:W\"|rr|B9");
      String string0 = "\\uX\"_F";
      Options options0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((-2595), "", string0, (Options) null, string0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      helpFormatter0.getOptionComparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('o');
      HelpFormatter helpFormatter1 = new HelpFormatter();
      PrintWriter printWriter1 = printWriter0.append((CharSequence) "-");
      helpFormatter0.printHelp(printWriter1, 16, "usage: ", "e=]2Z#*Oaf8", options1, 1, 1715, "--", true);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.setDescPadding(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.setWidth(0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      Options options0 = new Options();
      Options options1 = options0.addOption("x", true, "&w_LROJ7");
      // Undeclared exception!
//      try { 
        helpFormatter1.renderOptions(stringBuffer0, (-602), options1, 74, 1209);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("A CloneNotSupportedException was thrown: ");
      helpFormatter0.getOptionComparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('o');
      helpFormatter0.printHelp(printWriter0, 2159, "A CloneNotSupportedException was thrown: ", "92axv&G{O?fW#:%f", options1, 2923, 1669, "", false);
      helpFormatter0.printHelp(" ^r.?", options0);
      helpFormatter0.printHelp("92axv&G{O?fW#:%f", "92axv&G{O?fW#:%f", options1, "");
      helpFormatter0.printHelp("A CloneNotSupportedException was thrown: ", "T_1#]z\"~47fy_", options0, "92axv&G{O?fW#:%f");
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      helpFormatter0.getOptionComparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = new Options();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('o');
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(printWriter0, 3, "e=]2Z#*Oaf8", "", options1, (-356), 2, "e=]2Z#*Oaf8", false);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setArgName(">(^fr0iiV\"s");
      helpFormatter1.getOptionComparator();
      helpFormatter0.setDescPadding(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("The option '");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) helpFormatter1;
      objectArray0[1] = (Object) "cmdLineSyntax not provided";
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "cmdLineSyntax not provided";
      objectArray0[4] = (Object) ">(^fr0iiV\"s";
      objectArray0[5] = (Object) mockPrintWriter0;
      objectArray0[6] = (Object) mockPrintWriter0;
      PrintWriter printWriter0 = mockPrintWriter0.format("-", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      mockPrintWriter1.printf("UW@!+1Q9>'>", objectArray0);
      String string0 = helpFormatter1.defaultLongOptPrefix;
      mockPrintWriter1.append((CharSequence) ">(^fr0iiV\"s");
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 1, "");
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      helpFormatter0.getOptionComparator();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('o');
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(printWriter0, 3, "e=]2Z#*Oaf8", "\"", options1, (-356), 2, "e=]2Z#*Oaf8", false);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-2774), (-2774), (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasOption("\n");
      helpFormatter0.printHelp("VIt-w E8')q:", options0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) helpFormatter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      PrintWriter printWriter0 = mockPrintWriter0.format("usage: ", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      PrintWriter printWriter1 = mockPrintWriter0.printf("--", objectArray0);
      String string0 = helpFormatter0.defaultLongOptPrefix;
      mockPrintWriter1.append((CharSequence) " ");
      helpFormatter0.printUsage(printWriter1, 2, "--");
      helpFormatter0.getArgName();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1227, "arg", ">", options0, 2, 0, "--");
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.setDescPadding(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) comparator0;
      objectArray0[2] = (Object) helpFormatter0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) mockPrintWriter0;
      PrintWriter printWriter0 = mockPrintWriter0.format("cmdLineSyntax not provided", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      mockPrintWriter1.printf("", objectArray0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      PrintWriter printWriter1 = printWriter0.append((CharSequence) "");
      String string0 = "\\3}l?\\u+@I$',@";
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp(printWriter1, 102, "\n", string0, (Options) null, 13, 0, "*", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasOption("\n");
      helpFormatter0.printHelp("VIt-w E8')q:", options0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) helpFormatter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) byteArrayOutputStream0;
      objectArray0[3] = (Object) options0;
      objectArray0[4] = (Object) mockPrintStream0;
      helpFormatter0.setWidth((-1059));
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.rtrim("ca|5Pp[)b2vQ-e");
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.setDescPadding(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "--");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) comparator0;
      objectArray0[2] = (Object) helpFormatter0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) mockPrintWriter0;
      mockPrintWriter0.format("cmdLineSyntax not provided", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      mockPrintWriter0.append((CharSequence) "\n");
      mockPrintWriter1.printf("", objectArray0);
      String string0 = helpFormatter0.defaultLongOptPrefix;
      mockPrintWriter1.append((CharSequence) "--");
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 2, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("=iA)t>y|RA?\"");
      int int0 = (-19);
      Options options0 = new Options();
      options0.hasShortOption("-");
      helpFormatter0.setWidth((-5596));
      String string0 = "\\yRD(lF-a%k5";
      Options options1 = options0.addOption("arg", "usage: ", false, "yRD(lF-a%k5");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((-19), "=iA)t>y|RA?\"", "=iA)t>y|RA?\"", options1, "=iA)t>y|RA?\"");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-905);
      // Undeclared exception!
//      try { 
        helpFormatter0.createPadding((-905));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getWidth();
      // Undeclared exception!
//      try { 
        helpFormatter0.findWrapPos("", 74, (-1361));
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setArgName(" ");
      Comparator comparator0 = helpFormatter1.getOptionComparator();
      helpFormatter1.setDescPadding(655);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) comparator0;
      objectArray0[1] = (Object) helpFormatter1;
      objectArray0[2] = (Object) "";
      mockPrintWriter0.format("\n", objectArray0);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.printWrapped((PrintWriter) mockPrintWriter0, 3, 1, "-");
      helpFormatter1.findWrapPos("arg", (-1683), 1);
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("", options0, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.setDescPadding(0);
      Object[] objectArray0 = new Object[6];
      objectArray0[5] = (Object) comparator0;
      objectArray0[5] = (Object) "";
      helpFormatter0.findWrapPos(">", 0, 0);
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", options0, false);
      helpFormatter0.getArgName();
      helpFormatter0.getNewLine();
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.commons.cli.HelpFormatter$OptionComparator");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      PrintWriter printWriter0 = mockPrintWriter0.printf("", objectArray0);
      helpFormatter0.printOptions(printWriter0, 0, options0, 810, 0);
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, "L+sqi@&BKx]g");
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.toString();
      options0.getOption("[ option: ");
      Options options1 = options0.addOptionGroup(optionGroup0);
      options1.getOptions();
      StringWriter stringWriter0 = new StringWriter(44);
      StringWriter stringWriter1 = stringWriter0.append('l');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) options0;
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) "[]";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "c/A\" )8[_w\"4";
      objectArray0[5] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.printf(" ]", objectArray0);
      helpFormatter0.printUsage(printWriter0, (-1), "!6");
      helpFormatter0.printHelp(1227, "4!eY+dX", "4!eY+dX", options1, "c/A\" )8[_w\"4");
      helpFormatter0.rtrim("");
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.setDescPadding(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) comparator0;
      objectArray0[2] = (Object) helpFormatter0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) mockPrintWriter0;
      mockPrintWriter0.format("cmdLineSyntax not provided", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      mockPrintWriter1.printf("", objectArray0);
      String string0 = helpFormatter0.defaultLongOptPrefix;
      mockPrintWriter1.append((CharSequence) "--");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2, "cmdLineSyntax not provided");
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.toString();
      options0.getOption("[ option: ");
      Options options1 = options0.addOptionGroup(optionGroup0);
      options1.getOptions();
      StringWriter stringWriter0 = new StringWriter(44);
      StringWriter stringWriter1 = stringWriter0.append('l');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) options0;
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) "[]";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "c/A\" )8[_w\"4";
      objectArray0[5] = (Object) helpFormatter0;
      mockPrintWriter0.printf(" ]", objectArray0);
      helpFormatter0.printHelp("has already been selected: '", options0, false);
      helpFormatter0.getArgName();
      helpFormatter0.printHelp("has already been selected: '", (String) null, options1, "k{'U/L");
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasOption("\n");
      helpFormatter0.printHelp("VIt-w E8')q:", options0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) helpFormatter0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?M:7J!I%}ym\"Xv");
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) byteArrayOutputStream0;
      objectArray0[3] = (Object) options0;
      objectArray0[4] = (Object) mockPrintStream0;
      Object object0 = new Object();
      objectArray0[5] = object0;
      Object object1 = new Object();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 15, "VIt-w E8')q:", "VIt-w E8')q:", (Options) null, 64, 15, "VIt-w E8')q:", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      MockFile mockFile0 = new MockFile("-", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, 31, "");
      int int0 = 1611;
      String string1 = "   ";
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        options0.addOption(" ", false, "usage: ");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal option name ' '
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-1281), options0, (-1634), 0);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(496);
      StringBuffer stringBuffer0 = new StringBuffer(1);
      Options options0 = new Options();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 496, options0, 496, 496);
      stringBuffer1.chars();
      StringBuffer stringBuffer2 = helpFormatter0.renderWrappedText(stringBuffer1, 496, 0, "=bw/~");
      stringBuffer2.ensureCapacity(0);
      helpFormatter0.renderWrappedText(stringBuffer2, 496, 0, "");
      helpFormatter0.setSyntaxPrefix("");
      helpFormatter0.printHelp("=bw/~", "[ Options: [ short ", options0, "", true);
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.createPadding(3338);
      helpFormatter0.getOptPrefix();
      helpFormatter0.renderOptions(stringBuffer1, 774, options0, 496, 31);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.toString();
      options0.getOption("[ option: ");
      Options options1 = options0.addOptionGroup(optionGroup0);
      options1.getOptions();
      StringWriter stringWriter0 = new StringWriter(44);
      StringWriter stringWriter1 = stringWriter0.append('l');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) options0;
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) "[]";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "c/A\" )8[_w\"4";
      objectArray0[5] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.printf(" ]", objectArray0);
      helpFormatter0.printUsage(printWriter0, (-1), "!6");
      helpFormatter0.printHelp(1227, "4!eY+dX", "4!eY+dX", options1, "c/A\" )8[_w\"4");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(1227, "", "", options1, "4!eY+dX", true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('I');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      Locale locale0 = Locale.JAPANESE;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "--";
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) stringWriter1;
      objectArray0[3] = (Object) "--";
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) stringWriter1;
      objectArray0[6] = (Object) helpFormatter0;
      objectArray0[7] = (Object) "|-+Mf Q*6E!ZM#";
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "|-+Mf Q*6E!ZM#", objectArray0);
      helpFormatter0.printUsage(printWriter0, 1251, "' was specified but an option from this group ");
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = (-1);
      helpFormatter0.setLeftPadding((-2));
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("arg", "olaw.@Z4&o[-V<U~A", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOption("", true, "");
      Option option0 = new Option("arg", "lDKc{Pw}iifU");
      Options options2 = options1.addOption(option0);
      helpFormatter0.printHelp(351, "-", "lDKc{Pw}iifU", options2, "", true);
      helpFormatter0.getDescPadding();
      StringBuffer stringBuffer0 = new StringBuffer(3);
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-3842), 6, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.defaultWidth = (-989);
      int int0 = 347;
      StringBuffer stringBuffer0 = new StringBuffer(1);
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-989), 347, "(=6l=\"Csx`Ax|y");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("", options1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      String string1 = "org.apache.commons.cli.HelpFormatter";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "usage: ");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("", "org.apache.commons.cli.HelpFormatter", options1, "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      String string1 = "org.apache.commons.cli.HelpFormatter$OptionComparator";
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('P');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      String string2 = "Q`Oo!42'JDp";
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) helpFormatter0;
      objectArray0[1] = (Object) "org.apache.commons.cli.HelpFormatter$OptionComparator";
      objectArray0[2] = (Object) "org.apache.commons.cli.HelpFormatter$OptionComparator";
      PrintWriter printWriter0 = mockPrintWriter0.format("Q`Oo!42'JDp", objectArray0);
      int int0 = 0;
      Options options0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage(printWriter0, 0, "org.apache.commons.cli.HelpFormatter$OptionComparator", (Options) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      helpFormatter0.setNewLine("org.apache.commons.cli.AlreadySelectedException");
      helpFormatter0.defaultSyntaxPrefix = "org.apache.commons.cli.AlreadySelectedException";
      String string0 = "8FJbfBXZ^t8";
      helpFormatter0.setOptPrefix("8FJbfBXZ^t8");
      String string1 = "]";
//      try { 
        MockURI.URI("]");
//        fail("Expecting exception: URISyntaxException");
      
//      } catch(URISyntaxException e) {
//         //
//         // Illegal character in path at index 0: ]
//         //
//         verifyException("java.net.URI$Parser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      helpFormatter0.defaultDescPad = 0;
      helpFormatter0.getNewLine();
      String string0 = null;
      Options options0 = new Options();
      options0.getOptions();
      options0.getOptionGroups();
      String string1 = "";
      // Undeclared exception!
//      try { 
        MockFile.createTempFile("-", "", (File) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Prefix string too short
//         //
//         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      int int0 = 9;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption("", "usage: ", true, "");
      Option option0 = new Option("a$H", true, "Z~Tmd=p]");
      Options options3 = options2.addOption(option0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) null, 9, "", "", options3, 10, (-1807), "", true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.createPadding(3706);
      int int0 = 534;
      String string1 = null;
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        options0.addOption("<H><uhG", false, "arg");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The option '<H><uhG' contains an illegal character : '<'
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptionComparator((Comparator) null);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.rtrim("");
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 0;
      helpFormatter0.defaultOptPrefix = "3;y-X1\"X=_)Ud";
      helpFormatter0.setLongOptSeparator("3;y-X1\"X=_)Ud");
      helpFormatter0.setLeftPadding((-3212));
      helpFormatter0.getArgName();
      helpFormatter0.getSyntaxPrefix();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "3;y-X1\"X=_)Ud");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) helpFormatter0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) stringWriter0;
      objectArray0[4] = (Object) "3;y-X1\"X=_)Ud";
      objectArray0[5] = (Object) "3;y-X1\"X=_)Ud";
      objectArray0[6] = (Object) "arg";
      PrintWriter printWriter0 = mockPrintWriter0.printf("^(>$oQU+", objectArray0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped(printWriter0, (-3212), (-3069), "3;y-X1\"X=_)Ud");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "olaw.@Z4&o[-V<U~A", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      Options options3 = options2.addOption("", true, "");
      Option option0 = new Option("arg", ">");
      Options options4 = options3.addOption(option0);
      helpFormatter0.printHelp(351, " [ARG]", ">", options4, "", true);
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("=iA)t>y|RA?\"");
      int int0 = 0;
      Options options0 = new Options();
      helpFormatter0.setWidth((-5596));
      String string0 = "\\yRD(lF-a%k5";
      Options options1 = options0.addOption("arg", "usage: ", true, "yRD(lF-a%k5");
      // Undeclared exception!
      helpFormatter0.printHelp(0, "=iA)t>y|RA?\"", "=iA)t>y|RA?\"", options1, ":U].8");
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("arg", "olaw.@Z4&o[-V<U~A", false, "P");
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.setWidth(43);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.rtrim((String) null);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.setWidth(900);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.rtrim("usage: ");
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      String string0 = null;
      helpFormatter0.defaultLongOptPrefix = null;
      helpFormatter0.setArgName("-");
      helpFormatter0.rtrim("u7~O)>[jE2B=1Z");
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.setOptionComparator(comparator0);
      String string1 = "A CloneNotSupportedException was thrown: ";
      Options options0 = new Options();
      StringWriter stringWriter0 = new StringWriter(1);
      StringWriter stringWriter1 = stringWriter0.append(':');
      stringWriter1.write("");
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 44, 44, "<");
      // Undeclared exception!
//      try { 
        options0.addOption((Option) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.Options", e);
//      }
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      int int0 = 0;
      helpFormatter0.setDescPadding(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) comparator0;
      objectArray0[2] = (Object) helpFormatter0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) mockPrintWriter0;
      objectArray0[5] = (Object) "";
      PrintWriter printWriter0 = mockPrintWriter0.format("", objectArray0);
      String string0 = "org.apache.commons.cli.HelpFormatter$OptionComparator";
      // Undeclared exception!
      helpFormatter0.printWrapped(printWriter0, 0, 0, "org.apache.commons.cli.HelpFormatter$OptionComparator");
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "V3+MpS";
      helpFormatter0.setLongOptSeparator("V3+MpS");
      Options options0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("R\"?-!BB'x?xnf,_", (Options) null, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasOption("\n");
      helpFormatter0.printHelp("VIt-w E8')q:", options0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) helpFormatter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) byteArrayOutputStream0;
      objectArray0[3] = (Object) options0;
      objectArray0[4] = (Object) mockPrintStream0;
      Object object0 = new Object();
      objectArray0[5] = object0;
      Object object1 = new Object();
      objectArray0[6] = object1;
      objectArray0[7] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("\n", objectArray0);
      // Undeclared exception!
      helpFormatter0.printUsage(printWriter0, 0, (String) null, options0);
  }

  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "Y-";
      helpFormatter0.setSyntaxPrefix("[");
      helpFormatter0.getLongOptSeparator();
      assertEquals("[", helpFormatter0.getSyntaxPrefix());
  }
}
