/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 14:16:46 GMT 2021
 */

package org.apache.commons.compress.archivers.tar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.archivers.tar.TarUtils;
import org.apache.commons.compress.archivers.zip.ZipEncoding;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TarUtils_ESTest extends TarUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
//      try { 
        TarUtils.formatLongOctalOrBinaryBytes((-1L), byteArray0, (-1527), (-1527));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Value -1 is too large for -1527 byte field.
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
//      try { 
        TarUtils.formatLongOctalOrBinaryBytes(8589934591L, byteArray0, 213, 3142);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3353
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-2062L), byteArray0, 4, 4);
      assertEquals(8, int0);
      
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, 4, (-2423));
      assertEquals(0L, long0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte) (-1), (byte) (-1), (byte) (-9), (byte) (-14), (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)1;
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, (int) (byte)1, (int) (byte)1, zipEncoding0);
      assertEquals("\u0001", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(4, byteArray0, 4, 4);
      assertEquals(8, int0);
      
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, 4, 4);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)48, (byte)48, (byte)52, (byte)32, (byte)0}, byteArray0);
      assertEquals(4L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(4, byteArray0, 4, 4);
      assertEquals(8, int0);
      
      long long0 = TarUtils.parseOctal(byteArray0, 4, 3);
      assertEquals(4L, long0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)48, (byte)48, (byte)52, (byte)32, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(4, byteArray0, 4, 4);
      assertEquals(8, int0);
      
      String string0 = TarUtils.parseName(byteArray0, 4, 4);
      assertEquals("004 ", string0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)48, (byte)48, (byte)52, (byte)32, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      String string0 = TarUtils.parseName(byteArray0, 0, 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = TarUtils.formatOctalBytes(4, byteArray0, 4, 4);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)48, (byte)52, (byte)32, (byte)0, (byte)0}, byteArray0);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      int int0 = TarUtils.formatNameBytes("LrW8'<tm@1+m=\b", byteArray0, 0, 0, zipEncoding0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = TarUtils.formatNameBytes("NbE", byteArray0, 1, (-1));
      assertEquals(0, int0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = TarUtils.formatNameBytes("", byteArray0, 4, (-2146880759));
      assertEquals((-2146880755), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = TarUtils.formatLongOctalBytes(0L, byteArray0, 1, 1);
      assertArrayEquals(new byte[] {(byte)48, (byte)32, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      int int0 = TarUtils.formatCheckSumOctalBytes(3, byteArray0, 3, 3);
      assertEquals(6, int0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)51, (byte)0, (byte)32, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TarUtils.formatUnsignedOctalString(1, byteArray0, 1, 1);
      long long0 = TarUtils.computeCheckSum(byteArray0);
      assertEquals(49L, long0);
      assertArrayEquals(new byte[] {(byte)0, (byte)49, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.verifyCheckSum((byte[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
//      try { 
        TarUtils.verifyCheckSum(byteArray0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 148
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.parseOctalOrBinary((byte[]) null, 2961, 1212);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      TarUtils.formatLongOctalOrBinaryBytes(255L, byteArray0, 4, 4);
      // Undeclared exception!
//      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 4, Integer.MAX_VALUE);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -2147483646
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.parseOctal((byte[]) null, 600, 8);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      // Undeclared exception!
//      try { 
        TarUtils.parseName((byte[]) null, (-2080), 759, zipEncoding0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      // Undeclared exception!
//      try { 
        TarUtils.parseName(byteArray0, 3, 202, zipEncoding0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 204
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.parseName((byte[]) null, (-143), 812);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.parseBoolean((byte[]) null, 158);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
//      try { 
        TarUtils.parseBoolean(byteArray0, 1853);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1853
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.formatUnsignedOctalString(1144L, (byte[]) null, 934, 873);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.formatOctalBytes(2793L, (byte[]) null, 48, 70);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
//      try { 
        TarUtils.formatOctalBytes((byte) (-75), byteArray0, (byte) (-75), (-2630));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -75=1777777777777777777665 will not fit in octal number buffer of length -2632
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      // Undeclared exception!
//      try { 
        TarUtils.formatNameBytes((String) null, byteArray0, 128, (int) (byte)114, zipEncoding0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.formatNameBytes(" at offset ", (byte[]) null, 1509, 1509);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.formatLongOctalOrBinaryBytes((byte) (-100), (byte[]) null, (byte) (-100), 1183);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.formatLongOctalBytes(2097151L, (byte[]) null, 3449, 3449);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
//      try { 
        TarUtils.formatLongOctalBytes((-2062L), byteArray0, 915, 3);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.formatCheckSumOctalBytes(0L, (byte[]) null, 100, 100);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
//      try { 
        TarUtils.formatCheckSumOctalBytes((byte)121, byteArray0, 0, (byte)80);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
//      try { 
        TarUtils.computeCheckSum((byte[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TarUtils.formatUnsignedOctalString(4, byteArray0, 4, 4);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)48, (byte)48, (byte)48, (byte)52, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
//      try { 
        TarUtils.formatUnsignedOctalString((-273L), byteArray0, (byte)22, (byte)0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -273=1777777777777777777357 will not fit in octal number buffer of length 0
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
//      try { 
        TarUtils.formatUnsignedOctalString(1357L, byteArray0, (-2172), 2062);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TarUtils.formatUnsignedOctalString(0, byteArray0, 0, 8);
      assertArrayEquals(new byte[] {(byte)48, (byte)48, (byte)48, (byte)48, (byte)48, (byte)48, (byte)48, (byte)48, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      // Undeclared exception!
//      try { 
        TarUtils.formatNameBytes("", byteArray0, 4, 128, zipEncoding0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 9
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      TarUtils.formatLongOctalOrBinaryBytes((-1396L), byteArray0, 4, 4);
      // Undeclared exception!
//      try { 
        TarUtils.parseOctal(byteArray0, 4, 4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid byte -1 at offset 0 in '\uFFFD\uFFFD\uFFFD\uFFFD' len=4
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      long long0 = TarUtils.parseOctal(byteArray0, 11, 102);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
//      try { 
        TarUtils.formatLongOctalBytes((-1L), byteArray0, 4, 4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -1=1777777777777777777777 will not fit in octal number buffer of length 3
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      long long0 = TarUtils.computeCheckSum(byteArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
//      try { 
        TarUtils.formatLongOctalOrBinaryBytes((-574L), byteArray0, (byte) (-74), (byte) (-74));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Value -574 is too large for -74 byte field.
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
//      try { 
        TarUtils.formatLongOctalOrBinaryBytes((-507L), byteArray0, (byte)0, (-1073741823));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Value -507 is too large for -1073741823 byte field.
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(8589934614L, byteArray0, 6, 6);
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-1381L), byteArray0, 8, 8);
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
//      try { 
        TarUtils.formatNameBytes("NbE", byteArray0, 6, 6);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 9
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      int int0 = TarUtils.formatNameBytes("CP437", byteArray0, (int) (byte)0, (-176), zipEncoding0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals((-176), int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, 10, (-591), zipEncoding0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)1;
      boolean boolean0 = TarUtils.parseBoolean(byteArray0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      boolean boolean0 = TarUtils.parseBoolean(byteArray0, 4);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-1713L), byteArray0, 9, 9);
      assertEquals(18, int0);
      
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, 9, 9);
      assertEquals((-1713L), long0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[44];
      TarUtils.formatLongOctalOrBinaryBytes((-1710L), byteArray0, 5, 5);
      // Undeclared exception!
//      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 5, 13);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // At offset 5, 13 byte binary number exceeds maximum signed long value
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-111);
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, (byte)1, (byte)1);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[58];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-2375L), byteArray0, 3, 3);
      assertEquals(6, int0);
      
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, 4, 9);
      assertEquals((-5116089176692883456L), long0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-2576L), byteArray0, 4, 4);
      assertEquals(8, int0);
      
      long long0 = TarUtils.parseOctalOrBinary(byteArray0, 4, 8);
      assertEquals((-11063835754496L), long0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(0L, byteArray0, 5, 5);
      assertEquals(10, int0);
      
      long long0 = TarUtils.parseOctal(byteArray0, 5, 10);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      TarUtils.formatLongOctalOrBinaryBytes((-2576L), byteArray0, 4, 4);
      // Undeclared exception!
//      try { 
        TarUtils.parseOctal(byteArray0, 4, 2147483645);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -2147483648
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      // Undeclared exception!
//      try { 
        TarUtils.parseOctal(byteArray0, (byte) (-11), (-1256));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Length -1256 must be at least 2
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-806L), byteArray0, 16, 3);
      assertEquals(19, int0);
      
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, 3, 19, zipEncoding0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes((-1396L), byteArray0, 4, 4);
      assertEquals(8, int0);
      
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, 4, 4, zipEncoding0);
      assertEquals("\u00FF\u00FF\u00FA\u008C", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      TarUtils.formatNameBytes("h+{E1+R&NPU.,", byteArray0, (int) (byte)1, 2, zipEncoding0);
      // Undeclared exception!
//      try { 
        TarUtils.parseOctal(byteArray0, (byte)1, 2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid byte 104 at offset 0 in 'h+' len=2
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      // Undeclared exception!
//      try { 
        TarUtils.parseName(byteArray0, 220, 10);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 229
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[58];
      // Undeclared exception!
//      try { 
        TarUtils.formatOctalBytes((-2567L), byteArray0, 4, 55);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 58
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)29;
      // Undeclared exception!
//      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 0, 3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid byte 29 at offset 0 in '\u001D{NUL}{NUL}' len=3
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      // Undeclared exception!
//      try { 
        TarUtils.formatCheckSumOctalBytes(1489L, byteArray0, 11, (-2449));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 1489=2721 will not fit in octal number buffer of length -2451
//         //
//         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = TarUtils.formatNameBytes("' len=", byteArray0, 4, 0);
      assertEquals(4, int0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = TarUtils.formatLongOctalOrBinaryBytes(2, byteArray0, 2, 2);
      assertEquals(4, int0);
      
      long long0 = TarUtils.parseOctal(byteArray0, 3, 3);
      assertEquals(0L, long0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)50, (byte)32, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }
}
