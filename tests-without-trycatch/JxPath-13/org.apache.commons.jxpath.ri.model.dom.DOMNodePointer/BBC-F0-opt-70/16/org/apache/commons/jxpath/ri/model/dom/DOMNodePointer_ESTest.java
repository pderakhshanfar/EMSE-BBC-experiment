/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 00:57:30 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.html.dom.HTMLAnchorElementImpl;
import org.apache.html.dom.HTMLAppletElementImpl;
import org.apache.html.dom.HTMLBaseElementImpl;
import org.apache.html.dom.HTMLBodyElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFontElementImpl;
import org.apache.html.dom.HTMLHeadElementImpl;
import org.apache.html.dom.HTMLHeadingElementImpl;
import org.apache.html.dom.HTMLHtmlElementImpl;
import org.apache.html.dom.HTMLLabelElementImpl;
import org.apache.html.dom.HTMLTableRowElementImpl;
import org.apache.wml.dom.WMLAnchorElementImpl;
import org.apache.wml.dom.WMLBElementImpl;
import org.apache.wml.dom.WMLBigElementImpl;
import org.apache.wml.dom.WMLCardElementImpl;
import org.apache.wml.dom.WMLDoElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLIElementImpl;
import org.apache.wml.dom.WMLMetaElementImpl;
import org.apache.wml.dom.WMLPElementImpl;
import org.apache.wml.dom.WMLSetvarElementImpl;
import org.apache.wml.dom.WMLSmallElementImpl;
import org.apache.wml.dom.WMLStrongElementImpl;
import org.apache.wml.dom.WMLWmlElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.apache.xerces.parsers.CachingParserPool;
import org.apache.xerces.parsers.StandardParserConfiguration;
import org.apache.xerces.parsers.XML11Configuration;
import org.apache.xerces.util.SymbolTable;
import org.apache.xerces.util.XMLGrammarPoolImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.CDATASection;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.Text;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "}$zSgplzDkBw5x0M?J");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "<<unknown namespace>>", "<<unknown namespace>>", "[L$pDjD$8r\",lF");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(attrNSImpl0, locale0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "W&H:*<{J%BuB~", "F*b\"=2", " Size: ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "UZB\"8934@*WQ");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLAnchorElementImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, documentTypeImpl0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer1.getPointerByID(jXPathContext0, "http://www.w3.org/XML/1998/namespace");
      assertFalse(nullPointer0.isDynamicPropertyDeclarationSupported());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, ":mljb3[hs", ":mljb3[hs", ":mljb3[hs");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLMetaElementImpl wMLMetaElementImpl0 = new WMLMetaElementImpl(wMLDocumentImpl0, ":mljb3[hs");
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLMetaElementImpl0, locale0, "I/ATVF8OIt@");
      QName qName0 = dOMNodePointer0.getName();
      assertEquals(":mljb3[hs", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, true);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(deferredDocumentImpl0, "aaaQFN5s5HN lwamps", "Was expecting:");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0, "@(#) $RCSfile: DocType.java,v $ $Revision: 1.31 $ $Date: 2004/02/27 11:32:57 $ $Name: jdom_1_0 $");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "@(#) $RCSfile: DocType.java,v $ $Revision: 1.31 $ $Date: 2004/02/27 11:32:57 $ $Name: jdom_1_0 $");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLWmlElementImpl0);
      dOMNodePointer1.printPointerChain();
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "/");
      Locale locale0 = new Locale("7", "/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBaseElementImpl0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "");
      QName qName0 = new QName("xmlns:");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      dOMNodePointer0.getNamespaceURI((String) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, ":Xn>jz5b6U", "UQ'", "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(wMLDocumentImpl0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getTitle();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.setValue(hTMLDocumentImpl0);
      assertNull(hTMLDocumentImpl0.getDomain());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(pSVIDocumentImpl0, ",SiH]CtS4/kqst%hq");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null, "K'TTwL:3e])7$");
      QName qName0 = dOMNodePointer0.getName();
      assertNull(qName0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(coreDocumentImpl0, (String) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, (String) null, (String) null, (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLStrongElementImpl wMLStrongElementImpl0 = new WMLStrongElementImpl(wMLDocumentImpl0, (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLStrongElementImpl0);
      Locale locale0 = jXPathContext0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Element element0 = pSVIDocumentImpl0.createElementNS("", "xml:lang", "t=?Ory");
      String string0 = DOMNodePointer.getNamespaceURI((Node) element0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElementNS("}g:@2@~", "L-");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "L-");
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNotNull(string0);
      assertEquals("}g:@2@~", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      String string0 = dOMNodePointer1.getNamespaceURI();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      EntityImpl entityImpl0 = new EntityImpl(deferredDocumentImpl0, "");
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      String string0 = dOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertSame(hTMLElement0, object0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl(668);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool0 = new CachingParserPool.ShadowedGrammarPool(xMLGrammarPoolImpl0);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool0 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_ShadowedGrammarPool0);
      StandardParserConfiguration standardParserConfiguration0 = new StandardParserConfiguration();
      XML11Configuration xML11Configuration0 = new XML11Configuration(symbolTable0, cachingParserPool_SynchronizedGrammarPool0, standardParserConfiguration0);
      Locale locale0 = xML11Configuration0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      Object object0 = dOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = DOMNodePointer.findEnclosingAttribute((Node) null, "izw");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      QName qName0 = new QName("7");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLElement0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "ouclnoH$@$n", "<l", "id('");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLDocumentImpl0);
      QName qName1 = dOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1, "id('");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
//      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null, "K'TTwL:3e])7$");
      QName qName0 = new QName("&apos;", "K'TTwL:3e])7$");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: &apos;:K'TTwL:3e])7$
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("iOY+>/%U>q5YO8;;A", "hAF}hbCbJsj>k(cZ");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'iOY+>/%U>q5YO8;;A:hAF}hbCbJsj>k(cZ'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "M6{nqzHzFt", "' ");
      Locale locale0 = new Locale("M6{nqzHzFt");
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "M6{nqzHzFt");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementDefinitionImpl0, locale0, "_qrU*");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(processingInstructionImpl0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "&Kc ?, f=tTDzj");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, (Locale) null, "]");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.isLeaf();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(coreDocumentImpl0, (String) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, (String) null, (String) null, (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLStrongElementImpl wMLStrongElementImpl0 = new WMLStrongElementImpl(wMLDocumentImpl0, (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLStrongElementImpl0);
      Locale locale0 = jXPathContext0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.isLanguage((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "xmlns");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getValue();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, deferredDocumentImpl0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, " could not be added to the document: ");
      deferredDocumentImpl0.setDeferredAttribute(1984, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace", false, false, (Object) hTMLTableRowElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getValue();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // type: 20
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, deferredDocumentImpl0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, " could not be added to the document: ");
      deferredDocumentImpl0.setDeferredAttribute(1984, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace", false, true, (Object) hTMLTableRowElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getValue();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.DeferredDocumentImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      // Undeclared exception!
//      try { 
        DOMNodePointer.getPrefix((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "T)U$x1=", "T)U$x1=", "http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getPointerByID(jXPathContext0, "HTM017 Argument 'tHead' is not an element of type <THEAD>.");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, false);
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) pSVIDocumentImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("&");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) cDATASection0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.CDATASectionImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "38yFr9wc$^2>$rz ");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "+o:&]u=s{4s@y");
      dOMNodePointer0.setValue(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI((String) null);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI("vOrYn7n3glpY!9!~CBb");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, deferredDocumentImpl0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, " could not be added to the document: ");
      deferredDocumentImpl0.setDeferredAttribute(1984, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace", false, false, (Object) hTMLTableRowElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI(" could not be added to the document: ");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // type: 20
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, deferredDocumentImpl0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, " could not be added to the document: ");
      deferredDocumentImpl0.setDeferredAttribute(1984, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace", false, true, (Object) hTMLTableRowElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI(" could not be added to the document: ");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.DeferredDocumentImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRENCH;
      hTMLDocumentImpl0.setReadOnly(true, false);
      QName qName0 = new QName("mfR=Q+g", "H|6vgWEr1stWR");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, locale0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl((HTMLDocumentImpl) null, "wwRt9");
      Locale locale0 = new Locale("wwRt9", "C8hJ");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFontElementImpl0, locale0, "C8hJ");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      DocumentImpl documentImpl0 = new DocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(documentImpl0, "7");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.EntityReferenceImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Locale locale0 = new Locale("- expression incomplete");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
      // Undeclared exception!
//      try { 
        nodePointer0.getName();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
//      try { 
        DOMNodePointer.getLocalName((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "HpD)u^\b| 2$C7Mx");
      WMLIElementImpl wMLIElementImpl0 = new WMLIElementImpl((WMLDocumentImpl) null, ":J$?XBE`X<}{MDY<fg");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLIElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.getLanguage();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRENCH;
      hTMLDocumentImpl0.setReadOnly(true, false);
      QName qName0 = new QName("mfR=Q+g", "H|6vgWEr1stWR");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, locale0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      EntityImpl entityImpl0 = new EntityImpl(deferredDocumentImpl0, "N1lg`&Np&PAhyy[xQ ");
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, deferredDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.getDefaultNamespaceURI();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, deferredDocumentImpl0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, " could not be added to the document: ");
      deferredDocumentImpl0.setDeferredAttribute(1984, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace", false, true, (Object) hTMLTableRowElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.DeferredDocumentImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "_=TiJp9%CrZ`w?");
      // Undeclared exception!
//      try { 
        DOMNodePointer.findEnclosingAttribute(hTMLFontElementImpl0, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.html.dom.HTMLElementImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, locale0, "6g);F<N|!Aei{XZt");
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, (-1));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      QName qName0 = new QName("7");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLElement0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // DOM002 Illegal character
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      QName qName0 = new QName("7");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "7");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: 7
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, (String) null, "LYi.Oj:@A)", "LYi.Oj:@A)");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, wMLDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      Locale locale0 = Locale.PRC;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "", "", "preserve");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLBigElementImpl wMLBigElementImpl0 = new WMLBigElementImpl(wMLDocumentImpl0, "preserve");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLBigElementImpl0, locale0);
      WMLDoElementImpl wMLDoElementImpl0 = new WMLDoElementImpl(wMLDocumentImpl0, "lr!3/^K");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLDoElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'preserve'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl((DocumentType) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "M6gTJF");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(pSVIDocumentImpl0, "`}s PQenx0Kp(V", "&quot;", "({");
      Locale locale0 = new Locale("1JNs>6VXudx&6");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, locale0, "self");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) pSVIDocumentImpl0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) basicVariables0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(nodePointer0, variablePointer0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.BasicVariables cannot be cast to org.w3c.dom.Node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "_=TiJp9%CrZ`w?");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFontElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: _=TIJP9%CRZ`W?
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "text()", "text()", "text()");
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "xml");
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBaseElementImpl0, locale0, "namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "&apos;");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, "namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLSmallElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, (QName) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(deferredDocumentImpl0, "", "");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0, "");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "v7n}k&TP'XH)V96]", "", "http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) documentTypeImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator((NodeTest) null, true, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: ''
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = new QName("<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "r?#;#");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, "r?#;#");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, false, nodePointer0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.String cannot be cast to org.w3c.dom.Node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "xmlns", "xmlns", "xmlns");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLBElementImpl wMLBElementImpl0 = new WMLBElementImpl(wMLDocumentImpl0, "c<U#y");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLBElementImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.attributeIterator((QName) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.asPath();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLBodyElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Element element0 = pSVIDocumentImpl0.createElementNS("/m%sPg?l`E7u>hagq", "http://www.w3.org/2000/xmlns/", "?+d[[V");
      String string0 = DOMNodePointer.getNamespaceURI((Node) element0);
      assertEquals("/m%sPg?l`E7u>hagq", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "\"following-sibling::\"", "7K5#.J");
      String string0 = DOMNodePointer.getLocalName(documentTypeImpl0);
      assertEquals("//www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "Was expecting one of:", "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest", "http://www.w3.org/XML/1998/namespace");
      String string0 = DOMNodePointer.getLocalName(attrNSImpl0);
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      EntityImpl entityImpl0 = new EntityImpl(deferredDocumentImpl0, "");
      String string0 = DOMNodePointer.getLocalName(entityImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, ":q\"aGjW;($");
      String string0 = DOMNodePointer.getPrefix(hTMLBodyElementImpl0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      String string0 = DOMNodePointer.getPrefix(hTMLElement0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      Locale locale0 = Locale.PRC;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "", "", "preserve");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLBigElementImpl wMLBigElementImpl0 = new WMLBigElementImpl(wMLDocumentImpl0, "preserve");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLBigElementImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "xmlns", "org.apache.wml.dom.WMLCardElementImpl");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0, "yqy*");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "\"Nl");
      QName qName0 = new QName("id('&quot;Nl')", "org.apache.commons.jxpath.ri.QName@0000000009");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: id('yqy*')
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRENCH;
      QName qName0 = new QName("mfR=Q+g", "H|6vgWEr1stWR");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, locale0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl0);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "xmlns", "org.apache.wml.dom.WMLCardElementImpl");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0, "yqy*");
      dOMNodePointer0.getNamespaceURI("yqy*");
      String string0 = dOMNodePointer0.getNamespaceURI("yqy*");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, "+H!/loL%'B(Uvq9 M{");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAppletElementImpl0, locale0, "+H!/loL%'B(Uvq9 M{");
      String string0 = dOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("+H!/loL%'B(Uvq9 M{");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLBodyElementImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, "+H!/loL%'B(Uvq9 M{");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAppletElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "+H!/loL%'B(Uvq9 M{");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLAppletElementImpl0, (NodeTest) nodeNameTest0);
      assertEquals("+H!/LOL%'B(UVQ9 M{", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "lib");
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.CANADA_FRENCH;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLElement0);
      Object object0 = dOMNodePointer0.getBaseValue();
      assertSame(hTMLElement0, object0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      QName qName0 = new QName("7");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, (Locale) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "k$`:Z,Yd0TQ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, documentTypeImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(wMLDocumentImpl0, (Locale) null);
      int int0 = dOMNodePointer2.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "7", "7", "B");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, documentTypeImpl0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "7", "7", "B");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0, "last");
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      QName qName0 = new QName("7");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLElement0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "_qrl*", (String) null, "<<unknown namespace>>");
      Node node0 = attrNSImpl0.cloneNode(false);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, node0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(attrNSImpl0, (Locale) null);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer2, dOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, (String) null, "4%rI\"", (String) null);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, (QName) null, pSVIAttrNSImpl0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, nodePointer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLElement0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "_qrl*", (String) null, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(attrNSImpl0, (Locale) null);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getNamespaceURI("9=k<mw*7lMhwDQH_,");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>", "http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLCardElementImpl0);
      DOMNodePointer dOMNodePointer1 = (DOMNodePointer)dOMNodePointer0.getPointerByID(jXPathContext0, "");
      assertTrue(dOMNodePointer1.isActual());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      EntityImpl entityImpl0 = new EntityImpl(deferredDocumentImpl0, "");
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID((JXPathContext) null, "?FqEElnx!}}");
      assertFalse(nullPointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(deferredDocumentImpl0, "", "");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0, "");
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, (String) null, (String) null);
      Locale locale0 = Locale.TAIWAN;
      hTMLDocumentImpl0.appendChild(processingInstructionImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle((String) null);
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "{ms");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, (Locale) null, "u)xKATs#c~@XIT9q9Au");
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("{ms", object0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, (String) null);
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, commentImpl0);
      Object object0 = dOMNodePointer1.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "-", ":d+eNNQ", "xml:space");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("{mbns", "http://www.w3.org/XML/1998/namespace", "xml:space");
      String string0 = DOMNodePointer.getPrefix(element0);
      assertEquals("http", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0);
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      EntityImpl entityImpl0 = new EntityImpl(deferredDocumentImpl0, "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, (Locale) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, deferredDocumentImpl0);
      boolean boolean0 = dOMNodePointer1.equals(dOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "_=TiJp9%CrZ`w?");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFontElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.equals(hTMLDocumentImpl0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "/");
      Locale locale0 = Locale.CANADA_FRENCH;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLBaseElementImpl0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLElement0);
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLLabelElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild(jXPathContext0, (QName) null, 45);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: /BODY[1]
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "org.apache.wml.dom.WMLCardElementImpl");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, "\"Nl");
      String string0 = dOMNodePointer0.asPath();
      assertEquals("id('&quot;Nl')", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null, "K'TTwL:3e])7$");
      QName qName0 = new QName("&apos;", "K'TTwL:3e])7$");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path id('K&apos;TTwL:3e])7$')/@&apos;:K'TTwL:3e])7$, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "/");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "/", "7", "7");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      String string0 = "3ArU0>A]M\\up7[I-|d";
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, string0);
      QName qName0 = new QName(string0, "/");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, hTMLBaseElementImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, wMLWmlElementImpl0);
      String string1 = dOMNodePointer0.asPath();
      assertEquals("$3ArU0>A]M\\up7[I-|d:/3ArU0>A]M\\up7[I-|d[1]", string1);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "/");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "/", "7", "7");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      String string0 = "3ArU0>A]M\\up7[I-|d";
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, string0);
      QName qName0 = new QName("substring");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, hTMLBaseElementImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, wMLWmlElementImpl0);
      String string1 = dOMNodePointer0.asPath();
      assertEquals("$substring/3ArU0>A]M\\up7[I-|d[1]", string1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "/", "7", "7");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      dOMNodePointer0.printPointerChain();
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "{ms");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, (Locale) null, "u)xKATs#c~@XIT9q9Au");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, commentImpl0);
      dOMNodePointer1.printPointerChain();
      assertFalse(dOMNodePointer1.isAttribute());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "Cannot remove root DOM node", "Cannot remove root DOM node");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/processing-instruction('Cannot remove root DOM node')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      EntityImpl entityImpl0 = new EntityImpl(deferredDocumentImpl0, "");
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      DocumentImpl documentImpl0 = new DocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(documentImpl0, "7");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      dOMNodePointer0.printPointerChain();
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, (String) null);
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      Text text0 = hTMLDocumentImpl0.createTextNode("http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0);
      dOMNodePointer0.printPointerChain();
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "_qrl*", "63zT'Ya2", "_qrl*");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("", "id('");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, attrNSImpl0);
      String string0 = nodePointer0.asPath();
      assertEquals("$:id('", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, deferredDocumentImpl0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "z_!Db!8M%T3.%xNj", "z_!Db!8M%T3.%xNj", "C/3eBu<E?A(fC(");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, pSVIElementNSImpl0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, pSVIElementNSImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.printPointerChain();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "method", "Unknown namespace prefix: ", "method");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLPElementImpl wMLPElementImpl0 = new WMLPElementImpl(wMLDocumentImpl0, "Unknown namespace prefix: ");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLPElementImpl0, locale0, "method");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      dOMNodePointer0.remove();
      assertEquals(Integer.MIN_VALUE, dOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, "+H!/loL%'B(Uvq9 M{");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAppletElementImpl0, locale0, "+H!/loL%'B(Uvq9 M{");
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "N^WoAI7}");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLAnchorElementImpl0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Unknown namespace prefix: http
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      QName qName0 = new QName("k");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "k");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLBodyElementImpl0);
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      HTMLHeadingElementImpl hTMLHeadingElementImpl0 = new HTMLHeadingElementImpl(hTMLDocumentImpl0, "5$R0v3*:O)nW");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLHeadingElementImpl0);
      QName qName0 = new QName((String) null, "org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator@0000000008");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0, "&Kc ?, f=tTDzj");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, (QName) null, Integer.MIN_VALUE, (Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.setValue(dOMNodePointer0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      QName qName0 = new QName("k");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "k");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLBodyElementImpl0);
      dOMNodePointer0.setValue("k");
      assertFalse(dOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "38yFr9wc$^2>$rz ");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "38yFr9wc$^2>$rz ");
      dOMNodePointer0.setValue(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      QName qName0 = new QName("7");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLElement0);
      dOMNodePointer0.setValue(hTMLElement0);
      assertFalse(dOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "");
      hTMLDocumentImpl0.getImages();
      dOMNodePointer0.setValue((Object) null);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "{mbns");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLHeadElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(dOMNodePointer1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, "org.apache.wml.dom.WMLCardElementImpl");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue((Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "{mbns");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
      dOMNodePointer0.setValue(dOMNodePointer0);
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      Locale locale0 = Locale.ROOT;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "7&lUD#2;");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      QName qName0 = new QName("P-Vo<");
      TextImpl textImpl0 = new TextImpl(wMLDocumentImpl0, "7nN#N");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, textImpl0);
      nodePointer0.setValue(locale0);
      assertTrue(nodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      QName qName0 = new QName("7");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLElement0);
      hTMLElement0.setTextContent("xmlns:");
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.getDefaultNamespaceURI();
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null);
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("<_HA.]N2h/2|O");
      nodePointer0.getValue();
      NodeIterator nodeIterator0 = dOMNodePointer0.childIterator((NodeTest) null, true, nodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null);
      String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "/");
      Locale locale0 = new Locale("7", "/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBaseElementImpl0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "Japanese (Japan)");
      QName qName0 = new QName("xml:lang");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "");
      String string0 = dOMNodePointer0.getNamespaceURI("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      QName qName0 = new QName("7", "7");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLElement0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "3..#Y@Aenk#");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      TextImpl textImpl0 = new TextImpl();
      boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, (String) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) cDATASectionImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      boolean boolean0 = DOMNodePointer.testNode((Node) documentFragmentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>", "<<unknown namespace>>", "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "zJ~Ek!Z");
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLWmlElementImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3037);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "a4P", "a4P");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "xmlns", "org.apache.wml.dom.WMLCardElementImpl");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "/");
      QName qName0 = new QName("7", "/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "7 (/)");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLBaseElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      QName qName0 = new QName("7");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl((DocumentType) null);
      Element element0 = pSVIDocumentImpl0.createElementNS("xmlns:", "n6{gjGSeLnd*^", "7");
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "Factory could not create a child node for path: ");
      QName qName0 = new QName("Factory could not create a child node for path: ");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLBaseElementImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      QName qName0 = new QName("");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "j`{u#{Di<Mx,~>-v>(");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      QName qName0 = new QName("6", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "ZMLNS");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(deferredDocumentImpl0, "ZMLNS", "ZMLNS", "E=a/");
      // Undeclared exception!
//      try { 
        DOMNodePointer.testNode((Node) pSVIElementNSImpl0, (NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      QName qName0 = new QName("*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "E");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(deferredDocumentImpl0, "E", "E", "=s");
      boolean boolean0 = DOMNodePointer.testNode((Node) pSVIElementNSImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      QName qName0 = new QName("7");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "/");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLHtmlElementImpl0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "");
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.attributeIterator(qName0);
      assertEquals("HTML", qName0.toString());
      assertEquals("HTML", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "");
      NodeIterator nodeIterator0 = dOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLMetaElementImpl wMLMetaElementImpl0 = new WMLMetaElementImpl(wMLDocumentImpl0, "p:,e%gq=4");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLMetaElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertEquals("p:,e%gq=4", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "");
      boolean boolean0 = dOMNodePointer0.isActual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "^m");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSetvarElementImpl wMLSetvarElementImpl0 = new WMLSetvarElementImpl(wMLDocumentImpl0, "^m");
      Locale locale0 = new Locale("^m", "^m");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLSetvarElementImpl0, locale0, "^m");
      dOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "{mbns");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "{ms");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild(jXPathContext0, (QName) null, 2, (Object) null);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: id('{ms')
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      boolean boolean0 = dOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLElement0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "");
      boolean boolean0 = dOMNodePointer0.isLanguage("http://www.w3.org/2000/xmlns/");
      assertFalse(boolean0);
  }
}
