/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 01:04:25 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.html.dom.HTMLAreaElementImpl;
import org.apache.html.dom.HTMLBRElementImpl;
import org.apache.html.dom.HTMLBaseFontElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLIFrameElementImpl;
import org.apache.html.dom.HTMLInputElementImpl;
import org.apache.html.dom.HTMLIsIndexElementImpl;
import org.apache.html.dom.HTMLMetaElementImpl;
import org.apache.html.dom.HTMLOListElementImpl;
import org.apache.html.dom.HTMLOptGroupElementImpl;
import org.apache.html.dom.HTMLParamElementImpl;
import org.apache.html.dom.HTMLQuoteElementImpl;
import org.apache.html.dom.HTMLStyleElementImpl;
import org.apache.html.dom.HTMLTableSectionElementImpl;
import org.apache.html.dom.HTMLTitleElementImpl;
import org.apache.wml.dom.WMLDoElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLEmElementImpl;
import org.apache.wml.dom.WMLHeadElementImpl;
import org.apache.wml.dom.WMLInputElementImpl;
import org.apache.wml.dom.WMLSelectElementImpl;
import org.apache.wml.dom.WMLSetvarElementImpl;
import org.apache.wml.dom.WMLSmallElementImpl;
import org.apache.wml.dom.WMLTableElementImpl;
import org.apache.wml.dom.WMLTdElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.apache.xerces.parsers.XMLGrammarCachingConfiguration;
import org.apache.xerces.util.SymbolTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.Text;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      HTMLIFrameElementImpl hTMLIFrameElementImpl0 = new HTMLIFrameElementImpl(hTMLDocumentImpl0, "$`q#v6");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLIFrameElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      QName qName0 = dOMNodePointer1.getName();
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer1, qName0, attrNSImpl0);
      int int0 = dOMNodePointer0.compareChildNodePointers(nodePointer0, dOMNodePointer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentType documentType0 = hTMLDocumentImpl0.createDocumentType("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "http://www.w3.org/2000/xmlns/");
      HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, ")p0");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLTitleElementImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentType0, locale0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID(jXPathContext0, "");
      assertTrue(nullPointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseFontElementImpl hTMLBaseFontElementImpl0 = new HTMLBaseFontElementImpl(hTMLDocumentImpl0, ":lys");
      String string0 = DOMNodePointer.getLocalName(hTMLBaseFontElementImpl0);
      assertEquals("LYS", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, ">%GtO8iO4NR)-v7 *q");
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLElement0);
      String string0 = dOMNodePointer2.asPath();
      assertEquals("id('>%GtO8iO4NR)-v7 *q')/BODY[1]/BODY[1]", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      hTMLDocumentImpl0.getBody();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>", (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSetvarElementImpl wMLSetvarElementImpl0 = new WMLSetvarElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      dOMNodePointer0.setValue(wMLSetvarElementImpl0);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      boolean boolean0 = dOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "6=9\"BR", "/", "/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNotNull(string0);
      assertEquals("6=9\"BR", string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParamElementImpl0, locale0, "xmlns");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "id('xmlns')");
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "");
      String string0 = DOMNodePointer.getLocalName(hTMLInputElementImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xml:lang");
      hTMLIsIndexElementImpl0.setAttribute("xml:lang", "OBJECT");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLIsIndexElementImpl0, locale0);
      String string0 = dOMNodePointer0.getLanguage();
      assertEquals("OBJECT", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "java:");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      Attr attr0 = pSVIDocumentImpl0.createAttributeNS((String) null, "z;jccx9", "Kta,}*6[oiZ>X");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attr0, locale0, "z;jccx9");
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertSame(object0, attr0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "org.apache.html.dom.HTMLPreElementImpl");
      Object object0 = dOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = DOMNodePointer.findEnclosingAttribute(hTMLDocumentImpl0, "fxtwL5D(");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xml:lang");
      hTMLIsIndexElementImpl0.setAttribute("xml:lang", "OBJECT");
      String string0 = DOMNodePointer.findEnclosingAttribute(hTMLIsIndexElementImpl0, "xml:lang");
      assertNotNull(string0);
      assertEquals("OBJECT", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "`asHrs@TnQ_U92/\"K)");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOListElementImpl0, locale0, "#gi%d8-+j@nm");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "`asHrs@TnQ_U92/\"K)");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLEmElementImpl wMLEmElementImpl0 = new WMLEmElementImpl(wMLDocumentImpl0, "#gi%d8-+j@nm");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLEmElementImpl0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID(jXPathContext0, "`asHrs@TnQ_U92/\"K)");
      QName qName0 = new QName("C.\"j.IC=6M+2;3/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "&N*gp/i");
      DOMNodeIterator dOMNodeIterator0 = (DOMNodeIterator)dOMNodePointer0.childIterator(nodeNameTest0, true, nullPointer0);
      assertEquals(0, dOMNodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, ">%GtO8iO4NR)-v7 *q");
      NodeIterator nodeIterator0 = dOMNodePointer0.attributeIterator((QName) null);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
//      try { 
        DOMNodePointer.testNode((Node) hTMLParamElementImpl0, (NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
//      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("SkB!>Q=yNvu50}y`");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = new QName("<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: <<unknown namespace>>
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("fxtwL5D(", "xml");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'fxtwL5D(:xml'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseFontElementImpl hTMLBaseFontElementImpl0 = new HTMLBaseFontElementImpl(hTMLDocumentImpl0, "x:lys");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBaseFontElementImpl0, locale0, "org.apache.html.dom.HTMLCollectionImpl");
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "x:lys");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(elementDefinitionImpl0, locale0);
      NodeIterator nodeIterator0 = dOMNodePointer0.namespaceIterator();
      // Undeclared exception!
//      try { 
        dOMNodePointer1.setValue(nodeIterator0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      QName qName0 = new QName(">16o=nQ@Qhd4eZ=", "o^+!&`R");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, deferredDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null, "");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.isLeaf();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Attr attr0 = deferredDocumentImpl0.createAttribute("src");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attr0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getValue();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      // Undeclared exception!
//      try { 
        DOMNodePointer.getPrefix((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "^y>7n");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getPointerByID(jXPathContext0, "^y>7n");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, true);
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, ")|^uiA@#eNYN/``f+");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) wMLDocumentImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("Chinese");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) comment0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.CommentImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "gy_Ooe}G");
      hTMLDocumentImpl0.setReadOnly(true, false);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI("Cannot remove root DOM node");
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "#gi%d8-+j@nm");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI("]3");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "i {+x~fy+=9k#");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      dOMNodePointer0.setValue(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, ")U-8<nIII?gV^b`");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "45Pg}?L0wbb", "45Pg}?L0wbb", "K :X1\n44yFd$c}0D");
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "45Pg}?L0wbb");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.DocumentTypeImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HTMLStyleElementImpl hTMLStyleElementImpl0 = new HTMLStyleElementImpl((HTMLDocumentImpl) null, "<<unknown namespace>>");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getLocalName(hTMLStyleElementImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl((HTMLDocumentImpl) null, "org.apache.commons.jxpath.ri.model.beans.CollectionPointer");
      QName qName0 = new QName("b", "H6");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLOptGroupElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getLanguage();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, true);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, deferredDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.getDefaultNamespaceURI();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      WMLTableElementImpl wMLTableElementImpl0 = new WMLTableElementImpl((WMLDocumentImpl) null, "u9[#.M-VSP/Yu4(S=+^");
      // Undeclared exception!
//      try { 
        DOMNodePointer.findEnclosingAttribute(wMLTableElementImpl0, "http://www.w3.org/XML/1998/namespace");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "`asHrs@TnQ_U92/\"K)");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOListElementImpl0, locale0, "#gi%d8-+j@nm");
      QName qName0 = dOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "`asHrs@TnQ_U92/\"K)");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, 0, (Object) jXPathContext0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0, (String) null);
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, (-2615));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "`asHrs@TnQ_U92/\"K)");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOListElementImpl0, locale0, "#gi%d8-+j@nm");
      QName qName0 = new QName("");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) attrNSImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // DOM002 Illegal character
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "J;l/\"2~T\"p)'c8Cs", "<<unknown namespace>>", "czH46o Fy=%/1");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(pSVIElementNSImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.QName@0000000004");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLHeadElementImpl wMLHeadElementImpl0 = new WMLHeadElementImpl(wMLDocumentImpl0, "J;l/\"2~T\"p)'c8Cs");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLHeadElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      SymbolTable symbolTable0 = new SymbolTable(7);
      XMLGrammarCachingConfiguration xMLGrammarCachingConfiguration0 = new XMLGrammarCachingConfiguration(symbolTable0);
      Locale locale0 = xMLGrammarCachingConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: null
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl((HTMLDocumentImpl) null, "");
      SymbolTable symbolTable0 = new SymbolTable(1);
      XMLGrammarCachingConfiguration xMLGrammarCachingConfiguration0 = new XMLGrammarCachingConfiguration(symbolTable0);
      Locale locale0 = xMLGrammarCachingConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, ")U-8<nIII?gV^b`");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("xml", ")U-8<nIII?gV^b`");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLAreaElementImpl0);
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer(")U-8<nIII?gV^b`");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(nodePointer0, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'xml:)U-8<nIII?gV^b`'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "*");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, "*");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.String cannot be cast to org.w3c.dom.Node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "`asHrs@TnQ_U92/\"K)");
      Locale locale0 = Locale.ROOT;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "`asHrs@TnQ_U92/\"K)");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOListElementImpl0, locale0, "#gi%d8-+j@nm");
      WMLTdElementImpl wMLTdElementImpl0 = new WMLTdElementImpl(wMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLTdElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator((NodeTest) null, true, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: '`ASHRS@TNQ_U92/\"K)'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1247);
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "#gi%d8-+j@nm");
      QName qName0 = new QName("13P'gZUd%->l Rb3yuz");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, "<poJ|-M");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(nodeTypeTest0, false, nodePointer0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.String cannot be cast to org.w3c.dom.Node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "`asHrs@TnQ_U92/\"K)");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOListElementImpl0, locale0, (String) null);
      NodeIterator nodeIterator0 = dOMNodePointer0.namespaceIterator();
      dOMNodePointer0.setValue(nodeIterator0);
      Object object0 = dOMNodePointer0.getValue();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParamElementImpl0, locale0, "xmlns");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "id('xmlns')");
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLParamElementImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLTableSectionElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(pSVIDocumentImpl0, "DmW[miNda#WEB)&.", "", (String) null);
      String string0 = DOMNodePointer.getNamespaceURI((Node) pSVIElementNSImpl0);
      assertEquals("DmW[miNda#WEB)&.", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "&apos;", "TBODY");
      String string0 = DOMNodePointer.getLocalName(documentTypeImpl0);
      assertEquals("//www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "770d!co8/L", "refresh", "http://www.w3.org/XML/1998/namespace");
      String string0 = DOMNodePointer.getLocalName(pSVIElementNSImpl0);
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBRElementImpl hTMLBRElementImpl0 = new HTMLBRElementImpl(hTMLDocumentImpl0, ":Um{%/&uUf2^C?GmWI");
      String string0 = DOMNodePointer.getPrefix(hTMLBRElementImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "yMjMCf4I]fdNTrQI%.", "yMjMCf4I]fdNTrQI%.", "yMjMCf4I]fdNTrQI%.");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSelectElementImpl wMLSelectElementImpl0 = new WMLSelectElementImpl(wMLDocumentImpl0, "*");
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLSelectElementImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALIAN;
      TextImpl textImpl0 = new TextImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, commentImpl0);
      String string0 = dOMNodePointer1.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Attr attr0 = pSVIDocumentImpl0.createAttributeNS("/v2yL712", "9jDW7uN__k`N'19HU", "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attr0, locale0, (String) null);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLDocumentImpl0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "2&2[IysB,");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLInputElementImpl wMLInputElementImpl0 = new WMLInputElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLInputElementImpl0);
      QName qName0 = new QName("]a:`'.mf-E", "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: 
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "=&z^H");
      String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "xmlns");
      String string0 = dOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "Factory could not create a child node for path: ");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Factory could not create a child node for path: ");
      boolean boolean0 = DOMNodePointer.testNode((Node) entityImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "*");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLMetaElementImpl0, (NodeTest) nodeNameTest0);
      assertEquals("*", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "");
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.attributeIterator((QName) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "cv^x]$!55");
      HTMLDocumentImpl hTMLDocumentImpl1 = (HTMLDocumentImpl)dOMNodePointer0.getBaseValue();
      assertNull(hTMLDocumentImpl1.getDomain());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, ">%GtO8iO4NR)-v7 *q");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(element0, locale0, ">%GtO8iO4NR)-v7 *q");
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, ">%GtO8iO4NR)-v7 *q");
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      HTMLIFrameElementImpl hTMLIFrameElementImpl0 = new HTMLIFrameElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLIFrameElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, attrNSImpl0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, nodePointer0);
      assertEquals(1, int0);
      assertEquals("XMLNS", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      HTMLIFrameElementImpl hTMLIFrameElementImpl0 = new HTMLIFrameElementImpl(hTMLDocumentImpl0, "x\"WGuVp$0~!:crW{");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLIFrameElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(attrNSImpl0, locale0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0, "java.util.ocale@0000000006");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(pSVIDocumentImpl0, locale0, "java.util.ocale@0000000006");
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      QName qName0 = new QName("The Element cannot be added to itself", (String) null);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer1 = (DOMNodePointer)dOMNodePointer0.getPointerByID((JXPathContext) null, "");
      assertTrue(dOMNodePointer1.isActual());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      dOMNodePointer0.getDefaultNamespaceURI();
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      ProcessingInstruction processingInstruction0 = deferredDocumentImpl0.createProcessingInstruction("concat", (String) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "ZJ#|V'yZM7^mn6:8;L6");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLDoElementImpl wMLDoElementImpl0 = new WMLDoElementImpl(wMLDocumentImpl0, (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) wMLDoElementImpl0);
      Locale locale0 = jXPathContext0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstruction0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRANCE;
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "hF[Pp1_e]NoEB]r#Uc", "hF[Pp1_e]NoEB]r#Uc");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("hF[Pp1_e]NoEB]r#Uc", object0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, "<<unknown namespace>>");
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("http://www.w3.org/2000/xmlns/", object0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      TextImpl textImpl0 = new TextImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPANESE;
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0, "<<unknown namespace>>");
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "\"number\"");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0, "\"number\"");
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("\"number\"", object0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "afc'C[=6:@G< 2", "afc'C[=6:@G< 2", "afc'C[=6:@G< 2");
      String string0 = DOMNodePointer.getPrefix(pSVIElementNSImpl0);
      assertEquals("afc'C[=6", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "#document");
      HTMLBRElementImpl hTMLBRElementImpl0 = new HTMLBRElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLBRElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer1.equals(dOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "`asHrs@TnQ_U92/\"K)");
      Locale locale0 = Locale.ROOT;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "`asHrs@TnQ_U92/\"K)");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOListElementImpl0, locale0, "#gi%d8-+j@nm");
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, (String) null);
      boolean boolean0 = dOMNodePointer0.equals(wMLSmallElementImpl0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "#document");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableSectionElementImpl0, locale0, "is0[B\"xE'-s/a");
      String string0 = dOMNodePointer0.asPath();
      assertEquals("id('is0[B&quot;xE&apos;-s/a')", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParamElementImpl0, locale0, "xmlns");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLParamElementImpl0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "id('xmlns')");
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.asPath();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "}Z45t2;>]/Pbm(:Q");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLOListElementImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/Q[1]", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, documentTypeImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRANCE;
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "hF[Pp1_e]NoEB]r#Uc", "hF[Pp1_e]NoEB]r#Uc");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/processing-instruction('hF[Pp1_e]NoEB]r#Uc')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, ")U-8<nIII?gV^b`");
      QName qName0 = new QName("xml");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, entityImpl0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("$xml", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(documentImpl0, "=&z^H");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, cDATASectionImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      TextImpl textImpl0 = new TextImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xml:lang");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLIsIndexElementImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      dOMNodePointer0.remove();
      assertFalse(dOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParamElementImpl0, locale0, "xmlns");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "id('xmlns')");
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("XMLNS", qName0.getName());
      assertEquals("XMLNS", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Attr attr0 = pSVIDocumentImpl0.createAttributeNS("/v2yL712", "9jDW7uN__k`N'19HU", "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attr0, locale0, (String) null);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(pSVIDocumentImpl0, "DmW[miNda#WEB)&.", "", (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) pSVIElementNSImpl0);
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path /@null, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) locale0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: 
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.setValue(dOMNodePointer0);
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      dOMNodePointer0.setValue((Object) null);
      assertFalse(dOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "node()", "http://www.w3.org/2000/xmlns/");
      dOMNodePointer0.setValue(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0, "java.util.ocale@0000000006");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue("/processing-instruction('");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "@(#) $RCSfile: Document.java,v $ $Revision: 1.84 $ $Date: 2004/08/31 21:47:51 $ $Name: jdom_1_0 $");
      dOMNodePointer0.getNamespaceURI("timer");
      DocumentType documentType0 = hTMLDocumentImpl0.createDocumentType("alt", "<<unknown namespace>>", "bI|LP&!@s");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentType0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(pSVIDocumentImpl0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, (String) null);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "FRAME");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, cDATASectionImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.setValue(dOMNodePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      dOMNodePointer0.setValue(wMLDocumentImpl0);
      assertEquals(Integer.MIN_VALUE, dOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, cDATASectionImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.setValue((Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      TextImpl textImpl0 = new TextImpl(hTMLDocumentImpl0, "^X!!_90Y");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue((Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.isLanguage((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xml:lang");
      hTMLIsIndexElementImpl0.setAttribute("xml:lang", "OBJECT");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLIsIndexElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isLanguage("G");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xml:lang");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLIsIndexElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, ":Um{%/&uUf2^C?GmWI");
      dOMNodePointer0.getNamespaceURI();
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParamElementImpl0, locale0, "xmlns");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "id('xmlns')");
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      dOMNodePointer0.getDefaultNamespaceURI();
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "@(#) $RCSfile: Document.java,v $ $Revision: 1.84 $ $Date: 2004/08/31 21:47:51 $ $Name: jdom_1_0 $");
      dOMNodePointer0.getNamespaceURI("timer");
      String string0 = dOMNodePointer0.getNamespaceURI("timer");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "X");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOListElementImpl0, locale0);
      dOMNodePointer0.getNamespaceURI("+D,vQKpuc");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = new QName("y?IRpE", "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Unknown namespace prefix: y?IRpE
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      QName qName0 = new QName("xmlns", "xmlns");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "xmlns");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLInputElementImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLInputElementImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("xml", "xml");
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "xml");
      HTMLStyleElementImpl hTMLStyleElementImpl0 = new HTMLStyleElementImpl(hTMLDocumentImpl0, "p");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLStyleElementImpl0);
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLInputElementImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "xmlns");
      String string0 = dOMNodePointer0.getNamespaceURI("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      ProcessingInstruction processingInstruction0 = deferredDocumentImpl0.createProcessingInstruction("java:", "java:");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstruction0, locale0, "&apos;");
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator((NodeTest) null, false, nodePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: java:
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "*ZuYhNt:I6NGbXq)K", "*ZuYhNt:I6NGbXq)K");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("}k?");
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, false);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(deferredDocumentImpl0, "0{*h7v9]=w5Y");
      boolean boolean0 = DOMNodePointer.testNode((Node) cDATASectionImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, ")U-8<nIII?gV^b`");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) entityImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseFontElementImpl hTMLBaseFontElementImpl0 = new HTMLBaseFontElementImpl(hTMLDocumentImpl0, "Ty-_");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLBaseFontElementImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1247);
      boolean boolean0 = DOMNodePointer.testNode((Node) deferredDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "*ZuYhNt:I6NGbXq%<)K", "*ZuYhNt:I6NGbXq%<)K");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      Comment comment0 = wMLDocumentImpl0.createComment("a;,AF>i['b");
      boolean boolean0 = DOMNodePointer.testNode((Node) comment0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("iRO-2\"8sq,1(B,c=|R");
      boolean boolean0 = DOMNodePointer.testNode((Node) text0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "J;l/\"2~T\"p)'c8Cs", "<<unknown namespace>>", "J;l/\"2~T\"p)'c8Cs");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) pSVIElementNSImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      assertEquals("J;l/\"2~T\"p)'c8Cs", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertEquals("HTML", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "*");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertEquals("*", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("HTML", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("b", "H6");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "*");
      QName qName0 = new QName("*", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "*");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLMetaElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "Factory could not create a child node for path: ");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Factory could not create a child node for path: ");
      Locale locale0 = new Locale("Factory could not create a child node for path: ", "Factory could not create a child node for path: ", "gkc");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0, "gkc");
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(processingInstructionTest0, true, variablePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xml:lang");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLIsIndexElementImpl0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("HEAD");
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      boolean boolean0 = dOMNodePointer0.isActual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParamElementImpl0, (Locale) null, "xmlns");
      dOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "*");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0);
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "`");
      QName qName0 = new QName("b");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, qName0, (Locale) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLOptGroupElementImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLOptGroupElementImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/`[1]", string0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParamElementImpl0, locale0, "xmlns");
      boolean boolean0 = dOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xml:lang");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLIsIndexElementImpl0, locale0);
      String string0 = dOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLIFrameElementImpl hTMLIFrameElementImpl0 = new HTMLIFrameElementImpl(hTMLDocumentImpl0, "x\"WGuVp$0~!:crW{");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLIFrameElementImpl0, locale0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      assertEquals(0, int0);
  }
}
