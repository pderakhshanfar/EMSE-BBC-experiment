/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 06:03:26 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DecimalFormatSymbols;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.html.dom.HTMLAnchorElementImpl;
import org.apache.html.dom.HTMLAppletElementImpl;
import org.apache.html.dom.HTMLBRElementImpl;
import org.apache.html.dom.HTMLBaseElementImpl;
import org.apache.html.dom.HTMLBaseFontElementImpl;
import org.apache.html.dom.HTMLBodyElementImpl;
import org.apache.html.dom.HTMLButtonElementImpl;
import org.apache.html.dom.HTMLDListElementImpl;
import org.apache.html.dom.HTMLDirectoryElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFontElementImpl;
import org.apache.html.dom.HTMLFormElementImpl;
import org.apache.html.dom.HTMLFrameElementImpl;
import org.apache.html.dom.HTMLHRElementImpl;
import org.apache.html.dom.HTMLHeadElementImpl;
import org.apache.html.dom.HTMLHeadingElementImpl;
import org.apache.html.dom.HTMLIFrameElementImpl;
import org.apache.html.dom.HTMLImageElementImpl;
import org.apache.html.dom.HTMLIsIndexElementImpl;
import org.apache.html.dom.HTMLLIElementImpl;
import org.apache.html.dom.HTMLLegendElementImpl;
import org.apache.html.dom.HTMLLinkElementImpl;
import org.apache.html.dom.HTMLMenuElementImpl;
import org.apache.html.dom.HTMLMetaElementImpl;
import org.apache.html.dom.HTMLOListElementImpl;
import org.apache.html.dom.HTMLOptGroupElementImpl;
import org.apache.html.dom.HTMLOptionElementImpl;
import org.apache.html.dom.HTMLParagraphElementImpl;
import org.apache.html.dom.HTMLQuoteElementImpl;
import org.apache.html.dom.HTMLSelectElementImpl;
import org.apache.html.dom.HTMLStyleElementImpl;
import org.apache.html.dom.HTMLTableElementImpl;
import org.apache.html.dom.HTMLTableSectionElementImpl;
import org.apache.html.dom.HTMLTextAreaElementImpl;
import org.apache.html.dom.HTMLTitleElementImpl;
import org.apache.html.dom.HTMLUListElementImpl;
import org.apache.wml.dom.WMLAElementImpl;
import org.apache.wml.dom.WMLAccessElementImpl;
import org.apache.wml.dom.WMLBrElementImpl;
import org.apache.wml.dom.WMLCardElementImpl;
import org.apache.wml.dom.WMLDoElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLFieldsetElementImpl;
import org.apache.wml.dom.WMLGoElementImpl;
import org.apache.wml.dom.WMLNoopElementImpl;
import org.apache.wml.dom.WMLOneventElementImpl;
import org.apache.wml.dom.WMLOptgroupElementImpl;
import org.apache.wml.dom.WMLSelectElementImpl;
import org.apache.wml.dom.WMLSmallElementImpl;
import org.apache.wml.dom.WMLStrongElementImpl;
import org.apache.wml.dom.WMLTdElementImpl;
import org.apache.wml.dom.WMLTemplateElementImpl;
import org.apache.wml.dom.WMLWmlElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.NotationImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.apache.xerces.dom3.UserDataHandler;
import org.apache.xerces.impl.XMLErrorReporter;
import org.apache.xerces.impl.xs.util.SimpleLocator;
import org.apache.xerces.parsers.DOMASBuilderImpl;
import org.apache.xerces.parsers.DTDConfiguration;
import org.apache.xerces.parsers.XMLGrammarCachingConfiguration;
import org.apache.xerces.util.SymbolTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.CDATASection;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.Text;
import org.w3c.dom.events.EventListener;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLDocumentImpl0, locale0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte) (-120);
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, documentTypeImpl0);
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer2);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "#<1,--8+U_U");
      wMLWmlElementImpl0.item(2);
      wMLWmlElementImpl0.setXmlLang("E");
      Locale locale0 = new Locale("E", "E", "E");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLWmlElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isLanguage("http://www.w3.org/2000/xmlns/");
      assertFalse(boolean0);
      
      String string0 = dOMNodePointer0.getLanguage();
      assertNotNull(string0);
      assertEquals("E", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "#<1,--8+U_U");
      wMLWmlElementImpl0.setXmlLang("E");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLWmlElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isLanguage("#<1,--8+U_U");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "-1", "N;BD[X)}", "-1");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "-1");
      wMLWmlElementImpl0.setXmlLang("key");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLWmlElementImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.isLanguage((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "tIBa", "tIBa");
      Locale locale0 = Locale.CHINA;
      Element element0 = hTMLDocumentImpl0.createElementNS("tIBa", "tIBa");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      HTMLStyleElementImpl hTMLStyleElementImpl0 = new HTMLStyleElementImpl(hTMLDocumentImpl0, "hnB~NMV5~3?zZ{j%y]");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLStyleElementImpl0);
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.testNode((NodeTest) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      Locale locale1 = new Locale("http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>");
      Locale locale2 = Locale.UK;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(cDATASectionImpl0, locale2);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "<<unknown namespace>>");
      dOMNodePointer2.setValue(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("/processing-instruction('", "-.$D", "%}QX");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      NamespaceResolver namespaceResolver0 = new NamespaceResolver();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer1);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      namespaceResolver0.setNamespaceContextPointer(variablePointer0);
      dOMNodePointer1.setNamespaceResolver(namespaceResolver0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.asPath();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'http://www.w3.org/XML/1998/namespace:<<unknown namespace>>'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "jxpath.properties");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      wMLDocumentImpl0.createElementNS("jxpath.properties", "hVcoJ|a9worqD3Aw/", "hVcoJ|a9worqD3Aw/");
      QName qName0 = new QName("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "hVcoJ|a9worqD3Aw/");
      HTMLDListElementImpl hTMLDListElementImpl0 = new HTMLDListElementImpl(hTMLDocumentImpl0, "org.apache.wml.dom.WMLFieldsetElementImpl");
      Locale locale0 = Locale.GERMANY;
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLDListElementImpl0);
      NamespaceResolver namespaceResolver0 = new NamespaceResolver();
      namespaceResolver0.setNamespaceContextPointer(nodePointer0);
      dOMNodePointer0.setNamespaceResolver(namespaceResolver0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("$org.apache.commons.jxpath.ri.model.dom.DOMNodePointer:hVcoJ|a9worqD3Aw/ORG.APACHE.WML.DOM.WMLFIELDSETELEMENTIMPL[1]", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, true);
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      NamespaceResolver namespaceResolver0 = new NamespaceResolver();
      namespaceResolver0.registerNamespace("<<unknown namespace>>", "http://www.w3.org/XML/1998/namespace");
      namespaceResolver0.setNamespaceContextPointer(dOMNodePointer1);
      dOMNodePointer1.setNamespaceResolver(namespaceResolver0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/<<unknown namespace>>:http://www.w3.org/XML/1998/namespace[1]", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      XMLGrammarCachingConfiguration xMLGrammarCachingConfiguration0 = new XMLGrammarCachingConfiguration();
      DOMASBuilderImpl dOMASBuilderImpl0 = new DOMASBuilderImpl(xMLGrammarCachingConfiguration0);
      Document document0 = dOMASBuilderImpl0.parseURI("http://www.w3.org/XML/1998/namespace");
      String string0 = "<BaseChar>";
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(document0, locale0, string0);
      Object object0 = null;
      dOMNodePointer1.setValue(object0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      NamespaceResolver namespaceResolver0 = new NamespaceResolver();
      namespaceResolver0.setNamespaceContextPointer(dOMNodePointer1);
      dOMNodePointer1.setNamespaceResolver(namespaceResolver0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/node()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "java.util.Locale@0000000007");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("<<unknown namespace>>", "java.util.Locale@0000000007", "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      QName qName0 = dOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertEquals("http://www.w3.org/2000/xmlns/", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl1, "yc?C-|[");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) hTMLDocumentImpl1);
      jXPathContext0.getVariables();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLParagraphElementImpl0, locale0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID(jXPathContext0, "");
      // Undeclared exception!
//      try { 
        nullPointer0.getName();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      pSVIDocumentImpl0.createAttributeNS("axis", "axis", "axis");
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl();
      TextImpl textImpl0 = new TextImpl(pSVIDocumentImpl1, "org.apache.commons.jxpath.ri.compiler.CoreOperation");
      boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte) (-109);
      byteArray0[3] = (byte) (-98);
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte) (-63);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl1, "em");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Qnz,");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("", "k|>\"#@cJ", "&apos;");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.asPath();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("_");
      HTMLDListElementImpl hTMLDListElementImpl0 = new HTMLDListElementImpl(hTMLDocumentImpl0, "_");
      Locale locale0 = new Locale("_", "_", "_");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "_");
      hTMLDListElementImpl0.getParentNode();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDListElementImpl0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer1);
      NodePointer nodePointer0 = dOMNodePointer1.createAttribute(jXPathContext0, qName0);
      int int0 = dOMNodePointer1.compareChildNodePointers(nodePointer0, dOMNodePointer0);
      assertEquals((-1), int0);
      
      int int1 = dOMNodePointer0.compareChildNodePointers(nodePointer0, dOMNodePointer1);
      assertEquals((-1), int1);
      
      boolean boolean0 = dOMNodePointer1.isActual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Element element0 = pSVIDocumentImpl0.createElementNS("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "SqJN10");
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl((HTMLDocumentImpl) null, "gWzWLp^-I@");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLButtonElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) qName0);
      DOMNodePointer.getPrefix(pSVIDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(nodePointer0, variablePointer0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.jxpath.ri.QName cannot be cast to org.w3c.dom.Node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("_");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "_");
      HTMLDListElementImpl hTMLDListElementImpl0 = new HTMLDListElementImpl(hTMLDocumentImpl0, "[");
      DOMNodePointer.testNode((Node) hTMLDListElementImpl0, (NodeTest) nodeNameTest0);
      Locale locale0 = new Locale("java.util.Locale@0000000006", "java.util.Locale@0000000006", "9xzzD'jPNAYP3hiQj");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "...");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDListElementImpl0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer1);
      NodePointer nodePointer0 = dOMNodePointer1.createAttribute(jXPathContext0, qName0);
      int int0 = dOMNodePointer1.compareChildNodePointers(nodePointer0, dOMNodePointer0);
      assertEquals((-1), int0);
      
      boolean boolean0 = dOMNodePointer1.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "6V]l`qo|-?a^HX");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLGoElementImpl0);
      JXPathContext jXPathContext1 = jXPathContext0.getRelativeContext(dOMNodePointer0);
      JXPathContext jXPathContext2 = jXPathContext1.getParentContext();
      QName qName0 = new QName("xml:lang");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext2, qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "x;6:_", "x;6:_");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI("xmnns");
      assertNull(string0);
      
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "&-kB.Xk'Rs7h=1Ugi6'", "http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("xmnns", "rvZ:uHEylNi2j", "");
      String string1 = DOMNodePointer.getPrefix(element0);
      assertEquals("rvZ", string1);
      
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "*");
      QName qName0 = new QName("*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "-]O5>3vI{j\"Zk<<1yU");
      HTMLDListElementImpl hTMLDListElementImpl0 = new HTMLDListElementImpl(hTMLDocumentImpl0, "Factory is not set on the JXPathContext - cannot create path: ");
      DOMNodePointer.testNode((Node) hTMLDListElementImpl0, (NodeTest) nodeNameTest0);
      Locale locale0 = Locale.CHINESE;
      locale0.getExtensionKeys();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFontElementImpl0, locale0);
      dOMNodePointer0.getValue();
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "*");
      QName qName0 = new QName("*", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "-]O5>3vI{j\"Zk<<1yU");
      HTMLDListElementImpl hTMLDListElementImpl0 = new HTMLDListElementImpl(hTMLDocumentImpl0, "[");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDListElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      hTMLDocumentImpl0.createCDATASection("xmnns");
      Locale locale0 = new Locale("xmnns");
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "Exception trying to set value with xpath ");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) entityReferenceImpl0);
      Locale locale1 = jXPathContext0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale1);
      dOMNodePointer0.asPath();
      boolean boolean0 = dOMNodePointer0.isActual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "&apos;", (String) null);
      Locale locale0 = new Locale("&apos;");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ENGLISH;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      QName qName0 = new QName("k");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'k'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getValue();
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "http://www.w3.org/2000/xmlns/");
      Object object0 = dOMNodePointer0.getRootNode();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      JXPathContext jXPathContext1 = jXPathContext0.getRelativeContext(dOMNodePointer0);
      Variables variables0 = jXPathContext1.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, (QName) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "O.K5?4=Wn:#", "O.K5?4=Wn:#");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, processingInstructionImpl0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      QName qName1 = dOMNodePointer0.getName();
      assertEquals("O.K5?4=Wn:#", qName1.toString());
      
      Node node0 = hTMLDocumentImpl0.cloneNode(true);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((NodePointer) null, node0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/processing-instruction('O.K5?4=Wn:#')[1]", string0);
      
      dOMNodePointer1.namespacePointer("pf}+HRh");
      String string1 = dOMNodePointer1.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string1);
      assertNotNull(string1);
      
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("O.K5?4=Wn:#", object0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, ">wUnFCU:RRHejYx}");
      JXPathContext.newContext((Object) ">wUnFCU:RRHejYx}");
      QName qName0 = new QName("xmlns:");
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOListElementImpl0, (Locale) null);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "xmlns:", (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, processingInstructionImpl0);
      dOMNodePointer1.asPath();
      QName qName1 = new QName("org.apache.commons.jxpath.JXPathInvalidSyntaxException");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "5.LNR,#");
      dOMNodePointer0.setValue((Object) null);
      assertTrue(dOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, ">wUnFCU:RRHejYx}");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) ">wUnFCU:RRHejYx}");
      QName qName0 = new QName("xmlns:");
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOListElementImpl0, (Locale) null);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "xmlns:", (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, processingInstructionImpl0);
      QName qName1 = new QName("org.apache.commons.jxpath.JXPathInvalidSyntaxException");
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createAttribute(jXPathContext0, qName1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path /processing-instruction('xmlns:')[1]/@org.apache.commons.jxpath.JXPathInvalidSyntaxException, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "Unknown namespace prefix: ");
      QName qName0 = new QName("Unknown namespace prefix: ");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "k");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0, "k");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLFontElementImpl0, (NodeTest) nodeNameTest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "C9Y^~w3,*+4:");
      JXPathContext.newContext((Object) hTMLDocumentImpl0);
      hTMLDocumentImpl0.setReadOnly(true, false);
      QName qName0 = new QName("xmlns:");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      DOMNodePointer.testNode((Node) hTMLOListElementImpl0, (NodeTest) processingInstructionTest0);
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      HTMLHRElementImpl hTMLHRElementImpl0 = new HTMLHRElementImpl(hTMLDocumentImpl0, "");
      xMLErrorReporter0.setProperty("C9Y^~w3,*+4:", hTMLHRElementImpl0);
      xMLErrorReporter0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "GWmEYUdJ=P,rd");
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(wMLDocumentImpl0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("k");
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, (String) null, "\" could not be added as content to \"");
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      xMLErrorReporter0.getLocale();
      SimpleLocator simpleLocator0 = new SimpleLocator("\" could not be added as content to \"", "k", 93, 93);
      xMLErrorReporter0.setDocumentLocator(simpleLocator0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, (Locale) null);
      dOMNodePointer0.getNamespaceURI("Ve[y{^K'");
      dOMNodePointer0.getName();
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer((String) null);
      assertFalse(nodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getName();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "preserve");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLElement0, locale0, "xmnns");
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(dOMNodePointer3, hTMLElement0);
      String string0 = dOMNodePointer4.asPath();
      assertEquals("id('xmnns')/BODY[1]", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS((String) null, "http://www.w3.org/2000/xmlns/", " `!g:d13JR}yw");
      DOMNodePointer.getNamespaceURI((Node) element0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, wMLDocumentImpl0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer3.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llXmRH1,mTi-l");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0, "+llXmRH1,mTi-l");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      boolean boolean0 = dOMNodePointer2.equals(dOMNodePointer2);
      assertFalse(dOMNodePointer2.equals((Object)dOMNodePointer0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "u5[@6BNcD:+Eq2W2#0");
      cDATASectionImpl0.hasAttributes();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(2);
      DOMNodePointer.testNode((Node) cDATASectionImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, "u5[@6BNcD:+Eq2W2#0");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.CDATASectionImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "V.ttwmJO");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-81);
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)39;
      byteArray0[5] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Locale locale1 = Locale.KOREA;
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer", "org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer");
      hTMLDocumentImpl0.getEncoding();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attr0, locale0);
      DOMNodePointer.getNamespaceURI((Node) hTMLQuoteElementImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, attr0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLQuoteElementImpl0);
      dOMNodePointer1.asPath();
      boolean boolean0 = dOMNodePointer0.isCollection();
      assertFalse(boolean0);
      
      String string0 = dOMNodePointer1.getDefaultNamespaceURI();
      assertNull(string0);
      assertFalse(dOMNodePointer1.isCollection());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "5e2J&Nah(LU9wY");
      Locale locale0 = Locale.GERMAN;
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HTMLMenuElementImpl hTMLMenuElementImpl0 = new HTMLMenuElementImpl((HTMLDocumentImpl) null, "'s");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMenuElementImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getLanguage();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Unknown namespace prefix: ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!hh^UR%^HC{_gecV");
      Element element0 = wMLDocumentImpl0.createElementNS("gNk`n}g2MK", "O;\"X3Za9zV=cOiK", "u5[@6BNcD:+Eq2W2#0");
      Locale locale0 = Locale.JAPANESE;
      locale0.getDisplayName();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "gNk`n}g2MK");
      dOMNodePointer0.namespacePointer("Exception ");
      dOMNodePointer0.isLanguage("//WWW.W3.ORG/2000/XMLNS/");
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNotNull(string0);
      assertEquals("gNk`n}g2MK", string0);
      
      dOMNodePointer0.isCollection();
      boolean boolean0 = dOMNodePointer0.isActual();
      assertTrue(boolean0);
      
      dOMNodePointer0.asPath();
      QName qName0 = new QName("Japanese", "id('gNk`n}g2MK')");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      boolean boolean1 = dOMNodePointer0.isCollection();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "Exception ");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLFrameElementImpl0);
      dOMNodePointer0.getPointerByID(jXPathContext0, "//WWW.W3.ORG/2000/XMLNS/");
      String string1 = dOMNodePointer0.asPath();
      assertEquals("id('gNk`n}g2MK')", string1);
      
      boolean boolean2 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "u5[@6BNcD:+Eq2W2#0");
      cDATASectionImpl0.hasAttributes();
      TextImpl textImpl0 = new TextImpl();
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "u5[@6BNcD:+Eq2W2#0");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, ".K~'!%+dG@Z3S$4EdVD");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, elementDefinitionImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(textImpl0, locale0, "9VX9@N)4=");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(textImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer3.setValue(dOMNodePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "");
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "u5[@6BNcD:+Eq2W2#0");
      cDATASectionImpl0.hasAttributes();
      cDATASectionImpl0.replaceWholeText("u3");
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "IP;8+}OCusjg=LNSq4-");
      Locale locale0 = Locale.ITALIAN;
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "xmlns:");
      Locale locale1 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale1, "'G");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, cDATASectionImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(cDATASectionImpl0, locale0, "'G");
      dOMNodePointer1.setValue(hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(cDATASectionImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.setValue(dOMNodePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "", "", "");
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl(documentTypeImpl0);
      pSVIDocumentImpl1.clone();
      documentTypeImpl0.getInternalSubset();
      Element element0 = pSVIDocumentImpl1.createElementNS("", "2NHCYV=>#2:", "<EOF>");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "HTM011 Argument 'topLevel' is null.");
      dOMNodePointer0.getNamespaceURI();
      QName qName0 = new QName("<EOF>");
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.getNamespaceURI("[L?");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLOListElementImpl0);
      HTMLStyleElementImpl hTMLStyleElementImpl0 = new HTMLStyleElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) hTMLStyleElementImpl0);
      JXPathContext jXPathContext2 = jXPathContext1.getRelativeContext(dOMNodePointer0);
      JXPathContext jXPathContext3 = jXPathContext2.getParentContext();
      jXPathContext3.getRelativeContext(dOMNodePointer0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext3, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // DOM002 Illegal character
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      Locale locale0 = new Locale("1CUo#iRpPjM''@w9Q", "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("<<unknown namespace>>");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) entityImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(coreDocumentImpl0, "name");
      Text text0 = cDATASectionImpl0.replaceWholeText(".K~'!%+pG@Z3S$4EdVD");
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(coreDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.ENGLISH;
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      xMLErrorReporter0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementDefinitionImpl0, (Locale) null, "2Jlk8c{viahHbd");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, text0);
      int int0 = NodePointer.WHOLE_COLLECTION;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(elementDefinitionImpl0, locale0, "'G");
      Node node0 = hTMLDocumentImpl0.adoptNode(elementDefinitionImpl0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(node0, locale0, "http://www.w3.org/XML/1998/namespace");
      Object object0 = dOMNodePointer0.getBaseValue();
      // Undeclared exception!
//      try { 
        dOMNodePointer3.setValue(object0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLScritEle<entImpl");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
      QName qName0 = new QName("xmlns:");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(999);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(nodeTypeTest0, true, variablePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'xmlns:'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "BASEFONT");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      hTMLDocumentImpl0.setTitle("<<unknown namespace>>");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(Integer.MIN_VALUE);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
      
      Object object0 = dOMNodePointer0.getValue();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Attr attr0 = pSVIDocumentImpl0.createAttributeNS("BASEFONT", "BASEFONT");
      String string0 = DOMNodePointer.getLocalName(attr0);
      assertTrue(string0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "6+ Z(zL_V%wfg:g5E-", "org.jdom.Content");
      dOMNodePointer0.setValue(documentTypeImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Element element0 = pSVIDocumentImpl0.createElementNS("M_,p", "M_,p", "rJiCkaFUO4(&o");
      String string0 = DOMNodePointer.getNamespaceURI((Node) element0);
      assertEquals("M_,p", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "BASEFONT");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.setTitle("<<unknown namespace>>");
      commentImpl0.getBaseURI();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      QName qName0 = dOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLScritEle<entImpl");
      JXPathContext.newContext((Object) hTMLDocumentImpl0);
      Locale locale0 = Locale.ENGLISH;
      QName qName0 = new QName("hPtIv", "?N`c?hnR|,K^+5g1Vg");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl0);
      dOMNodePointer0.asPath();
      dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      dOMNodePointer0.getValue();
      String string0 = dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "M_,p");
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "M_,p");
      HTMLHeadingElementImpl hTMLHeadingElementImpl0 = new HTMLHeadingElementImpl(hTMLDocumentImpl0, "M_,p");
      JXPathContext.newContext((Object) hTMLHeadingElementImpl0);
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      Attr attr0 = wMLDocumentImpl0.createAttribute("HTMLQuoteElementImpl");
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attr0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, attr0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createChild(jXPathContext0, qName0, (-296));
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: 
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "NrmVOY'/,Y|1$^`");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      processingInstructionTest0.toString();
      dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl1, "M{bcp", "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      CommentImpl commentImpl0 = new CommentImpl(wMLDocumentImpl0, "GWmEYUdJ=rd");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("_QAvXbjA>Fa[ag8EcFw");
      commentImpl0.getTextContent();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      dOMNodePointer0.getNamespaceResolver();
      Boolean boolean0 = new Boolean(false);
      DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) nodeTypeTest0);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLQuoteElementImpl0);
      Locale locale1 = Locale.ENGLISH;
      dOMNodePointer1.asPath();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      Object object0 = dOMNodePointer0.getValue();
      String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
      assertFalse(string0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "M_,p");
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "M_,p");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      QName qName0 = new QName("M_,p");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      dOMNodePointer0.getValue();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JXPathContext.newContext((Object) variablePointer0);
      dOMNodePointer0.getValue();
      dOMNodePointer0.getNamespaceURI("PK7)Tpe nB9K/");
      dOMNodePointer0.asPath();
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) entityImpl0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.EntityImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.CANADA;
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      CommentImpl commentImpl0 = new CommentImpl(deferredDocumentImpl0, "Yy}hC05[9*dGy6G");
      Locale locale1 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale1);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("http://www.w3.org/2000/xmlns/");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      NotationImpl notationImpl0 = new NotationImpl(hTMLDocumentImpl0, "Yy}hC05[9*dGy6G");
      notationImpl0.normalize();
      notationImpl0.getBaseURI();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(notationImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "M_,p");
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "M_,p");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "M_,p");
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "M_,p");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLAnchorElementImpl0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      JXPathContext.newContext((Object) nodeNameTest0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLFontElementImpl0, locale0);
      dOMNodePointer1.getName();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLFontElementImpl0);
      QName qName1 = new QName("@(#) $RCSfile: IllegalAddException.java,v $ $Revision: 1.25 $ $Date: 2004/02/06 09:28:30 $ $Name: jdom_1_0 $");
      // Undeclared exception!
//      try { 
        dOMNodePointer2.createChild(jXPathContext0, qName1, 2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: /M_,P[1]
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, (String) null);
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.setTitle("http://www.w3.org/XML/1998/namespace");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLDocumentImpl0, locale0);
      dOMNodePointer1.testNode((NodeTest) nodeTypeTest0);
      dOMNodePointer0.getValue();
      dOMNodePointer0.isLeaf();
      HTMLFormElementImpl hTMLFormElementImpl0 = new HTMLFormElementImpl(hTMLDocumentImpl1, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.setValue("");
      assertNotSame(dOMNodePointer0, dOMNodePointer1);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "M,Ea]_x_]c}", "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(attrNSImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, attrNSImpl0);
      dOMNodePointer2.getDefaultNamespaceURI();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, "/processing-instruction('");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer1, hTMLDocumentImpl0);
      dOMNodePointer3.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      Object object0 = dOMNodePointer1.getImmediateNode();
      JXPathContext.newContext(object0);
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      HTMLFormElementImpl hTMLFormElementImpl0 = new HTMLFormElementImpl(hTMLDocumentImpl0, "Wwkh?6>]URk");
      dOMNodePointer4.setValue(hTMLFormElementImpl0);
      assertTrue(dOMNodePointer4.isNode());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      CommentImpl commentImpl0 = new CommentImpl(wMLDocumentImpl0, "GWmEYUdJ=rd");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("_QAvXbjA>Fa[ag8EcFw");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      dOMNodePointer0.getValue();
      dOMNodePointer0.isLeaf();
      HTMLFormElementImpl hTMLFormElementImpl0 = new HTMLFormElementImpl(hTMLDocumentImpl0, "iname");
      dOMNodePointer0.setValue(hTMLFormElementImpl0);
      assertEquals(Integer.MIN_VALUE, dOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      CommentImpl commentImpl0 = new CommentImpl(wMLDocumentImpl0, "GWmEYUdJ=rd");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle(".%<ZbLC4`");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.getValue();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "qu=$3}");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.CANADA;
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, " QV4l(B@\"E~,");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTemplateElementImpl wMLTemplateElementImpl0 = new WMLTemplateElementImpl(wMLDocumentImpl0, "marginwidth");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLTemplateElementImpl0, locale0);
      deferredDocumentImpl0.createDeferredTextNode("@XrH\"zcAMsW*e>$~yzb", false);
      dOMNodePointer0.setValue(wMLTemplateElementImpl0);
      dOMNodePointer0.getNamespaceURI(" QV4l(B@\"E~,");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "org.apache.wml.dom.WMLTdElementImpl@0000000013");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) hTMLLIElementImpl0);
      jXPathContext0.getParentContext();
      QName qName0 = new QName(" QV4l(B@\"E~,", "/u?r");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Unknown namespace prefix:  QV4l(B@\"E~,
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ":GWmEYUdJ=rd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":GWmEYUdJ=rd");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      dOMNodePointer0.setValue(hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer1.getNamespaceURI(":GWmEYUdJ=rd");
      dOMNodePointer1.equals(hTMLDocumentImpl0);
      String string0 = DOMNodePointer.getPrefix(hTMLQuoteElementImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "1wt");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createTFoot();
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "G,i<7woiK+8fn";
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "G,i<7woiK+8fn");
      Locale locale0 = Locale.CANADA;
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "G,i<7woiK+8fn");
      String string1 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "M#l5<u!9PD?Bg");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      QName qName0 = new QName("<<unknown namespace>>", "xml");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "xml", locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(processingInstructionTest0, true, nodePointer0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.String cannot be cast to org.w3c.dom.Node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isActual();
      JXPathContext.newContext((Object) "+llRH1,mTi-l");
      dOMNodePointer0.setValue(hTMLDocumentImpl0);
      locale0.getDisplayVariant((Locale) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      assertNull(string0);
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean1 = dOMNodePointer2.equals(dOMNodePointer1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Locale locale0 = new Locale("qu=36}", "mode");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "]");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableSectionElementImpl0, locale0, "!l'#[~M<'|");
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "p8ez,");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, ">jfUg5|@O");
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      wMLDocumentImpl0.getUserData();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "]");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale0, "org.apache.xerces.impl.XMLErrorReporter@0000000002");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl2);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      QName qName0 = new QName("xml");
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl2, "org.apache.wml.dom.WMLTdElementImpl");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLDirectoryElementImpl0, locale0);
      dOMNodePointer3.compareChildNodePointers(nodePointer0, dOMNodePointer0);
      dOMNodePointer2.getDefaultNamespaceURI();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer2.createChild(jXPathContext0, (QName) null, Integer.MIN_VALUE);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: id('!l&apos;#[~M<&apos;|')
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "Unknown namespace prefix: ");
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLScriptElementImpl");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLLinkElementImpl0);
      QName qName0 = new QName("size");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLinkElementImpl0, locale0);
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) nodePointer0);
      JXPathContext jXPathContext2 = jXPathContext1.getParentContext();
      dOMNodePointer0.createAttribute(jXPathContext2, qName0);
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertSame(object0, hTMLLinkElementImpl0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI("zz,[");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "]");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "Was expecting one of:");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "]");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "java.util.Locale@0000000015");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(documentImpl0, "");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(commentImpl0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      dOMNodePointer1.testNode((NodeTest) nodeTypeTest0);
      NodePointer nodePointer0 = dOMNodePointer1.namespacePointer("iEP--FvM4w`fG%++");
      assertFalse(nodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Locale locale0 = new Locale("Z;L", "3}H!s{{lnUG=y", "3}H!s{{lnUG=y");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.getBaseValue();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "qu=$3}");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "qu=$3}", "/", "b3)MptuNH*yzT9.kjs");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      CDATASection cDATASection0 = documentImpl0.createCDATASection("b3)MptuNH*yzT9.kjs");
      Locale locale0 = Locale.ITALY;
      Locale locale1 = locale0.stripExtensions();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale1);
      dOMNodePointer0.getLength();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(documentImpl0, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl1);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue((Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":GWmEYUdJ=rd");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Cannot remove root DOMBnode");
      hTMLDocumentImpl0.setTitle("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      nodeTypeTest0.toString();
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.asPath();
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer(":GWmEYUdJ=rd");
      assertTrue(nodePointer0.isLeaf());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "qu=$3}");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "b3)MptuNH*yzT9.kjs");
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "t#]Gv+VF7U");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLLinkElementImpl0);
      QName qName0 = new QName("xmlns:");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOListElementImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      hTMLQuoteElementImpl0.getLocalName();
      QName qName0 = dOMNodePointer0.getName();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "+llRH1,mTi-l");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      String string0 = "At\"N$?EMHk`H)";
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl1, "At\"N$?EMHk`H)");
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) "At\"N$?EMHk`H)");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(nodePointer0, variablePointer0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.String cannot be cast to org.w3c.dom.Node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ":GWmEYUdJ=rd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":GWmEYUdJ=rd");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Cannot remove root DOM node");
      hTMLDocumentImpl0.setTitle("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      nodeTypeTest0.toString();
      HTMLQuoteElementImpl hTMLQuoteElementImpl1 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "s}LFr3LT-v$`");
      boolean boolean1 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      assertTrue(boolean1);
      
      Locale locale1 = Locale.ROOT;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLQuoteElementImpl1, locale0);
      boolean boolean2 = dOMNodePointer0.isLanguage("|c?)");
      assertFalse(boolean2 == boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ":GWmEYUdJ=rd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":GWmEYUdJ=rd");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0, ":GWmEYUdJ=rd");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      DOMNodePointer.findEnclosingAttribute(hTMLDocumentImpl0, "@(#) $RCSfile: IllegalAddException.java,v $ $Revision: 1.25 $ $Date: 2004/02/06 09:28:30 $ $Name: jdom_1_0 $");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Locale locale0 = new Locale("#|=g)\r");
      QName qName0 = new QName("QZM<tFZ");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, (String) null);
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(documentImpl0, "P))");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) entityReferenceImpl0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "+LLRH1,MTI-L");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "+LLRH1,MTI-L", "org.apache.wml.dom.WMLElementImpl");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) pSVIAttrNSImpl0);
      jXPathContext1.getLocale();
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      xMLErrorReporter0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, entityReferenceImpl0);
      dOMNodePointer0.getPointerByID(jXPathContext1, "M5lb,/X-U1A5");
      QName qName1 = new QName("<<unknown namespace>>", "+LLRH1,MTI-L");
      DOMNodePointer.getLocalName(hTMLDocumentImpl0);
      dOMNodePointer0.getValue();
      String string0 = dOMNodePointer0.getNamespaceURI((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "]");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      hTMLDocumentImpl0.createTextNode("SWP4s` }A");
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "Was expecting one of:");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "]");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "java.util.Locale@0000000015");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(documentImpl0, "");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(commentImpl0, locale0);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(deferredDocumentImpl0, "KlVo25#Lk");
      cDATASectionImpl0.replaceWholeText("http://www.w3.org/2000/xmlns/");
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      commentImpl0.addEventListener("9", eventListener0, true);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, commentImpl0);
      dOMNodePointer2.compareChildNodePointers(dOMNodePointer1, dOMNodePointer1);
      dOMNodePointer0.setValue(wMLDocumentImpl0);
      Locale locale1 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(documentImpl0, locale1);
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "]");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      hTMLDocumentImpl0.createTextNode("SWP4s` }A");
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "Was expecting one of:");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "]");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "java.util.Locale@0000000015");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(documentImpl0, "");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(commentImpl0, locale0);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(deferredDocumentImpl0, "KlVo25#Lk");
      QName qName0 = new QName("", "xml");
      dOMNodePointer0.attributeIterator(qName0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, (Node) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer2.asPath();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ":GWmEYUdJ=rd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":GWmEYUdJ=rd");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0, ":GWmEYUdJ=rd");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      HTMLQuoteElementImpl hTMLQuoteElementImpl1 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ":GWmEYUdJ=rd");
      dOMNodePointer0.asPath();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "id(':GWmEYUdJ=rd')");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLLegendElementImpl0);
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Unknown namespace prefix: 
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "]");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      Text text0 = hTMLDocumentImpl0.createTextNode("SWP4s` }A");
      String string0 = DOMNodePointer.getLocalName(text0);
      assertEquals("#text", string0);
      
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "Was expecting one of:");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "]");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "java.util.Locale@0000000015");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(documentImpl0, "");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(commentImpl0, locale0);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(deferredDocumentImpl0, "KlVo25#Lk");
      Text text1 = cDATASectionImpl0.replaceWholeText("http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, text1);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer2, commentImpl0);
      int int0 = dOMNodePointer3.compareChildNodePointers(dOMNodePointer1, dOMNodePointer2);
      assertEquals(0, int0);
      
      dOMNodePointer2.setValue(wMLDocumentImpl0);
      Locale locale1 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(documentImpl0, locale1);
      DOMNodePointer dOMNodePointer5 = new DOMNodePointer(dOMNodePointer2, hTMLTextAreaElementImpl0);
      String string1 = dOMNodePointer2.asPath();
      assertEquals("id(']')/text()[1]", string1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ":GWmEYUdJ=rd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":GWmEYUdJ=rd");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0, ":GWmEYUdJ=rd");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      HTMLQuoteElementImpl hTMLQuoteElementImpl1 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ":GWmEYUdJ=rd");
      hTMLQuoteElementImpl0.getNodeValue();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      dOMNodePointer0.setValue("@(#) $RCSfile: IllegalAddException.java,v $ $Revision: 1.25 $ $Date: 2004/02/06 09:28:30 $ $Name: jdom_1_0 $");
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("@(#) $RCSfile: IllegalAddException.java,v $ $Revision: 1.25 $ $Date: 2004/02/06 09:28:30 $ $Name: jdom_1_0 $", object0);
      
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer1);
      assertEquals(0, int0);
      
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "BR");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLQuoteElementImpl1, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ":GWmEYUdJ=rd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":GWmEYUdJ=rd");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0, ":GWmEYUdJ=rd");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      HTMLQuoteElementImpl hTMLQuoteElementImpl1 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ":GWmEYUdJ=rd");
      hTMLQuoteElementImpl0.getNodeValue();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      dOMNodePointer0.setValue("@(#) $RCSfile: IllegalAddException.java,v $ $Revision: 1.25 $ $Date: 2004/02/06 09:28:30 $ $Name: jdom_1_0 $");
      dOMNodePointer0.getValue();
      dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer1);
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "BR");
      dOMNodePointer0.setValue(hTMLMetaElementImpl0);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      Node node0 = documentImpl0.adoptNode(hTMLFontElementImpl0);
      DOMNodePointer.findEnclosingAttribute(node0, "zz,[");
      String string0 = DOMNodePointer.getLocalName(node0);
      String string1 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      QName qName0 = new QName("Q:M<jFZ", "ZZ,[");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      VariablePointer variablePointer1 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, documentImpl0);
      DOMNodePointer.testNode((Node) hTMLFontElementImpl0, (NodeTest) nodeNameTest0);
      Object object0 = dOMNodePointer0.getValue();
      assertFalse(object0.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "l__ZC\"Xo");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer.getLocalName(hTMLFontElementImpl0);
      Locale locale1 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      QName qName0 = new QName("\u0005-bENPu(a -A 6$1");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      VariablePointer variablePointer1 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(variablePointer1, hTMLFontElementImpl0);
      QName qName1 = dOMNodePointer2.getName();
      dOMNodePointer0.attributeIterator(qName1);
      dOMNodePointer2.isAttribute();
      dOMNodePointer1.isActual();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "`A");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLFontElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      hTMLQuoteElementImpl0.getLocalName();
      dOMNodePointer0.asPath();
      dOMNodePointer0.getImmediateNode();
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      
      QName qName1 = dOMNodePointer0.getName();
      assertEquals("+LLRH1,MTI-L", qName1.toString());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "M_,p");
      Locale locale0 = new Locale("xml", "~pWJp,Kf].B0(N~P>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "preserve");
      HTMLFontElementImpl hTMLFontElementImpl1 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      String string0 = DOMNodePointer.getLocalName(documentImpl0);
      assertEquals("#document", string0);
      assertNotNull(string0);
      
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "org.apache.commons.jxpath.ri.QName@0000000002");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "k-;C5S");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "4Y0T4RF^mpH");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl0);
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer2);
      assertEquals(0, int0);
      
      dOMNodePointer0.setValue((Object) null);
      Locale locale1 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(wMLDocumentImpl0, locale0);
      dOMNodePointer0.getValue();
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      String string1 = dOMNodePointer0.asPath();
      assertEquals("id('preserve')", string1);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DHz");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "Root is ", "#|=g)\r", "org.apache.commons.jxpath.ri.compiler.NodeNameTest@0000000007");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      deferredDocumentImpl0.createCDATASection("#|=g)\r");
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      xMLErrorReporter0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, (Locale) null);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      Node node0 = documentImpl0.adoptNode(hTMLFontElementImpl0);
      DOMNodePointer.findEnclosingAttribute(node0, "zz,[");
      DOMNodePointer.getLocalName(node0);
      JXPathContext.newContext((Object) node0);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "zz,[", "zz,[", "50i!E");
      DocumentImpl documentImpl1 = new DocumentImpl(documentTypeImpl0);
      CDATASection cDATASection0 = documentImpl0.createCDATASection("ZZ,[");
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      xMLErrorReporter0.getLocale();
      xMLErrorReporter0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, (Locale) null);
      dOMNodePointer0.asPath();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getNamespaceURI();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.CDATASectionImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Locale locale0 = new Locale("#|=g)\r");
      Locale locale1 = Locale.GERMANY;
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, ",=YDQuV 3IVG@", "java.util.Locale@0000000004", ",=YDQuV 3IVG@");
      CoreDocumentImpl coreDocumentImpl1 = new CoreDocumentImpl(documentTypeImpl0, false);
      TextImpl textImpl0 = new TextImpl(coreDocumentImpl1, "http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "java.util.Locale@0000000004");
      QName qName0 = new QName("java.util.Locale@0000000004", "http://www.w3.org/XML/1998/namespace");
      EntityImpl entityImpl0 = new EntityImpl(coreDocumentImpl1, ",=YDQuV 3IVG@");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, entityImpl0, locale0);
      JXPathContext jXPathContext1 = jXPathContext0.getRelativeContext(nodePointer0);
      JXPathContext jXPathContext2 = JXPathContext.newContext(jXPathContext1, (Object) jXPathContext0);
      Locale locale2 = jXPathContext2.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale2);
      QName qName1 = dOMNodePointer0.getName();
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.asPath();
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.isActual();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1, "Factory could not create a child node for path: ");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1, "xml:lang");
      DOMNodePointer.testNode((Node) entityImpl0, (NodeTest) nodeNameTest1);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path /text()[1]/@java.util.Locale@0000000004:http://www.w3.org/XML/1998/namespace, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "M_,p");
      Node node0 = documentImpl0.adoptNode(hTMLFontElementImpl0);
      DOMNodePointer.findEnclosingAttribute(node0, "M_,p");
      QName qName0 = new QName((String) null, "M_,p");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Q:M<jFZ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, node0);
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentImpl0, locale0, "Yy{tW");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLDocumentImpl0);
      HTMLOptionElementImpl hTMLOptionElementImpl0 = new HTMLOptionElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer2.setValue(hTMLOptionElementImpl0);
      dOMNodePointer0.getValue();
      dOMNodePointer1.setValue(dOMNodePointer2);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.getNamespaceURI();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "0Lsh94Y k");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "AO=");
      String string0 = DOMNodePointer.getLocalName(hTMLDocumentImpl0);
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.QName@0000000002");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "content");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "-5|AB?o#zI!2");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTextAreaElementImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl2, "F#MS");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLAppletElementImpl0);
      dOMNodePointer1.compareChildNodePointers(dOMNodePointer2, dOMNodePointer0);
      Object object0 = dOMNodePointer0.getNodeValue();
      dOMNodePointer2.setValue(object0);
      Locale locale1 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "-5|AB?o#zI!2");
      dOMNodePointer4.getValue();
      DOMNodePointer dOMNodePointer5 = new DOMNodePointer(dOMNodePointer1, wMLDocumentImpl0);
      String string1 = dOMNodePointer3.asPath();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      hTMLDocumentImpl0.getDoctype();
      DocumentImpl documentImpl0 = new DocumentImpl((DocumentType) null, false);
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "hh5@|*,f]xIeu");
      Node node0 = documentImpl0.adoptNode(entityImpl0);
      DOMNodePointer.findEnclosingAttribute(documentImpl0, (String) null);
      QName qName0 = new QName((String) null, "hh5@|*,f]xIeu");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, node0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      DOMNodePointer.testNode(node0, (NodeTest) nodeNameTest0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(nodePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: hh5@|*,f]xIeu
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "qu=$3}");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "qu=$3}", "/", "b3)MptuNH*yzT9.kjs");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      CDATASection cDATASection0 = documentImpl0.createCDATASection("b3)MptuNH*yzT9.kjs");
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      xMLErrorReporter0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, (Locale) null);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("org.apache.commons.jxpath.ri.QName");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "8 zKK;x7e@");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.getImmediateValuePointer();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      dOMNodePointer0.getLength();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "8 zKK;x7e@", "8 zKK;x7e@");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      wMLDocumentImpl0.getDocumentURI();
      WMLTemplateElementImpl wMLTemplateElementImpl0 = new WMLTemplateElementImpl(wMLDocumentImpl0, "<Ncd+-&%b:O");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(wMLDocumentImpl0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      String string0 = DOMNodePointer.getLocalName(hTMLFontElementImpl0);
      assertEquals("//WWW.W3.ORG/XML/1998/NAMESPACE", string0);
      
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "#|=G)R");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "9{B@/(BK");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "java.util.Locale$Category@0000000004");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTextAreaElementImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl1);
      int int0 = dOMNodePointer2.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(0, int0);
      
      dOMNodePointer2.setValue((Object) null);
      Locale locale1 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(wMLDocumentImpl0, locale1);
      dOMNodePointer3.getValue();
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl0);
      String string1 = dOMNodePointer4.asPath();
      assertEquals("id('')/9{B@/(BK[1]", string1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0, "+llRH1,mTi-l");
      dOMNodePointer0.getDefaultNamespaceURI();
      dOMNodePointer0.setValue(locale0);
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      hTMLDirectoryElementImpl0.getLocalName();
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      dOMNodePointer0.setValue(hTMLLinkElementImpl0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      dOMNodePointer0.getName();
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      HTMLAppletElementImpl hTMLAppletElementImpl0 = null;
//      try {
        hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.html.dom.HTMLElementImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer.getLocalName(hTMLFontElementImpl0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "#|=G)R");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLGoElementImpl0);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "9{B@/(BK");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) "//WWW.W3.ORG/XML/1998/NAMESPACE");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "java.util.Locale$Category@0000000004");
      JXPathContext jXPathContext2 = JXPathContext.newContext(jXPathContext1, (Object) hTMLTextAreaElementImpl1);
      jXPathContext2.getLocale();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTextAreaElementImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl1);
      dOMNodePointer2.getPointerByID(jXPathContext2, "<<unknown namespace>>");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "541*g e]a\"D");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer2, hTMLFontElementImpl0);
      dOMNodePointer1.getName();
      jXPathContext2.getParentContext();
      // Undeclared exception!
//      try { 
        dOMNodePointer3.createChild(jXPathContext1, qName0, 845, (Object) null);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: id('')/JAVA.UTIL.LOCALE$CATEGORY@0000000004[1]///WWW.W3.ORG/XML/1998/NAMESPACE[1]
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "");
      HTMLFontElementImpl hTMLFontElementImpl1 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      DOMNodePointer.getLocalName(hTMLFontElementImpl0);
      HTMLStyleElementImpl hTMLStyleElementImpl0 = new HTMLStyleElementImpl(hTMLDocumentImpl0, "t&D#| r2;@yB!<S= ");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLStyleElementImpl0);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLAccessElementImpl wMLAccessElementImpl0 = new WMLAccessElementImpl((WMLDocumentImpl) null, "t&D#| r2;@yB!<S= ");
      JXPathContext.newContext(jXPathContext0, (Object) "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLStyleElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLFontElementImpl0);
      dOMNodePointer0.getPointerByID(jXPathContext0, "[");
      QName qName0 = new QName("");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // DOM002 Illegal character
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer.getLocalName(hTMLFontElementImpl0);
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "#|=G)R");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "9{B@/(BK");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "java.util.Locale$Category@0000000004");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTextAreaElementImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl1);
      dOMNodePointer2.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      QName qName0 = new QName("java.util.Locale$Category@0000000007", "LG:PK%z#");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer1, documentTypeImpl0);
      QName qName1 = new QName("LG:PK%z#", "http://www.w3.org/XML/1998/namespace");
      assertEquals("LG:PK%z#:http://www.w3.org/XML/1998/namespace", qName1.toString());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+llRH1,mTi-l");
      HTMLUListElementImpl hTMLUListElementImpl0 = new HTMLUListElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "+llRH1,mTi-l");
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "java.util.Locale$Category@0000000007");
      hTMLOptGroupElementImpl0.lookupPrefix("parent::");
      hTMLDocumentImpl0.getBaseURI();
      UserDataHandler userDataHandler0 = mock(UserDataHandler.class, new ViolatedAssumptionAnswer());
      hTMLUListElementImpl0.setUserData("bXk&*ps,+'1*eQg", (Object) hTMLOptGroupElementImpl0, userDataHandler0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest((-80));
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      HTMLFontElementImpl hTMLFontElementImpl1 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      DOMNodePointer.findEnclosingAttribute(hTMLFontElementImpl1, "zz,[");
      DOMNodePointer.getLocalName(hTMLFontElementImpl1);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLFontElementImpl1);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "[");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<_7bZVM{bDw", "", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest@0000000003");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOneventElementImpl wMLOneventElementImpl0 = new WMLOneventElementImpl(wMLDocumentImpl0, "%nT0Vg2m5hD");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) wMLOneventElementImpl0);
      Locale locale0 = jXPathContext1.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl1);
      dOMNodePointer0.getPointerByID(jXPathContext1, "<_7bZVM{bDw");
      QName qName0 = new QName("CuQCo(;2PQ;");
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // DOM002 Illegal character
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+llRH1,mTi-l");
      HTMLUListElementImpl hTMLUListElementImpl0 = new HTMLUListElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "+llRH1,mTi-l");
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "java.util.Locale$Category@0000000007");
      UserDataHandler userDataHandler0 = mock(UserDataHandler.class, new ViolatedAssumptionAnswer());
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "kBt");
      dOMNodePointer1.setValue("bXk&*ps,+'1*eQg");
      Object object0 = dOMNodePointer1.getValue();
      assertEquals("bXk&*ps,+'1*eQg", object0);
      
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id('kBt')", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "]");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "Was expecting one of:");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "]");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "java.util.Locale@0000000015");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(documentImpl0, "");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(commentImpl0, locale0);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(deferredDocumentImpl0, "KlVo25#Lk");
      Text text0 = cDATASectionImpl0.replaceWholeText("http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, text0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer2, commentImpl0);
      WMLTdElementImpl wMLTdElementImpl0 = new WMLTdElementImpl(wMLDocumentImpl0, "$#%*k");
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(wMLTdElementImpl0, locale0, "41&St");
      DOMNodePointer dOMNodePointer5 = new DOMNodePointer(hTMLDocumentImpl1, locale0, "xml:space");
      HTMLBaseFontElementImpl hTMLBaseFontElementImpl0 = new HTMLBaseFontElementImpl(hTMLDocumentImpl0, "xml");
      dOMNodePointer5.setValue(hTMLBaseFontElementImpl0);
      Object object0 = dOMNodePointer2.getValue();
      assertEquals("http://www.w3.org/2000/xmlns/", object0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "{Nq9K");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "BR");
      HTMLUListElementImpl hTMLUListElementImpl0 = new HTMLUListElementImpl(hTMLDocumentImpl0, "{(F_C");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0, "+LLRO1,MTI?L");
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "SK0R*m%XRi");
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0, "zR|u~6u-");
      dOMNodePointer0.setValue("java.util.Locale$Category@0000000007");
      dOMNodePointer0.getValue();
      dOMNodePointer0.asPath();
      DOMNodePointer.getLocalName(hTMLDocumentImpl0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Locale locale0 = new Locale("#|=g)\r");
      QName qName0 = new QName("java.util.Locale@0000000004", "Q:M<jFZ");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "java.util.Locale@0000000004");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, (String) null);
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(documentImpl0, "P))");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) entityReferenceImpl0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "+LLRH1,MTI-L");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "+LLRH1,MTI-L", "org.apache.wml.dom.WMLElementImpl");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) pSVIAttrNSImpl0);
      jXPathContext1.getLocale();
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      xMLErrorReporter0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      xMLErrorReporter0.setFeature("prev", false);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, entityReferenceImpl0);
      dOMNodePointer0.getPointerByID(jXPathContext1, "M5lb,/X-U1A5");
      QName qName1 = new QName("_?<L!r>>");
      jXPathContext0.getParentContext();
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path /@java.util.Locale@0000000004:Q:M<jFZ, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Locale locale0 = new Locale("#|=g)\r");
      QName qName0 = new QName("java.util.Locale@0000000004", "Q:M<jFZ");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "java.util.Locale@0000000004");
      TextImpl textImpl0 = new TextImpl();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      HTMLUListElementImpl hTMLUListElementImpl0 = new HTMLUListElementImpl(hTMLDocumentImpl0, "size");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "size");
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "HTMLHtmlElementImpl");
      HTMLUListElementImpl hTMLUListElementImpl1 = new HTMLUListElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      UserDataHandler userDataHandler0 = mock(UserDataHandler.class, new ViolatedAssumptionAnswer());
      hTMLUListElementImpl1.setUserData("+llRH1,mTi-l", (Object) hTMLTextAreaElementImpl0, userDataHandler0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      dOMNodePointer0.testNode((NodeTest) null);
      HTMLQuoteElementImpl hTMLQuoteElementImpl1 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLQuoteElementImpl0);
      dOMNodePointer0.namespaceIterator();
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("size");
      // Undeclared exception!
//      try { 
        dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, nodePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, (String) null);
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(documentTypeImpl0, false);
      Node node0 = coreDocumentImpl0.adoptNode(hTMLFontElementImpl0);
      DOMNodePointer.getPrefix(node0);
      DOMNodePointer.getLocalName(hTMLFontElementImpl0);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOneventElementImpl wMLOneventElementImpl0 = new WMLOneventElementImpl(wMLDocumentImpl0, "//WWW.W3.ORG/XML/1998/NAMESPACE");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLOneventElementImpl0);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "//WWW.W3.ORG/XML/1998/NAMESPACE");
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "2k");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) hTMLSelectElementImpl0);
      jXPathContext1.getLocale();
      wMLDocumentImpl0.setReadOnly(true, true);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTextAreaElementImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLSelectElementImpl0);
      dOMNodePointer0.getPointerByID(jXPathContext0, "x+cF0p4e]n0Owo~&gO");
      QName qName0 = new QName("<<unknown namespace>>");
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createAttribute(jXPathContext1, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // DOM002 Illegal character
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl1, "zz,[");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.namespaceIterator();
      dOMNodePointer0.asPath();
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.isActual();
      dOMNodePointer0.namespaceIterator();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1048576);
      HTMLFontElementImpl hTMLFontElementImpl1 = new HTMLFontElementImpl(hTMLDocumentImpl1, "zz,[");
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(1048576);
      DOMNodePointer.testNode((Node) hTMLFontElementImpl1, (NodeTest) nodeTypeTest1);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createCaption();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      hTMLTableElementImpl0.getLength();
      DOMNodePointer.getPrefix(hTMLTableElementImpl0);
      Locale locale0 = Locale.GERMANY;
      HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, ",H)QMCAR1j27O");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTitleElementImpl0, locale0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLElement0, locale0, "uao'/;_%;a`");
      dOMNodePointer2.remove();
      Object object0 = dOMNodePointer2.getBaseValue();
      assertSame(object0, hTMLElement0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer.findEnclosingAttribute(hTMLFontElementImpl0, "");
      DOMNodePointer.getLocalName(hTMLFontElementImpl0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "#|=G)R");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLGoElementImpl0);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "9{B@/(BK");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) "//WWW.W3.ORG/XML/1998/NAMESPACE");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "java.util.Locale$Category@0000000004");
      JXPathContext jXPathContext2 = JXPathContext.newContext(jXPathContext1, (Object) hTMLTextAreaElementImpl1);
      jXPathContext2.getLocale();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTextAreaElementImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl1);
      dOMNodePointer2.getPointerByID(jXPathContext2, "<<unknown namespace>>");
      QName qName0 = new QName("java.util.Locale$Category@0000000007", "LG:PK%z#");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer1, documentTypeImpl0);
      dOMNodePointer1.getName();
      QName qName1 = new QName("xmlns:", "#|=G)R");
      QName qName2 = new QName("node()");
      // Undeclared exception!
//      try { 
        dOMNodePointer3.createAttribute(jXPathContext1, qName1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path /@xmlns::#|=G)R, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      Node node0 = documentImpl0.adoptNode(hTMLFontElementImpl0);
      DOMNodePointer.findEnclosingAttribute(node0, "zz,[");
      DOMNodePointer.getLocalName(node0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) node0);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) hTMLTextAreaElementImpl0);
      Locale locale0 = jXPathContext1.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer1.getPointerByID(jXPathContext0, "LG:PK%z#");
      assertFalse(nullPointer0.isAttribute());
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLFontElementImpl0);
      nullPointer0.namespaceIterator();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(node0, locale0, "java.util.Locale$Category@0000000007");
      dOMNodePointer3.namespacePointer("W]WvF6{)(ih \"8Q^C");
      // Undeclared exception!
//      try { 
        dOMNodePointer1.compareChildNodePointers(dOMNodePointer3, nullPointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+llRH1,mTi-l");
      HTMLUListElementImpl hTMLUListElementImpl0 = new HTMLUListElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "+llRH1,mTi-l");
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "java.util.Locale$Category@0000000007");
      UserDataHandler userDataHandler0 = mock(UserDataHandler.class, new ViolatedAssumptionAnswer());
      hTMLUListElementImpl0.setUserData("bXk&*ps,+'1*eQg", (Object) hTMLOptGroupElementImpl0, userDataHandler0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      HTMLQuoteElementImpl hTMLQuoteElementImpl1 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "@(#) $RCSfile: IllegalAddException.java,v $ $Revision: 1.25 $ $Date: 2004/02/06 09:28:30 $ $Name: jdom_1_0 $");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLQuoteElementImpl1);
      dOMNodePointer0.namespaceIterator();
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("java.util.Locale$Category@0000000007");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, nodePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, deferredDocumentImpl0);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLBrElementImpl wMLBrElementImpl0 = new WMLBrElementImpl(wMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLBrElementImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, (Node) null);
      dOMNodePointer2.getImmediateNode();
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) null);
      JXPathContext jXPathContext2 = jXPathContext1.getRelativeContext(dOMNodePointer0);
      dOMNodePointer0.getPointerByID(jXPathContext2, "http://www.w3.org/XML/1998/namespace");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "x+cF0p4e]n0Owo~&gO");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer1, (Node) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer3.getName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      wMLDocumentImpl0.getElementById("node()");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getLocalName((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "preserve");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(Integer.MIN_VALUE);
      dOMNodePointer0.getDefaultNamespaceURI();
      dOMNodePointer0.setValue((Object) null);
      QName qName0 = new QName((String) null, "http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      dOMNodePointer0.setValue(hTMLDirectoryElementImpl0);
      dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLHeadElementImpl0);
      TextImpl textImpl0 = new TextImpl(hTMLDocumentImpl0, "\" could not be added as content to \"");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) textImpl0);
      JXPathContext jXPathContext2 = jXPathContext1.getParentContext();
      JXPathContext jXPathContext3 = jXPathContext2.getRelativeContext(dOMNodePointer0);
      jXPathContext3.getLocale();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLHeadElementImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, textImpl0);
      dOMNodePointer2.getPointerByID(jXPathContext0, "+llRH1,mTi-l");
      QName qName1 = new QName("org.apache.html.dom.HTMLOptGroupElementIupl", ".{)U");
      QName qName2 = new QName("\" could not be added as content to \"");
      // Undeclared exception!
//      try { 
        dOMNodePointer2.createAttribute(jXPathContext0, qName2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path /text()[1]/@\" could not be added as content to \", operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer.findEnclosingAttribute(hTMLFontElementImpl0, "");
      DOMNodePointer.getLocalName(hTMLFontElementImpl0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "#|=G)R");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLGoElementImpl0);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "9{B@/(BK");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) "//WWW.W3.ORG/XML/1998/NAMESPACE");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "java.util.Locale$Category@0000000004");
      JXPathContext jXPathContext2 = JXPathContext.newContext(jXPathContext1, (Object) hTMLTextAreaElementImpl1);
      jXPathContext2.getLocale();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTextAreaElementImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl1);
      dOMNodePointer2.getPointerByID(jXPathContext2, "<<unknown namespace>>");
      QName qName0 = new QName("java.util.Locale$Category@0000000007", "LG:PK%z#");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer1, documentTypeImpl0);
      QName qName1 = dOMNodePointer1.getName();
      JXPathContext jXPathContext3 = jXPathContext1.getParentContext();
      jXPathContext3.getParentContext();
      // Undeclared exception!
//      try { 
        dOMNodePointer2.createChild(jXPathContext1, qName1, Integer.MIN_VALUE, (Object) null);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: id('')/JAVA.UTIL.LOCALE$CATEGORY@0000000004[1]
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLDocumentImpl0);
      dOMNodePointer0.asPath();
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.isActual();
      dOMNodePointer0.namespaceIterator();
      dOMNodePointer0.getImmediateValuePointer();
      QName qName0 = dOMNodePointer0.getName();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "Cq<2T=]");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLOListElementImpl0);
      JXPathContext jXPathContext1 = jXPathContext0.getRelativeContext(dOMNodePointer0);
      Variables variables0 = jXPathContext1.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      VariablePointer variablePointer1 = new VariablePointer(qName0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, variablePointer1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: null
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      HTMLFontElementImpl hTMLFontElementImpl1 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      String string0 = DOMNodePointer.findEnclosingAttribute(hTMLFontElementImpl1, "zz,[");
      assertNull(string0);
      
      String string1 = DOMNodePointer.getLocalName(hTMLFontElementImpl1);
      assertNotNull(string1);
      
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLFontElementImpl1);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) hTMLTextAreaElementImpl0);
      Locale locale0 = jXPathContext1.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFontElementImpl1, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl0);
      dOMNodePointer1.getPointerByID(jXPathContext0, "LG:PK%z#");
      QName qName0 = new QName("]", "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLFontElementImpl0);
      QName qName1 = dOMNodePointer2.getName();
      assertEquals("ZZ,[", qName1.getName());
      
      String string2 = dOMNodePointer1.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMANY;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "h");
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "java.util.Locale@0000000010");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLSelectElementImpl0);
      QName qName0 = new QName("h");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLOListElementImpl0);
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLSelectElementImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer2.getNamespaceURI();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLSelectElementImpl0, locale0, "java.util.Locale@0000000010");
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer5 = new DOMNodePointer(dOMNodePointer2, hTMLOListElementImpl0);
      dOMNodePointer4.getDefaultNamespaceURI();
      JXPathContext.newContext((Object) "\">qc\"-Y-y 9(1Z$Wfr");
      // Undeclared exception!
//      try { 
        dOMNodePointer2.createChild(jXPathContext0, qName0, (-1955));
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: 
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(Integer.MIN_VALUE);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.272.b10-0.fc31.x86_64/jre/lib/jxpath.properties");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      dOMNodePointer0.getDefaultNamespaceURI();
      dOMNodePointer0.setValue((Object) null);
      QName qName0 = new QName((String) null, "http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      dOMNodePointer0.setValue(hTMLDirectoryElementImpl0);
      dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest1);
      JXPathContext.newContext((JXPathContext) null, (Object) null);
      NodeTypeTest nodeTypeTest2 = new NodeTypeTest(21);
      nodeTypeTest2.toString();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLOptGroupElementImpl");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Undefined variable: http://www.w3.org/XML/1998/namespace
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "");
      hTMLDocumentImpl0.adoptNode(hTMLFontElementImpl0);
      // Undeclared exception!
//      try { 
        DOMNodePointer.findEnclosingAttribute(hTMLFontElementImpl0, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.html.dom.HTMLElementImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "java.util.Locale@0000000010");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) set0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLQuoteElementImpl0);
      QName qName0 = dOMNodePointer1.getName();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      dOMNodePointer1.attributeIterator(qName0);
      dOMNodePointer1.asPath();
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.isActual();
      dOMNodePointer0.namespaceIterator();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "ZK");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0, "ZK");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest1);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      HTMLFontElementImpl hTMLFontElementImpl1 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      DOMNodePointer.findEnclosingAttribute(hTMLFontElementImpl1, "zz,[");
      DOMNodePointer.getLocalName(hTMLFontElementImpl1);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLFontElementImpl1);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) hTMLTextAreaElementImpl0);
      Locale locale0 = jXPathContext1.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFontElementImpl1, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl0);
      dOMNodePointer1.getPointerByID(jXPathContext0, "LG:PK%z#");
      QName qName0 = new QName("]", "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLFontElementImpl0);
      QName qName1 = dOMNodePointer2.getName();
      JXPathContext jXPathContext2 = jXPathContext1.getParentContext();
      // Undeclared exception!
//      try { 
        dOMNodePointer2.createChild(jXPathContext2, qName1, Integer.MIN_VALUE, (Object) locale0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: /[1]/ZZ,[[1]
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, deferredDocumentImpl0);
      dOMNodePointer1.attributeIterator((QName) null);
      dOMNodePointer1.asPath();
      // Undeclared exception!
//      try { 
        dOMNodePointer1.isLeaf();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      dOMNodePointer0.isLanguage("on5!@u)w");
      dOMNodePointer0.getNamespaceURI("");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl1, "yc?C-|[");
      JXPathContext.newContext((JXPathContext) null, (Object) hTMLDocumentImpl1);
      dOMNodePointer0.getDefaultNamespaceURI();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(coreDocumentImpl0, "P'p<y^?d%h,C<%qB,5");
      JXPathContext.newContext((Object) entityImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, (QName) null, 58);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "zz,[";
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "rMHH't-VV;{h");
      hTMLDocumentImpl0.adoptNode(hTMLFontElementImpl0);
      DOMNodePointer.findEnclosingAttribute(hTMLDocumentImpl0, "zz,[");
      DOMNodePointer.getLocalName(hTMLDocumentImpl0);
      WMLNoopElementImpl wMLNoopElementImpl0 = new WMLNoopElementImpl((WMLDocumentImpl) null, "zz,[");
      JXPathContext.newContext((Object) wMLNoopElementImpl0);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLNoopElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLFontElementImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      dOMNodePointer0.isLanguage("on5!@u)w");
      dOMNodePointer0.getNamespaceURI("");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl1, "yc?C-|[");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) hTMLDocumentImpl1);
      jXPathContext0.getVariables();
      dOMNodePointer0.getImmediateValuePointer();
      dOMNodePointer0.getName();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLParagraphElementImpl0, locale0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl1);
      dOMNodePointer1.getPointerByID(jXPathContext0, "");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path /@http://www.w3.org/2000/xmlns/, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getNodeName();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      HTMLUListElementImpl hTMLUListElementImpl0 = new HTMLUListElementImpl(hTMLDocumentImpl0, "O8k7hbg");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLUListElementImpl0, locale0, "O8k7hbg");
      UserDataHandler userDataHandler0 = mock(UserDataHandler.class, new ViolatedAssumptionAnswer());
      hTMLUListElementImpl0.setUserData("O8k7hbg", (Object) dOMNodePointer0, userDataHandler0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      boolean boolean1 = dOMNodePointer0.isActual();
      assertFalse(boolean1 == boolean0);
      
      dOMNodePointer0.isLanguage("O8k7hbg");
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "):0Vp");
      HTMLUListElementImpl hTMLUListElementImpl0 = new HTMLUListElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "):0Vp");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAElementImpl wMLAElementImpl0 = new WMLAElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      hTMLUListElementImpl0.setUserData("http://www.w3.org/XML/1998/namespace", (Object) wMLAElementImpl0, (UserDataHandler) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      dOMNodePointer1.testNode((NodeTest) nodeTypeTest0);
      HTMLQuoteElementImpl hTMLQuoteElementImpl1 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "@(#) $RCSfile: IllegalAddException.java,v $ $Revision: 1.25 $ $Date: 2004/02/06 09:28:30 $ $Name: jdom_1_0 $");
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(hTMLDocumentImpl0, "YvC=S", "7Q=s{Ww'@AX:+v", "+llRH1,mTi-l");
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl(documentTypeImpl1);
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = null;
//      try {
        hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HTMLFontElementImpl hTMLFontElementImpl1 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      DOMNodePointer.findEnclosingAttribute(hTMLFontElementImpl1, "zz,[");
      DOMNodePointer.getLocalName(hTMLFontElementImpl1);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLFontElementImpl1);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "");
      JXPathContext.newContext(jXPathContext0, (Object) hTMLTextAreaElementImpl0);
      Locale locale0 = jXPathContext0.getLocale();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSelectElementImpl wMLSelectElementImpl0 = new WMLSelectElementImpl(wMLDocumentImpl0, "I#t>c!`");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLSelectElementImpl0, locale0);
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "I#t>c!`");
      hTMLLegendElementImpl0.getForm();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      dOMNodePointer0.isCollection();
      QName qName0 = new QName("<<unknown namespace>>", "http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLLegendElementImpl0, (NodeTest) nodeNameTest0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.testNode((NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      dOMNodePointer0.isLanguage("on5!@u)w");
      dOMNodePointer0.getNamespaceURI("");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl1, "yc?C-|[");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) hTMLDocumentImpl1);
      Variables variables0 = jXPathContext0.getVariables();
      NodePointer nodePointer0 = dOMNodePointer0.getImmediateValuePointer();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(variables0, (QName) null);
      dOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer0);
      dOMNodePointer0.getNamespaceURI("xml:lang");
      dOMNodePointer0.getPointerByID(jXPathContext0, "http://www.w3.org/XML/1998/namespace");
      QName qName1 = new QName("org.apache.commons.jxpathri.EvalCo+8et", "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path id('')/@null, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "h");
      hTMLTableElementImpl0.createCaption();
      hTMLTableElementImpl0.getLength();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLPreElementImpl");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      wMLDocumentImpl0.getDocumentElement();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, (Node) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.asPath();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.normalizeDocument();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl1, "\">qc\"-Y-y 9(1Z$Wfr");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLOListElementImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOListElementImpl0, locale0);
      dOMNodePointer0.getNamespaceURI();
      dOMNodePointer0.getPointerByID(jXPathContext0, "Y2P");
      WMLFieldsetElementImpl wMLFieldsetElementImpl0 = new WMLFieldsetElementImpl((WMLDocumentImpl) null, "xmlns");
      JXPathContext.newContext(jXPathContext0, (Object) wMLFieldsetElementImpl0);
      QName qName0 = new QName("]");
      assertNull(qName0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      dOMNodePointer0.isLanguage("on5!@u)w");
      dOMNodePointer0.getNamespaceURI("");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl1, "yc?C-|[");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) hTMLDocumentImpl1);
      Variables variables0 = jXPathContext0.getVariables();
      NodePointer nodePointer0 = dOMNodePointer0.getImmediateValuePointer();
      dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(variables0, (QName) null);
      dOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer0);
      String string0 = dOMNodePointer0.getNamespaceURI("xml:lang");
      assertNull(string0);
      
      boolean boolean0 = dOMNodePointer0.isCollection();
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl1, (NodeTest) nodeNameTest0);
      boolean boolean1 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean1 == boolean0);
      
      String string1 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string1);
      assertFalse(dOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "");
      hTMLTableElementImpl0.createCaption();
      hTMLTableElementImpl0.getLength();
      DOMNodePointer.getPrefix(hTMLTableElementImpl0);
      Locale locale0 = Locale.GERMANY;
      HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, ",H)QMCAR1j27O");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTitleElementImpl0, locale0);
      dOMNodePointer0.getLength();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "]");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "+llRH1,mTi-l", "zxl1A`G[)", "compact");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSmallElementImpl wMLSmallElementImpl0 = new WMLSmallElementImpl(wMLDocumentImpl0, "Blj(rxNcJqZXg");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLSmallElementImpl0);
      jXPathContext0.getRelativeContext(dOMNodePointer1);
      dOMNodePointer1.createPath(jXPathContext0);
      WMLStrongElementImpl wMLStrongElementImpl0 = new WMLStrongElementImpl(wMLDocumentImpl0, "http");
      JXPathContext.newContext((Object) wMLStrongElementImpl0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(documentTypeImpl0, locale0, "\"v1B-Ce7 w4fNDU");
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, ",H)QMCAR1j27O");
      // Undeclared exception!
//      try { 
        dOMNodePointer2.setValue(jXPathContext0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.asPath();
      dOMNodePointer0.isLeaf();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeTest nodeTest0 = null;
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>", "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLDoElementImpl wMLDoElementImpl0 = new WMLDoElementImpl(wMLDocumentImpl0, (String) null);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl1, "6");
      JXPathContext.newContext((JXPathContext) null, (Object) hTMLOptGroupElementImpl0);
      locale0.getDisplayVariant();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl1, "v[F");
      // Undeclared exception!
//      try { 
        variablePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) "mj^hPt6z'G(=<qEfv");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      Locale locale1 = null;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(Integer.MIN_VALUE);
      dOMNodePointer0.getDefaultNamespaceURI();
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest1);
      QName qName0 = dOMNodePointer0.getName();
      JXPathContext jXPathContext0 = null;
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot create an attribute for path /@null, operation is not allowed for this type of node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLImageElementImpl hTMLImageElementImpl0 = new HTMLImageElementImpl(hTMLDocumentImpl0, "CqDd@m-'");
      Locale locale0 = new Locale("F!m%L0x");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLImageElementImpl0, locale0);
      dOMNodePointer0.isLanguage(". It cannot be converted to ");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) dOMNodePointer0);
      jXPathContext0.getRelativeContext(dOMNodePointer0);
      dOMNodePointer0.createPath(jXPathContext1);
      JXPathContext jXPathContext2 = JXPathContext.newContext((Object) jXPathContext0);
      JXPathContext.newContext(jXPathContext2, (Object) null);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLImageElementImpl0, locale0, "#|=g)\r");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl1, "#|=g)\r");
      dOMNodePointer0.setValue(hTMLDocumentImpl0);
      dOMNodePointer0.getBaseValue();
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl1 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      String string0 = DOMNodePointer.getPrefix(hTMLOptGroupElementImpl1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = null;
      String string0 = "java.util.Locale@0000000004";
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl((HTMLDocumentImpl) null, "java.util.Locale@0000000004");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "java.util.Locale@0000000004");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getValue();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      HTMLFontElementImpl hTMLFontElementImpl1 = new HTMLFontElementImpl(hTMLDocumentImpl0, "zz,[");
      DOMNodePointer.findEnclosingAttribute(hTMLFontElementImpl1, "zz,[");
      DOMNodePointer.getLocalName(hTMLFontElementImpl1);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLFontElementImpl1);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "");
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) hTMLTextAreaElementImpl0);
      Locale locale0 = jXPathContext1.getLocale();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "p@X");
      JXPathContext.newContext((Object) hTMLMetaElementImpl0);
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLTextAreaElementImpl0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, documentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild(jXPathContext0, (QName) null, Integer.MIN_VALUE);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: 
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl1, "\">qc\"-Y-y 9(1Z$Wfr");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLOListElementImpl0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Unknown namespace prefix: http
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("#wk%/ia.", "java.util.Locale@0000000004");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Bgy(61$:A7?00M");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLDocumentImpl0);
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      TextImpl textImpl0 = new TextImpl();
      dOMNodePointer0.setValue((Object) null);
      QName qName1 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName1);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      JXPathContext.newContext((JXPathContext) null, (Object) "java.util.Locale@0000000004");
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "org.apache.wml.dom.WMLStrongElementImpl");
      String string0 = "bv:UO";
      QName qName2 = new QName("<<unknown namespace>>", "bv:UO");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "#wk%/ia.");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOptgroupElementImpl wMLOptgroupElementImpl0 = new WMLOptgroupElementImpl(wMLDocumentImpl0, "xml");
      VariablePointer variablePointer1 = new VariablePointer(qName0);
      // Undeclared exception!
//      try { 
        variablePointer1.createChild((JXPathContext) null, qName2, Integer.MIN_VALUE, (Object) "oEcyImO;_v");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "xmlns:");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(Integer.MIN_VALUE);
      dOMNodePointer0.getDefaultNamespaceURI();
      HTMLIFrameElementImpl hTMLIFrameElementImpl0 = new HTMLIFrameElementImpl(hTMLDocumentImpl0, "F)f");
      dOMNodePointer0.setValue(hTMLIFrameElementImpl0);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      dOMNodePointer1.setValue(hTMLQuoteElementImpl0);
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest1);
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "ir)?sj5F");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) hTMLBodyElementImpl0);
      nodeTypeTest0.toString();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "==Mfy(2$K1>9amv");
      // Undeclared exception!
//      try { 
        variablePointer0.createChild(jXPathContext0, qName0, 517, (Object) "F)f");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: $XMLNS:
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "+llRH1,mTi-l";
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(Integer.MIN_VALUE);
      dOMNodePointer0.getDefaultNamespaceURI();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue("+llRH1,mTi-l");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "+llRH1,mTi-l";
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.asPath();
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.isActual();
      dOMNodePointer0.namespaceIterator();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "7Q=s{Ww'@AX:+v");
      DOMNodePointer.testNode((Node) hTMLQuoteElementImpl0, (NodeTest) nodeNameTest0);
      dOMNodePointer0.getValue();
      dOMNodePointer0.isLanguage("<YPAE-Z?aHH");
//      try { 
        hTMLDocumentImpl0.removeChild(hTMLQuoteElementImpl0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NOT_FOUND_ERR: An attempt is made to reference a node in a context where it does not exist.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLImageElementImpl hTMLImageElementImpl0 = new HTMLImageElementImpl(hTMLDocumentImpl0, "]");
      Locale locale0 = new Locale("R2gA");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLImageElementImpl0, locale0);
      dOMNodePointer0.isLanguage("R2gA");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) "R2gA");
      JXPathContext jXPathContext2 = jXPathContext1.getRelativeContext(dOMNodePointer0);
      NodePointer nodePointer0 = dOMNodePointer0.createPath(jXPathContext2);
      JXPathContext jXPathContext3 = JXPathContext.newContext((Object) "R2gA");
      JXPathContext jXPathContext4 = JXPathContext.newContext(jXPathContext3, (Object) hTMLDocumentImpl0);
      jXPathContext4.setLenient(false);
      hTMLImageElementImpl0.getAttributeNodeNS("<<unknown namespace>>", "R2gA");
      JXPathContext jXPathContext5 = jXPathContext4.getParentContext();
      dOMNodePointer0.getPointerByID(jXPathContext5, "R2gA");
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.getValue();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("R2gA");
      dOMNodePointer0.getNamespaceURI("");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "q~Vaz\u0004OkF\"KCa!O2%");
      dOMNodePointer1.asPath();
      dOMNodePointer1.attributeIterator(qName0);
      String string0 = nodePointer0.getNamespaceURI("]");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      HTMLQuoteElementImpl hTMLQuoteElementImpl1 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ")x1;");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      dOMNodePointer0.isActual();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) ")x1;");
      QName qName0 = new QName(")x1;", "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, 17, (Object) hTMLQuoteElementImpl0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: 
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "";
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "");
      hTMLTableElementImpl0.createCaption();
      hTMLTableElementImpl0.getLength();
      DOMNodePointer.getPrefix(hTMLTableElementImpl0);
      Locale locale0 = Locale.GERMANY;
      HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, ",H)QMCAR1j27O");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTitleElementImpl0, locale0);
      dOMNodePointer0.getLength();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "]");
      dOMNodePointer1.getName();
      DOMNodePointer.findEnclosingAttribute(hTMLTableElementImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.getLocale();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "");
      QName qName0 = new QName("Cannot remove root DOM node");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // DOM002 Illegal character
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.272.b10-0.fc31.x86_64/jre/lib/jxpath.properties");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      HTMLImageElementImpl hTMLImageElementImpl0 = new HTMLImageElementImpl(hTMLDocumentImpl0, "#|=g)\r");
      Locale locale0 = new Locale("R2gA");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLImageElementImpl0, locale0);
      dOMNodePointer0.isLanguage("R2gA");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) "R2gA");
      JXPathContext jXPathContext2 = jXPathContext1.getRelativeContext(dOMNodePointer0);
      NodePointer nodePointer0 = dOMNodePointer0.createPath(jXPathContext2);
      JXPathContext jXPathContext3 = JXPathContext.newContext((Object) "R2gA");
      JXPathContext.newContext(jXPathContext3, (Object) hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, ",H)QMCAR1j27O");
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      nodePointer0.setValue(hTMLOptGroupElementImpl0);
      String string0 = nodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) null, locale_FilteringMode0);
      Locale.setDefault(locale0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "org.apache.html.dom.HTMLOptGroupElementIupl");
      dOMNodePointer0.isLanguage("org.apache.html.dom.HTMLOptGroupElementIupl");
      dOMNodePointer0.getNamespaceURI("org.apache.html.dom.HTMLOptGroupElementIupl");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "B*k=;LA]s2)(5y");
      JXPathContext.newContext((JXPathContext) null, (Object) locale_FilteringMode0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getPointerByID((JXPathContext) null, "org.apache.html.dom.HTMLOptGroupElementImpl");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      String string0 = null;
      // Undeclared exception!
//      try { 
        dOMNodePointer1.isLanguage((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLImageElementImpl hTMLImageElementImpl0 = new HTMLImageElementImpl(hTMLDocumentImpl0, "#|=g)\r");
      Locale locale0 = new Locale("R2gA");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLImageElementImpl0, locale0);
      String string0 = "java.util.Locale@0000000004";
      QName qName0 = new QName("java.util.Locale@0000000004", "Q:M<jFZ");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "java.util.Locale@0000000004");
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      TextImpl textImpl0 = new TextImpl();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(textImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.xerces.dom.NodeImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBodyElementImpl0, locale0, "node()");
      dOMNodePointer0.isLanguage("OK<&JXgj+Aj0F!");
      dOMNodePointer0.getNamespaceURI("node()");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "xml:lang");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) "node()");
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = null;
      NodePointer nodePointer0 = dOMNodePointer0.getImmediateValuePointer();
      QName qName1 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName1);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, nodePointer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'HTTP://WWW.W3.ORG/2000/XMLNS/'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = null;
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS((String) null, "7si(ec7h", "7si(ec7h");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) attr0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.xerces.dom.AttrNSImpl cannot be cast to org.w3c.dom.Element
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "h");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createCaption();
      hTMLTableElementImpl0.getLength();
      String string0 = "id('";
      DOMNodePointer.findEnclosingAttribute(hTMLElement0, "id('");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      hTMLTableElementImpl0.getLength();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      dOMNodePointer0.isActual();
      dOMNodePointer0.getLength();
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) hTMLTitleElementImpl0);
      dOMNodePointer0.childIterator(nodeNameTest0, true, nodePointer0);
      dOMNodePointer0.getName();
      dOMNodePointer0.getNamespaceURI("h");
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.hashCode();
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue(locale0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "+llRH1,mTi-l";
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.setValue("+llRH1,mTi-l");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) null, locale_FilteringMode0);
      Locale.setDefault(locale0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      String string0 = "org.apache.html.dom.HTMLOptGroupElementImpl";
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "org.apache.html.dom.HTMLOptGroupElementImpl");
      dOMNodePointer0.isLanguage("org.apache.html.dom.HTMLOptGroupElementImpl");
      dOMNodePointer0.getNamespaceURI("org.apache.html.dom.HTMLOptGroupElementImpl");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "B*k=;LA]s2)(5y");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) locale_FilteringMode0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = null;
      dOMNodePointer0.getImmediateValuePointer();
      VariablePointer variablePointer0 = new VariablePointer(variables0, (QName) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "");
      hTMLTableElementImpl0.createCaption();
      hTMLTableElementImpl0.getLength();
      DOMNodePointer.getPrefix(hTMLTableElementImpl0);
      Locale locale0 = Locale.GERMANY;
      HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, ",H)QMCAR1j27O");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTitleElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTableElementImpl0);
      dOMNodePointer1.getDefaultNamespaceURI();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.createChild(jXPathContext0, (QName) null, 1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: /[1]
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale.setDefault(locale0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      Locale.lookup(linkedList0, (Collection<Locale>) null);
      locale0.getDisplayVariant((Locale) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "-.$D");
      dOMNodePointer0.printPointerChain();
      dOMNodePointer0.getImmediateValuePointer();
      QName qName0 = dOMNodePointer0.getName();
      locale0.getDisplayVariant((Locale) null);
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.asPath();
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.isActual();
      dOMNodePointer0.namespaceIterator();
      dOMNodePointer0.getNamespaceURI(")x1;");
      dOMNodePointer0.asPath();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      dOMNodePointer1.attributeIterator(qName0);
      String string0 = dOMNodePointer0.getNamespaceURI("-.$D");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFormElementImpl hTMLFormElementImpl0 = new HTMLFormElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLHRElementImpl");
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      Locale locale1 = Locale.ENGLISH;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1, "xmlns");
      HTMLFrameElementImpl hTMLFrameElementImpl0 = null;
//      try {
        hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFormElementImpl hTMLFormElementImpl0 = new HTMLFormElementImpl(hTMLDocumentImpl0, "F!m%L0x");
      DOMNodePointer.getNamespaceURI((Node) hTMLFormElementImpl0);
      QName qName0 = new QName((String) null, (String) null);
      String string0 = "org.apache.wml.dom.WMLTableElementImpl";
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "org.apache.wml.dom.WMLTableElementImpl");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFormElementImpl0, locale0, ",H)QMCAR1j27O");
      dOMNodePointer0.getNamespaceURI("F!m%L0x");
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.hashCode();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getName();
      Locale locale1 = Locale.ENGLISH;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale1);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      dOMNodePointer1.setValue("");
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.asPath();
      boolean boolean0 = dOMNodePointer0.isLeaf();
      boolean boolean1 = dOMNodePointer0.isActual();
      assertTrue(boolean1 == boolean0);
      
      dOMNodePointer0.namespaceIterator();
      String string0 = dOMNodePointer0.getNamespaceURI("org.apache.html.dom.HTMLOptGroupElementImpl");
      assertNull(string0);
      
      dOMNodePointer0.asPath();
      dOMNodePointer0.attributeIterator(qName0);
      assertEquals("+LLRH1,MTI-L", qName0.toString());
      
      String string1 = dOMNodePointer0.getNamespaceURI("");
      assertNull(string1);
      assertTrue(dOMNodePointer0.isActual());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "sendreferer");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl(wMLDocumentImpl0, "sendreferer");
      wMLCardElementImpl0.setUserData((Object) "sendreferer");
      pSVIDocumentImpl0.isSameNode(wMLCardElementImpl0);
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(pSVIDocumentImpl0, "}1~'SMFY++\"dNR");
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl(documentTypeImpl1);
      wMLDocumentImpl1.getIdentifier("");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl1, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.namespaceIterator();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "+llRH1,mTi-l");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot remove root DOM node
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "')");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      hTMLQuoteElementImpl0.setId("/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0);
      dOMNodePointer0.asPath();
      hTMLDocumentImpl0.isDefaultNamespace("<<unknown namespace>>");
      locale0.getDisplayName();
      boolean boolean0 = false;
//      try { 
        hTMLDocumentImpl0.createEntityReference("");
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
//         //
//         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "M_,p");
      Locale locale0 = new Locale("xml", "~pWJp,Kf].B0(N~P>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "preserve");
      HTMLFontElementImpl hTMLFontElementImpl1 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer.getLocalName(documentImpl0);
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "org.apache.commons.jxpath.ri.QName@0000000002");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "k-;C5S");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "4Y0T4RF^mpH");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl0);
      dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer2);
      dOMNodePointer0.setValue((Object) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      DOMNodePointer.testNode((Node) documentTypeImpl0, (NodeTest) nodeTypeTest0);
      WMLOneventElementImpl wMLOneventElementImpl0 = new WMLOneventElementImpl(wMLDocumentImpl0, "4Y0T4RF^mpH");
      dOMNodePointer1.setValue(wMLOneventElementImpl0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer0, hTMLFontElementImpl1);
      dOMNodePointer3.getValue();
      // Undeclared exception!
//      try { 
        DOMNodePointer.getPrefix((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "";
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "");
      hTMLSelectElementImpl0.getForm();
      Locale locale0 = new Locale("");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "");
      JXPathContext jXPathContext0 = null;
      hTMLSelectElementImpl0.getType();
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, 0, (Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFormElementImpl hTMLFormElementImpl0 = new HTMLFormElementImpl(hTMLDocumentImpl0, "F!m%L0x");
      DOMNodePointer.getNamespaceURI((Node) hTMLFormElementImpl0);
      Locale locale0 = Locale.ENGLISH;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFormElementImpl0, locale0, ",H)QMCAR1j27O");
      dOMNodePointer0.setValue(",H)QMCAR1j27O");
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "";
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createCaption();
      hTMLTableElementImpl0.getLength();
      String string1 = "id('";
      DOMNodePointer.findEnclosingAttribute(hTMLElement0, "id('");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      hTMLTableElementImpl0.getLength();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      // Undeclared exception!
//      try { 
        DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
//      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = null;
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.getNamespaceURI("-.$D");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = new QName("org.apache.wml.dom.WMLWmlElementImpl", "http://www.w3.org/2000/xmlns/");
      jXPathContext0.getKeyManager();
      locale0.getUnicodeLocaleKeys();
      dOMNodePointer0.setAttribute(true);
      // Undeclared exception!
//      try { 
        jXPathContext0.getPointerByID("org.apache.wml.dom.WMLBElementImpl");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Cannot find an element by ID - no IdentityManager has been specified
//         //
//         verifyException("org.apache.commons.jxpath.JXPathContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBodyElementImpl0, locale0, "node()");
      dOMNodePointer0.isActual();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      jXPathContext0.setDecimalFormatSymbols("http://www.w3.org/2000/xmlns/", decimalFormatSymbols0);
      jXPathContext0.getContextPointer();
      dOMNodePointer0.namespaceIterator();
      QName qName0 = null;
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLImageElementImpl hTMLImageElementImpl0 = new HTMLImageElementImpl(hTMLDocumentImpl0, "");
      DOMNodePointer.getPrefix(hTMLImageElementImpl0);
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLImageElementImpl0, locale0);
      dOMNodePointer0.getDefaultNamespaceURI();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.createChild(jXPathContext0, (QName) null, (-173));
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Factory is not set on the JXPathContext - cannot create path: 
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "");
      SymbolTable symbolTable0 = new SymbolTable();
      DTDConfiguration dTDConfiguration0 = new DTDConfiguration(symbolTable0);
      Locale locale0 = dTDConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLSelectElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      assertEquals("", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      attrNSImpl0.getOwnerElement();
      attrNSImpl0.getOwnerElement();
      QName qName0 = new QName("Cannot create the root object: ", "F7;mIG=_:sP=5e_RKYG");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
//      try { 
        DOMNodePointer.testNode((Node) null, (NodeTest) nodeNameTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "eila@(2E<3A");
      Node node0 = documentTypeImpl0.cloneNode(true);
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0, "qXz");
      dOMNodePointer0.namespaceIterator();
      dOMNodePointer0.namespaceIterator();
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("qXz", "qXz");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
//      try { 
        variablePointer0.getImmediateValuePointer();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No such variable: 'qXz:qXz'
//         //
//         verifyException("org.apache.commons.jxpath.BasicVariables", e);
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "xml:lang");
      Locale locale0 = new Locale("xml:lang");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHeadElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      Object object0 = dOMNodePointer1.getImmediateNode();
      assertSame(object0, hTMLDocumentImpl0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      QName qName0 = new QName("W48z7fJT]\"Opl?");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "node()");
      hTMLSelectElementImpl0.getForm();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, (Node) null);
      // Undeclared exception!
//      try { 
        dOMNodePointer0.remove();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(coreDocumentImpl0, "`*N&b[0w:~", "`*N&b[0w:~");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, (Locale) null, "`*N&b[0w:~");
      coreDocumentImpl0.getUserData((Node) processingInstructionImpl0, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, coreDocumentImpl0);
      NodePointer nodePointer0 = dOMNodePointer1.namespacePointer("org.apache.wml.dom.WMLDoElementImpl");
      boolean boolean0 = dOMNodePointer1.equals(nodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) null, locale_FilteringMode0);
      Locale.setDefault(locale0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Locale.lookup(vector0, list0);
      locale0.getDisplayVariant((Locale) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "-BJE:p:");
      dOMNodePointer0.printPointerChain();
      dOMNodePointer0.getImmediateValuePointer();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.getName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = null;
      Locale locale0 = Locale.GERMAN;
      locale0.getUnicodeLocaleKeys();
      String string0 = "OBJECT";
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "OBJECT");
      QName qName0 = new QName("<<unknown namespace>>");
      // Undeclared exception!
//      try { 
        dOMNodePointer0.attributeIterator(qName0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = null;
      Locale locale0 = Locale.GERMANY;
      locale0.clone();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.getRootNode();
      dOMNodePointer0.clone();
      locale0.getDisplayCountry();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale1 = Locale.PRC;
      locale1.getDisplayLanguage(locale0);
      locale1.getExtensionKeys();
      locale0.getDisplayLanguage(locale1);
      Locale.setDefault(locale_Category0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(290);
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale0);
      nodeTypeTest0.toString();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getIdentifier("");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-2902));
      // Undeclared exception!
//      try { 
        DOMNodePointer.testNode((Node) null, (NodeTest) nodeTypeTest0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "HTMLLIElementImpl", "HTMLLIElementImpl", "HTMLLIElementImpl");
      Node node0 = documentTypeImpl0.cloneNode(false);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, node0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "U'Xzh");
      boolean boolean0 = dOMNodePointer0.equals(hTMLQuoteElementImpl0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLDocumentImpl0);
      dOMNodePointer0.asPath();
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.isActual();
      dOMNodePointer0.namespaceIterator();
      QName qName0 = new QName("", "org.apache.html.dom.");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.getValue();
      // Undeclared exception!
//      try { 
        dOMNodePointer0.isLanguage("<YPAE-Z?aHH");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(wMLDocumentImpl0, "nlK);\"F");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("O_$Xjd(-jKE/~GhO");
      boolean boolean0 = hTMLDocumentImpl0.getStrictErrorChecking();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(910);
      locale0.getExtension('U');
      dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      dOMNodePointer0.setValue(commentImpl0);
      dOMNodePointer0.getValue();
      dOMNodePointer0.getNamespaceURI("G,i<7woiK+8fn");
      boolean boolean1 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "-1", "N;BD[X)}", "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      wMLWmlElementImpl0.setXmlLang("http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLWmlElementImpl0, locale0);
      // Undeclared exception!
//      try { 
        dOMNodePointer1.isLanguage((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Element element0 = pSVIDocumentImpl0.createElementNS(")%q'mi`_+H';-", ")%q'mi`_+H';-", ")%q'mi`_+H';-");
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      dOMNodePointer0.printPointerChain();
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) "org.apache.wml.dom.WMLTdElementImpl");
      JXPathContext jXPathContext1 = jXPathContext0.getRelativeContext(dOMNodePointer0);
      JXPathContext jXPathContext2 = jXPathContext1.getParentContext();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "");
      dOMNodePointer0.createPath(jXPathContext2, (Object) hTMLTextAreaElementImpl0);
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "org.apache.wml.dom.WMLTdElementImpl");
      boolean boolean0 = dOMNodePointer0.equals(hTMLAnchorElementImpl0);
      boolean boolean1 = dOMNodePointer0.isCollection();
      assertTrue(boolean1 == boolean0);
      
      DOMNodePointer.findEnclosingAttribute(hTMLDocumentImpl0, ")%q'mi`_+H';-");
      dOMNodePointer0.namespacePointer((String) null);
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "");
      dOMNodePointer0.setValue(hTMLOListElementImpl0);
      assertFalse(dOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "]");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      hTMLDocumentImpl0.getPreviousSibling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "Was expecting one of:");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "]");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "java.util.Locale@0000000015");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(documentImpl0, "");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(commentImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl1, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(wMLGoElementImpl0, locale0, "<<unknown namespace>>");
      HTMLBRElementImpl hTMLBRElementImpl0 = new HTMLBRElementImpl(hTMLDocumentImpl1, "<<unknown namespace>>");
      dOMNodePointer2.setValue(hTMLBRElementImpl0);
      Object object0 = dOMNodePointer1.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLImageElementImpl hTMLImageElementImpl0 = new HTMLImageElementImpl(hTMLDocumentImpl0, "#|=g)\r");
      Locale locale0 = new Locale("R2gA");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLImageElementImpl0, locale0);
      dOMNodePointer0.isLanguage("R2gA");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
      JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) "R2gA");
      JXPathContext jXPathContext2 = jXPathContext1.getRelativeContext(dOMNodePointer0);
      dOMNodePointer0.createPath(jXPathContext2);
      JXPathContext jXPathContext3 = JXPathContext.newContext((Object) "R2gA");
      JXPathContext jXPathContext4 = JXPathContext.newContext(jXPathContext3, (Object) hTMLDocumentImpl0);
      jXPathContext4.setLenient(false);
      hTMLImageElementImpl0.getAttributeNodeNS("<<unknown namespace>>", "R2gA");
      JXPathContext jXPathContext5 = jXPathContext4.getParentContext();
      dOMNodePointer0.getPointerByID(jXPathContext5, "R2gA");
      dOMNodePointer0.getName();
      dOMNodePointer0.getValue();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("R2gA");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
      dOMNodePointer0.getValue();
      dOMNodePointer0.isLanguage("q");
//      try { 
        hTMLDocumentImpl0.removeChild(hTMLImageElementImpl0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NOT_FOUND_ERR: An attempt is made to reference a node in a context where it does not exist.
//         //
//         verifyException("org.apache.xerces.dom.ParentNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "HTMLTableSectionElementImpl", "Z1Pb)cL", "Z1Pb)cL");
      CoreDocumentImpl coreDocumentImpl1 = new CoreDocumentImpl(documentTypeImpl0, false);
      DocumentFragment documentFragment0 = coreDocumentImpl1.createDocumentFragment();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentFragment0, locale0, "$l,?Q^9%T]PBM$!I");
      QName qName0 = new QName("HTMLTableSectionElementImpl");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, ">(|Coh:A-8i,_`S");
      Locale locale1 = Locale.CANADA;
      NodePointer.newNodePointer(qName0, hTMLTitleElementImpl0, locale1);
      dOMNodePointer0.isCollection();
      String string0 = DOMNodePointer.getPrefix(coreDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "Jy]ii&j!");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBaseElementImpl0, locale0, "Jy]ii&j!");
      dOMNodePointer0.getLanguage();
      dOMNodePointer0.getValue();
      dOMNodePointer0.isCollection();
      String string0 = "";
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "");
      hTMLBaseElementImpl0.getTextContent();
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("", "", ";z5");
//      try { 
        hTMLAnchorElementImpl0.removeAttributeNode(attr0);
//        fail("Expecting exception: DOMException");
      
//      } catch(DOMException e) {
//         //
//         // NOT_FOUND_ERR: An attempt is made to reference a node in a context where it does not exist.
//         //
//         verifyException("org.apache.xerces.dom.ElementImpl", e);
//      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = null;
      String string0 = "R{'n";
      WMLAccessElementImpl wMLAccessElementImpl0 = new WMLAccessElementImpl((WMLDocumentImpl) null, "R{'n");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLAccessElementImpl0, locale0, "R{'n");
      // Undeclared exception!
//      try { 
        DOMNodePointer.getNamespaceURI((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
//      }
  }
}
