/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 15:16:19 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.util.Comparator;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.defaultSyntaxPrefix = "   ";
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.setOptPrefix("");
      helpFormatter0.createPadding(60);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultSyntaxPrefix = "";
      helpFormatter0.getSyntaxPrefix();
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter("");
//        fail("Expecting exception: FileNotFoundException");
      
//      } catch(Throwable e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(61);
      helpFormatter0.findWrapPos("                                                             ", 61, (-2));
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.defaultDescPad = (-2);
      options0.addOption("arg", true, "-");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("-", options0, true);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      helpFormatter0.setSyntaxPrefix((String) null);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getLongOptSeparator();
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter("", (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // charsetName
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 7, "\n", options0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", "\n", options0, "\n");
      StringWriter stringWriter0 = new StringWriter(1);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 13, "5+`)oo{2i ");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      int int0 = 653;
      int int1 = 2;
      helpFormatter0.defaultDescPad = 2;
      helpFormatter0.setDescPadding(2);
      Options options0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(653, " 8)mW<pf", "", (Options) null, (String) null, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "l";
      Options options0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("l", "wMg53-", (Options) null, "M8~7'(:xUqL", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      helpFormatter0.defaultLongOptPrefix = "";
      helpFormatter0.getLongOptPrefix();
      int int0 = 1344;
      String string1 = "";
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        options0.addOption("dri}=G$?qH%", true, "-");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The option 'dri}=G$?qH%' contains an illegal character : '}'
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp(">ISph/'5g9<kE", "eW6;A@$Fe]Uy$", options0, ">ISph/'5g9<kE");
      helpFormatter0.setLeftPadding((-1834));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "--");
      helpFormatter0.getLeftPadding();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      stringBuffer0.reverse();
      stringBuffer0.reverse();
      // Undeclared exception!
//      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-1), options0, (-1), (-1));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.setOptPrefix("");
      options0.addOption((String) null, false, "AeTK CUt]_");
      Options options1 = new Options();
      helpFormatter0.printHelp("fdm{t", "fiTB", options1, "fiTB");
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("u");
      Options options0 = new Options();
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "arg");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 3, "u", options0);
      // Undeclared exception!
      helpFormatter0.printOptions(printWriter0, 5149, options0, 5149, 5149);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("F%z(", (Options) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("kq[tQ!Z");
      Options options0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(10, "1OBA@L/H3Ua;aq", "", (Options) null, "kq[tQ!Z");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptionComparator();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("u");
      Options options0 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 9, "\n", options0);
      helpFormatter0.renderOptions((StringBuffer) null, (-2015), options0, 68, 68);
      helpFormatter0.rtrim("");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "OlR<<oxq4*L";
      int int0 = 0;
      Options options0 = new Options();
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      helpFormatter0.printHelp(0, "~CCK", "OlR<<oxq4*L", options0, "OlR<<oxq4*L");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 827;
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(827, "", "", options0, "", true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = (-2);
      Options options0 = new Options();
      Options options1 = new Options();
      String string0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("WjNlE)sak5", (String) null, options0, "z'");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("o(e/rP|J;", (Options) null, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n");
      // Undeclared exception!
//      try { 
        helpFormatter0.renderOptions(stringBuffer0, 0, (Options) null, 0, 164);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "kq[tQ)!Z";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(">");
      helpFormatter0.setLongOptSeparator("I#");
      Options options0 = new Options();
      helpFormatter0.defaultWidth = 9;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("p", ">", options0, "WjNlE)sak5");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockFile mockFile0 = new MockFile("\n");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 28, "");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, "|");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(" ");
      Options options1 = new Options();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.printHelp("   ", "org.apache.commons.cli.ParseException", options0, "SWo/");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("   ");
      Options options1 = new Options();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 5, " ]", "-", options1, 31, 31, (String) null, false);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "--");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"");
      helpFormatter0.createPadding(753);
      helpFormatter0.getArgName();
      helpFormatter0.setLongOptPrefix((String) null);
      helpFormatter0.getArgName();
      helpFormatter0.getLongOptPrefix();
      String string0 = "";
      int int0 = (-853);
      int int1 = 297;
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((String) null, options0, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "kq[tQ)!Z";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(">");
      Options options0 = new Options();
      helpFormatter0.defaultWidth = 9;
      helpFormatter0.defaultWidth = 1390;
      options0.addOption("p", false, "kq[tQ)!Z");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 894, "^i%i@PJ!5K[sDIZjc>=", "^i%i@PJ!5K[sDIZjc>=", options0, (-415), 1390, "^i%i@PJ!5K[sDIZjc>=", false);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      PrintWriter printWriter0 = null;
      helpFormatter0.defaultWidth = 3245;
      Options options1 = new Options();
      int int0 = 74;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) " ");
      Option option0 = new Option("", "usage: ");
      Options options2 = options0.addOption(option0);
      // Undeclared exception!
      helpFormatter1.renderOptions(stringBuffer0, 0, options2, 9, 9);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", "9#K*/:J.TZ", true, "\n");
      Options options1 = options0.addOption(option0);
      helpFormatter0.printHelp("S*u", "--", options1, "S*u");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('O');
      stringWriter0.getBuffer();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
//      try { 
        helpFormatter2.printOptions(mockPrintWriter0, (-2694), options2, 1, 1);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("-", "");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, "|");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ]");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 9, "|", (String) null, options0, 34, 44, " ]", false);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption((String) null, "-", false, "rS.^5_\"t,Zvc&");
      Options options2 = options1.addOption("", true, "usage: ");
      helpFormatter0.printHelp("A CloneNotSupportedException was thrown: ", "A CloneNotSupportedException was thrown: ", options2, (String) null);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getOptionComparator();
      MockFile mockFile0 = new MockFile("p( 8(fH0", "");
      String string0 = ">";
      helpFormatter1.printHelp("--", "|", options2, ">");
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter("");
//        fail("Expecting exception: FileNotFoundException");
      
//      } catch(Throwable e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      String string0 = "1X4cc^aiza";
      Options options0 = new Options();
      options0.addOption("", "1X4cc^aiza", false, "");
      String string1 = "";
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        helpFormatter0.printOptions((PrintWriter) null, 0, options0, 0, 0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = new Options();
      Option option0 = new Option("", "9#K*/:J.TZ", true, "\n");
      Options options2 = options1.addOption(option0);
      helpFormatter0.printHelp("S*u", "--", options2, "S*u");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "-");
      helpFormatter1.printHelp(printWriter0, 74, "--", "", options0, 37, 3, "", false);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.c~i.ParseException", "org.apache.commons.c~i.ParseException", options0, "[");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      options0.hasLongOption("usage: ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "usage: ");
      helpFormatter0.setWidth(0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getOptionComparator();
      MockFile mockFile0 = new MockFile("usage: ", "\n");
      Options options1 = new Options();
      // Undeclared exception!
      helpFormatter0.printHelp("9j`hf~RJg3/i-", "oQ_Y", options1, "Pgu&Nj");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DjmE(djKu*iq<o.=");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.setOptPrefix("DjmE(djKu*iq<o.=");
      helpFormatter0.getNewLine();
      helpFormatter0.rtrim("\n");
      // Undeclared exception!
//      try { 
        MockFile.createTempFile("--", " ]");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Prefix string too short
//         //
//         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String string0 = "DjmE(djKu*iq<o.=";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DjmE(djKu*iq<o.=");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("DjmE(djKu*iq<o.=");
      helpFormatter0.getNewLine();
      helpFormatter0.rtrim(" ");
      // Undeclared exception!
//      try { 
        MockFile.createTempFile("", "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Prefix string too short
//         //
//         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getWidth();
      StringWriter stringWriter0 = new StringWriter(1);
      StringWriter stringWriter1 = stringWriter0.append('{');
      stringWriter1.append((CharSequence) "arg");
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 432, (-2739), "}%n~F[-");
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 432, 74, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, "");
      helpFormatter0.renderWrappedText(stringBuffer1, 0, 61, "");
      File file0 = MockFile.createTempFile("6y8mg", "arg");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      PrintWriter printWriter0 = mockPrintWriter0.append('s');
      helpFormatter0.printOptions(printWriter0, 0, options0, 114, 15);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("-", "-", options0, "org.apache.commons.cli.ParseException");
      helpFormatter0.getOptionComparator();
      File file0 = MockFile.createTempFile("arg", "8=p9#SJ[Sao5~;k");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      Locale locale0 = Locale.US;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) file0;
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) options0;
      objectArray0[3] = (Object) options0;
      objectArray0[4] = (Object) mockPrintWriter0;
      objectArray0[5] = (Object) "org.apache.commons.cli.ParseException";
      objectArray0[6] = (Object) "tQn#eJH:F%7%=&$";
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "tQn#eJH:F%7%=&$", objectArray0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(printWriter0, 1953, "", "org.apache.commons.cli.ParseException", options0, 1, (-3427), "arg", false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getWidth();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("}%n~F[-");
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "{eHF5FM B_aKgj(ed;+");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option((String) null, (String) null);
      Options options1 = options0.addOption(option0);
      option0.clone();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((String) null, (String) null, options1, " ]", true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      Options options1 = options0.addOption("", false, "2nxpj*pzJ3#M");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, " ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("0O3_>m5$ebu4");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("0O3_>m5$ebu4");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2131, "N|:(Yle", options1);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("usage: ");
      StringBuffer stringBuffer1 = helpFormatter1.renderWrappedText(stringBuffer0, 99, 74, "N|:(Yle");
      // Undeclared exception!
//      try { 
        helpFormatter0.renderOptions(stringBuffer1, 3, options0, 99, 99);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) null, 0, "");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      Options options0 = new Options();
      options0.hasLongOption("cmdLineSyntax not provided");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "usage: ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("", "");
      Options options1 = options0.addOption((String) null, false, "");
      helpFormatter0.printHelp("<++UPnNW,`", "", options1, " ] [ lng ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("/TyHy)(");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("--");
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "--";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("G9", "=N;a", true, (String) null);
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup0.setSelected(option0);
      optionGroup1.setRequired(false);
      Options options1 = options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", (String) null, options1, "--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1813, (String) null, "G9", options0, 1813, 1813, "=N;a", false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$1", "usage: ", options0, " ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "-");
      options0.addOption("", false, "2nxpj*pzJ3#M");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, " ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("0O3_>m5$ebu4");
      Options options1 = new Options();
      options1.getOptions();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "wUg16^k:\u0003ma,", options1);
      helpFormatter0.getWidth();
      helpFormatter0.rtrim("");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "\n");
      helpFormatter0.defaultSyntaxPrefix = "S~|Z\"KqrE'&<H1";
      helpFormatter0.getOptionComparator();
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, "|");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ]");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 44, "s-}<&}E`DgaRc", "--", options0, 74, 18, "org.apache.commons.cli.HelpFormatter$OptionComparator", false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "[";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("G9", "=N;a", true, (String) null);
      Options options1 = options0.addOption("", true, "-");
      helpFormatter0.printHelp("G9", "", options1, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Options options2 = new Options();
      Options options3 = options1.addOption("arg", "-", false, "0O3_>m5$ebu4");
      Options options4 = options3.addOptionGroup(optionGroup0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2715, "--", options4);
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, "|");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ]");
      Options options1 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 9, "*5Uy!zM?<}_A**+R13", options1);
      helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 33, 9);
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "-");
      File file0 = MockFile.createTempFile("\"ru%aR=DCXEf>i+", "--");
      MockFile mockFile0 = new MockFile(file0, "-");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) null, 74, "\"ru%aR=DCXEf>i+", "", options1, 74, 48, "\"ru%aR=DCXEf>i+", true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      Options options0 = new Options();
      options0.hasLongOption("cmdLineSyntax not provided");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "[");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("", "");
      helpFormatter0.printHelp("C[M003'S~t{", "org.apache.commons.cli.Options", options0, " ] [ lng ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ lng ");
      Options options1 = new Options();
      int int0 = 64;
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 64, " ] [ lng ", options1);
      Option option0 = new Option("arg", "org.apache.commons.cli.HelpFormatter$OptionComparator");
      Options options2 = options0.addOption(option0);
      String string0 = "Bj&n9";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) null, 1953, ">", " ]", options2, 44, (-1), "Bj&n9", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("> ([");
      Options options1 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 0;
      helpFormatter0.createPadding(0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      options0.addOption("", false, "2nxpj*pzJ3#M");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, " ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("0O3_>m5$ebu4");
      Options options1 = new Options();
      Option option0 = new Option((String) null, "R%'x.e\"^");
      options1.addOption(option0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 9, "wUg16^k:\u0003ma,", options1);
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      helpFormatter0.findWrapPos("-", 3544, 3544);
      helpFormatter0.getArgName();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption("arg", true, "[ Options: [ short ");
      options2.addOption("arg", (String) null, true, "MHYbnC%");
      Option option0 = null;
//      try {
        option0 = new Option("\n", "MuLK", false, "gDU9)");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal option name '
//         // '
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("> ([");
      Options options1 = new Options();
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "9td/rV^ 'R(G/mX", options0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "", options0, "|");
      options0.addOption("", true, "U");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("[ARG...]");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1239, "@q''JL{vDyX0", "V38r\"X%2fEcrJLt6R2", options0, 1239, 6, (String) null);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      Option option0 = new Option("", ",+vpK+)HKgN\"0", true, "");
      OptionGroup optionGroup0 = new OptionGroup();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      OptionGroup optionGroup1 = new OptionGroup();
      optionGroup1.addOption(option0);
      OptionGroup optionGroup2 = new OptionGroup();
      OptionGroup optionGroup3 = optionGroup2.addOption(option0);
      optionGroup3.setRequired(true);
      Options options0 = new Options();
      optionGroup1.toString();
      Options options1 = options0.addOption((String) null, false, "arg");
      Options options2 = options1.addOptionGroup(optionGroup1);
      Option option1 = new Option("", false, "-");
      Options options3 = options2.addOption(option1);
      Options options4 = options3.addOption("arg", "4x\u0006&p-<u\"u$2Bq;f", true, "org.apache.commons.cli.HelpFormatter$OptionComparator");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("4x\u0006&p-<u\"u$2Bq;f", "-", options4, ",+vpK+)HKgN\"0");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      options0.addOption("", false, "2nxpj*pzJ3#M");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, " ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("0O3_>m5$ebu4");
      Options options1 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(byteArrayOutputStream0, true);
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter1, 74, "--", "org.apache.commons.cli.Options", options0, (-482), 1, "");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Options options0 = new Options();
      helpFormatter0.printHelp("g=SL4E]m", "", options0, "$X7ky");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      options0.hasLongOption("FMc");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "uJv}");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("$X7ky", "--");
      helpFormatter0.printHelp("|", "[O5Ai", options0, "$X7ky");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("   ");
      Options options1 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 571, "", options1);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 4, "usage: ", "*5Uy!zM?<}_A**+R13", options0, (-891), 571, "", false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, "|");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ]");
      Options options1 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 9, "*5Uy!zM?<}_A**+R13", options1);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(9, (String) null, "%}", options0, "org.apache.commons.cli.HelpFormatter$OptionComparator");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      options0.hasLongOption("-");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "\n");
      helpFormatter0.defaultSyntaxPrefix = "S~|Z\"KqrE'&<H1";
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, "|");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ]");
      Options options1 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1, "*5Uy!zM?<}_A**+R13", options1);
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1953, "S~|Z\"KqrE'&<H1", "", options0, 1, 44, " ]", false);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", "G9", true, "org.apache.commons.cli.ParseException");
      optionGroup0.addOption(option0);
      optionGroup0.setRequired(true);
      option0.addValueForProcessing("!W/LoaW\u0006C");
      helpFormatter0.printHelp("KM`dTr'j3Iig)F", "=?dX6Ie", options0, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 9, (String) null, options0);
      // Undeclared exception!
//      try { 
        helpFormatter0.findWrapPos((String) null, 2037, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, "|");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ]");
      Options options1 = new Options();
      helpFormatter0.createPadding(847);
      helpFormatter0.printHelp("mE%O=WKoUzz,bnGoAU", "org.apache.commons.cli.ParseException", options1, "", false);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, "|");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ]");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("[");
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 9, "org.apache.commons.cli.ParseException", (Options) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "kq[tQ)!Z";
      helpFormatter0.getLeftPadding();
      helpFormatter0.getOptionComparator();
      StringWriter stringWriter0 = new StringWriter(1);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "kq[tQ)!Z");
      stringWriter1.getBuffer();
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((String) null, "kq[tQ)!Z", options0, "Cw\"|k4O.");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.ParseException");
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(false);
      helpFormatter0.printHelp("KM`dTr'j3Iig)F", "org.apache.commons.cli.ParseException", options0, "I,uPi?7e+o");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Options options1 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-252), "", options1);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((String) null, options0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", false, "-");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter1.printOptions((PrintWriter) null, 2983, options1, 3, 606);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "-");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) null, 74, "-", "1X4cc^aiza", options1, (-2989), (-2989), "1X4cc^aiza");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Locale locale0 = Locale.TAIWAN;
      Options options0 = new Options();
      helpFormatter0.printHelp(116, "d!) 7B~[G", "GVb", options0, "Vvh3EtvLxjn-O*|d", false);
      StringBuffer stringBuffer0 = new StringBuffer();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[8];
      objectArray0[1] = (Object) stringBuffer0;
      Object object1 = new Object();
      objectArray0[2] = object1;
      Object object2 = new Object();
      objectArray0[3] = object2;
      objectArray0[4] = (Object) mockPrintWriter0;
      objectArray0[5] = (Object) "Vvh3EtvLxjn-O*|d";
      objectArray0[6] = (Object) "E%,!9 ;]]a:9'`";
      objectArray0[7] = (Object) "d!) 7B~[G";
      mockPrintWriter0.format(locale0, "--", objectArray0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 74, (-998), (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.getOptionComparator();
      helpFormatter0.setNewLine("org.apache.commons.cli.ParseException");
      Options options1 = options0.addOption("Z", false, "");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("", options1, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "-");
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) null, 0, "1", "1X4cc^aiza", options1, (-2989), (-2989), "1X4cc^aiza");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", options0);
      helpFormatter0.setWidth(0);
      helpFormatter0.setNewLine("'\"esn'+{VeekurIE'g");
      // Undeclared exception!
      helpFormatter0.printHelp("1*'HkgDrC$^w", options0, false);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", options0);
      helpFormatter0.setWidth(0);
      helpFormatter0.setNewLine("'\"esn'+{VeekurIE'g");
      helpFormatter0.defaultSyntaxPrefix = "]'ujWf0#k^'n5KX)*";
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("arg", options0, false);
      helpFormatter0.setLeftPadding(74);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, "/E%SALG");
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.cli.ParseException");
      helpFormatter0.renderOptions(stringBuffer0, 1755, options0, 1, 1934);
      MockFile mockFile0 = new MockFile("'E<EC>{z?o :L,-@H");
      String string0 = "arg";
      MockFile.createTempFile("org.apache.commons.cli.HelpFormatter$OptionComparator", "arg", (File) mockFile0);
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0);
//        fail("Expecting exception: FileNotFoundException");
      
//      } catch(Throwable e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "org.apache.commons.cli.HelpFormatter$OptionComparator");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // org.apache.commons.cli.HelpFormatter$OptionComparator
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("", true, "-");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter1.printUsage((PrintWriter) null, 74, "sv`aAe");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getWidth();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("}%n~F[-");
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printOptions(mockPrintWriter0, 4053, options0, 109, (-2596));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Options options1 = new Options();
      Options options2 = options1.addOption("", true, "--");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) null, (-2989), "usage: ", "", options2, 18, (-2989), "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("}%n~F[-");
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-99), "--");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", options0);
      helpFormatter0.setWidth(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "'\"\\esn'+{VeekurIE'g";
      helpFormatter0.setNewLine("'\"esn'+{VeekurIE'g");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      helpFormatter0.getWidth();
      helpFormatter0.defaultSyntaxPrefix = "]'ujWf0#k^'n5KX)*";
      boolean boolean0 = false;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("'\"esn'+{VeekurIE'g", options0, false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = helpFormatter1.renderOptions(stringBuffer0, 3, options0, 0, 64);
      // Undeclared exception!
//      try { 
        helpFormatter1.renderWrappedText(stringBuffer1, (-3721), 74, "usage: ");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, "/E%SALG");
      helpFormatter0.getOptionComparator();
      String string0 = "org.apache.commons.cli.Options";
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "org.apache.commons.cli.HelpFormatter$OptionComparator");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // org.apache.commons.cli.HelpFormatter$OptionComparator
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("jO1u(");
      Locale locale0 = Locale.TAIWAN;
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) locale0;
      int int0 = 10;
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(10, "J6i(!4-'A/)'W", "J6i(!4-'A/)'W", options0, "jO1u(", false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.defaultArgName = "kq[tQ)!Z";
      helpFormatter0.printHelp("5)(<!;^I", "5)(<!;^I", options0, "5)(<!;^I");
      helpFormatter0.getLeftPadding();
      helpFormatter0.getOptionComparator();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(74);
      stringWriter1.getBuffer();
      File file0 = MockFile.createTempFile("5)(<!;^I", " ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, false);
      mockFileOutputStream0.write((-2015));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) mockFileOutputStream0;
      PrintWriter printWriter0 = mockPrintWriter0.format((Locale) null, "", objectArray0);
      helpFormatter0.printWrapped(printWriter0, 1, 0, "");
      helpFormatter0.rtrim("arg");
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "[";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", "G9", true, "org.apache.commons.cli.ParseException");
      optionGroup0.addOption(option0);
      optionGroup0.setRequired(true);
      option0.addValueForProcessing("!W/LoaW\u0006C");
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("KM`dTr'j3Iig)F", "=?dX6Ie", options1, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 9, (String) null, options1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option((String) null, "xm(o", true, "");
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Option option1 = new Option("arg", "\n", true, "-");
      optionGroup0.addOption(option1);
      options0.addOptionGroup(optionGroup1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("xm(o");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 25, "cmdLineSyntax not provided", options0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option((String) null, "arg", true, "-");
      OptionGroup optionGroup0 = new OptionGroup();
      Option option1 = new Option("", true, (String) null);
      OptionGroup optionGroup1 = new OptionGroup();
      optionGroup1.addOption(option0);
      optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("dO,TaH");
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2, "dO,TaH", options0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", true, "F,=bV}");
      helpFormatter0.printHelp("ki6 wVS$Uh6(P ^2?", "<", options1, "]J ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "--");
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("..pQL/O=de", "--");
      helpFormatter0.printHelp("-", "]J ", options1, "|");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Options options2 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 97, "cmdLineSyntax not provided", options0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = "e\\u;mUhPP";
      helpFormatter0.printHelp(2126, "EBj*>c~V", "EBj*>c~V", options0, string0, true);
      StringBuffer stringBuffer0 = new StringBuffer();
      Object object0 = new Object();
      StringWriter stringWriter0 = new StringWriter(3);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      Locale locale0 = Locale.GERMAN;
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) stringBuffer0;
      objectArray0[1] = (Object) options0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) "EBj*>c~V";
      objectArray0[5] = (Object) options0;
      mockPrintWriter0.format(locale0, "-", objectArray0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-1), 32, "[");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "[";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("G9", "=N;a", true, (String) null);
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup1.setRequired(false);
      option0.addValueForProcessing("--");
      Options options1 = options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp(74, "[", "r:HZ~U(`y1g*aU", options1, "MfM{R-1eH)V!;<U");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(comparator0).toString();
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.setWidth(31);
      helpFormatter0.setSyntaxPrefix("YLq:8");
      helpFormatter0.setWidth(74);
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.printHelp(74, "[", "YLq:8", options0, "mU@C^$gMJfnkQ@C/;G", true);
      helpFormatter0.getNewLine();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("jO1u(");
      Locale locale0 = Locale.TAIWAN;
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) locale0;
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) "jO1u(";
      objectArray0[3] = (Object) locale0;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(3);
      StringBuffer stringBuffer1 = helpFormatter1.renderWrappedText(stringBuffer0, 3, 1, "--");
      helpFormatter0.renderWrappedText(stringBuffer1, 3, 74, "");
      StringBuffer stringBuffer2 = new StringBuffer("usage: ");
      helpFormatter1.renderWrappedText(stringBuffer2, 74, 44, "usage: ");
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "I t\"L-3zq";
      helpFormatter0.setLongOptSeparator("I t\"L-3zq");
      String string1 = "]";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) "I t\"L-3zq";
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) "I t\"L-3zq";
      objectArray0[5] = (Object) "]";
      mockPrintWriter0.format("-", objectArray0);
      int int0 = (-1);
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((-1), "ylIfV/", "I t\"L-3zq", options0, "]");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("cmdLineSyntax not provided");
      int int0 = (-1);
      Options options0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-1), (Options) null, (-1), (-1));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "RLZO]^Z-;I,dQav";
      helpFormatter0.defaultNewLine = "RLZO]^Z-;I,dQav";
      helpFormatter0.defaultArgName = "Qux*udBOG";
      int int0 = (-2067);
      helpFormatter0.setDescPadding((-2067));
      int int1 = 1202;
      helpFormatter0.defaultWidth = 1202;
      helpFormatter0.getLongOptSeparator();
      PrintWriter printWriter0 = null;
      String string1 = "";
      String string2 = "iT|__p";
      Options options0 = new Options();
      Option option0 = null;
//      try {
        option0 = new Option("-", "]<ZQ:v9l@O+/");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal option name '-'
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.defaultArgName = "|f){xe9/";
      helpFormatter0.setLeftPadding(0);
      helpFormatter0.setOptionComparator(comparator0);
      Comparator<Integer> comparator1 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator1);
      helpFormatter0.getOptPrefix();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      helpFormatter1.setDescPadding(1);
      Options options0 = new Options();
      int int0 = (-3721);
      // Undeclared exception!
//      try { 
        helpFormatter1.renderOptions(stringBuffer0, 0, options0, 0, (-3721));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("", false, "H_Hwy");
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      helpFormatter0.printHelp(0, "usage: ", "usage: ", options1, "H_Hwy", false);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "-");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) null, 0, "", "1X4cc^aiza", options1, (-2989), (-2989), "1X4cc^aiza");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      int int0 = 737;
      StringBuffer stringBuffer0 = new StringBuffer(737);
      String string0 = ">";
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-1786), 737, ">");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "-");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter1.printOptions((PrintWriter) null, 2983, options1, 3, 606);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "[";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("G9", "=N;a", true, (String) null);
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup1.setRequired(false);
      option0.addValueForProcessing("--");
      Options options1 = options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", (String) null, options1, "[");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 9, (String) null, options0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.defaultArgName = "kq[tQ)!Z";
      helpFormatter0.printHelp("5)(<!;^I", "5)(<!;^I", options0, "5)(<!;^I");
      helpFormatter0.getLeftPadding();
      helpFormatter0.getOptionComparator();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "kq[tQ)!Z");
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      int int0 = (-265);
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 1, (-265), "kq[tQ)!Z");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("\n", options0);
      helpFormatter0.setWidth(0);
      String string0 = "'\"\\esn'+{VeekurIE'g";
      helpFormatter0.setNewLine("'\"esn'+{VeekurIE'g");
      helpFormatter0.defaultSyntaxPrefix = "]'ujWf0#k^'n5KX)*";
      boolean boolean0 = false;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("'\"esn'+{VeekurIE'g", options0, false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparator0).toString();
      helpFormatter0.optionComparator = comparator0;
      Options options0 = new Options();
      helpFormatter0.printHelp("/|xT_&{", options0);
      helpFormatter0.setWidth(0);
      helpFormatter0.setNewLine("'\"esn'+{VeekurIE'g");
      helpFormatter0.defaultSyntaxPrefix = "]'ujWf0#k^'n5KX)*";
      helpFormatter0.setLongOptSeparator("/|xT_&{");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("'\"esn'+{VeekurIE'g", options0, false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("org.apache.commons.cli.ParseException", "", options0, " ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "\n");
      helpFormatter0.defaultSyntaxPrefix = "S~|Z\"KqrE'&<H1";
      helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile("org.apache.commons.cli.Options", "");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$OptionComparator", "-", options0, "|");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ]");
      Options options1 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1, "*5Uy!zM?<}_A**+R13", options1);
      // Undeclared exception!
//      try { 
        helpFormatter0.createPadding((-743));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption("", true, "-");
      helpFormatter0.setLeftPadding((-3039));
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 4516;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.setLeftPadding(4516);
      helpFormatter0.setLongOptPrefix("");
      int int1 = (-825);
      // Undeclared exception!
//      try { 
        helpFormatter0.createPadding((-825));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName(";-[cqS+.C");
      helpFormatter0.setOptionComparator((Comparator) null);
      String string0 = "bvI(y}<xWv* TR*";
      Options options0 = new Options();
      String string1 = "N>FN$5";
      String string2 = "";
      Option option0 = null;
//      try {
        option0 = new Option("N>FN$5", false, "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The option 'N>FN$5' contains an illegal character : '>'
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      String string0 = "has already been selected: '";
      String string1 = null;
      MockFile mockFile0 = null;
//      try {
        mockFile0 = new MockFile("has already been selected: '", (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      MockFile mockFile0 = new MockFile(" ", "");
      String string0 = "-";
      helpFormatter0.setOptionComparator(comparator0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("", "--", options0, "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 0;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      helpFormatter0.defaultArgName = "+)3B";
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1, (-1), "\"J0$CxT,Pbjz!@g&~Up");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      String string0 = "--";
      // Undeclared exception!
//      try { 
        helpFormatter0.findWrapPos("--", (-1888), (-1888));
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = new Options();
      Option option0 = new Option("", "9#K*/:J.TZ", true, "\n");
      Options options2 = options1.addOption(option0);
      helpFormatter0.printHelp("S*u", "--", options2, "S*u");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 458, "--", ";zl", options0, 1112, 984, "--", true);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('O');
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 74, options2, 74, 1);
      helpFormatter1.renderWrappedText(stringBuffer1, 723, 984, "\n");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "v";
      int int0 = (-1);
      // Undeclared exception!
//      try { 
        helpFormatter0.findWrapPos("v", (-1), (-1));
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.setLongOptSeparator("P_Is-d1?CP");
      helpFormatter0.rtrim((String) null);
      StringWriter stringWriter0 = new StringWriter(3);
      String string0 = HelpFormatter.DEFAULT_SYNTAX_PREFIX;
      int int0 = 0;
      // Undeclared exception!
//      try { 
        stringWriter0.append((CharSequence) "usage: ", 0, 44);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      stringBuffer0.reverse();
      int int0 = (-1);
      helpFormatter0.setWidth((-1));
      // Undeclared exception!
//      try { 
        stringBuffer0.insert((-1), (Object) helpFormatter0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//         //
//         // String index out of range: -1
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("Wr");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("EBj*>c~V", "EBj*>c~V", (Options) null, "EBj*>c~V");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      String string0 = null;
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        options0.addOption(" ", false, "-");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal option name ' '
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("`vixom&2(9");
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-2331), "usage: ");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      String string0 = "";
      Options options0 = new Options();
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        options0.addOption("--", true, "B*^P|q{~l(G[?i(N\"Y");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The option '--' contains an illegal character : '-'
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("jO1u(");
      Locale locale0 = Locale.TAIWAN;
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) locale0;
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) "jO1u(";
      objectArray0[3] = (Object) locale0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) "jO1u(";
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "usage: ", objectArray0);
      // Undeclared exception!
      helpFormatter0.printWrapped(printWriter0, 0, 0, " WA!M>");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Xo+@YiHgi", false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream1);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1156, "Xo+@YiHgi");
      assertEquals(74, helpFormatter0.defaultWidth);
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals(1, helpFormatter0.defaultLeftPad);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      assertEquals(1, helpFormatter0.defaultLeftPad);
      
      helpFormatter0.defaultLeftPad = 0;
      helpFormatter0.getWidth();
      helpFormatter0.getSyntaxPrefix();
      String string0 = helpFormatter0.getArgName();
      assertEquals("arg", string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = (-1);
      String string0 = "6";
      helpFormatter0.setNewLine(" ");
      int int0 = 0;
      helpFormatter0.defaultLeftPad = 0;
      helpFormatter0.setLongOptPrefix(" ");
      String string1 = "[^+F2$=*\"";
      helpFormatter0.setOptPrefix("[^+F2$=*\"");
      helpFormatter0.setNewLine("6");
      helpFormatter0.getOptPrefix();
      Options options0 = new Options();
      Option option0 = null;
      // Undeclared exception!
//      try { 
        options0.addOption((Option) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.Options", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "O~>).d*J,wv)P<";
      helpFormatter0.setNewLine("O~>).d*J,wv)P<");
      String string1 = "\\U";
      Options options0 = new Options();
      boolean boolean0 = false;
      String string2 = "wVEpI";
      Option option0 = null;
//      try {
        option0 = new Option(" ", "usage: ", false, "wVEpI");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal option name ' '
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getWidth();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("}%n~F[-");
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "}%n~F[-");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      helpFormatter0.setSyntaxPrefix(" | ");
      helpFormatter0.setOptPrefix(" | ");
      String string0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) null, (-1000), (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "[ option: ";
      String string1 = null;
      Options options0 = new Options();
      String string2 = "";
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter("z${KdWx", "");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // 
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }
}
