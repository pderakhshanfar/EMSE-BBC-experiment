/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 15:27:11 GMT 2021
 */

package org.apache.commons.codec.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.UnsupportedEncodingException;
import java.util.BitSet;
import org.apache.commons.codec.net.QuotedPrintableCodec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuotedPrintableCodec_ESTest extends QuotedPrintableCodec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)61;
      byte[] byteArray1 = QuotedPrintableCodec.encodeQuotedPrintable((BitSet) null, byteArray0);
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("Ilv'TY4IExjCW wI");
      byte[] byteArray2 = quotedPrintableCodec0.decode(byteArray1);
      assertEquals(4, byteArray2.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)61, (byte)0, (byte)0}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)66;
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("Ilv'TY4IExjCW wI");
//      try { 
        quotedPrintableCodec0.decode(byteArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Invalid URL encoding: not a valid digit (radix 16): 0
//         //
//         verifyException("org.apache.commons.codec.net.Utils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.getDefaultCharset();
      assertEquals("UTF-8", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("");
      String string0 = quotedPrintableCodec0.getDefaultCharset();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BitSet bitSet0 = BitSet.valueOf(byteArray0);
      byte[] byteArray1 = QuotedPrintableCodec.encodeQuotedPrintable(bitSet0, byteArray0);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = quotedPrintableCodec0.encode(byteArray0);
      assertEquals(12, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = quotedPrintableCodec0.encode(byteArray0);
      assertNotSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.encode("", "UTF-8");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.encode("");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      Object object0 = quotedPrintableCodec0.encode((Object) "MKhB");
      assertNotNull(object0);
      assertEquals("MKhB", object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = QuotedPrintableCodec.decodeQuotedPrintable(byteArray0);
      assertNotSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("Ilv'TY4IExjCW wI");
      byte[] byteArray1 = quotedPrintableCodec0.decode(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("Invalid quoted-printable encoding");
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = quotedPrintableCodec0.decode(byteArray0);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.decode("", "UTF-16LE");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.decode("BeonkAY");
      assertNotNull(string0);
      assertEquals("BeonkAY", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.decode("");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      // Undeclared exception!
//      try { 
        quotedPrintableCodec0.encode("MKhB", (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
//      try { 
        quotedPrintableCodec0.encode("org.apache.commons.codec.EncoderException", "");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(UnsupportedEncodingException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("Invalid quoted-printable encoding");
//      try { 
        quotedPrintableCodec0.encode("Invalid quoted-printable encoding");
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Invalid quoted-printable encoding
//         //
//         verifyException("org.apache.commons.codec.net.QuotedPrintableCodec", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      // Undeclared exception!
//      try { 
        quotedPrintableCodec0.encode("rm&s");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      // Undeclared exception!
//      try { 
        quotedPrintableCodec0.decode("utqUL^>n&", (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
//      try { 
        quotedPrintableCodec0.decode("(1#o]", "n7f$(Iei0Hra@Q#$");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(UnsupportedEncodingException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("");
//      try { 
        quotedPrintableCodec0.decode("");
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // 
//         //
//         verifyException("org.apache.commons.codec.net.QuotedPrintableCodec", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      // Undeclared exception!
//      try { 
        quotedPrintableCodec0.decode((Object) " cannot be quoted-printable encoded");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.encode("p~q&K");
      assertNotNull(string0);
      assertEquals("p~q&K", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[6] = (byte)61;
//      try { 
        QuotedPrintableCodec.decodeQuotedPrintable(byteArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Invalid quoted-printable encoding
//         //
//         verifyException("org.apache.commons.codec.net.QuotedPrintableCodec", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = QuotedPrintableCodec.decodeQuotedPrintable(byteArray0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = QuotedPrintableCodec.decodeQuotedPrintable((byte[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)66;
      byte[] byteArray1 = QuotedPrintableCodec.encodeQuotedPrintable((BitSet) null, byteArray0);
      assertEquals(10, byteArray1.length);
      assertArrayEquals(new byte[] {(byte)61, (byte)48, (byte)48, (byte)61, (byte)48, (byte)48, (byte)66, (byte)61, (byte)48, (byte)48}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = QuotedPrintableCodec.encodeQuotedPrintable((BitSet) null, (byte[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      String string0 = quotedPrintableCodec0.getDefaultCharset();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.encode((String) null, "D{`~[|pZ+");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      BitSet bitSet0 = new BitSet();
//      try { 
        quotedPrintableCodec0.decode((Object) bitSet0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Objects of type java.util.BitSet cannot be quoted-printable decoded
//         //
//         verifyException("org.apache.commons.codec.net.QuotedPrintableCodec", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      Object object0 = quotedPrintableCodec0.decode((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      Object object0 = quotedPrintableCodec0.decode((Object) "(1#o]");
      assertNotNull(object0);
      assertEquals("(1#o]", object0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("=}Sypy6k/Irpi");
      Object object0 = new Object();
//      try { 
        quotedPrintableCodec0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Objects of type java.lang.Object cannot be quoted-printable encoded
//         //
//         verifyException("org.apache.commons.codec.net.QuotedPrintableCodec", e);
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("Invalid quoted-printable encoding");
      Object object0 = quotedPrintableCodec0.encode((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.decode((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.decode((String) null, "org.apache.commons.codec.EncoderException");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.encode((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      // Undeclared exception!
//      try { 
        quotedPrintableCodec0.encode((Object) "");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
//      try { 
        quotedPrintableCodec0.decode("2{.ghY\"'-3#B5=M6", (String) null);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Invalid URL encoding: not a valid digit (radix 16): 77
//         //
//         verifyException("org.apache.commons.codec.net.Utils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.decode("K`ukXT!B.1Hc2y5Ep", "UTF-8");
      assertNotNull(string0);
      assertEquals("K`ukXT!B.1Hc2y5Ep", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      byte[] byteArray0 = quotedPrintableCodec0.decode((byte[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte) (-69);
      BitSet bitSet0 = new BitSet();
      byte[] byteArray1 = QuotedPrintableCodec.encodeQuotedPrintable(bitSet0, byteArray0);
      assertEquals(21, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("=}Sypy6k/Irpi");
      String string0 = quotedPrintableCodec0.encode("yL0%b~L5jwQ mqqX", "US-ASCII");
      assertEquals("yL0%b~L5jwQ mqqX", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      byte[] byteArray0 = quotedPrintableCodec0.encode((byte[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      // Undeclared exception!
//      try { 
        quotedPrintableCodec0.decode("");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }
}
