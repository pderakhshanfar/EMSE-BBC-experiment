/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 14:43:59 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.FileDescriptor;
import java.io.SyncFailedException;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node((-8));
      Node node1 = new Node(30, node0, node0, node0, node0, 12, 30);
      node1.addChildrenToBack(node1);
      node1.isQuotedString();
      node1.isWhile();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "emptHy_block");
      Node node0 = Node.newNumber((-1828.5365539713), (-1), 1);
      Node node1 = new Node(37, node0, node0, node0);
      node0.isQuotedString();
      node0.addChildrenToBack(node1);
      node0.getQualifiedName();
      node0.getStaticSourceFile();
      node0.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      node0.getQualifiedName();
      node0.getStaticSourceFile();
      node0.getSourceFileName();
      Node node2 = node0.removeFirstChild();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node.extractLineno(50);
      node0.getChangeTime();
      node2.addChildrenToFront(node1);
      Node node3 = Node.newNumber(2162.0, 38, 42);
      node2.removeChildren();
      node3.getProp(1);
      Node node4 = Node.newString(42, "emptHy_block", (-536870912), 1);
      node4.setCharno(36);
      node0.isComma();
      node3.isVoid();
      Node.mergeLineCharNo((-2411), 53);
      node4.children();
      node2.getParent();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node((-8), 55, (-8));
      Node node1 = new Node(64, node0, node0);
      node1.isExprResult();
      Node node2 = new Node(308, node1, 1, 51);
      Node node3 = node0.useSourceInfoFrom(node1);
      node1.useSourceInfoFrom(node2);
      Node node4 = null;
//      try {
        node4 = new Node(123, node2, node1, node2, node3, 3836, 36);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isExprResult();
      node0.isScript();
      node0.isOr();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node1.addChildrenToBack(node0);
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node1.isOr();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      Node node1 = new Node(135201, node0, 1571, (-1854));
      node0.srcrefTree(node1);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(35, 35, 35);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isHook();
      node0.isComma();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(133);
      Node node1 = new Node(51, node0, node0, node0, node0, 36, (-841));
      Node node2 = node1.copyInformationFrom(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isHook();
      // Undeclared exception!
//      try { 
        node0.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 133
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node(113);
      node0.getSideEffectFlags();
      node0.isComma();
      node0.getLastSibling();
      Node.newString("com.google.javascript.rhino.Node$AbstractPropListItem");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newString(123, "\n\nSubtree1: ", 123, 123);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(40);
      node1.mayMutateGlobalStateOrThrow();
      node1.wasEmptyNode();
      node0.isVoid();
      node1.wasEmptyNode();
      node1.getLastSibling();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString("\n\nSDbtr\"1: ", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("\n\nSDbtr\"1: ");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = node2.useSourceInfoFrom(node1);
      node1.checkTreeEqualsImpl(node3);
      Node node4 = node3.clonePropsFrom(node0);
      node4.type = 29;
      node3.isVoid();
      node3.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo$TrimmedStringPosition", 4, 3239);
      Node node1 = new Node(4, node0, 15, 37);
      node1.cloneTree();
      node1.toString(false, true, true);
      // Undeclared exception!
//      try { 
        node1.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = new Node(116, 116, (-862048943));
      node0.cloneNode();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isExprResult();
      Node node1 = new Node((-1472), node0, 962, (-472));
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.useSourceInfoFrom(node1);
      node2.checkTreeEqualsImpl(node0);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newNumber((double) 110);
      node0.isEmpty();
      node0.isOptionalArg();
      Node node1 = new Node(44, node0, node0, node0, node0, 1, 44);
      Node node2 = node1.copyInformationFrom(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node1.getSourceFileName();
      node1.isHook();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      Node node1 = Node.newNumber((-1812.5687018238), 545, 57);
      Node node2 = node0.copyInformationFrom(node1);
      // Undeclared exception!
//      try { 
        node2.getQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = Node.newString(123, "my}QIQ");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(51, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isVoid();
      node0.getStaticSourceFile();
      node1.useSourceInfoIfMissingFrom(node0);
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(40, node0, node0, node0, node0, 36, 1);
      node0.copyInformationFromForTree(node1);
      node0.getBooleanProp(30);
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(41);
      Node node1 = node0.cloneNode();
      node1.isLocalResultCall();
      node1.isGetElem();
      node1.isLabelName();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(2531, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getInputId();
      node2.putProp(50, (Object) null);
      node0.getBooleanProp(30);
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newString(116, "e4Oq \"3YV");
      String string0 = "";
      Node node1 = Node.newString(39, "e4Oq \"3YV", 455, 0);
      Node node2 = new Node((-208), node0, node1, node0, 32, (-1783));
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isInc();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isDec();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node((-19), (-19), (-19));
      node0.mayMutateArguments();
      Node node1 = new Node(35, node0, node0, node0);
      Node node2 = new Node(12, node1, 4095, 2);
      node0.addSuppression("[]");
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.useSourceInfoFrom(node0);
      node0.checkTreeEqualsImpl(node2);
      node3.isVoid();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(48, node0, node0, node0, node0, (-7002), 2);
      Node node2 = node0.copyInformationFrom(node1);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newString(120, "\n\nSubtree1: ");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.getQualifiedName();
      node0.putBooleanProp(45, true);
      // Undeclared exception!
//      try { 
        node0.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 45
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = new Node(63);
      Node node3 = new Node(52, node1, 48, 1424);
      node2.cloneNode();
      node2.isGetElem();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      Node node0 = new Node(21);
      Node node1 = Node.newNumber(1.0);
      Node node2 = new Node(21, node0, node0, node0, node1, 1, 0);
      Node node3 = node2.copyInformationFrom(node1);
      node1.checkTreeTypeAwareEqualsImpl(node3);
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newNumber((-111.85963861618558));
      node0.isEmpty();
      Node node1 = new Node(117, node0, node0, node0, node0, (-236), 2989);
      Node node2 = node1.copyInformationFrom(node0);
      node0.getQualifiedName();
      node0.isEquivalentTo(node2, true, true, true);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = new Node(48, 48, (-492));
      Node node1 = new Node((-3957), node0, node0, (-399), 48);
      Node node2 = new Node(32, node1);
      Node node3 = node2.clonePropsFrom(node1);
      // Undeclared exception!
//      try { 
        node3.getExistingIntProp(57);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 57
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = new Node((-969));
      Node node1 = new Node(39, node0, node0, node0, node0, 77, (-3640));
      Node node2 = node1.copyInformationFrom(node0);
      node0.getQualifiedName();
      node2.isEquivalentTo(node1, false, true, false);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ja_o[Z\"OX$@");
      Node node0 = Node.newString(52, "NO_RESOLVED_TYPE", 7, (-856));
      node0.getJSDocInfo();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(52, node0);
      node1.toStringTree();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.getSourceOffset();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newString(116, "3t`.8,M,h`9>_7o");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("3t`.8,M,h`9>_7o", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getSourceOffset();
      node0.wasEmptyNode();
      Node node1 = new Node(305, 15, 38);
      Node node2 = new Node(13, node1, node1, 38, 56);
      node2.isAdd();
      node2.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(93, 93, 13);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newString("Object#Key", 46, 2681);
      Node node1 = new Node(4, node0, 2984, 2);
      node1.addSuppression("Object#Key");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = node1.useSourceInfoFrom(node2);
      node3.checkTreeEqualsImpl(node1);
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = Node.newNumber((-2045.4));
      Node node1 = Node.newString("mh;-xpy.Y7x2}", 461845907, 13);
      node1.isEmpty();
      Node node2 = new Node(21, node1, node1, node0, node0, 31, 32);
      Node node3 = node2.copyInformationFrom(node0);
      node3.getQualifiedName();
      Node node4 = Node.newNumber((-4539.84157940573), 2571, 52);
      node4.isEquivalentTo(node1, false, false, true);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node.newString(123, "\n\nSubtree1: ");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(0);
      Node node1 = new Node(461845907, node0, 32, 36);
      node0.cloneNode();
      node0.isGetElem();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = new Node(1341);
      node1.isAssignAdd();
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(49, 53, 55);
      node2.copyInformationFrom(node0);
      Node node3 = new Node(50, node0, node2, node0, node1, 30, 4);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
      node_NodeMismatch0.equals(node2);
      // Undeclared exception!
//      try { 
        node1.addChildrenToBack(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(117, 117, (-2355));
      node0.getInputId();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node1.getSourceOffset();
      node0.isWhile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = Node.newNumber((-1131.6347202));
      node0.mayMutateArguments();
      Node node1 = new Node(1, node0, node0, node0, node0, 52, 38);
      Node node2 = new Node(1, node1, node1);
      node2.getJSDocInfo();
      node2.copyInformationFrom(node0);
      node0.getQualifiedName();
      node1.isEquivalentTo(node2, true, true, true);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(117);
      node0.mayMutateGlobalStateOrThrow();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = Node.newNumber((-393.268501085929));
      node0.setSourceEncodedPosition(38);
      node0.setCharno(8202);
      Node node1 = new Node(1);
      Node node2 = new Node(39, node0, 37, 292);
      Node node3 = node2.cloneNode();
      node3.isGetElem();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString((-4), "hFokNp=m25_e", 32, 1392);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.GREATEST_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(93, node0, node0, node0, node0);
      node2.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = new Node(116);
      node0.getSideEffectFlags();
      node0.isFor();
      Node node1 = Node.newString(423, ".", 33, 423);
      node0.addChildrenToFront(node1);
      node0.cloneTree();
      node0.isFromExterns();
      // Undeclared exception!
//      try { 
        Node.newString(36, (String) null, 105, 2426);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(131, 131, 131);
      Node node1 = new Node(41, node0, (-1549), 874);
      node1.addSuppression("c*@ P=nH94^5+MA]");
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.checkTreeEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      Node node1 = node0.getLastSibling();
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isInc();
      node0.isRegExp();
      Node node1 = Node.newNumber((-1.0));
      node0.useSourceInfoFromForTree(node1);
      Node node2 = new Node(149, node0, 62, (-1841));
      node0.addChildToBack(node2);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node((-17));
      node0.isAssignAdd();
      Node node1 = new Node(30, node0, node0, node0, node0, 12, 30);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.setJSDocInfo(jSDocInfo0);
      node0.detachChildren();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
      node1.addChildrenToBack(node1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newNumber(2611.28949237993);
      node0.mayMutateArguments();
      Node node1 = new Node(125, node0, node0, node0, node0, 2159, 16);
      node1.getJSDocInfo();
      Node node2 = node1.copyInformationFrom(node0);
      node0.getQualifiedName();
      node1.isEquivalentTo(node2, true, true, true);
      node0.clonePropsFrom(node1);
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(94, 94, (-432));
      node0.getQualifiedName();
      Node node1 = new Node(40, node0, node0, node0, 2, 1);
      Node node2 = new Node((-36), node1, node1, 2, 38);
      node0.isEquivalentTo(node2, false, false, false);
      node2.getLastChild();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(43, node0, 12, 46);
      node0.isEquivalentToShallow(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("|Z@m{+z&", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      node1.isFromExterns();
      node0.removeFirstChild();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = new Node(116);
      node0.getSideEffectFlags();
      node0.putBooleanProp(116, true);
      Node node1 = new Node(54, node0, node0, node0);
      node0.srcref(node1);
      // Undeclared exception!
//      try { 
        node0.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 116
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = new Node((-902), (-902), (-13));
      Node node1 = new Node(51, node0, node0, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isOptionalArg();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getSourceOffset();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(1, 86, 86);
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(154);
      Node node1 = new Node(42, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getQualifiedName();
      node0.isEquivalentTo(node2, true, true, false);
      node1.isEquivalentTo(node2, false, true, false);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 37);
      nodeArray0[0] = node0;
      Node node1 = new Node(37, nodeArray0, 48, 46);
      node1.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(8);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(105);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("t>5BVINdFh", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node1.toString();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.getInputId();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString(116, "e4Oq \"3YV");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getSourceOffset();
      Node node1 = new Node(0, 49, 1);
      node1.getSideEffectFlags();
      node1.isAdd();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-2151), node0, node0, node0, 40, 0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isOptionalArg();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(43, node0, 12, 46);
      Node node2 = node1.copyInformationFrom(node0);
      node1.getQualifiedName();
      node2.isEquivalentTo(node0, true, true, false);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString(116, "empty_block");
      Node node1 = Node.newString(51, "empty_block");
      Node node2 = new Node(31, node1, node0, node0, node0, 53, 42);
      node2.copyInformationFrom(node0);
      node0.getQualifiedName();
      node2.isEquivalentTo(node1, false, false, true);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(44);
      nodeArray0[0] = node0;
      Node node1 = new Node(40, 86, 86);
      nodeArray0[1] = node1;
      Node node2 = new Node(57, nodeArray0);
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rino.Node$Nu<berN%de", (-2615), 56);
      Node node1 = new Node(2, node0, node0, 8, 57);
      node0.addSuppression("com.google.javascript.rino.Node$Nu<berN%de");
      node1.setCharno(50);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putBooleanProp(40, true);
      node0.toString();
      node1.getQualifiedName();
      node0.isWith();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.isCase();
      node0.isAssign();
      node0.getAncestors();
      Node node1 = Node.newString(50, "Object#Key");
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString("i.2hwxtf}z9B4gT_", (-1783), (-1783));
      Node node1 = new Node((-833), node0, node0, 49, 1731);
      node0.addChildrenToBack(node1);
      node0.getQualifiedName();
      node0.wasEmptyNode();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.setSourceFileForTesting((String) null);
      node0.isFromExterns();
      node0.getIntProp(47);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(42, (-3651), 2516);
      node0.isVarArgs();
      node0.setSourceEncodedPosition((-1154));
      Node node1 = node0.cloneTree();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(122);
      node0.children();
      node0.getChangeTime();
      Node node1 = node0.cloneNode();
      node0.useSourceInfoFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[4];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("_x@");
      jSTypeArray0[0] = (JSType) templateType0;
      ObjectType objectType0 = FunctionType.getTopDefiningInterface(templateType0, "Named type with empty name component");
      JSType.toMaybeFunctionType((JSType) templateType0);
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) templateType0, jSTypeArray0[0], (JSType) templateType0, (JSType) templateType0, (JSType) objectType0, (JSType) objectType0, (JSType) null, (JSType) null, (JSType) objectType0, jSTypeArray0[0], (JSType) objectType0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 6
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      Node node1 = new Node(8, node0, node0, 36, 36);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getQualifiedName();
      node2.isEquivalentTo(node0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newNumber((double) 110);
      Node node1 = new Node(36, node0);
      node1.setCharno((-3510));
      Node node2 = new Node(40);
      Node node3 = new Node(46, node1, 11, 35);
      node2.cloneNode();
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      node0.isInstanceOf();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(43, node0, 12, 46);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node2;
      nodeArray0[5] = node1;
      Node node3 = null;
//      try {
        node3 = new Node(32, nodeArray0, 77, 51);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newString(116, "empty_block");
      Node node1 = Node.newString(51, "empty_block");
      node1.setSourceFileForTesting("empty_block");
      Node node2 = Node.newString(2, "empty_block");
      Node node3 = new Node(47, 54, 50);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [");
      node2.isAnd();
      node0.isWith();
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node(103);
      node0.toString(false, false, false);
      node0.isHook();
      Node node1 = Node.newNumber((double) 32, 4, 37);
      node0.srcrefTree(node1);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node1 = new Node(63, node0, (-2446), 132);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newString(116, "Object#Key");
      Node node2 = Node.newString(4, "Object#Element", 511, 15);
      node2.isOnlyModifiesThisCall();
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newString(116, "e4Oq \"3YV");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getSourceOffset();
      Node node1 = new Node(0, 49, 1);
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      Node node1 = new Node(30);
      node0.useSourceInfoFrom(node1);
      node0.getSideEffectFlags();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(148);
      Node node1 = new Node((-3799), node0, node0, 8, 53);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.useSourceInfoFrom(node2);
      node2.checkTreeEqualsImpl(node0);
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newString("ANY", 30, 30);
      Node node1 = new Node(100, node0, 16, 8);
      node1.addSuppression("ANY");
      node1.setCharno(147);
      Node node2 = new Node(31);
      Node node3 = new Node(4095, node1, 0, 32);
      node1.cloneNode();
      node2.isGetElem();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = new Node((-17));
      node0.isAssignAdd();
      Node node1 = Node.newString("Node has existing properties.");
      Node node2 = new Node(103, node0, node0, node1, node0, (-17), 257);
      Node node3 = node2.copyInformationFrom(node1);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node3);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newString((-1499), "tHk*", 1261, (-1874));
      Node node1 = new Node(3140, node0, 12, 37);
      node0.getString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      node_SideEffectFlags0.setReturnsTainted();
      node1.setLength((-3261));
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node1.getLength();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(node_SideEffectFlags1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3140
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = "\n\nSubtree1: ";
      Node node0 = new Node(119, (-1421), 2615);
      node0.setSourceFileForTesting("\n\nSubtree1: ");
      Node node1 = new Node(98, node0, node0, 4, 54);
      node0.isContinue();
      node1.srcrefTree(node0);
      // Undeclared exception!
//      try { 
        node1.replaceChild(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node0.getQualifiedName();
      node1.setOptionalArg(true);
      node1.isEquivalentTo(node0, true, true, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setIdGenerator(true);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newString("i.2hwxt;0f}z9B4gT_");
      Node node1 = new Node(57, node0, node0, 8202, 4095);
      node0.getInputId();
      node0.copyInformationFromForTree(node1);
      Node node2 = new Node(38, node1);
      node2.cloneTree();
      int int0 = Node.OPT_ARG_NAME;
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = new Node((-17));
      node0.isAssignAdd();
      Node node1 = new Node(30, node0, node0, node0, node0, 12, 30);
      Node node2 = node1.copyInformationFrom(node0);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.detachFromParent();
      node_NodeMismatch0.equals(node2);
      node1.removeFirstChild();
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(37, (-845), 3091);
      Node node1 = node0.cloneTree();
      node1.getSourceOffset();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newNumber((double) 110);
      node0.isWith();
      Node node1 = new Node(42, node0, node0, node0, node0, 1, 42);
      Node node2 = node1.copyInformationFrom(node0);
      node1.getQualifiedName();
      node2.isEquivalentTo(node1, true, true, false);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString("}6FU5", (-2615), (-2615));
      Node node1 = new Node(15, node0, 2, 52);
      node0.addSuppression("$STijue920R");
      node0.setCharno(1281);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.putBooleanProp(46, true);
      node1.toString();
      node0.getQualifiedName();
      node0.isWith();
      node1.getStaticSourceFile();
      node0.setLineno(51);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newString(110, "COyzT");
      node0.isIf();
      Node node1 = new Node(40, node0, node0, node0);
      node0.isNE();
      node1.isCase();
      node0.isGetElem();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = new Node((-870));
      node0.isAssignAdd();
      Node node1 = Node.newString("H*");
      Node node2 = new Node(52, node0, node1, node0, node1, 32, 49);
      Node node3 = node2.copyInformationFrom(node0);
      node1.getProp(4095);
      node3.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node((-19), (-19), (-19));
      Node node1 = new Node(1, node0, node0, node0, (-19), 51);
      node0.getJsDocBuilderForNode();
      Node node2 = new Node(50, node1, node1, node1);
      node1.addChildrenToBack(node2);
      Node.extractLineno(155);
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(55, 55, (-19));
      Node node1 = new Node(1, node0, node0, node0, 55, 51);
      Node node2 = new Node(50, node1, node1, node1);
      node1.addChildrenToBack(node2);
      Node node3 = node1.getChildBefore(node2);
      node3.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newNumber((-2561.2884731), 148, 148);
      Node node1 = new Node(40, node0, 132, 4);
      node1.isLabelName();
      Node node2 = Node.newString("W\"", (-6), 43);
      Node node3 = Node.newString(55, "W\"", 4266, 36);
      node2.isEquivalentToTyped(node3);
      // Undeclared exception!
//      try { 
        node1.setString("first new child has existing parent");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = new Node(116);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
//      try { 
        node1.getChildBefore(node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node(94, 94, (-432));
      node0.getBooleanProp(33);
      Node node1 = new Node(119, node0, node0, node0, 4095, 4095);
      node0.isHook();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString(123, "\n\nSubtree1: ", 123, 123);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node node1 = new Node(51, node0, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isExprResult();
      node2.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(94);
      node0.putBooleanProp(55, true);
      node0.toString();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = Node.newString(123, "\n\nSubtree1: ", 123, 123);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(51, node0, node0);
      node1.wasEmptyNode();
      node0.isVoid();
      node1.wasEmptyNode();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newNumber(55.0);
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      Node node1 = new Node(47, node0, node0);
      node1.addChildAfter(node1, (Node) null);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.getIntProp(47);
      Node node1 = Node.newNumber((-1018.136));
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newNumber((double) 94);
      Node node1 = new Node((-432), node0, node0, node0, node0, 32, 2);
      Node node2 = Node.newNumber((double) 1, 540, 36);
      Node node3 = new Node((-432), node1, node2, node1, node2, 94, (-2053));
      Node node4 = node3.copyInformationFrom(node1);
      node2.getQualifiedName();
      node3.isEquivalentTo(node4, true, true, true);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      Node node1 = new Node(50, node0);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node1.removeFirstChild();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node1.toString();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.copyInformationFromForTree(node2);
      Node node3 = new Node(51, node2);
      int int0 = Node.OPT_ARG_NAME;
      node2.isNE();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node(148);
      Node node1 = Node.newString("NO_OBJECT_TYPE");
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.getQualifiedName();
      Node node3 = Node.newNumber((double) 30);
      node2.isEquivalentTo(node3, false, false, true);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString("Z");
      node0.setQuotedString();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(684, 91, 3742);
      Node node2 = new Node((-49), node0, node1, 50, 684);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-19));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      InputId inputId0 = new InputId("\"");
      node0.addChildToBack(node0);
      node0.getQualifiedName();
      node0.isNull();
      // Undeclared exception!
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      node0.putBooleanProp(57, true);
      node0.toString();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newString("+j^", (-1783), (-1783));
      node0.putBooleanProp(50, true);
      node0.toString();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newString(116, "empty_block");
      Node node1 = new Node(46, node0, node0, 40, 39);
      node1.setSourceFileForTesting("empty_block");
      Node node2 = Node.newString(2, "empty_block");
      Node node3 = new Node(47, 54, 50);
      node2.isAnd();
      node0.isWith();
      node3.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString(131, "TBTj8zU1bu}_+L", 131, 131);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("wB@fpBW");
      JSType[] jSTypeArray0 = new JSType[0];
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.copyInformationFromForTree(node0);
      Node node2 = new Node(1947, node1);
      int int0 = Node.OPT_ARG_NAME;
      node1.isNE();
      node2.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(116, 116, 113);
      node0.getSideEffectFlags();
      node0.isComma();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newString(41, "4bg", 41, 2272);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node((-143), node0, node0, node0, 43, 696);
      Node node2 = node1.removeFirstChild();
      node0.removeChildren();
      Node node3 = new Node(41, node0, node0, node1, node0, 49, 2259);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      Node node5 = node4.srcref(node2);
      node5.setLength(4095);
      node4.isLabelName();
      node4.isLocalResultCall();
      // Undeclared exception!
//      try { 
        node4.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(52, node0, node0, node0, 47, 47);
      node1.useSourceInfoFromForTree(node0);
      Node node2 = null;
//      try {
        node2 = new Node(148, node0, 63, 16);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      node0.isFromExterns();
      node0.isAdd();
      node0.setJSDocInfo((JSDocInfo) null);
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // SETTER_DEF 148 is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newNumber((double) 110);
      node0.mayMutateArguments();
      Node node1 = new Node(42, node0, node0, node0, node0, 1, 42);
      Node node2 = node1.copyInformationFrom(node0);
      node1.getQualifiedName();
      node2.isEquivalentTo(node1, true, true, true);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = new Node((-432));
      Node node1 = Node.newString(43, "UUU7&aMJ-XyQ:,(");
      node1.mayMutateGlobalStateOrThrow();
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      Node node1 = new Node(1812, 8, 274);
      Node node2 = new Node(3469, node0, node0, node0, node1, 148, 30);
      Node node3 = node0.copyInformationFrom(node2);
      node3.getQualifiedName();
      node0.isEquivalentTo(node3, true, false, true);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString("}6FU5", (-2615), (-2615));
      Node node1 = new Node(15, node0, 2, 154);
      node0.addSuppression("}6FU5");
      node1.setCharno(30);
      node1.putBooleanProp(32, true);
      node1.toString();
      Node node2 = Node.newNumber(1.0, 47, 50);
      node2.clonePropsFrom(node1);
      node2.isVoid();
      Node.mergeLineCharNo((-88), 1);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      Node node1 = Node.newString("COLON");
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getQualifiedName();
      node2.isEquivalentTo(node0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString("\n\nSubtree1: ", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.setCharno(54);
      node1.srcrefTree(node2);
      Node node3 = new Node((-3243));
      Node node4 = new Node((-2607), node3, 4095, 4095);
      node2.isGetElem();
      node3.isLabelName();
      node3.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString("Z");
      node0.setQuotedString();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(105, node0);
      node1.toStringTree();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newNumber((-3275.676));
      node0.putBooleanProp(31, true);
      // Undeclared exception!
//      try { 
        node0.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 31
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node(94, 94, 94);
      Node node1 = new Node(31, node0, 55, 13);
      node1.addSuppression("Y");
      node1.setCharno(54);
      Node node2 = new Node(57);
      Node node3 = new Node(25, node2, 46, (-4990));
      node1.cloneNode();
      node1.isGetElem();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString("}6FU5", (-2615), (-2615));
      Node node1 = new Node(39);
      node1.getProp(15);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isOnlyModifiesThisCall();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = new Node(1252, node2, node1, node1, node2, 57, 3123);
      node3.isHook();
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(112);
      node0.putBooleanProp(47, true);
      node0.toString();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(108, node0, node0, node0, node0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node1.setDirectives(treeSet0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.children();
      node2.isTypeOf();
      node0.getInputId();
      node2.checkTreeEquals(node0);
      node1.isWhile();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = new Node(94, 94, 94);
      InputId inputId0 = new InputId("$/,en");
      node0.setInputId(inputId0);
      node0.toStringTree();
      node0.isOr();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(94);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got ASSIGN_SUB
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      node0.getSideEffectFlags();
      node0.putBooleanProp(0, false);
      node0.isCase();
      int int0 = Node.COLUMN_MASK;
      node0.isAssign();
      Node node1 = Node.newString(112, "hF");
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newNumber((double) 110);
      node0.mayMutateArguments();
      Node node1 = new Node(37, node0, node0, node0, node0, 1, 37);
      Node node2 = node1.copyInformationFrom(node0);
      node1.getQualifiedName();
      node2.isEquivalentTo(node1, true, true, true);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(116, 116, 80);
      Node node1 = new Node(48, node0, node0, node0, node0, 87, 1);
      node0.copyInformationFrom(node1);
      node1.getQualifiedName();
      node0.isEquivalentTo(node1, true, false, true);
      node0.getAncestor(12);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newString(116, "com.google.javascript.rino.Node$Nu<berN%de");
      Node node1 = new Node(46, node0, node0, 40, 39);
      node1.setSourceFileForTesting("com.google.javascript.rino.Node$Nu<berN%de");
      node0.putBooleanProp(54, true);
      node0.toString();
      node1.isVoid();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = new Node(112);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.toString();
      Node node3 = node2.useSourceInfoFromForTree(node0);
      Node node4 = new Node((-2509), node3, 29, 30);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node.newString(40, "DEFAULT_CASE");
      Node node5 = Node.newString(155, "YqN!OCN=", 36, 1820);
      node1.isReturn();
      node5.isVoid();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newString("i.2hwxtf}z9B4gT_");
      Node node1 = new Node(57, node0, node0, 8202, 4095);
      node0.getInputId();
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = new Node(38, node1);
      int int0 = Node.OPT_ARG_NAME;
      node0.isNE();
      node1.isObjectLit();
      node3.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber(55.0);
      node0.getAncestors();
      nodeArray0[0] = node0;
      Node node1 = new Node(37, nodeArray0, 48, 46);
      node1.getDirectives();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node(116, 116, 80);
      node0.getSideEffectFlags();
      node0.putBooleanProp(35, true);
      // Undeclared exception!
//      try { 
        node0.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 35
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node(94, 94, (-432));
      node0.setSourceEncodedPositionForTree(51);
      Node node1 = new Node(119, node0, node0, node0, 4095, 4095);
      node0.isHook();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = new Node(110, 110, 110);
      node0.mayMutateArguments();
      Node node1 = new Node(42, node0, node0, node0, node0, 1, 42);
      node1.copyInformationFrom(node0);
      node1.getQualifiedName();
      node1.isHook();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newNumber((-407.3434203202587));
      node0.setSourceEncodedPosition(38);
      Node node1 = new Node(16, node0, node0, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.cloneNode();
      node1.children();
      node1.isTypeOf();
      node0.getInputId();
      node1.checkTreeEquals(node0);
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = node0.copyInformationFrom(node0);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Object object0 = new Object();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      Node node1 = Node.newString("COLON");
      Node node2 = node0.copyInformationFrom(node1);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node2);
      node_NodeMismatch0.equals(node2);
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      node0.isIf();
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newString("DIT", 4095, 52);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.putBooleanProp(41, true);
      Node node1 = Node.newString("@'Pma", 25, 43);
      Node node2 = new Node(39, node0, node0, 46, 43);
      node0.getInputId();
      Node node3 = new Node(12, node1);
      int int0 = Node.OPT_ARG_NAME;
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString(110, "CONST");
      Node node1 = new Node(122, node0, node0, node0);
      node1.hasChild(node0);
      node1.cloneTree();
      Node node2 = new Node(5);
      node2.isThis();
      node1.isDefaultCase();
      Node node3 = new Node((-4016), (-391), 1);
      node3.checkTreeEqualsImpl(node2);
      node3.isGetProp();
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node((-19), (-19), (-19));
      node0.mayMutateArguments();
      Node node1 = new Node(30, node0, node0, node0, node0, 12, 30);
      node0.isNot();
      Node node2 = Node.newString(94, "TAG,KtP>a-G0fd");
      node2.isQuotedString();
      node2.isContinue();
      node1.isNew();
      node1.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node((-19), (-19), (-19));
      node0.mayMutateArguments();
      Node node1 = new Node(30, node0, node0, node0, node0, 12, 30);
      node1.isQualifiedName();
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.setSideEffectFlags(2);
      node0.setLineno(49);
      node0.isNull();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node((-19), (-19), (-19));
      node0.mayMutateArguments();
      Node node1 = new Node(30, node0, node0, node0, node0, 12, 30);
      Node node2 = node1.copyInformationFrom(node0);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals(node2);
      node2.getFirstChild();
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node1.toString();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>(38, comparator0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.getQualifiedName();
      node0.isTry();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = new Node(37);
      Charset.defaultCharset();
      Node node1 = new Node(54, node0);
      int int0 = Node.OPT_ARG_NAME;
      node1.isNE();
      node1.isObjectLit();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.toString();
      Node node1 = new Node(42, node0, 37, 0);
      node0.isDebugger();
      node1.isTrue();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = new Node(116, 116, 80);
      node0.getSideEffectFlags();
      Node node1 = new Node(29, node0, 1, (-572));
      node0.srcrefTree(node1);
      node0.putBooleanProp(57, false);
      node0.toString();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|Z@m{+z&");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "tRB5.TZ~3827.");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "is_namespace");
      Node node0 = Node.newNumber((-3334.0));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.wasEmptyNode();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(46);
      Node node2 = new Node(25, node0, node1, 859, 38);
      node2.setWasEmptyNode(true);
      node2.wasEmptyNode();
      Node node3 = node0.useSourceInfoFromForTree(node2);
      Node node4 = node3.detachFromParent();
      node0.getProp(51);
      // Undeclared exception!
//      try { 
        node4.replaceChild((Node) null, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = new Node(42);
      Node node1 = Node.newString("");
      Node node2 = new Node(42, node0, node0, node1, 4112, 8);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = node2.getChildBefore(node1);
      node3.isOnlyModifiesThisCall();
      node3.getAncestor(32);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType((String) null, node2, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(116);
      int int0 = Node.SIDE_EFFECTS_ALL;
      Node node1 = node0.getAncestor(0);
      node0.isEquivalentTo(node1, true, true, true);
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(41, (-3580), (-3580));
      Node node1 = new Node(20, node0, node0, node0, 8, 1);
      node0.copyInformationFromForTree(node1);
      node0.toString(true, true, true);
      node0.isRegExp();
      node0.isBlock();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.getChangeTime();
      Node node1 = new Node(31);
      node0.isOptionalArg();
      node0.toStringTree();
      node1.addSuppression("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node1.isUnscopedQualifiedName();
      node1.setSourceEncodedPosition(116);
      Charset.defaultCharset();
      Node node2 = new Node(52, 56, 49);
      node2.mayMutateGlobalStateOrThrow();
      node0.hasMoreThanOneChild();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node2.isCast();
      node2.isArrayLit();
      Node node3 = node2.clonePropsFrom(node0);
      node3.srcref(node0);
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newString(116, "UvS+ksBvYa%G0G=Q");
      Node node1 = new Node(46, node0, node0, 40, 39);
      node0.isContinue();
      node1.replaceChild(node0, node1);
      node1.addSuppression("UvS+ksBvYa%G0G=Q");
      // Undeclared exception!
//      try { 
        node1.cloneTree();
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString("+j^", (-1783), (-1783));
      node0.setSourceFileForTesting("NUMBER_VALUE_OR_OBJECT_TYPE");
//      try { 
        node0.setDouble((-1783));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING +j^ [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString(123, "\n\nSubtree1: ");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(37, node0, node0, node0, node0, 1, 1);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = Node.newString("}6FU5", (-2615), (-2615));
      Node node1 = new Node(15, node0, 2, 154);
      node0.addSuppression("}6FU5");
      node1.setCharno(30);
      Node node2 = new Node(42);
      Node node3 = new Node(154, node2, 50, 0);
      Node node4 = node0.cloneNode();
      node4.isGetElem();
      node4.checkTreeEqualsImpl(node2);
      node3.isLabelName();
      node2.getSideEffectFlags();
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(124, nodeArray0);
      Node node1 = new Node(47, node0, node0, node0, node0, 8, 102);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newNumber((double) 110);
      node0.addSuppression("}");
      node0.setCharno(4179);
      Node node1 = new Node(57);
      Node node2 = new Node(52);
      Node node3 = new Node(120, node2, node2, 10, 30);
      Node node4 = new Node(52, node3, (-182), 57);
      Node node5 = node4.cloneNode();
      node1.isGetElem();
      node5.checkTreeTypeAwareEqualsImpl(node1);
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      Node node1 = Node.newString("COLON");
      node1.children();
      node0.isOptionalArg();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.getQualifiedName();
      node0.getJSDocInfo();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-384), nodeArray0, (-384), (-384));
      node0.getProp(30);
      Node node1 = Node.newString("COLON");
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.children();
      node2.isUnscopedQualifiedName();
      node2.isOptionalArg();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.mayMutateArguments();
      Node node1 = new Node(29, node0);
      node1.copyInformationFrom(node0);
      node1.getQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node0);
      Node node2 = Node.newNumber((-2091.954), 48, 64);
      node_NodeMismatch0.equals(node2);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString(110, "CON?T");
      Node node1 = Node.newString(40, "CON?T");
      node0.isInc();
      Node node2 = new Node((-558), node1, node1, node0);
      node2.copyInformationFromForTree(node0);
      node2.getIntProp(57);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.mayMutateArguments();
      Node node1 = new Node(29, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.getJSDocInfo();
      node1.isQualifiedName();
      node0.setLineno(1444);
      node0.isCall();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-19));
      String string0 = "\"";
      InputId inputId0 = new InputId("\"");
      node0.addChildToBack(node0);
      node0.getQualifiedName();
      node0.isNull();
      // Undeclared exception!
//      try { 
        node0.clonePropsFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.addSuppression("Object#Key");
      node0.setCharno(589);
      Node node1 = new Node(56);
      Node node2 = new Node(42, node0, (-2234), 53);
      Node node3 = node2.cloneNode();
      node1.isGetElem();
      node2.checkTreeTypeAwareEqualsImpl(node3);
      node2.isLabelName();
      node1.setLineno(12);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-19));
      Node node1 = Node.newString(",~Au988V-'vn", 13, (-579));
      Node node2 = new Node(54, node0, 52, 2777088);
      node0.addSuppression(",~Au988V-'vn");
      node2.setCharno((-1101));
      Node node3 = new Node(30);
      Node node4 = new Node(51, node3, (-361), 0);
      Node node5 = node4.cloneNode();
      node2.isGetElem();
      node3.checkTreeTypeAwareEqualsImpl(node5);
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.getQualifiedName();
      node0.isTry();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.putBooleanProp(42, true);
      node0.toString();
      Node node1 = new Node(29, node0);
      node1.getIntProp(1);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newNumber((double) 110);
      node0.mayMutateArguments();
      Node node1 = new Node(40, node0, node0, node0, node0, 1, 40);
      node1.copyInformationFrom(node0);
      node1.getQualifiedName();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node(119);
      node0.useSourceInfoFrom(node0);
      node0.checkTreeEqualsImpl(node0);
      Node node1 = new Node(53, node0, 12, 52);
      node1.getQualifiedName();
      node0.isNE();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.putBooleanProp(43, true);
      node0.isEmpty();
      Node node1 = Node.newString(2548, "$[0-9]+");
      node0.isEquivalentToTyped(node1);
      node1.isExprResult();
//      try { 
        node0.setString("$[0-9]+");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER -405.8948299895387 [is_constant_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = new Node(116, 116, 83);
      node0.getSideEffectFlags();
      Node node1 = node0.getAncestor(0);
      node1.copyInformationFromForTree(node0);
      node1.isUnscopedQualifiedName();
      node0.isEquivalentTo(node1, true, true, true);
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isDefaultCase();
      Charset.defaultCharset();
      node0.isDefaultCase();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.toString();
      Node node1 = new Node(30, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.getDirectives();
      node0.isExprResult();
      node2.isComma();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.setLength((-1543));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&=v:");
      node0.toString();
      Node node1 = new Node(42, node0, 720, 0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.isDebugger();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = new Node((-19), (-19), (-19));
      node0.mayMutateArguments();
      Node node1 = new Node(30, node0, node0, node0, node0, 12, 30);
      Node node2 = node1.copyInformationFrom(node0);
      node0.getQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals(node2);
      node2.removeFirstChild();
      node1.clonePropsFrom(node2);
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newString(124, "CONST");
      node0.addSuppression("CONST");
      Node node1 = new Node(37);
      node1.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      node1.setSideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.isAnd();
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      Node node1 = Node.newString("COLON");
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.useSourceInfoFrom(node2);
      node1.addChildrenToBack(node0);
      node1.children();
      node2.isUnscopedQualifiedName();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.putBooleanProp(49, true);
      node0.toString();
      Node node1 = new Node(29, node0);
      node0.checkTreeEqualsImpl(node1);
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = new Node(94, 94, 29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(39, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node1.isVoid();
      Node node2 = Node.newNumber((double) 43);
      node2.isAssignAdd();
//      try { 
        node0.setDouble(4095);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // ASSIGN_SUB 94 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = new Node(37);
      Node node1 = new Node(31, 4095, 48);
      node0.useSourceInfoFrom(node1);
      Charset.defaultCharset();
      node0.isGetElem();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isParamList();
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(36);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 36
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      String string0 = "emptHy_block";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "emptHy_block");
      Node node0 = Node.newString("emptHy_block", 51, (-3758));
      node0.setSourceFileForTesting("|Z@m{+z&");
      node0.isUnscopedQualifiedName();
      node0.isCast();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "W7%V*9/q.$lc)4");
      node0.isNot();
      node0.putProp((-3758), "|Z@m{+z&");
      Node node1 = new Node(33, node0, 55, 43);
      node1.getDirectives();
      Node node2 = node1.removeChildren();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.getBooleanProp(1);
      node2.setLineno(25);
      node2.setQuotedString();
      Node node3 = node0.copyInformationFromForTree(node1);
      // Undeclared exception!
//      try { 
        node1.replaceChild(node2, node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = new Node((-19));
      node0.isGetterDef();
      Node node1 = new Node(47, 30, 57);
      Node node2 = node1.copyInformationFrom(node0);
      node1.useSourceInfoIfMissingFrom(node2);
      node0.getQualifiedName();
      node1.isEquivalentTo(node1, false, false, false);
      node2.removeFirstChild();
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newString("1U|,VI5S4prp)*w");
      Node node1 = new Node((-1783), node0, node0, node0, 36, 74);
      node1.getChildBefore((Node) null);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = new Node((-19), (-19), (-19));
      Node node1 = node0.copyInformationFrom(node0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
//      try { 
        node1.appendStringTree(charArrayWriter0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -19
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isGetterDef();
      Node node1 = new Node(51, 36, (-621));
      Node node2 = node0.copyInformationFrom(node1);
      node2.getQualifiedName();
      node0.isEquivalentTo(node1, true, false, false);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = Node.newNumber((-2386.0));
      node0.putBooleanProp(41, true);
      Node node1 = Node.newString(" MPK;k(dhD", 2, 57);
      Node node2 = new Node(31, node1, node1, 132, 57);
      node0.getInputId();
      Node node3 = new Node(42, node0);
      node2.useSourceInfoIfMissingFrom(node1);
      int int0 = Node.OPT_ARG_NAME;
      Node node4 = new Node(49);
      node4.isGetElem();
      node1.isObjectLit();
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = new Node(37);
      Charset.defaultCharset();
      node0.isGetElem();
      node0.isDebugger();
      node0.getJSDocInfo();
      node0.isLocalResultCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Stack<Node> stack0 = new Stack<Node>();
      node0.isDebugger();
      node1.isFunction();
      node1.getIntProp(36);
      Node.newString(307, "9hJTk");
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString(110, "CON?T");
      Node node1 = Node.newString(40, "CON?T");
      node0.isInc();
      node1.getJsDocBuilderForNode();
      // Undeclared exception!
//      try { 
        node1.addChildrenToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(44, nodeArray0, 44, 44);
      node0.getProp(31);
      Node node1 = Node.newString("hjU/n{!h");
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node0);
      node1.children();
      Node node3 = new Node(49, 2786, 427);
      node3.isOptionalArg();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.getQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node node4 = new Node(2, node0, node1);
      // Undeclared exception!
//      try { 
        node2.removeChildAfter(node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newString("'=5>4zic_Tzlu4Xv", 888, 888);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(47, node0, node0, node0, node0);
      node1.useSourceInfoFromForTree(node0);
      node1.isVoid();
      node1.isAssignAdd();
      node1.removeProp(57);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isWhile();
      Charset.defaultCharset();
      node0.mayMutateArguments();
      node0.isGetElem();
      node0.isCase();
      Node node1 = node0.cloneTree();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(51, ",", 51, 51);
      nodeArray0[0] = node0;
      Node node1 = Node.newString(",");
      nodeArray0[1] = node1;
      Node node2 = new Node(8192, nodeArray0, 98, 782);
      node0.getProp(55);
      Node node3 = Node.newString("?,Wef|j^I+G");
      node2.useSourceInfoIfMissingFromForTree(node3);
      node0.children();
      node3.isOptionalArg();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node3.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newString((-120), "4,T", (-120), (-120));
      node0.getType();
      node0.getLength();
      Node node1 = new Node(29, node0, node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isUnscopedQualifiedName();
      Node node3 = Node.newNumber((double) 32);
      node3.type = 57;
      Node node4 = null;
//      try {
        node4 = new Node(0, node0, node0, (-120), (-3101));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isWhile();
      node0.setCharno(112);
      Node node1 = new Node(4095, node0, 0, 57);
      Node node2 = node0.cloneNode();
      node2.isGetElem();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-19));
      InputId inputId0 = new InputId("\"");
      node0.addChildToBack(node0);
      node0.getQualifiedName();
      node0.isNull();
      Node node1 = new Node(36, 35, 47);
      node0.hasMoreThanOneChild();
      node0.addChildBefore(node1, node0);
      node0.isNE();
      Node.newString(12, "\"");
      node0.removeChildAfter(node1);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node((-359), 10, 67);
      Node node1 = new Node(902, node0, node0, node0, 50, 91);
      Node node2 = node1.removeFirstChild();
      node2.addChildrenToBack(node0);
      node1.isHook();
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node((-3573), (-3573), (-3573));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isOnlyModifiesArgumentsCall();
      Set<String> set0 = jSDocInfo0.getSuppressions();
      node0.setDirectives(set0);
      node0.detachChildren();
      node0.isQualifiedName();
      Node node1 = node0.cloneTree();
      node0.isNE();
      // Undeclared exception!
//      try { 
        node1.getChildBefore(node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node1.toString();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node0.clonePropsFrom(node1);
      node3.getJSDocInfo();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node2;
      nodeArray0[3] = node2;
      nodeArray0[4] = node3;
      nodeArray0[5] = node2;
      nodeArray0[6] = node0;
      nodeArray0[7] = node3;
      Node node4 = null;
//      try {
        node4 = new Node(57, nodeArray0, 20, (-195));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node[] nodeArray1 = new Node[0];
      Node node0 = new Node(44, nodeArray1, 44, 44);
      node0.getProp(30);
      Node node1 = Node.newString("COf");
      node1.toString();
      Node node2 = new Node((-330), node1, 37, 4095);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = new Node((-19));
      node0.isGetterDef();
      Node node1 = new Node(47, 30, 57);
      node1.copyInformationFrom(node0);
      node0.getQualifiedName();
      node1.isEquivalentTo(node1, false, false, false);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      Node node1 = new Node(15, node0, node0, node0, node0);
      node1.isNot();
      node0.isThis();
      node0.isDefaultCase();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node2 = new Node(122, node1, 8, 16);
      node2.cloneNode();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newString("x", 180, 307);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(2865, node0);
      node0.addChildToBack(node1);
      node0.isDo();
      node0.isThis();
      node1.isDefaultCase();
      node0.removeFirstChild();
      Node node2 = new Node(2865, 32, 39);
      // Undeclared exception!
//      try { 
        node2.checkTreeEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newNumber((-1575.2420866082));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      node0.addChildToBack(node0);
      node0.hasChild(node0);
      node0.isThis();
      node0.isDefaultCase();
      Node node1 = new Node(48, 30, 30);
      node1.putProp(138, inputId0);
      node0.checkTreeEqualsImpl(node0);
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(94, 94, 94);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.addSuppression("empty_block");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(37, node0, node0);
      node1.isVoid();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(30);
      node_SideEffectFlags1.setThrows();
      node1.setSideEffectFlags(node_SideEffectFlags1);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newString("?Q 59V");
      Node node1 = new Node((-2403), node0, node0, node0, 115, 2079);
      Node node2 = new Node(43, node1);
      Node node3 = node2.removeFirstChild();
      node3.getChangeTime();
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(44, nodeArray0, 44, 44);
      node0.getProp(30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.checkTreeEquals(node0);
      Node node2 = Node.newString("COf");
      Node node3 = new Node(43, node0);
      node2.getSideEffectFlags();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newNumber((-407.3434203202587));
      node0.setSourceEncodedPosition(38);
      Node node1 = new Node(16, node0, node0, node0, node0);
      node0.getStaticSourceFile();
      node1.isExprResult();
      node1.isCall();
      node1.isFunction();
      Node node2 = node1.copyInformationFrom(node0);
      node2.getStaticSourceFile();
      node1.isName();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.mayMutateArguments();
      Node node1 = new Node(29, node0);
      node1.isQualifiedName();
      node0.useSourceInfoFromForTree(node1);
      node0.setLineno(1444);
      node0.isCall();
      node1.isFunction();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      String string0 = "XDj]$I!&ua";
      Node node0 = Node.newString("XDj]$I!&ua", 110, 110);
      Node node1 = new Node(98, node0, 44, 4095);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.getJsDocBuilderForNode();
      node1.isUnscopedQualifiedName();
      node0.hasChild((Node) null);
      node0.isThis();
      node0.isDefaultCase();
      // Undeclared exception!
//      try { 
        node1.checkTreeEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newString(53, "hj2/n{!h");
      node0.isContinue();
      node0.isStringKey();
      node0.isEmpty();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(37, nodeArray0);
      node1.isCall();
      node0.isFunction();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSType jSType1 = jSTypeRegistry0.createOptionalType(jSType0);
      jSTypeArray0[0] = jSType1;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("Not declared as a type name");
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockFileWriter0);
      node0.appendStringTree(bufferedWriter0);
      Node node1 = Node.newString(38, "dUQ Ap9WT9F@faH");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isName();
      node1.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2985, 2985);
      Node node1 = new Node(38, node0, 0, 49);
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.getJsDocBuilderForNode();
      Node node3 = new Node(2985, node1, 126, 111);
      Node.newString(3906, "]a11&mZPK");
      Node node4 = Node.newString(152, "]a11&mZPK", 2788, 16);
      node4.isDebugger();
      node1.isReturn();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = Node.newNumber((double) 41);
      Node node1 = new Node(41, node0, node0, node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toStringTree();
      node1.cloneTree();
      node0.toString();
      Node node2 = new Node(118, node1, node1, 115, 38);
      node2.setCharno(33);
      node2.isParamList();
      node2.isLabelName();
      node0.siblings();
      node0.getType();
      node0.getFirstChild();
      node0.getDouble();
      node2.isOr();
      Node node3 = node2.cloneTree();
      node3.isAnd();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(33);
      // Undeclared exception!
//      try { 
        node0.isUnscopedQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(37, nodeArray0);
      Node node1 = Node.newNumber((-1.0), 1866, 4959);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.isNew();
      node0.isGetProp();
      // Undeclared exception!
//      try { 
        node2.getExistingIntProp(53);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 53
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      InputId inputId0 = new InputId("_D]vu.");
      Node node1 = Node.newString(30, "_D]vu.");
      node0.addChildToBack(node1);
      node1.getQualifiedName();
      Node node2 = Node.newString("empty_block", 40, 16);
      node2.hasChild(node0);
      node0.isThis();
      node0.isDefaultCase();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node3 = new Node(4, node2, 103, 16);
      Node node4 = node3.cloneNode();
      node4.isGetElem();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(119);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.useSourceInfoFrom(node0);
      node0.checkTreeEqualsImpl(node0);
      Node node1 = new Node(53, node0, 12, 52);
      node1.getQualifiedName();
      node0.isNE();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node((-19), (-19), (-19));
      node0.mayMutateArguments();
      Node node1 = new Node(30, node0, node0, node0, node0, 12, 30);
      node1.copyInformationFrom(node0);
      node0.getQualifiedName();
      node1.isEquivalentTo(node1, true, true, true);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(125, 119, 119);
      node0.isBlock();
      Node node1 = Node.newNumber((double) 38);
      // Undeclared exception!
//      try { 
        node1.replaceChild(node0, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isWhile();
      node0.setIsSyntheticBlock(false);
      node0.isAdd();
      Node node1 = new Node((-479), node0, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node node3 = Node.newString("W7%V*9/q.$lc)4", 2, 64);
      node1.isLocalResultCall();
      node1.isTrue();
      node2.copyInformationFrom(node3);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString(116, "com.google.javascript.rino.Node$Nu<berN%de");
      Node node1 = new Node(46, node0, node0, 40, 39);
      node0.isContinue();
      Node node2 = Node.newString(2, "com.google.javascript.rino.Node$Nu<berN%de");
      node1.replaceChild(node0, node2);
      node2.addSuppression("com.google.javascript.rino.Node$Nu<berN%de");
      node0.getSideEffectFlags();
      node1.addChildAfter(node0, node2);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node1.toString();
      node1.getProp(30);
      Node node2 = Node.newString("prototype");
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      node1.children();
      node3.isOptionalArg();
      node1.isDefaultCase();
      node2.isReturn();
      Node node4 = new Node(54, node0, node2, 49, 1639);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node4);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 54
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 152);
      Node node1 = new Node(2, 30, 167);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node node3 = new Node(4095, node2, 498, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node2.isAnd();
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = "/Lpty_blocF";
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
//      try { 
        ImmutableList.of((TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString(123, "CONST");
      node0.addSuppression((String) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node((-120), node0, node0);
      Node node2 = new Node(50, 1, (-50));
      Node node3 = new Node(8232, node1, node2);
      node3.copyInformationFromForTree(node1);
      node1.isVoid();
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node(94, 94, 94);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.addSuppression("empty_block");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(37, node0, node0);
      node1.isVoid();
      node1.isFromExterns();
      node0.isFromExterns();
      node1.toString(false, false, false);
      node0.isAssignAdd();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.setLength((-1543));
      node0.toString();
      Node node1 = new Node(42, node0, 720, 0);
      node1.useSourceInfoFromForTree(node0);
      node0.isDebugger();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString("com.Joogle.javascript.rhino.SimpleErroeReporter", 2997, 2997);
      Node node1 = new Node(38, node0, 0, 49);
      Node node2 = new Node(51);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.Joogle.javascript.rhino.SimpleErroeReporter");
      node2.useSourceInfoFrom(node1);
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newString("\n\nSubtree1: ", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("\n\nSubtree1: ");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = node2.useSourceInfoFrom(node1);
      Node.newString("\n\nSubtree1: ");
      node1.checkTreeEqualsImpl(node3);
      node3.isOnlyModifiesArgumentsCall();
      node1.isNE();
      node1.isName();
      // Undeclared exception!
//      try { 
        node2.isQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME 2984 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      Node node1 = Node.newString("COLON");
      Node node2 = node0.clonePropsFrom(node1);
      node2.getJSDocInfo();
      Node node3 = Node.newNumber((double) 1, 52, 31);
      node3.isScript();
      node1.isUnscopedQualifiedName();
      node3.isDec();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newString(116, "com.google.javascript.rhino.Node$NumberNode");
      node0.addSuppression("com.google.javascript.rhino.Node$NumberNode");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.checkTreeEquals(node0);
      Node node2 = new Node(96, node1);
      node0.getAncestors();
      node2.isAnd();
      node0.isWith();
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString(",\"");
      Node node1 = Node.newString(116, "com.google.javascript.rhino.Node$NumberNode");
      node1.addSuppression("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node1.isUnscopedQualifiedName();
      node1.setSourceEncodedPosition(40);
      Charset.defaultCharset();
      Node node2 = new Node(50, node1, node1, node0, node0, 37, 36);
      node2.clonePropsFrom(node0);
      node1.mayMutateGlobalStateOrThrow();
      InputId inputId0 = new InputId("com.google.common.base.CharMatcher$FastMatcher");
      node1.isDefaultCase();
      node1.getSourceOffset();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node((-19));
      Node node1 = new Node(40);
      Node node2 = node0.clonePropsFrom(node1);
      node2.getJSDocInfo();
      node2.isScript();
      node2.isUnscopedQualifiedName();
      node1.removeProp(38);
      node2.isDec();
      node1.isNew();
      node2.wasEmptyNode();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newNumber((-1576.2490006904084));
      Node node1 = new Node(32, node0, node0, 50, 52);
      node0.addChildToBack(node1);
      node1.getQualifiedName();
      Node node2 = new Node(120);
      Node node3 = node0.clonePropsFrom(node2);
      Node node4 = new Node(123);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node4.getQualifiedName();
      node2.isNE();
      node3.isContinue();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(2423, 2423, 2097);
      nodeArray0[0] = node0;
      Node node1 = new Node(2423, nodeArray0);
      node0.setOptionalArg(true);
      Node node2 = new Node(2423, node1, node1, node1, 105, 8);
      Node node3 = node2.copyInformationFrom(node0);
      node1.clonePropsFrom(node3);
      Node.newNumber((-468.1));
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString(301, "<$R_c%]f@|");
      node0.addSuppression("!*?B4");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(162, node0, node0);
      node0.isVoid();
      node1.setType(0);
      node0.getAncestor(50);
      node0.isFromExterns();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      InputId inputId0 = new InputId("?,Wef|j^I+G");
      Node node0 = Node.newString(148, "");
      Node node1 = new Node(1);
      node0.addChildToBack(node1);
      node1.isThis();
      Node node2 = new Node((-242), 2, 39);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node0, (Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = new Node(934);
      node0.copyInformationFromForTree(node1);
      node0.isNumber();
      Node node2 = new Node((-1), node0, 52, 48);
      node2.isDebugger();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = new Node(94, 94, 94);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(4095, 42, (-120));
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = node2.useSourceInfoFrom(node1);
      node2.checkTreeEqualsImpl(node1);
      Node node4 = new Node(33);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      // Undeclared exception!
//      try { 
        node4.getQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = new Node(42, node0, node0, 53, 1174);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.checkTreeEquals(node0);
      node1.getInputId();
      Node node3 = new Node(4095, node1);
      int int0 = Node.IS_CONSTANT_NAME;
      node3.isParamList();
      node1.isObjectLit();
      node1.isSetterDef();
      Node.newString("Object#Element");
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = new Node(110);
      node0.isNumber();
      node0.isWhile();
      Charset.defaultCharset();
      node0.isGetElem();
      Node node1 = Node.newString("NUMBER_OBJECT_FUNCTION_TYPE", 154, 50);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString("not a StringNode");
      Node node1 = Node.newString(4095, "}?9*M*YvQHr#GR");
      node1.addSuppression("inferred");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = node2.useSourceInfoFrom(node0);
      node0.checkTreeEqualsImpl(node2);
      Node node4 = new Node(93);
      node4.clonePropsFrom(node2);
      node4.checkTreeTypeAwareEqualsImpl(node3);
      node0.getQualifiedName();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newString("com.Joogle.javascript.rhino.SimpleErroeReporter", 2997, 2997);
      Node node1 = new Node(38, node0, 0, 49);
      Node node2 = new Node(51);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.Joogle.javascript.rhino.SimpleErroeReporter");
      node2.clonePropsFrom(node1);
      node2.getJSDocInfo();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.hasChild(node0);
      node1.isThis();
      node1.isDec();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isNumber();
      node0.isIf();
      Node node1 = new Node(29, 110, 2);
      Node node2 = new Node((-1431), node0, node0, (-1076), (-3384));
      node2.isQualifiedName();
      Node node3 = Node.newString(113, "/Lpty_blocF");
      node0.srcref(node1);
      node3.toString(false, false, false);
      Node node4 = Node.newNumber((double) 0);
      Node node5 = null;
//      try {
        node5 = new Node(55, node0, node0, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString("\n\nSubtree1: ", 2984, 2984);
      Node node1 = new Node(43, node0, 8, 40);
      node1.addSuppression("rA}");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = node1.useSourceInfoFrom(node0);
      node2.checkTreeEqualsImpl(node1);
      Node node4 = new Node(94);
      node1.checkTreeTypeAwareEqualsImpl(node3);
      node1.getQualifiedName();
      node3.isNE();
      node3.removeFirstChild();
      node2.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = new Node(154);
      Stack<Node> stack0 = new Stack<Node>();
      node0.siblings();
      node0.isEquivalentToShallow(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node(0, (-828), 0);
      node0.isStringKey();
      node0.isTry();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = new Node((-19));
      node0.mayMutateArguments();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K8K.Z>y/F:L:");
      Node node1 = new Node(52, 0, 49);
      Node node2 = new Node(30, node1, node0, node1, node1, 12, 30);
      node0.getQualifiedName();
      node2.isEquivalentTo(node2, true, true, true);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newString((-621), "K:iqCiwZ(g{", 126, 4523);
      Node node1 = Node.newNumber(657.973660524, 12, (-2003));
      Node node2 = new Node(2, node0, node0, node0, node1, 2, (-758));
      node0.hasChildren();
      node0.getQualifiedName();
      Node node3 = new Node(103, 15, (-3477));
      node3.isNumber();
      node2.removeChild(node1);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.toString();
      Node node1 = new Node(42, node0, 720, 0);
      node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 56, 56);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node1 = new Node(77);
      Node node2 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 43, 16);
      node2.isQualifiedName();
      node1.setLineno(77);
      node1.getSourceFileName();
      node0.getAncestors();
      Node node3 = new Node((-586), node0);
      node0.isNoSideEffectsCall();
      node3.isWith();
      node3.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node1.toString();
      node1.isUnscopedQualifiedName();
      node1.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = Node.newString("Object#Key");
      Node node3 = new Node(32, node1, node1);
      node2.isUnscopedQualifiedName();
      node2.isVoid();
      node1.setLineno(568);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      Node node4 = node1.srcref(node2);
      node4.isCast();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = new Node(40);
      Node node2 = node1.clonePropsFrom(node0);
      Node node3 = new Node(155, node0);
      node3.getJSDocInfo();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.hasChild(node3);
      node2.isThis();
      node3.isDec();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = Node.newString("}6FU5", (-2615), 1380);
      Node node1 = new Node(15, node0, 2, 154);
      node0.addSuppression("}6FU5");
      node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node1.setCharno(30);
      node_FileLevelJsDocBuilder0.append("<");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node2 = new Node(42);
      Node node3 = new Node(154, node2, 50, 0);
      Node node4 = node0.cloneNode();
      node4.isGetElem();
      node1.checkTreeTypeAwareEqualsImpl(node3);
      node3.isLabelName();
      Node node5 = node3.copyInformationFromForTree(node1);
      node5.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      Node node1 = Node.newString("COLON");
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.useSourceInfoFrom(node0);
      Node.newString(102, "CharMatcher.NONE");
      Node node2 = Node.newString("");
      Node node3 = new Node(37, node1, node2, 4, 105);
      node3.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(119, (-769), 125);
      node0.isBlock();
      Node.newNumber((double) 37);
      node0.isQuotedString();
      node0.isCall();
      Node node1 = node0.getLastSibling();
      node1.toString();
      node0.checkTreeEqualsImpl(node1);
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(56, node0, node0, node0, node0, 53, 49);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node2.siblings();
      node0.isEquivalentToShallow(node1);
      node3.isEquivalentTo(node0, true, true, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isScript();
      int int0 = Node.FREE_CALL;
      node3.isScript();
      int int1 = Node.REFLECTED_OBJECT;
      node3.copyInformationFrom(node2);
      Node node4 = node3.useSourceInfoFrom(node0);
      node4.getNext();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newString(116, "com.google.javascript.rhino.Node$Nu<berN%de");
      Node node1 = new Node(39, node0, node0, node0, 37, 53);
      node0.isContinue();
      Node node2 = Node.newString(2, "com.google.javascript.rhino.Node$Nu<berN%de");
      node0.getIndexOfChild(node1);
      node2.getAncestors();
      node1.replaceChild(node0, node2);
      node1.setIsSyntheticBlock(false);
      node2.setLineno(2);
      node1.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newString("empty_block");
      Node node1 = Node.newString(113, "empty_block");
      node0.addSuppression("Y'7|o]i!1Tra'");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isUnscopedQualifiedName();
      node1.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      Node node2 = Node.newString(" : ");
      Node node3 = new Node(42, node1, node2);
      node2.isVoid();
      node3.addChildrenAfter(node0, node2);
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = new Node(154);
      Stack<Node> stack0 = new Stack<Node>();
      node0.siblings();
      node0.isEquivalentToShallow(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isDec();
      node1.isTrue();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = new Node(332);
      Node node1 = Node.newNumber(0.0);
      node1.getDouble();
      node1.getInputId();
      node0.mayMutateGlobalStateOrThrow();
      node0.getChangeTime();
      node0.copyInformationFrom(node1);
//      try { 
        node1.setString("!39}a@InzUT&Tk7");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 0.0 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(2991, 2991, 2991);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.getJsDocBuilderForNode();
      node2.useSourceInfoFrom(node1);
      Node node3 = node2.useSourceInfoFrom(node1);
      node3.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node3.isOnlyModifiesArgumentsCall();
      node2.isNE();
      node1.isName();
      node3.getDirectives();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = new Node(112);
      ImmutableList.of();
      node0.isCatch();
      node0.isSetterDef();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.setSourceFileForTesting("LE");
      Node node1 = new Node(55, 2147483645, (-1832));
      node1.removeChildren();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node(8);
      Node node1 = new Node(126, node0, node0, node0, node0, 3059, (-2437));
      node1.useSourceInfoIfMissingFrom(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
//      try { 
        node0.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 8
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newNumber((-1576.2490006904084));
      Node node1 = new Node(32, node0, node0, 50, 52);
      node1.toString();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.siblings();
      node1.isEquivalentToShallow(node0);
      node2.isEquivalentTo(node0, true, true, true);
      node1.isScript();
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^n8SXztR");
      Node node1 = Node.newString(30, "%Ip(@p<'M^n8SXztR");
      node1.isNumber();
      node1.isIf();
      Node node2 = new Node(30, 8, 16);
      node1.isQuotedString();
      node2.srcrefTree(node0);
      node2.isFalse();
      node1.isLabelName();
      node0.isSetterDef();
      node2.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2991, 2991);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.getJsDocBuilderForNode();
      Node node3 = node2.useSourceInfoFrom(node1);
      node3.setLength(49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(2);
      node1.addSuppression("9[thu834");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node2.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newString("empty_block");
      Node node1 = Node.newString("empty_block");
      node1.getBooleanProp(4095);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setThrows();
      node0.isUnscopedQualifiedName();
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      Node node2 = Node.newString("empty_block");
      Node node3 = new Node(103, node0, node2);
      node0.isUnscopedQualifiedName();
      node2.isVoid();
      node3.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newString(97, "prev is not a child of this node.");
      Node node1 = new Node(97, node0, node0, 49, 54);
      node1.isAssign();
      Node node2 = new Node(4272, 47, 4);
      node1.getAncestor(52);
      node1.mayMutateArguments();
      Node node3 = new Node(2, node2, node2, 337, 868);
      node0.getInputId();
      Node node4 = new Node(56, node3);
      int int0 = Node.IS_CONSTANT_NAME;
      node1.isParamList();
      node1.isObjectLit();
      node2.isSetterDef();
      Node.newString("prev is not a child of this node.");
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(56, node0, node0, node0, node0, 53, 49);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toString();
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node2.siblings();
      node0.isEquivalentToShallow(node1);
      node1.wasEmptyNode();
      node3.isEquivalentTo(node0, true, true, false);
      node0.isScript();
      node0.isGetProp();
      node1.isFunction();
      node0.isName();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = new Node((-19));
      node0.mayMutateArguments();
      Node node1 = new Node(52, 0, 49);
      node0.hasChildren();
      Node node2 = new Node(30, node1, node0, node1, node1, 12, 30);
      node0.getQualifiedName();
      node2.isEquivalentTo(node2, true, false, false);
      node2.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = new Node((-19));
      node0.mayMutateArguments();
      Node node1 = new Node(52, 0, 49);
      node0.hasChildren();
      Node node2 = new Node(30, node1, node0, node1, node1, 12, 30);
      node0.getQualifiedName();
      node0.isLabelName();
      node2.isWith();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node1 = Node.newNumber(255.0815461916);
      node1.setVarArgs(true);
      node1.isNoSideEffectsCall();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g0vn_6prj5RfJ");
      node0.cloneTree();
      node1.setChangeTime(53);
      // Undeclared exception!
//      try { 
        node0.setDouble(4095);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newNumber((-1576.2490006904084));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      Node node1 = new Node(32, node0, node0, 50, 52);
      node0.addChildToBack(node1);
      node1.getQualifiedName();
      node0.hasChild(node1);
      node1.isThis();
      node0.isDefaultCase();
      node1.isTypeOf();
      node0.getInputId();
      // Undeclared exception!
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = new Node(112);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Set<String> set0 = jSDocInfo0.getSuppressions();
      node0.setDirectives(set0);
      Node node1 = Node.newString("-D1|1/Kl$z}]v");
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.children();
      node0.isOptionalArg();
      node0.isCast();
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node.newString(",\"");
      String string0 = "com.google.javascript.rhino.Node$NumberNode";
      Node node0 = Node.newString(116, "com.google.javascript.rhino.Node$NumberNode");
      node0.addSuppression("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = Node.newString(4, "com.google.javascript.rhino.Node$NumberNode");
      node0.checkTreeEquals(node1);
      // Undeclared exception!
//      try { 
        node1.srcref((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newString("\n\nSubtree1: ", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("\n\nSubtree1: ");
      Node node2 = new Node(47, node1, node1, 57, 31);
      Node node3 = node2.useSourceInfoFrom(node1);
      node3.getBooleanProp(46);
      node1.checkTreeEqualsImpl(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node4 = new Node(2);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.checkTreeEquals(node2);
      Node node5 = Node.newString(2523, "Node tree inequality:\nTree1:\nSTRING \n\nSubtree1:  2984 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004]\n\n\nTree2:\nREGEXP 0\n    NAME 0\n        STRING \n\nSubtree1:  2984 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004]\n\n\nSubtree1: STRING \n\nSubtree1:  2984 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004]\n\n\nSubtree2: REGEXP 0\n    NAME 0\n        STRING \n\nSubtree1:  2984 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004]\n");
      node5.isCast();
      node3.srcrefTree(node4);
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newString("\n\nSubtree1: ", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("\n\nSubtree1: ");
      Node node2 = new Node(47, node1, node1, 57, 31);
      Node node3 = node2.useSourceInfoFrom(node1);
      node3.getBooleanProp(46);
      node1.checkTreeEqualsImpl(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node((-1480));
      Node node5 = new Node(33, node4, 56, 50);
      Node node6 = node3.cloneNode();
      node6.isGetElem();
      node6.checkTreeTypeAwareEqualsImpl(node0);
      node0.isLabelName();
      node0.getProp(885);
      node2.isDebugger();
      node5.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = Node.newString(116, "com.google.javascript.rhino.Node$NumberNode");
      Node node1 = new Node(39, node0, node0, node0, 37, 53);
      node0.isContinue();
      Node node2 = Node.newString(2, "com.google.javascript.rhino.Node$NumberNode");
      node2.mayMutateGlobalStateOrThrow();
      node1.srcrefTree(node2);
      node2.isQuotedString();
      node2.isFalse();
      Node node3 = new Node(15, 2, 57);
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(148, "", 317, 148);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("com.google.common.collect.Maps$1");
      node0.getAncestor(112);
      node0.isGetterDef();
      node0.isNumber();
      node0.isCatch();
      node0.isDec();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getSuppressions();
      Node node1 = Node.newString(32, "46GVhIPBWr");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node3 = new Node(307);
      Node node4 = new Node(53, node1, node2, node3, node2, 18, 57);
      Node node5 = new Node(149, node4, 32, 3798);
      Node node6 = node0.cloneNode();
      node5.isGetElem();
      node6.isLabelName();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(56, node0, node0, node0, node0, 53, 49);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toString();
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node2.siblings();
      node0.isEquivalentToShallow(node1);
      node1.removeChildren();
      Node node4 = new Node(598, 52, 40);
      node3.checkTreeEqualsImpl(node1);
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSType jSType1 = jSTypeRegistry0.createOptionalType(jSType0);
      jSTypeArray0[0] = jSType1;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("first new child has existing sibling");
      node_FileLevelJsDocBuilder0.append("empty_block");
      node0.setSourceEncodedPosition(1);
      node0.isExprResult();
      Node node1 = new Node((-181), node0, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.isCast();
      node1.srcrefTree(node2);
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(8, 1, 55);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toString();
      node2.useSourceInfoFromForTree(node1);
      node2.siblings();
      // Undeclared exception!
//      try { 
        node0.isEquivalentToShallow((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newString(110, "CONST");
      node0.isContinue();
      String string0 = "no next sibling.";
      Node.newString(29, "no next sibling.");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = new Node(103);
      EvoSuiteFile evoSuiteFile0 = null;
      node1.clonePropsFrom(node0);
      Node node2 = null;
//      try {
        node2 = new Node((-52), (Node[]) null, 3113, (-2850));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString(141, "CONST", 141, 141);
      Node node1 = Node.newNumber((double) 42, 133, 30);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("CONST");
      node0.setSourceEncodedPosition(32);
      node1.isExprResult();
      node0.useSourceInfoFrom(node1);
      Node node2 = new Node(4, node1, node0, 56, 40);
      node2.isCast();
      Node node3 = node2.srcrefTree(node0);
      node3.isWith();
      Node.extractLineno(15);
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node(110);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      Node node1 = Node.newString(49, "com.google.common.collect.ArrayListMultimap", 52, 2895);
      node0.toString(true, true, false);
      node1.isNot();
      Stack<Node> stack0 = new Stack<Node>();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newNumber((double) 20);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newString("com.google.common.collect.AbstractMultimap", 49, 54);
      Node node2 = new Node(2, node0, node0, node1, 57, (-2523));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Object#Key");
      node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node3 = new Node(50);
      Node node4 = null;
//      try {
        node4 = new Node(4095, node1, (-2417), 39);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "W7%V*9/q.$lc)4");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "W7%V*9/q.$lc)4");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_SlW");
      Node node0 = Node.newString("_SlW", 1556, 1556);
      node0.setSourceEncodedPositionForTree((-5045));
      node0.setChangeTime(1556);
      node0.setSourceFileForTesting("_SlW");
      Node node1 = Node.newNumber((-1.0), 30, 0);
      node0.getProp(2487);
      node0.getStaticSourceFile();
      node0.isTry();
      node0.isReturn();
      node1.isOnlyModifiesThisCall();
      node1.isTry();
      node1.isFalse();
      node0.getJSType();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.removeProp(8);
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(56, node0, node0, node0, node0, 53, 49);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toString();
      Node node3 = node2.useSourceInfoFromForTree(node1);
      Iterable<Node> iterable0 = new ArrayList<Node>();
      node3.getSourceOffset();
      node3.isEquivalentTo(node1);
      node3.isEquivalentTo(node0, true, true, false);
      node0.isScript();
      node3.isScript();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getSuppressions();
      Node node1 = Node.newNumber((double) 49, 3000, 18);
      Node node2 = Node.newString(15, ".)xN^Yh7A");
      node2.isNull();
      node0.getInputId();
      Node node3 = new Node(1, node1);
      node3.getAncestors();
      int int0 = Node.INCRDECR_PROP;
      node3.isNE();
      // Undeclared exception!
//      try { 
        node3.getChildBefore(node0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-19));
      InputId inputId0 = new InputId("\"");
      Node node1 = Node.newString(53, "C-BZFOX~9tWjA`{~");
      node1.addChildToBack(node0);
      node0.getQualifiedName();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("qih)M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.setSourceEncodedPosition((-1059));
      node1.isExprResult();
      Node node3 = node1.useSourceInfoFrom(node0);
      node3.isCast();
      node2.srcrefTree(node0);
      node2.isWith();
      Node.extractLineno((-560));
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newString("$&o");
      node0.getStaticSourceFile();
      node0.setOptionalArg(true);
      node0.putIntProp(4096, (-908));
      node0.putProp(2769, (Object) null);
      node0.setCharno(4805);
      node0.setOptionalArg(false);
      // Undeclared exception!
//      try { 
        node0.isEquivalentTo((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = new Node(3, 3, 3);
      Node node1 = new Node(3, node0, node0, (-1305), 2558);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      node1.isStringKey();
      Node node2 = node1.removeChildren();
      double double0 = (-1574.0761);
      int int0 = 779;
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSType jSType1 = jSTypeRegistry0.createOptionalType(jSType0);
      jSTypeArray0[0] = jSType1;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = Node.newString(38, "dUQ Ap9WT9F@faH");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getQualifiedName();
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      InputId inputId0 = new InputId("vZj*odVO");
      node1.addChildToBack(node0);
      node1.isStringKey();
      node1.isBlock();
      node0.getQualifiedName();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString("\n\nSubtree1: ", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("\n\nSubtree1: ");
      Node node2 = new Node(47, node1, node1, 57, 31);
      Node node3 = node2.useSourceInfoFrom(node1);
      node1.checkTreeEqualsImpl(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node4 = new Node(2);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.getQualifiedName();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newString("\n\nSubtree1: ", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("\n\nSubtree1: ");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = node2.useSourceInfoFrom(node1);
      node1.checkTreeEqualsImpl(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node4 = new Node(2);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.getQualifiedName();
      node4.isOnlyModifiesArgumentsCall();
      node1.copyInformationFrom(node3);
      node2.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newNumber((-407.3434203202587));
      Node node1 = new Node(15, node0, 3899, 8287);
      node0.addSuppression("Vmi?si!");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Vmi?si!");
      node0.useSourceInfoFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node3 = new Node(48);
      Node node4 = new Node(132, node3, 39, 43);
      node4.cloneNode();
      node3.isGetElem();
      node3.checkTreeTypeAwareEqualsImpl(node4);
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node.newString("hjU/n{!h");
      Node node0 = Node.newString(118, "hjU/n{!h", 36, 49);
      node0.toString(false, false, false);
      node0.isInc();
      Vector<Node> vector0 = new Vector<Node>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isHook();
      Node.extractCharno(8);
      node0.isVar();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(126, 126, 117);
      node0.setSourceEncodedPositionForTree(126);
      node0.isLabel();
      node0.isObjectLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.checkTreeEqualsImpl(node1);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("y1qMj|U5A5", node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newString("}6FU5", (-2615), 1380);
      Node node1 = new Node(15, node0, 2, 154);
      node0.addSuppression("}6FU5");
      node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("<");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node3 = new Node(42);
      Node node4 = new Node(154, node3, 50, 0);
      Node node5 = node0.cloneNode();
      node5.isGetElem();
      Node node6 = new Node(844, node2);
      node6.checkTreeTypeAwareEqualsImpl(node4);
      node4.isLabelName();
      node0.isCall();
      node4.cloneTree();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-19));
      InputId inputId0 = new InputId("\"");
      Node node1 = Node.newString(53, "C-BZFOX~9tWjA`{~");
      node1.addChildToBack(node0);
      node0.getQualifiedName();
      node0.isThis();
      node1.isEquivalentTo(node1, true, true, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isScript();
      int int0 = Node.FREE_CALL;
      node1.isScript();
      int int1 = Node.REFLECTED_OBJECT;
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.EVAL_ERROR_TYPE;
      jSTypeRegistry0.getNativeType(jSTypeNative0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      InputId inputId0 = new InputId("vZj*odVO");
      node1.addChildToBack(node0);
      node1.isStringKey();
      node1.getQualifiedName();
      node0.isNE();
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(56, node0, node0, node0, node0, 53, 49);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toString();
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node2.siblings();
      node0.isEquivalentToShallow(node1);
      node3.isEquivalentTo(node0, true, true, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isScript();
      int int0 = Node.FREE_CALL;
      node3.isScript();
      int int1 = Node.REFLECTED_OBJECT;
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newString(116, "com.google.javascript.rhino.Node$NumberNode");
      node0.toString(true, true, false);
      Node node1 = Node.newString("empty_block", 48, (-296));
      node0.addChildToBack(node1);
      Vector<Node> vector0 = new Vector<Node>(16);
      node1.isThrow();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder1.append("B*[s,cIWh");
      node1.getAncestors();
      node0.isBreak();
      Node node2 = new Node(8192, node0, node0);
      node1.getAncestors();
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.ImmutableList$SubList");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newString((-3799), "<CSR");
      node0.setIsSyntheticBlock(true);
      node0.getSourceOffset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node1 = new Node(30);
      Node node2 = new Node((-740), node0, 12, 777);
      node1.cloneNode();
      node1.isGetElem();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = Node.newString("<CSR");
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2098));
      node_SideEffectFlags0.clearAllFlags();
      Node node1 = new Node(36);
      Node node2 = new Node(64, node1, 1, 40);
      Node node3 = node2.cloneNode();
      node2.isGetElem();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", 43, 48);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.toString(true, false, false);
      node0.isInc();
      Node node2 = new Node((-1229), node0);
      node0.isQualifiedName();
      node1.setSourceEncodedPosition(51);
      node0.setLineno(36);
      node2.getSourceFileName();
      node1.getAncestors();
      node0.isAnd();
      node2.isCall();
      node1.isScript();
      node2.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newString(",\"");
      node0.setIsSyntheticBlock(true);
      int int0 = Node.OPT_ARG_NAME;
      node0.useSourceInfoIfMissingFrom(node0);
      node0.isLabel();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry1.getNativeType(jSTypeNative0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ObjectType objectType0 = ObjectType.cast(jSType0);
      JSType jSType1 = modificationVisitor0.caseObjectType(objectType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType1, jSType1, (JSType) objectType0, jSType0);
      ImmutableList<JSType> immutableList1 = immutableList0.asList();
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) immutableList1);
      node0.checkTreeEquals(node1);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", (-308), 48);
      Node node2 = Node.newNumber((-2440.893385739), 15, 48);
      Node node3 = new Node(48, node1, node1, node1, node0, 4095, 29);
      node2.hasChildren();
      node2.cloneNode();
      Node node4 = new Node(456, 2, 458);
      node3.getQualifiedName();
      node0.isEquivalentTo(node2, true, true, true);
      // Undeclared exception!
//      try { 
        node3.removeChild(node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^8XztR");
      Node node1 = Node.newString(30, "%Ip(@p<'M^8XztR");
      node0.addChildrenToFront(node1);
      node0.isEquivalentTo(node0);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", (-308), 48);
      node0.toString(false, false, false);
      node0.isInc();
      node1.addChildToBack(node0);
      Vector<Node> vector0 = new Vector<Node>();
      node1.isGetElem();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("DEFAULT_CASE");
      node0.setSourceEncodedPosition(37);
      node0.isExprResult();
      Node node2 = node0.useSourceInfoFrom(node0);
      node1.isCast();
      Node node3 = node2.srcrefTree(node0);
      node3.isWith();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newString(110, "CONST");
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(114, node0, node0, node0, node0);
      node0.isUnscopedQualifiedName();
      node1.isDo();
      Node node2 = new Node(55, (-311), 532);
      // Undeclared exception!
//      try { 
        node2.removeChild(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString("yOV7");
      node0.setQuotedString();
      Node node1 = new Node(32, node0);
      node0.setSourceEncodedPosition(48);
      node0.addChildToBack(node1);
      node0.isCatch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node3 = Node.newNumber((double) 42, 43, (-2575));
      node1.isFromExterns();
      Node node4 = new Node(31, node2);
      Node node5 = Node.newString("Object#Key", 152, (-4149));
      node5.setIsSyntheticBlock(false);
      node3.setLineno(4);
      node1.isName();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", (-308), 48);
      node0.toString(false, false, false);
      node0.isInc();
      Vector<Node> vector0 = new Vector<Node>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isHook();
      node0.addChildToFront(node1);
      node1.setString("DEFAULT_CASE");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.getLineno();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = Node.newString("@%j5`=", 105, 42);
      Node node2 = new Node(113, node0, 15, 36);
      node1.addSuppression("%Ip(@p<'M^n8SXztR");
      Node node3 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("emptHy_block");
      node2.useSourceInfoFrom(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node4 = new Node(83);
      Node node5 = new Node(2918, node4, 50, 54);
      node5.mayMutateGlobalStateOrThrow();
      node0.cloneNode();
      node5.isGetElem();
      node5.checkTreeTypeAwareEqualsImpl(node4);
      Node node6 = new Node(4095, 0, 12);
      node6.isLabelName();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", (-308), 48);
      node0.toString(false, false, false);
      node0.isInc();
      node1.addChildToBack(node0);
      Vector<Node> vector0 = new Vector<Node>();
      node1.isGetElem();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("DEFAULT_CASE");
      node0.setSourceEncodedPosition(37);
      node0.isExprResult();
      node0.useSourceInfoFrom(node0);
      node1.isTry();
      Node node2 = node1.getFirstChild();
      node2.wasEmptyNode();
      Node.mergeLineCharNo(1, 42);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Set<String> set0 = jSDocInfo0.getSuppressions();
      node0.setDirectives(set0);
      Node node1 = Node.newString("23q)");
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.children();
      node0.isOptionalArg();
      node0.isCast();
      node1.isTypeOf();
      node1.getInputId();
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node((-135), node0, node0);
      node1.cloneNode();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newString(134, "CONST", 134, 134);
      Node node1 = new Node(31, node0, node0, node0, node0, 57, 57);
      Vector<Node> vector0 = new Vector<Node>();
      node0.isGetElem();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("duplicate child");
      node_FileLevelJsDocBuilder0.append("duplicate child");
      node1.isExprResult();
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = new Node(584);
      node3.getAncestors();
      node2.isAnd();
      node0.isCall();
      node1.isScript();
      int int0 = Node.POST_FLAG;
      Node node4 = new Node(57, node3);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = new Node(37);
      Node node1 = new Node(11);
      node0.copyInformationFromForTree(node1);
      // Undeclared exception!
//      try { 
        node0.getChildAtIndex(37);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-19));
      InputId inputId0 = new InputId("\"");
      Node node1 = Node.newString(53, "C-BZFOX~9tWjA`{~");
      node1.addChildToBack(node0);
      node0.getQualifiedName();
      node0.isThis();
      Node node2 = new Node((-1834), 48, 47);
      node2.mayMutateGlobalStateOrThrow();
      node1.hasMoreThanOneChild();
      node1.addChildBefore(node2, node0);
      node1.isDec();
      node2.isNew();
      // Undeclared exception!
//      try { 
        node1.addChildToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString(110, "l=Z! xY=|pJCg");
      Node node1 = new Node((-1180));
      node1.addSuppression("l=Z! xY=|pJCg");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node0.isUnscopedQualifiedName();
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = Node.newString("l=Z! xY=|pJCg");
      Node node3 = new Node(47, node1, node1);
      node1.isUnscopedQualifiedName();
      node2.isVoid();
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2991, 2991);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.siblings();
      node0.isEquivalentToShallow(node2);
      node1.isEquivalentTo(node2, false, true, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("com.google.javascript.rhino.SimpleErrorReporter", node2, templateType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      jSTypeArray0[0] = (JSType) enumElementType1;
      TemplateType templateType1 = jSTypeRegistry0.createTemplateType("Not declared as a type name");
      jSTypeArray0[1] = (JSType) templateType1;
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.isStringKey();
      node0.isDec();
      node3.isNew();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newNumber(712.32532, 8192, 49);
      InputId inputId0 = new InputId("`Id:+9");
      node0.putBooleanProp(8192, false);
      node0.getSideEffectFlags();
      node0.getIntProp(188);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(105, nodeArray0, 39, 54);
      node1.isCase();
      node1.srcrefTree(node0);
      // Undeclared exception!
//      try { 
        node1.checkTreeEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", 43, 48);
      node0.toString(false, false, true);
      node1.addChildToBack(node0);
      Vector<Node> vector0 = new Stack<Node>();
      node0.isThrow();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      node0.getAncestors();
      node1.isLocalResultCall();
      node0.toString(false, false, false);
      node1.isNot();
      Stack<Node> stack0 = new Stack<Node>();
      node1.isThrow();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      Node node1 = new Node(31);
      node0.isOptionalArg();
      node0.toStringTree();
      node1.addSuppression("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node.newNumber((-3275.676));
      node2.checkTreeEquals(node0);
      Node node3 = new Node(126, 50, 37);
      node2.cloneTree();
      Node node4 = Node.newNumber((double) 50);
      node4.checkTreeEqualsImpl(node2);
      node0.isGetProp();
      node4.cloneTree();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newNumber((-1575.2420866082));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      Node node1 = Node.newString(31, "C-BZFOX~9tWjA`{~");
      node0.addChildToBack(node1);
      node1.getQualifiedName();
      node0.hasChild(node1);
      node1.isThis();
      node0.isDefaultCase();
      Node node2 = new Node(536870912, (-3121), 30);
      node2.copyInformationFromForTree(node0);
      node1.checkTreeEqualsImpl(node0);
      node1.isGetProp();
      node0.isGetterDef();
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(2, node0, node0, node0, node0, 12, 1610612736);
      node1.isGetterDef();
      node1.isNoSideEffectsCall();
      node1.mayMutateGlobalStateOrThrow();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node0.getQualifiedName();
      node1.isEquivalentTo(node0, false, true, true);
      node0.checkTreeEqualsImpl(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      node_NodeMismatch0.equals(templateType0);
      node1.isDefaultCase();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("Object#Key", node0, templateType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.getRootNode();
      node0.addChildrenAfter(node1, (Node) null);
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node.newString(",\"");
      Node node0 = Node.newString(116, "com.google.javascript.rhino.Node$NumberNode");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newNumber(0.0, 3126, 48);
      node1.addChildToBack(node0);
      Node node2 = node1.removeChildren();
      node2.putBooleanProp(126, true);
      int int0 = Node.INCRDECR_PROP;
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = Node.newString(",\"");
      Node node1 = Node.newString(116, "com.google.javascript.rhino.Node$NumberNode");
      node0.setIsSyntheticBlock(true);
      int int0 = Node.OPT_ARG_NAME;
      node0.isLabel();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry1.getNativeType(jSTypeNative0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ObjectType objectType0 = ObjectType.cast(jSType0);
      JSType jSType1 = modificationVisitor0.caseObjectType(objectType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType1, jSType1, (JSType) objectType0, jSType0);
      ImmutableList<JSType> immutableList1 = immutableList0.asList();
      Node node2 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) immutableList1);
      node1.checkTreeEquals(node2);
      InputId inputId0 = new InputId((String) null);
      node1.addChildToBack(node2);
      node0.isStringKey();
      node2.isAssignAdd();
      Node node3 = jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("Object#Key", 706, 706);
      node0.toStringTree();
      Node node1 = new Node(48, node0, node0, node0, 302, 2);
      node1.isQuotedString();
      node1.checkTreeEqualsImpl(node0);
      Node node2 = node1.clonePropsFrom(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node3 = Node.newString(38, "u,3ZxVSX-4^m", (-2360), 37);
      node3.addChildrenToBack(node2);
      Node node4 = node2.cloneNode();
      node4.getIntProp((-3361));
      node4.setCharno(48);
      node1.isEquivalentToTyped(node2);
      node0.getSourcePosition();
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toString();
      node1.isExprResult();
      Node node3 = null;
//      try {
        node3 = new Node(4095, node0, node1, node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newNumber((-407.3434203202587));
      InputId inputId0 = new InputId("");
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = Node.newNumber(712.32532, 8192, 49);
      InputId inputId0 = new InputId("`Id:+9");
      node0.putBooleanProp(8192, false);
      node0.getIntProp(188);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node0.toStringTree();
      node_AncestorIterable0.iterator();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.iterator();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(1, node0, node0, node0, node0);
      node0.isUnscopedQualifiedName();
      node1.removeChild(node0);
      Node.extractCharno(0);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isDec();
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Charset.defaultCharset();
      Node node0 = Node.newNumber((double) 110);
      Charset.defaultCharset();
      node0.isGetElem();
      node0.isScript();
      node0.getStaticSourceFile();
      // Undeclared exception!
//      try { 
        node0.copyInformationFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newString("Should not happen\n", 11, 159);
      Node node1 = new Node(117, node0, 2854, 16);
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.addSuppression("ALWAYS_FALSE");
      node1.checkTreeEquals(node0);
      node1.getIntProp(1);
      node0.setOptionalArg(true);
      node2.isEquivalentToTyped(node0);
      String string0 = null;
      // Undeclared exception!
//      try { 
        Node.newString(43, (String) null, 52, 50);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Charset.defaultCharset();
      node1.isThis();
      node1.type = 36;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node(102, node0, node1, node1, node1, 51, 12);
      node2.cloneNode();
      node2.isWith();
      node1.addChildToFront(node2);
      node0.setString("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newString("empty_block");
      Node node1 = Node.newString("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      node1.getBooleanProp(4095);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Node node2 = Node.newString("hjU/n{!h");
      node2.checkTreeEqualsImpl(node0);
      node1.isOptionalArg();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, (Node) null);
      node2.getAncestor(32);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter((Node) null, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = Node.newString(",\"");
      Node node1 = Node.newString(116, "com.google.javascript.rhino.Node$NumberNode");
      node1.addSuppression("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node1.isUnscopedQualifiedName();
      node1.setSourceEncodedPosition(40);
      Charset.defaultCharset();
      Node node2 = new Node(119, 116, 116);
      node2.clonePropsFrom(node0);
      node1.mayMutateGlobalStateOrThrow();
      InputId inputId0 = new InputId("com.google.common.base.CharMatcher$FastMatcher");
      node1.isDefaultCase();
      node1.getSourceOffset();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      node0.children();
      node0.isOptionalArg();
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toString();
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node2.siblings();
      node0.isEquivalentToShallow(node1);
      node3.isEquivalentTo(node0, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node4.isStringKey();
      node3.isAssignAdd();
      // Undeclared exception!
//      try { 
        node1.addChildrenAfter(node4, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      node0.putBooleanProp(39, true);
      node0.getIntProp((-60));
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[3] = node0;
      nodeArray0[1] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      node0.toString(true, true, true);
      Node node1 = null;
//      try {
        node1 = new Node(1, nodeArray0, 15, (-39));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.getProp(30);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Set<String> set0 = jSDocInfo0.getSuppressions();
      node0.setDirectives(set0);
      Node node1 = Node.newString("COLON");
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.children();
      node0.isOptionalArg();
      node0.isCast();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newString(148, "w}", 379, 148);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.checkTreeEquals(node0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry2.getType("w}");
      jSTypeArray0[0] = null;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      node0.isTrue();
      node1.getJSDocInfo();
      Node node2 = new Node(4095, (-1485), 103);
      node0.isFor();
      node0.isArrayLit();
      Node node3 = Node.newString("Named type with empty name component");
      node3.isFunction();
      node1.isCatch();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node3);
      InputId inputId0 = new InputId("emptHy_block");
      node_NodeMismatch0.equals(inputId0);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", 43, 48);
      node0.addChildToBack(node1);
      node1.isCatch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node3 = Node.newNumber((-935.61702));
      node2.checkTreeEquals(node3);
      Node node4 = new Node(668, 53, 1307);
      node1.checkTreeEqualsImpl(node3);
      node3.isGetProp();
      Node node5 = new Node(51, node0, (-3799), 50);
      node1.clonePropsFrom(node5);
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", 43, 48);
      node0.toString(true, false, false);
      node1.addChildToBack(node0);
      Vector<Node> vector0 = new Vector<Node>(50);
      node0.isThrow();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("B*[s,cIWh");
      node0.setSourceEncodedPosition(37);
      node0.getSourceFileName();
      node0.getAncestors();
      node1.getSourceOffset();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", (-308), 48);
      node0.toString(false, false, false);
      node0.isInc();
      node1.addChildToBack(node0);
      Vector<Node> vector0 = new Vector<Node>();
      node1.isGetElem();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("DEFAULT_CASE");
      node0.setSourceEncodedPosition(37);
      node0.isExprResult();
      Node node2 = node0.useSourceInfoFrom(node0);
      node2.getAncestors();
      node0.isAnd();
      node1.isCall();
      node0.isScript();
      int int0 = Node.POST_FLAG;
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString("Object#Key");
      node0.hasMoreThanOneChild();
      Node node1 = new Node(53, node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      node0.isIf();
      node1.children();
      node0.isOptionalArg();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newString(126, "CONST");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newString(52, "CONST", 1, 55);
      InputId inputId0 = new InputId("CONST");
      node0.isCast();
      node0.setType(1075);
      node1.isInstanceOf();
      node1.isTypeOf();
      Node node2 = Node.newNumber((-1840.29285), 422, 1);
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node1.checkTreeEquals(node0);
      node1.checkTreeEquals(node0);
      node1.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1738);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setThrows();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = null;
//      try {
        node2 = new Node(42, node0, node0, node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      node0.checkTreeEquals(node0);
      Node node1 = new Node(4095, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node0);
      Node node3 = new Node(29, node1);
      node3.isQualifiedName();
      node2.setSourceEncodedPosition(1);
      node2.setLineno(1444);
      node1.getSourceFileName();
      node1.getAncestors();
      Node node4 = node1.getLastSibling();
      node4.setLineno(119);
      node2.isName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node3.setJSDocInfo(jSDocInfo0);
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      node0.setOptionalArg(false);
      Node node1 = Node.newString("l=Z! xY=|pJCg", 51, 12);
      node1.setSourceEncodedPositionForTree(56);
      node0.addChildToBack(node1);
      node0.isStringKey();
      node0.isEmpty();
      node1.isAnd();
      node1.isCall();
      node1.isIn();
      int int0 = Node.INCRDECR_PROP;
      node0.isDec();
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newString(379, "NOT", 110, (-649));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newNumber((-1575.2420866082), (-632), 57);
      Node node2 = new Node(55);
      Node node3 = node2.clonePropsFrom(node0);
      node3.getJSDocInfo();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.hasChild(node3);
      Node node4 = Node.newString(55, "%Ip(@p<'M^n8SXztR");
      node4.isThis();
      node4.isDec();
      Node node5 = new Node(37, 40, 2319);
      node5.isNew();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.getBooleanProp((-2962));
      node0.setIsSyntheticBlock(true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      node0.checkTreeEquals(node0);
      Node node1 = Node.newNumber((double) 48, (-632), 40);
      node1.isFromExterns();
      Node node2 = new Node(52, node0);
      Node node3 = new Node(1885, node2, node1);
      node3.isScript();
      node3.cloneTree();
      int int0 = Node.FREE_CALL;
      Node node4 = Node.newNumber(32.0);
      node4.getLength();
      node3.hasOneChild();
      node4.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toString();
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node2.siblings();
      node0.isEquivalentToShallow(node1);
      node3.isEquivalentTo(node0, true, true, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node4.checkTreeEqualsImpl(node3);
      node2.addChildrenToBack(node4);
      node0.isQualifiedName();
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", 43, 48);
      node0.toString(true, false, false);
      node1.addChildToBack(node0);
      Vector<Node> vector0 = new Vector<Node>(50);
      node0.isThrow();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      Node.AncestorIterable node_AncestorIterable1 = node1.getAncestors();
      node_AncestorIterable1.iterator();
      node0.mayMutateGlobalStateOrThrow();
      node0.isUnscopedQualifiedName();
      node1.isDo();
      Node node2 = new Node(95, 57, 4);
      // Undeclared exception!
//      try { 
        node2.removeChild(node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newString((-542), "");
      Node node1 = new Node((-542), node0, node0, 29, 0);
      Node node2 = new Node(0, node1, node1, node1, node1);
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      node2.isQuotedString();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node1.mayMutateGlobalStateOrThrow();
      node0.isUnscopedQualifiedName();
      node1.isDo();
      // Undeclared exception!
//      try { 
        node1.removeChild(node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", (-308), 48);
      node0.toString(false, false, false);
      node0.isInc();
      node1.addChildToBack(node0);
      Vector<Node> vector0 = new Vector<Node>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isHook();
      Node.extractCharno(168);
      node0.isVar();
      node1.hasChildren();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newString("yOV7");
      node0.setQuotedString();
      Node node1 = new Node(32, node0);
      node0.setSourceEncodedPosition(48);
      node0.addChildToBack(node1);
      node0.isCatch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node2 = Node.newNumber((-1628.0));
      // Undeclared exception!
      node2.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.setOptionalArg(true);
      Node node2 = Node.newString("~z JrJELB B%^GvP%", 42, 40);
      node0.setSourceEncodedPositionForTree(0);
      Node node3 = new Node(40, 39, 4);
      node1.addChildToBack(node3);
      node3.isStringKey();
      node2.isEmpty();
      node3.isAnd();
      node3.isCall();
      node1.isIn();
      int int0 = Node.INCRDECR_PROP;
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^n8SXztR");
      node0.setIsSyntheticBlock(true);
      node0.isContinue();
      Node node1 = new Node(1, 8202, (-1144));
      Node node2 = Node.newNumber(1298.398, 52, 43);
      node1.copyInformationFrom(node2);
      node0.isNull();
      node2.getInputId();
      Node node3 = new Node(8202, node2);
      int int0 = 148;
      // Undeclared exception!
//      try { 
        node3.setDouble(1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 8202
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^n8SXztR", 2984, 2984);
      Node node1 = new Node(32, node0, 44, 51);
      node1.addSuppression("msg.jsdoc.function.varargs");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("4EH;D-[1`$");
      node2.useSourceInfoFrom(node1);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newString(126, "CONST", 126, 126);
      node0.setOptionalArg(false);
      Node node1 = Node.newString(52, "CONST", 1, 55);
      InputId inputId0 = new InputId("CONST");
      Node node2 = new Node(51, node1, node1);
      node0.getAncestors();
      node2.getAncestors();
      // Undeclared exception!
//      try { 
        node1.appendStringTree((Appendable) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Charset.defaultCharset();
      node1.isThis();
      node0.isAnd();
      node0.isCall();
      node1.isIn();
      int int0 = Node.INCRDECR_PROP;
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^n8SXztR");
      Node node1 = Node.newString(30, "%Ip(@p<'M^n8SXztR");
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      node0.addChildrenToFront(node2);
      jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      node2.getQualifiedName();
      node1.isRegExp();
      node2.isTry();
      node0.getFirstChild();
      Node node3 = Node.newString(1, "Object#Key");
      node3.isWith();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^n8SXztR");
      node0.setIsSyntheticBlock(true);
      node0.isContinue();
      Node node1 = new Node(1, 8202, (-1144));
      Node node2 = Node.newNumber(1298.398, 52, 43);
      node0.isNull();
      node2.getInputId();
      Node node3 = new Node(8202, node2);
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(57);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.toString(false, true, true);
      Node node1 = new Node(49, node0, node0);
      Node.newString(11, "\"a");
      Node node2 = node1.cloneNode();
      node0.mayMutateGlobalStateOrThrow();
      node1.isGetElem();
      node1.isNE();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node2.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.addSuppression("*V\"c2]");
      node2.checkTreeEquals(node1);
      node0.getIntProp(57);
      node1.setOptionalArg(true);
      node1.isEquivalentToTyped(node2);
      Node node3 = Node.newString(29, "com.google.javascript.rhino.SimpleErrorReporter", 51, 11);
      InputId inputId0 = new InputId("Node has existing properties.");
      node2.isCast();
      node3.srcrefTree(node0);
      Node node4 = null;
//      try {
        node4 = new Node(1101, node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, 148);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.isQualifiedName();
      node0.setSourceEncodedPosition((-3123));
      node0.setLineno(1456);
      node0.getSourceFileName();
      node0.isAnd();
      Node node1 = new Node(2, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newNumber((-1575.2420866082));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      Node node1 = Node.newString(31, "C-BZFOX~9tWjA`{~");
      node0.addChildToBack(node1);
      node0.getQualifiedName();
      node0.hasChild(node1);
      node1.isThis();
      node1.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isOnlyModifiesArgumentsCall();
      node1.isNE();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newString(126, "CONST");
      node0.setOptionalArg(false);
      Node node1 = Node.newString(52, "CONST", 1, 55);
      InputId inputId0 = new InputId("CONST");
      Node node2 = new Node(51, node1, node1);
      node2.getAncestors();
      node0.isBreak();
      node2.isScript();
      int int0 = Node.FREE_CALL;
      node2.getLength();
      node0.isVar();
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newString("CONST");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString((-3799), "<CSR");
      node0.setIsSyntheticBlock(true);
      node0.getSourceOffset();
      node1.isSwitch();
      node0.isTrue();
      node1.isCall();
      node0.isScript();
      int int0 = Node.INCRDECR_PROP;
      node1.isCast();
      node1.getSourceFileName();
      node0.getLength();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(40, node0, node2);
      node3.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = Node.newNumber((-3275.676));
      node0.getBooleanProp(519);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.hasChildren();
      Charset.defaultCharset();
      Node node1 = new Node(39, node0, node0, 49, 39);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node1);
      node1.getQualifiedName();
      node1.isEquivalentTo(node0, false, true, false);
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      InputId inputId0 = new InputId("1u'c?=)O)sruXLP");
      node0.setSourceEncodedPosition(3281);
      node0.isExprResult();
      Node node1 = new Node(63, node0, node0, node0, node0);
      node1.useSourceInfoFrom(node0);
//      try { 
        node1.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // ARRAYLIT 0 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(39, 39, 51);
      node0.isGetterDef();
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = new Node(8192);
      InputId inputId0 = new InputId("`Id:+9");
      node0.getIntProp(188);
      Charset.defaultCharset();
      node0.isThis();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(941, node0, node0, node0, node0, 55, 4);
      node0.isWith();
      node0.addChildToFront(node1);
      Node node2 = null;
//      try {
        node2 = new Node(119, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.getBooleanProp((-2962));
      node0.setIsSyntheticBlock(true);
      node0.getJsDocBuilderForNode();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Charset.defaultCharset();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      Node node1 = jSTypeRegistry1.createParameters((List<JSType>) arrayList0);
      node1.isThis();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(148, node1, node1, node1, node0, 143, 2146);
      node1.isWith();
      // Undeclared exception!
//      try { 
        node2.addChildToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = Node.newString(148, "w}", 379, 148);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.checkTreeEquals(node0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      arrayList0.clear();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.isHook();
      Node.extractCharno(41);
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      int int0 = 41;
      Node node0 = Node.newString("position (", 41, 793);
      Node node1 = Node.newString("com.google.common.collect.RegularImmutableTable$Values", 56, 37);
      node0.mayMutateArguments();
      node1.getJsDocBuilderForNode();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isDelProp();
      node1.isOptionalArg();
      node1.addChildToBack(node2);
      Node node3 = new Node(4095);
      // Undeclared exception!
//      try { 
        node1.replaceChild(node3, node0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      Node node1 = Node.newString(51, "(", (-308), 0);
      node1.toString(false, false, true);
      node1.isNot();
      node1.getJSDocInfo();
      node0.addChildToBack(node1);
      Stack<Node> stack0 = new Stack<Node>();
      node1.isThrow();
      node1.isHook();
      Node node2 = null;
//      try {
        node2 = new Node(132, node1, 48, 54);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = Node.newString("1o6Qe'tg3Ys3mTa", 2984, 0);
      Node node1 = new Node(52, node0, 47, 52);
      node0.addSuppression("$?>;J:o_}QcDp&kx");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("empty_block");
      node0.useSourceInfoFrom(node2);
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(54);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got INSTANCEOF
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.mayMutateArguments();
      node0.checkTreeEquals(node0);
      Node node1 = new Node(4095, node0, node0);
      node0.useSourceInfoFrom(node0);
      Node node2 = new Node(29, node1);
      // Undeclared exception!
//      try { 
        Node.newString(2, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-19));
      Node node1 = Node.newString(50, "com.google.common.collect.AbstractListMultimap", (-1016), 51);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setIsSyntheticBlock(false);
      node1.addChildrenToFront(node0);
      node1.getInputId();
      node0.getDouble();
      node0.isOptionalArg();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, 148);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.checkTreeEquals(node0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      immutableList1.listIterator();
      jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      arrayList0.clear();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.isAssignAdd();
      Node node1 = jSTypeRegistry1.createParameters((List<JSType>) arrayList0);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^n8SXztR");
      Node node1 = Node.newString(30, "%Ip(@p<'M^n8SXztR");
      Node node2 = new Node((-4096), node0);
      node2.addChildrenToFront(node1);
      node2.getInputId();
      node1.isOptionalArg();
      Node.newString("%Ip(@p<'M^n8SXztR", 38, 1023);
      Node node3 = null;
//      try {
        node3 = new Node(33, node0, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      node0.checkTreeEquals(node0);
      Node node1 = new Node(4095, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node0);
      Node node3 = new Node(29, node1);
      node3.getQualifiedName();
      Node node4 = new Node(46);
      node3.clonePropsFrom(node4);
      node3.getJSDocInfo();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node3.hasChild(node4);
      node2.isThis();
      node3.isDec();
      node3.isNew();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2991, 2991);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      Node node3 = node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(2);
      Node node5 = new Node(3798, node3, 8, 47);
      Node node6 = node2.cloneNode();
      node1.isGetElem();
      node6.checkTreeTypeAwareEqualsImpl(node2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isLabelName();
      node5.isContinue();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = new Node(8192);
      InputId inputId0 = new InputId("`Id:+9");
      node0.putBooleanProp(8192, false);
      node0.getIntProp(188);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(39, nodeArray0, 49, 36);
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.useSourceInfoIfMissingFrom(node0);
      node1.getStaticSourceFile();
      node2.getChildCount();
      Node.newString("`Id:+9");
      node0.isCast();
      node1.isName();
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node(53, node1, node0, node0, 43, 4095);
      node1.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString(2, "Object#Key", 47, 52);
      node0.isGetProp();
      node3.isWhile();
      node3.isNot();
      node1.getLastSibling();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newString(" is not a string node", 4095, 148);
      Node node1 = new Node(103, node0, 155, 627);
      node1.addSuppression(" is not a string node");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append((String) null);
      Node node3 = node0.useSourceInfoFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node((-5352));
      Node node5 = null;
//      try {
        node5 = new Node(1565, node3, 148, 120);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newString(957, "CONST");
      node0.setOptionalArg(false);
      Node.newNumber((double) 4095, 57, 15);
      InputId inputId0 = new InputId("CONST");
      node0.isStringKey();
      node0.isTry();
      node0.isCast();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = Node.newString("i.2hwxtf}z9B4gT_");
      Node node1 = Node.newNumber((-1575.2420866082), 51, 19);
      node0.getInputId();
      Node node2 = new Node(19, node0);
      node1.setLineno(40);
      node1.isWhile();
      node0.isNot();
      node2.isString();
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = Node.newString(126, "CONST");
      node0.setOptionalArg(false);
      Node node1 = new Node(16, node0, node0, node0, 50, 32);
      node0.removeFirstChild();
      InputId inputId0 = new InputId("CONST");
      Node.newNumber((-4820.0));
      Node node2 = new Node((-3397), 2, 97);
      node2.isDelProp();
      // Undeclared exception!
//      try { 
        node2.checkTreeTypeAwareEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^n8SXztR");
      Node node1 = Node.newString(30, "%Ip(@p<'M^n8SXztR");
      node1.getIntProp((-1));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(31, nodeArray0, 55, 4);
      node2.isCase();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.newString((-1), "Object#Key", 48, (-2441));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setSideEffectFlags(node_SideEffectFlags0);
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = new Node(302, (-1193), 1);
      Node node1 = new Node(302, node0, (-1020), 56);
      Node node2 = new Node(302, node1);
      node1.putIntProp(1711, 100);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString("empty_block");
      Node node1 = Node.newString("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      node1.getBooleanProp(4095);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Node node2 = Node.newString("hj2/n{!h");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      node2.isIf();
      // Undeclared exception!
//      try { 
        Node.newString(2504, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newNumber((-1575.2420866082));
      node0.getBooleanProp(40);
      node0.setIsSyntheticBlock(false);
      node0.getJsDocBuilderForNode();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      Node.newNumber(20.0, 16384, 153);
      node0.isFromExterns();
      Node node2 = new Node(15, node0);
      node1.setIsSyntheticBlock(true);
      node0.setLineno(15);
      node1.isCast();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node1.checkTreeEquals(node0);
      node1.checkTreeEquals(node0);
      node1.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1738);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node.newNumber(1.0);
      node0.setVarArgs(false);
      node1.isNull();
      node1.getInputId();
      Node node2 = null;
//      try {
        node2 = new Node(1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2386));
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.valueOf();
      int int0 = 49;
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newNumber((double) (-2386));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.checkTreeEqualsImpl(node0);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.addSuppression("*V\"c2]");
      node2.checkTreeEquals(node1);
      node0.getIntProp(57);
      node0.isFunction();
      Node node3 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter");
      node0.removeChildren();
      Node node4 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter");
      node4.hasChild((Node) null);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node4;
      nodeArray0[1] = node4;
      nodeArray0[2] = node3;
      nodeArray0[3] = node3;
      nodeArray0[4] = node2;
      nodeArray0[5] = node3;
      nodeArray0[6] = null;
      Node node5 = null;
//      try {
        node5 = new Node(39, nodeArray0, 16, 51);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = Node.newNumber((double) 31);
      node0.useSourceInfoFromForTree(node1);
      jSTypeRegistry1.createParameters((List<JSType>) arrayList0);
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, 148);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.checkTreeEquals(node0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      arrayList0.clear();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.isEmpty();
      Node node1 = node0.getLastSibling();
      node1.isParamList();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = Node.newNumber(903.40713251);
      Node[] nodeArray0 = new Node[1];
      MockFile mockFile0 = new MockFile(" : ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0);
      node0.appendStringTree(bufferedWriter0);
      nodeArray0[0] = node0;
      Node node1 = new Node(55, nodeArray0);
      // Undeclared exception!
//      try { 
        node0.removeChild(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = new Node(12288, 218, (-1853));
      Node node1 = Node.newString(2, "com.google.common.collect.ArrayListMultimap");
      node1.copyInformationFromForTree(node0);
      node1.setWasEmptyNode(false);
      node0.isOptionalArg();
      node0.cloneNode();
      node0.addChildToBack(node1);
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      node0.checkTreeEquals(node0);
      Node node1 = Node.newNumber(2664.352, 144, 55);
      node1.isNumber();
      node0.isWhile();
      Charset.defaultCharset();
      node1.isGetElem();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = Node.newString(126, "CONST");
      node0.setOptionalArg(false);
      Node node1 = new Node(51, node0, node0, node0, node0);
      InputId inputId0 = new InputId("CONST");
      node1.srcref(node0);
      node0.addChildToBack(node1);
      node0.isStringKey();
      node1.isTry();
      node0.isGetElem();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node.mergeLineCharNo(2071, 111);
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = Node.newString((-1075), "CONST");
      node0.setOptionalArg(false);
      Node node1 = new Node(1, node0, node0, node0, 4, 41);
      node0.removeFirstChild();
      InputId inputId0 = new InputId("%Ip(@p<'M^n8SXztR");
      node0.getChangeTime();
      // Undeclared exception!
//      try { 
        node1.removeChildAfter((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      Node node1 = Node.newString(51, "", (-308), 0);
      node1.toString(false, false, true);
      node1.isInc();
      node0.addChildToBack(node1);
      node1.getChangeTime();
      node1.getDirectives();
      node0.getChildCount();
      node0.isComma();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node(53, node1, node0, node0, 43, 4095);
      node0.getChildAtIndex((-632));
      node1.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString(2, "Object#Key", 47, 52);
      node2.isDebugger();
      node3.isReturn();
      node3.isEquivalentTo(node2, false, true, true);
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = new Node(302, (-1193), 1);
      Node node1 = new Node(302, node0, (-1020), 56);
      Node node2 = new Node(302, node1);
      node1.putIntProp(1711, 100);
      Node node3 = new Node(302, node2, node2);
      node3.isVoid();
      node2.isArrayLit();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newNumber(55.0);
      node0.getDouble();
      node0.putIntProp(2746, 896);
      Node node1 = new Node(1455, node0, 52, 37);
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReprer", 2991, 2991);
      Node node1 = Node.newString("com.google.javascript.rhino.SimpleErrorReprer", 2991, 2991);
      Node node2 = new Node(38, node1, 2, 49);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReprer");
      Node node3 = node2.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReprer");
      node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = node3.useSourceInfoFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(48);
      Node node5 = new Node(2);
      Node node6 = new Node(3798, node4, 8, 47);
      node6.cloneNode();
      node3.isGetElem();
      node5.checkTreeTypeAwareEqualsImpl(node6);
      node6.isLabelName();
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, 148);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      node1.isExprResult();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      node0.setIsSyntheticBlock(false);
      int int0 = Node.OPT_ARG_NAME;
      node0.isLabel();
      Node node1 = new Node(57, node0, node0, 2319, 77);
      node0.addChildToBack(node1);
      node0.isTrue();
      node1.getJSDocInfo();
      Node node2 = new Node(48, 40, 4);
      node2.isNumber();
      node2.getCharno();
      Node node3 = new Node(85, 50, 0);
      node2.getLength();
      node1.getAncestor(42);
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = Node.newString(379, "NOT", 110, (-649));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newNumber((-1575.2420866082), (-632), 57);
      InputId inputId0 = new InputId((String) null);
      Node node2 = new Node(708, node1);
      Node node3 = new Node(2070, node2, node2, node0, node2, 1374, 15);
      node3.setIsSyntheticBlock(true);
      node3.setLineno(40);
      node0.setInputId(inputId0);
      node2.hasOneChild();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node4);
      node_NodeMismatch0.equals(simpleErrorReporter0);
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newString(0, "2lB:&K");
      node0.putIntProp(56, 749);
      node0.hasMoreThanOneChild();
      Node node1 = Node.newString("2");
      Node.newNumber((double) 4095, (-174), (-3384));
      node1.isNull();
      node1.getInputId();
      Node node2 = new Node(38, node1);
      node0.setLineno(43);
      node2.isWhile();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.newNumber((-737.3961057));
      Node node3 = new Node(44, node1);
      node2.checkTreeTypeAwareEqualsImpl(node3);
      Node node4 = node1.detachFromParent();
      Node.newString(":\"fXSN6!Z9B");
      // Undeclared exception!
//      try { 
        node4.getQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME 2984 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node1.checkTreeEquals(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append((String) null);
      node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node2 = new Node(47);
      Node node3 = null;
//      try {
        node3 = new Node(51, node0, 18, (-2422));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toString();
      node2.useSourceInfoFromForTree(node1);
      node2.siblings();
      node0.isEquivalentToShallow(node1);
      node0.getChangeTime();
      node1.getDirectives();
      node0.getChildCount();
      node0.isComma();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node1.checkTreeEquals(node0);
      Node node2 = Node.newNumber((double) 2);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = new Node(31, node1, 29, 51);
      Node node4 = Node.newString(":\"fXSN6!Z9B");
      node4.getQualifiedName();
      node2.isRegExp();
      node1.isTry();
      node3.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newNumber((-809.146227));
      node0.isContinue();
      node0.type = 39;
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree((-33));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOptionalArg();
      node0.isTrue();
      Node node1 = node0.cloneNode();
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.addChildToBack(node1);
      node0.isTrue();
      node2.isScript();
//      try { 
        node1.setString("TL");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER -809.146227 1048575 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^n8SXztR");
      node0.setIsSyntheticBlock(true);
      Charset.defaultCharset();
      node0.isWith();
      Node node1 = Node.newString("W7%V*9/q.$lc)4");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
//      try { 
        node0.addChildAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, 148);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.getQualifiedName();
      Node node1 = new Node(42);
      node1.hasChild(node0);
      node1.isThis();
      Node node2 = new Node((-2294), (-2294), 48);
      node1.mayMutateGlobalStateOrThrow();
      node2.hasMoreThanOneChild();
      node0.isDec();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = Node.newString("empty_block");
      Node node1 = new Node(1096, node0, node0);
      node1.isEquivalentToShallow(node0);
      Node node2 = new Node(1, node1);
      Node node3 = node1.srcrefTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.setOptionalArg(false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("*{ssc2y!okon'*s7");
      Node node4 = node2.useSourceInfoFrom(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node5 = new Node(2);
      Node node6 = new Node(1605, node4, 12, 4095);
      node5.cloneNode();
      Node node7 = new Node(37, node6, 124, 55);
      node7.isRegExp();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      Node node1 = Node.newString(2599, "", 12, 55);
      node0.getJsDocBuilderForNode();
      node1.isLocalResultCall();
      node0.isObjectLit();
      node0.isFunction();
      node0.isComma();
      InputId inputId0 = new InputId("");
      inputId0.toString();
      Node node2 = Node.newString((-2321), "", 38, 8);
      node0.getJSType();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      node1.setDirectives(set0);
      node2.setJSType((JSType) null);
      inputId0.toString();
      inputId0.toString();
      node2.setInputId(inputId0);
      node0.toString(true, false, false);
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      InputId inputId0 = new InputId("C-ZFOX~9tWjA`{~");
      inputId0.toString();
      Node[] nodeArray0 = new Node[8];
      Node node0 = Node.newNumber((double) 126);
      Node node1 = new Node(126, node0, node0, node0, node0);
      node1.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = Node.newString(1613, "aR4j=}>frP&:N)DK+)", 39, 1613);
      node0.getJsDocBuilderForNode();
      node0.isLocalResultCall();
      node0.isObjectLit();
      node0.isFunction();
      node0.isComma();
      InputId inputId0 = new InputId("aR4j=}>frP&:N)DK+)");
      inputId0.toString();
      Node node1 = Node.newString(57, "InputId: aR4j=}>frP&:N)DK+)", 52, 57);
      node1.getJSType();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node1.setDirectives(treeSet0);
      node0.setJSType((JSType) null);
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      // Undeclared exception!
//      try { 
        node0.toString(false, true, true);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1613
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = Node.newNumber((-1575.2420866082));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      Node node1 = Node.newString(31, "C-BZFOX~9tWjA`{~");
      node0.addChildToBack(node1);
      node0.getQualifiedName();
      node0.hasChild(node1);
      node1.isThis();
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(536870912, (-3121), 30);
      node0.addChildrenToBack(node2);
      node2.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", (-308), 48);
      node0.toString(true, false, false);
      node0.isInc();
      node1.addChildToBack(node0);
      Vector<Node> vector0 = new Vector<Node>(50);
      node0.isThrow();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("B*[s,cIWh");
      node0.setSourceEncodedPosition(37);
      node0.getSourceFileName();
      node0.getAncestors();
      node0.isBreak();
      node1.isBlock();
      node0.getIndexOfChild(node1);
      Node node2 = Node.newString(256, "B*[s,cIWh");
      Node node3 = Node.newString(15, "");
      // Undeclared exception!
//      try { 
        node2.replaceChild(node1, node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("-K=hs~A&3.kPZ`K", (-401), 5402);
      Node node1 = new Node((-2253), node0, 29, 16);
      node1.addSuppression("");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("-K=hs~A&3.kPZ`K");
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node3 = node1.useSourceInfoFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(110);
      int int0 = (-956);
      Node node5 = null;
//      try {
        node5 = new Node(2, node1, node3, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = new Node(0, 10, 41);
      node0.getSideEffectFlags();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = new Node((-428), 8199, 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      node0.setJSType(objectType0);
      node0.isEmpty();
      node0.isGetElem();
      node0.isLocalResultCall();
      node0.isFor();
      node0.isBlock();
      node0.getAncestors();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newString("yOV7");
      node0.setQuotedString();
      Node node1 = new Node(114, node0);
      node0.addChildToBack(node1);
      node0.isCatch();
      node1.getAncestor(49);
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter("", "com.google.javascript.rhino.Node$SiblingNodeIterable");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // com.google.javascript.rhino.Node$SiblingNodeIterable
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.getBooleanProp((-2962));
      node0.setIsSyntheticBlock(true);
      String string0 = "*D";
      InputId inputId0 = new InputId("*D");
      node0.putBooleanProp((-2962), false);
      node0.getIntProp((-2962));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(42, nodeArray0, 1464, 1826);
      node0.isGetElem();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isSyntheticBlock();
      node1.isLabelName();
      int int0 = (-70);
      Node node2 = null;
//      try {
        node2 = new Node(8, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(8, node0, node0, node0, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.isCall();
      node1.getJSDocInfo();
      node1.isBlock();
      node0.getIndexOfChild(node2);
      node2.replaceChild(node0, node1);
      node1.getQualifiedName();
      Node node3 = new Node((-2529), node0, (-1148), 16);
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = Node.newString("empty_block");
      Node node1 = new Node(1096, node0, node0);
      node1.isEquivalentToShallow(node0);
      Node node2 = node1.removeFirstChild();
      Node node3 = node1.srcrefTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.setOptionalArg(false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("*{ssc2y!okon'*s7");
      Node node4 = node2.useSourceInfoFrom(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node5 = new Node(2);
      Node node6 = new Node(1605, node4, 12, 4095);
      Node node7 = node5.cloneNode();
      node0.isGetElem();
      node6.checkTreeTypeAwareEqualsImpl(node7);
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      node0.putBooleanProp(41, true);
      node0.getIntProp((-60));
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      // Undeclared exception!
//      try { 
        node0.clonePropsFrom(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Node has existing properties.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      Node node1 = node0.cloneTree();
      node0.isOptionalArg();
      node0.toStringTree();
      node1.addSuppression("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node0.isOnlyModifiesArgumentsCall();
      node_SideEffectFlags1.setMutatesThis();
      Node node2 = Node.newString("\"7G!");
      Node.newNumber((double) 54, 46, (-4853));
      node2.isFromExterns();
      InputId inputId0 = new InputId("PY~PofZAM!j|X){_0");
      node0.toString(false, false, false);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      Node node3 = null;
//      try {
        node3 = new Node((-1416), nodeArray0, 12217254, 2233);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-19));
      InputId inputId0 = new InputId("\"");
      Node node1 = Node.newString(53, "C-BZFOX~9tWjA`{~");
      node1.addChildToBack(node0);
      node0.getQualifiedName();
      node1.hasChild(node0);
      node0.isThis();
      Node node2 = new Node((-1834), 48, 47);
      node2.mayMutateGlobalStateOrThrow();
      node1.hasMoreThanOneChild();
      node1.addChildBefore(node2, node0);
      node1.isDec();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node1.checkTreeEquals(node0);
      node1.checkTreeEquals(node0);
      Node node2 = node1.cloneTree();
      node1.isQuotedString();
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node2, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newString(125, "");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.addChildToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      Node node1 = Node.newString(51, "", (-308), 0);
      node1.toString(false, false, true);
      node1.isInc();
      node0.setSourceFileForTesting("");
      node0.addChildToBack(node1);
      Vector<Node> vector0 = new Vector<Node>(43);
      node1.isThrow();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node2 = null;
//      try {
        node2 = new Node(30, nodeArray0, 2, 8192);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node0.mayMutateGlobalStateOrThrow();
      Node.newString(53, "reflected_object", 42, 155);
      node0.isQuotedString();
      node0.isFalse();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createFromTypeNodes(node1, "Named type with empty name component", templateType0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Unexpected node in type expression: IN 0
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^n8SXztR");
      Node node1 = new Node(8, node0);
      node1.setIsSyntheticBlock(true);
      node0.isContinue();
      node1.getLastSibling();
      node1.isOnlyModifiesArgumentsCall();
      node0.isNE();
      node0.isDelProp();
      node0.setLineno(132);
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = Node.newString("INTERFACE");
      boolean boolean0 = false;
      node0.setVarArgs(false);
      Node.newString((-1), "INTERFACE");
      Node.newNumber((double) 4095, 4096, 48);
      node0.removeProp(1112);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = Node.newString(2984, "\n\nSubtree1: ");
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("\n\nSubtree1: ");
      Node node3 = node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node4 = new Node(2);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node1, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node1.checkTreeEquals(node0);
      node1.checkTreeEquals(node0);
      Node node2 = Node.newString(15, "", 37, 1659);
      node1.isRegExp();
      node2.isGetterDef();
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.SimpleErrorReporter";
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      // Undeclared exception!
//      try { 
        node2.isUnscopedQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME 2984 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      Node node1 = node0.cloneTree();
      node0.isOptionalArg();
      node0.toStringTree();
      node1.addSuppression("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node0.isOnlyModifiesArgumentsCall();
      node_SideEffectFlags1.setMutatesThis();
      Node node2 = Node.newString("\"7G!");
      Node node3 = Node.newNumber((double) 54, 46, (-4853));
      node2.isFromExterns();
      InputId inputId0 = new InputId("PY~PofZAM!j|X){_0");
      node3.clonePropsFrom(node2);
      Node node4 = new Node(126, node0);
      node4.setLineno(0);
      node0.setInputId(inputId0);
      node4.isCast();
      Node node5 = new Node(4, node3, node2, node1, node4, 47, 17);
      node5.isInstanceOf();
//      try { 
        node2.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING \"7G! is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node(53, node1, node0, node0, 43, 4095);
      node0.getChildAtIndex((-632));
      node1.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString(2, "Object#Key", 47, 52);
      node2.isQuotedString();
      node3.isReturn();
      node3.isEquivalentTo(node2, false, true, true);
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = Node.newNumber((double) 20);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isGetterDef();
      node0.checkTreeEquals(node0);
      node0.getSourceFileName();
      node0.getAncestors();
      node0.isBreak();
      node0.getCharno();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.isEmpty();
      Node node1 = node0.getLastSibling();
      node0.isOptionalArg();
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      Node node3 = node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(2);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node1, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^n8SXztR");
      Node node1 = Node.newString(30, "%Ip(@p<'M^n8SXztR");
      node1.setIsSyntheticBlock(true);
      Charset.defaultCharset();
      node0.isThis();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", (-308), 48);
      node0.toString(true, false, false);
      node0.isInc();
      node1.addChildToBack(node0);
      Vector<Node> vector0 = new Vector<Node>(50);
      node0.isThrow();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("B*[s,cIWh");
      node0.setSourceEncodedPosition(37);
      node0.isExprResult();
      Node node2 = node0.useSourceInfoFrom(node0);
      Node node3 = Node.newNumber((-253.17799488));
      node2.setSourceEncodedPosition((-931));
      node0.setLineno(2233);
      node0.getSourceFileName();
      node3.getAncestors();
      node0.isAnd();
      node0.isCall();
      node1.isScript();
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = Node.newString(379, "NOT", 110, (-649));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newNumber((-1575.2420866082), (-632), 57);
      node0.isContinue();
      Node node2 = node0.getLastSibling();
      node1.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
//      try { 
        node2.removeChild(node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      node0.getCharno();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = Node.newString(0, "B:fK");
      Node node1 = Node.newNumber((double) 57, 4095, 1);
      node1.getBooleanProp(38);
      node0.setIsSyntheticBlock(false);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString(29, "B:fK");
      node0.setIsSyntheticBlock(false);
      int int0 = Node.OPT_ARG_NAME;
      node1.isLabel();
      node2.addChildToBack(node0);
      node1.isTrue();
      Node node3 = Node.newString("B:fK", 2520, 53);
      node3.useSourceInfoFrom(node0);
      Node.newString(48, "B:fK");
      node1.srcrefTree(node0);
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.isCall();
      node1.getJSDocInfo();
      node1.isBlock();
      node0.getIndexOfChild(node2);
      node2.replaceChild(node0, node1);
      // Undeclared exception!
//      try { 
        node1.getQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME 2984 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, 148);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      boolean boolean0 = false;
      // Undeclared exception!
//      try { 
        node1.addChildrenAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node((-2569), node1, node0, node0, 43, 4095);
      node0.getChildAtIndex((-632));
      node1.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString(2, "Object#Key", 47, 52);
      node3.cloneTree();
      node2.isQuotedString();
      // Undeclared exception!
//      try { 
        node1.addChildAfter(node0, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(1439, "", (-308), 48);
      node0.toString(true, false, false);
      node0.isInc();
      node1.addChildToBack(node0);
      Vector<Node> vector0 = new Vector<Node>(50);
      node0.isThrow();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node1;
      nodeArray0[7] = node0;
      nodeArray0[8] = node1;
      Node node2 = null;
//      try {
        node2 = new Node(1826, nodeArray0, 112, 38);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = Node.newString("", (-19), (-19));
      node0.addSuppression("<h");
      Node node1 = Node.newString("}ZRC%'vnG>Us~'PN");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.getJsDocBuilderForNode();
      Node node3 = node0.copyInformationFromForTree(node1);
      node_FileLevelJsDocBuilder1.append("<h");
      node3.setSourceEncodedPosition(50);
      node3.getJSDocInfo();
      node1.isBlock();
      node2.getIndexOfChild(node1);
      node2.addSuppression("r+?~=PF8DW");
      node3.isNull();
      node1.detachChildren();
      node1.copyInformationFromForTree(node0);
      Node node4 = new Node((-185), node2, 122, 43);
      node2.getLastChild();
      node4.isDelProp();
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.getBooleanProp((-2962));
      node0.setIsSyntheticBlock(true);
      String string0 = "*D";
      InputId inputId0 = new InputId("*D");
      node0.putBooleanProp((-2962), false);
      node0.getIntProp((-2962));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(42, nodeArray0, 1464, 1826);
      node0.isGetElem();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isLabelName();
      int int0 = (-70);
      Node node2 = null;
//      try {
        node2 = new Node(8, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      Node node3 = node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(2);
      Node node5 = new Node(3798, node3, 8, 47);
      Node node6 = node5.cloneNode();
      node2.isGetElem();
      node4.checkTreeTypeAwareEqualsImpl(node5);
      node5.isLabelName();
      node5.addChildToFront(node6);
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = Node.newString(0, "B:fK");
      Node node1 = Node.newNumber((double) 57, 4095, 1);
      node1.getBooleanProp(38);
      node0.setIsSyntheticBlock(false);
      node0.checkTreeEqualsImpl(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.Node$AncestorIterable$1");
      node1.copyInformationFromForTree(node0);
      node_FileLevelJsDocBuilder0.append("B:fK");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.setSourceEncodedPosition((-666));
      node0.isExprResult();
      Node node3 = node2.useSourceInfoFrom(node0);
      Node node4 = Node.newNumber((-1645.7736939133947));
      node1.setSourceEncodedPosition(2671);
      node0.setLineno(63);
      node1.getSourceFileName();
      node3.getAncestors();
      node1.isAnd();
      node2.isCall();
      node0.isScript();
      node3.getCharno();
      node4.isContinue();
      node4.isIn();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = Node.newString(126, "CONST");
      node0.setOptionalArg(false);
      Node node1 = Node.newNumber((double) 47, 4, 37);
      InputId inputId0 = new InputId("CONST");
      node0.addChildToBack(node1);
      node0.isStringKey();
      node1.isAssignAdd();
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = Node.newString("", (-19), (-19));
      node0.addSuppression("<h");
      Node node1 = Node.newString("}ZRC%'vnG>Us~'PN");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.getJsDocBuilderForNode();
      Node node3 = node0.copyInformationFromForTree(node1);
      node_FileLevelJsDocBuilder1.append("<h");
      node3.setSourceEncodedPosition(50);
      node0.isExprResult();
      node2.isCall();
      Node node4 = node0.useSourceInfoFrom(node3);
      Node.newString(52, "43Y");
      node4.srcrefTree(node3);
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.addSuppression("OBJECT_NUMBER_STRING");
      Node node1 = new Node((-936), 822, 1);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("OBJECT_NUMBER_STRING");
      Node node3 = node2.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(2, node1, node3, node3, 54, 4);
      // Undeclared exception!
//      try { 
        node4.addChildrenToFront(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = Node.newString("%Ip(@p<'M^n8SXztR");
      Node node1 = Node.newString(30, "%Ip(@p<'M^n8SXztR");
      node1.setIsSyntheticBlock(true);
      node0.isContinue();
      node1.getLastSibling();
      node1.isOnlyModifiesArgumentsCall();
      node0.isNE();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      String string0 = "empty_block";
      Node node0 = Node.newString("empty_block");
      node0.getAncestor(12);
      Node node1 = new Node(1096, node0, node0);
      node1.isEquivalentToShallow(node0);
      node1.removeFirstChild();
      // Undeclared exception!
//      try { 
        node1.srcrefTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = new Node(5760, 2097152, (-2754));
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newNumber((-3275.676));
      node0.getBooleanProp(545);
      node0.setIsSyntheticBlock(false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString(116, "OlAc8^:W");
      node2.setIsSyntheticBlock(false);
      node0.getSourceOffset();
      node2.isSwitch();
      node1.addChildToBack(node2);
      node2.isTrue();
      Node node3 = Node.newString("6x");
      node3.getJSDocInfo();
      Node.newNumber((double) 43, 42, (-1468));
      node2.setVarArgs(false);
      node1.getQualifiedName();
      node2.isRegExp();
      node2.isTry();
      node3.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-19));
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node0.hasChildren();
      Charset.defaultCharset();
      Node node2 = new Node(2, 31, (-19));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
      node0.getQualifiedName();
      node2.isEquivalentTo(node2, true, false, false);
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      int int0 = Node.FREE_CALL;
      Node node0 = Node.newString(86, "vD12", 86, 86);
      Node node1 = new Node(47, node0);
      node1.detachChildren();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = Node.newNumber((double) 20);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isReturn();
      // Undeclared exception!
//      try { 
        node0.isEquivalentTo((Node) null, true, false, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = Node.newString(148, "", 89, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node((-2569), node1, node0, node0, 43, 4095);
      node0.getChildAtIndex((-632));
      node1.mayMutateGlobalStateOrThrow();
      Node.newString(8, "Object#Key");
      node2.isQuotedString();
      // Undeclared exception!
//      try { 
        node1.useSourceInfoIfMissingFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      node0.putBooleanProp(41, true);
      node0.getIntProp((-60));
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      // Undeclared exception!
//      try { 
        node0.toString(true, true, false);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 41
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      Node node3 = node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(2);
      Node node5 = new Node(3798, node3, 8, 47);
      Node node6 = node5.cloneNode();
      node2.isGetElem();
      node4.checkTreeTypeAwareEqualsImpl(node5);
      node5.isLabelName();
      node0.getJsDocBuilderForNode();
      node6.getNext();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = Node.newString(2984, "com.google.javascript.rhino.SimpleErrorReporter");
      Node node1 = new Node(38, node0, 0, 49);
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node2.putBooleanProp(1, true);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.isCall();
      node2.useSourceInfoFrom(node1);
      node2.useSourceInfoFromForTree(node1);
      // Undeclared exception!
//      try { 
        Node.newString(15, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = Node.newString("i.2hwxtf}z9B4gT_");
      Node node1 = new Node(113, (-3734), 939);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.getQualifiedName();
      node1.isEquivalentTo(node0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node1 = node0.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.getJsDocBuilderForNode();
      node0.copyInformationFromForTree(node1);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      node0.isExprResult();
      node0.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
//      try { 
        Node.newString(47, (String) null, 4095, 57);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("b`z_<D@B", true);
      Node node0 = Node.newString(94, "");
      Node node1 = new Node(103, node0, 38, 21);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.getSourceOffset();
      Node node2 = new Node(21, 4096, 24);
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node(53, node1, node0, node0, 43, 4095);
      node0.getChildAtIndex((-632));
      node1.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString(2, "Object#Key", 47, 52);
      node1.isAdd();
      node3.isReturn();
      node3.isEquivalentTo(node2, false, true, true);
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newString(12, "u", 42, 39);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry1.createTemplateTypeMap(immutableList0, immutableList1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      node1.getCharno();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newNumber((double) 12, 12, 153);
      Node node1 = Node.newNumber((double) 55, (-1351), 47);
      node1.getBooleanProp(102);
      node1.setIsSyntheticBlock(false);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString(4095, "com.google.common.collect.AbstractMapBasedMultimap$WrappedList");
      node2.setIsSyntheticBlock(false);
      int int0 = Node.OPT_ARG_NAME;
      node2.isLabel();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node2;
      nodeArray0[3] = node2;
      nodeArray0[4] = node0;
      Node node3 = null;
//      try {
        node3 = new Node(1, nodeArray0, 2034, 12);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = Node.newString(0, "B:fK");
      Node node1 = Node.newNumber((double) 57, 4095, 1);
      node1.getBooleanProp(38);
      node0.setIsSyntheticBlock(false);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString(29, "B:fK");
      node0.setIsSyntheticBlock(false);
      int int0 = Node.OPT_ARG_NAME;
      node1.isLabel();
      node2.addChildToBack(node0);
      node1.isTrue();
      node1.getJSDocInfo();
      node1.isBlock();
      node0.getIndexOfChild(node2);
      node2.replaceChild(node0, node1);
      node2.getQualifiedName();
      Node node3 = null;
//      try {
        node3 = new Node(47, node1, 37, 47);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.getBooleanProp((-2962));
      node0.setIsSyntheticBlock(true);
      InputId inputId0 = new InputId("*D");
      node0.putBooleanProp((-2962), false);
      node0.getIntProp((-2962));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(42, nodeArray0, 1464, 1826);
      node0.isCase();
      Node node2 = new Node(379, 2, 3029);
      node2.checkTreeEqualsImpl(node1);
      node2.isGetProp();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = Node.newString("", (-19), (-19));
      node0.addSuppression("<h");
      Node node1 = Node.newString("}ZRC%'vnG>Us~'PN");
      node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.getJsDocBuilderForNode();
      Node node2 = node0.copyInformationFromForTree(node1);
      node_FileLevelJsDocBuilder1.append("<h");
      node2.setSourceEncodedPosition(50);
      node0.isExprResult();
      node1.useSourceInfoFrom(node2);
      Node node3 = Node.newNumber(1588.0);
      node2.setSourceEncodedPosition(12);
      node3.setLineno(37);
      node1.getSourceFileName();
      node0.getAncestors();
      node1.isAnd();
      node0.isCall();
      node3.isScript();
      node3.getCharno();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSType jSType1 = jSTypeRegistry0.createOptionalType(jSType0);
      jSTypeArray0[0] = jSType1;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Vector<TemplateType> vector0 = new Vector<TemplateType>(48);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) vector0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      // Undeclared exception!
//      try { 
        node0.removeChild(node1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = Node.newNumber((-2558.02));
      Node node2 = new Node(42, node0, node1, node1, 38, 11);
      node1.mayMutateGlobalStateOrThrow();
      Node.newString(8232, "com.google.javascript.rhino.jstype.JSTypeRegistry", 46, 12);
      node1.isQuotedString();
      node0.isFalse();
      JSType[] jSTypeArray0 = new JSType[1];
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createFromTypeNodes(node2, "com.google.javascript.rhino.jstype.JSTypeRegistry", templateType0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Unexpected node in type expression: THIS 38
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = Node.newNumber((double) 12, 12, 153);
      node0.putIntProp(15, 12);
      String string0 = "";
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newString("op#*", 39, (-3848));
      node1.addSuppression("op#*");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("op#*");
      node_FileLevelJsDocBuilder0.append("op#*");
      node1.isGetterDef();
      node0.checkTreeEquals(node1);
      node1.checkTreeEquals(node2);
      node2.getSourceFileName();
      node1.getAncestors();
      node1.isBreak();
      node2.getCharno();
      node0.getLength();
      node0.isEmpty();
      Node node3 = node1.getLastSibling();
      node2.isParamList();
      node3.isNE();
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      Node node3 = node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(2);
      Node node5 = new Node(3798, node3, 8, 47);
      Node node6 = node5.cloneNode();
      node6.useSourceInfoFrom(node2);
      node2.isGetElem();
      node4.checkTreeTypeAwareEqualsImpl(node5);
      node5.isLabelName();
      node2.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 49, 54);
      InputId inputId0 = new InputId("`Id:+9");
      boolean boolean0 = false;
      Node node1 = null;
      Node node2 = null;
//      try {
        node2 = new Node(54, node0, node0, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      Node node1 = node0.cloneTree();
      node0.isOptionalArg();
      node0.toStringTree();
      node1.addSuppression("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      node_SideEffectFlags0.setThrows();
      node1.isUnscopedQualifiedName();
      node1.setSourceEncodedPosition(116);
      Charset.defaultCharset();
      node1.isOptionalArg();
      Node node2 = Node.newNumber((double) 15);
      node0.isDelProp();
      node2.putIntProp(116, 55);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.isEquivalentTo(node2);
      node2.getQualifiedName();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = Node.newNumber((-1575.2420866082));
      node0.putIntProp(0, 0);
      node0.setIsSyntheticBlock(false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      node0.children();
      node0.isOptionalArg();
      Node node1 = new Node(1237, 16, 29);
      Node node2 = new Node(48, node1, node1);
      node0.isAssign();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType.toMaybeTemplatizedType((JSType) null);
      ObjectType.cast((JSType) null);
      JSType[] jSTypeArray0 = new JSType[5];
      jSTypeArray0[0] = null;
      jSTypeArray0[1] = (JSType) null;
      jSTypeArray0[2] = (JSType) null;
      jSTypeArray0[3] = (JSType) null;
      jSTypeArray0[4] = (JSType) null;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, jSTypeArray0);
      JSType jSType0 = jSTypeRegistry0.createDefaultObjectUnion(functionType0);
      jSTypeRegistry0.createOptionalNullableType(jSType0);
      Charset.defaultCharset();
      Node node0 = null;
//      try {
        node0 = new Node(0, (Node) null, (Node) null, (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node.newString(126, "CONST");
      Node node0 = Node.newNumber((-942.7), 4, 37);
      InputId inputId0 = new InputId("CONST");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node1 = new Node(46);
      Node node2 = new Node(29, node1, 221, 4095);
      node0.cloneNode();
      node0.mayMutateGlobalStateOrThrow();
      node2.isGetElem();
      Node node3 = new Node(147, node0, (-379), 48);
      node3.setType(2538);
      Node node4 = null;
//      try {
        node4 = new Node(126, node1, node1, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node((-2569), node1, node0, node0, 43, 4095);
      node0.getChildAtIndex((-632));
      node1.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString(2, "Object#Key", 47, 52);
      node2.isQuotedString();
      node3.isReturn();
      node3.isEquivalentTo(node2, false, true, true);
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node.extractCharno(120);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType.toMaybeFunctionType((JSType) null);
      int int0 = 9;
      Node[] nodeArray0 = new Node[5];
      Node node0 = new Node(1);
      nodeArray0[0] = node0;
      Node node1 = Node.newNumber((double) 4095);
      nodeArray0[1] = node1;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("Not declared as a type name", node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node1 = Node.newNumber(255.0815461916);
      node1.setVarArgs(true);
      node1.isNoSideEffectsCall();
      node1.isDo();
      node1.setChangeTime(53);
      // Undeclared exception!
//      try { 
        node0.setDouble(4095);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      String string0 = "2";
      Node node0 = Node.newString("2");
      Node node1 = Node.newNumber((double) 57, 15, (-19));
      node0.isNoSideEffectsCall();
      node0.setChangeTime(15);
      node1.setDouble(2);
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = Node.newNumber((-1575.2420866082));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      Node node1 = Node.newString(31, "C-BZFOX~9tWjA`{~");
      node0.addChildToBack(node1);
      node0.getQualifiedName();
      node0.hasChild(node1);
      node1.isThis();
      node1.mayMutateGlobalStateOrThrow();
      node0.hasMoreThanOneChild();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node1 = node0.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.copyInformationFromForTree(node1);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      node0.isExprResult();
      node0.useSourceInfoFrom(node0);
      Node.newNumber((double) 31);
      // Undeclared exception!
//      try { 
        node0.setString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      Node node1 = node0.cloneTree();
      node0.isOptionalArg();
      node0.toStringTree();
      node1.addSuppression("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("no next sibling.");
      node1.isGetterDef();
      Node node2 = new Node(52, node0, node0, node0, node0);
      node1.checkTreeEquals(node0);
      node2.checkTreeEquals(node1);
      Node node3 = new Node(39);
      node2.getSourceFileName();
      node3.getAncestors();
      Node node4 = Node.newNumber((double) 38);
      node2.isBreak();
      node1.isScript();
      node3.getCharno();
      node2.getLength();
      Node node5 = null;
//      try {
        node5 = new Node(30, node0, node4, 54, 130);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = new Node(3397, 1073741823, 1073741823);
      node0.getJSDocInfo();
      node0.isName();
      node0.getBooleanProp(1814);
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      int int0 = (-3026);
      Node node0 = Node.newString("", 2506, 2506);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString((-3026), "", 47, (-3026));
      node1.cloneTree();
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = Node.newNumber(57.0);
      node0.getSourceFileName();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(4194304);
      node0.toStringTree();
      int int0 = 42;
      node0.isOnlyModifiesThisCall();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
//      try { 
        fileDescriptor0.sync();
//        fail("Expecting exception: SyncFailedException");
      
//      } catch(SyncFailedException e) {
//         //
//         // sync failed
//         //
//         verifyException("java.io.FileDescriptor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newString(126, "CONST");
      Node node1 = Node.newNumber((-942.7), 4, 37);
      node1.getBooleanProp(545);
      node1.setIsSyntheticBlock(false);
      node1.checkTreeEqualsImpl(node0);
      Node node2 = Node.newString(4, "CharMatcher.JAVA_LOWER_CASE");
      node0.setIsSyntheticBlock(false);
      node2.getSourceOffset();
      node0.isSwitch();
      node2.addChildToBack(node0);
      node1.isTrue();
      Node node3 = Node.newString("");
      node3.getJSDocInfo();
      Node node4 = Node.newNumber((double) 29, 40, 51);
      node4.setVarArgs(false);
      node2.getQualifiedName();
      node2.isRegExp();
      node3.isTry();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      node0.putBooleanProp(41, false);
      node0.getIntProp(41);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(48, nodeArray0, 40, 1);
      node0.isCase();
      node1.checkTreeEqualsImpl(node0);
      node0.isGetProp();
      node0.isWhile();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node1 = node0.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.isGetterDef();
      node1.checkTreeEquals(node0);
      node1.checkTreeEquals(node0);
      node1.getSourceFileName();
      node1.getAncestors();
      node1.isBreak();
      node1.isScript();
      node1.getCharno();
      node0.getLength();
      node1.getAncestor(2);
      Node.mergeLineCharNo((-942), 621);
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      int int0 = (-19);
      Node node0 = Node.newNumber((double) (-19));
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node0.hasChildren();
      // Undeclared exception!
//      try { 
        node1.addChildrenToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = Node.newString("not a StringNode");
      node0.setString("not a StringNode");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node node1 = new Node(52, node0, node0);
      Node node2 = Node.newString(40, "Recorded bad position information\nstart-line: ");
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      node2.setLineno(4095);
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(0, (-4853), (-4853));
      Node node1 = new Node(48, node0, node0, node0, node0, (-4853), 4095);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.isOnlyModifiesArgumentsCall();
      node0.setIsSyntheticBlock(false);
      Node node3 = null;
      // Undeclared exception!
//      try { 
        node0.addChildAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node1.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.newString("!4<aq*U6C(s2'$itcC", 1573, (-3267));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.getJsDocBuilderForNode();
      node1.copyInformationFromForTree(node2);
      node0.setChangeTime(233508);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      node2.cloneTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node3.getIntProp((-994));
      // Undeclared exception!
//      try { 
        node3.addChildToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = new Node(10, 10, 10);
      node0.isNumber();
      node0.setType((-2796));
      node0.isWhile();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset.defaultCharset();
      Node node1 = new Node(54, node0, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node1.setString("Object#Element");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 54
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      Node node1 = Node.newString(2, "C-BZFOX~9tWjA`{~");
      node1.getString();
      node1.addChildToBack(node0);
      node1.removeProp(31);
      node0.hasChild(node1);
      node1.isThis();
      node0.isRegExp();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node((-439), node0, node0);
      node1.putBooleanProp(57, false);
      Node node2 = Node.newString(20, "Q8}c,Asf$lQrKVV9M");
      node1.getIndexOfChild(node2);
      Node.newNumber((double) 0);
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node.extractLineno(920);
      Node node0 = new Node(920, 26, 920);
      node0.setLineno(153);
      // Undeclared exception!
//      try { 
        node0.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 920
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node1 = node0.useSourceInfoFrom(node0);
      Node node2 = Node.newString("}");
      node0.checkTreeEqualsImpl(node1);
      Node node3 = Node.newString(1766, "4.4EX&\"");
      node0.setIsSyntheticBlock(false);
      node3.getSourceOffset();
      node0.isSwitch();
      node0.addChildToBack(node1);
      node1.isTrue();
      node3.getJSDocInfo();
      node0.isBlock();
      node2.getIndexOfChild(node1);
      // Undeclared exception!
//      try { 
        node2.replaceChild(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      node0.getBooleanProp((-2962));
      node0.setIsSyntheticBlock(true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("%Ip(@p<'M^n8SXztR");
      node0.isGetterDef();
      Node node1 = new Node((-1231), node0, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -1231
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node1.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.getJsDocBuilderForNode();
      Node node3 = node1.copyInformationFromForTree(node2);
      node0.setChangeTime(233508);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      node1.setIsSyntheticBlock(false);
      int int0 = Node.QUOTED_PROP;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isQuotedString();
      node1.getSourceFileName();
      node3.getAncestors();
      node1.isBreak();
      node3.isScript();
      node3.getCharno();
      node1.getLength();
      node0.getAncestor(56);
      Node node4 = null;
//      try {
        node4 = new Node(4095, node0, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node0.hasMoreThanOneChild();
      Node node2 = Node.newString("l]h");
      Node.newNumber(2487.0, 37, 8);
      node2.isFromExterns();
      InputId inputId0 = new InputId("l]h");
      Node node3 = new Node(52, node2);
      node0.setLineno(5);
      node1.setInputId(inputId0);
      node2.isCast();
      Node node4 = Node.newString(785, "2");
      node4.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.SimpleErrorReporter";
      Node node0 = Node.newNumber((double) 2984);
      node0.mayMutateArguments();
      Node node1 = new Node(435, node0, node0, node0, node0, 42, 2);
      node1.isGetterDef();
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 435
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newString("op#*", 39, (-3848));
      node1.addSuppression("op#*");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("op#*");
      node_FileLevelJsDocBuilder0.append("op#*");
      node1.isGetterDef();
      node0.checkTreeEquals(node1);
      node1.checkTreeEquals(node2);
      node2.getSourceFileName();
      node1.getAncestors();
      node1.isBreak();
      node2.getCharno();
      Node node3 = Node.newNumber(3271.54971352, 4, 38);
      node3.getLength();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node1.checkTreeEquals(node0);
      node1.checkTreeEquals(node0);
      node1.getSourceFileName();
      node0.getAncestors();
      node1.isBreak();
      node1.isScript();
      node1.getCharno();
      node0.getLength();
      node0.isVar();
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.isCall();
      node2.useSourceInfoFrom(node1);
      Node node3 = new Node(2);
      Node node4 = null;
//      try {
        node4 = new Node(47, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = Node.newNumber((double) 708, 708, 708);
      node0.children();
      node0.getStaticSourceFile();
      Node node1 = new Node(46, 1, 57);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isLocalResultCall();
      Node.newString("", 2325, 4095);
      InputId inputId0 = new InputId("");
      Node node3 = Node.newString(977, "");
      node0.addChildToBack(node2);
      node1.getSourceFileName();
      node1.hasChild(node2);
      node3.isThis();
      node2.hasMoreThanOneChild();
      // Undeclared exception!
//      try { 
        node3.getExistingIntProp(50);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 50
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node1.checkTreeEquals(node0);
      Node node2 = Node.newNumber((double) 2);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.putBooleanProp(42, true);
      Node.newString(86, "Node tree inequality:\nTree1:\nIN 0\n    NUMBER 0.0\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: IN 0\n    NUMBER 0.0\n\n\nSubtree2: NUMBER 0.0\n");
      node1.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = Node.newString("*hW", 8192, 114);
      node0.putProp(114, "*hW");
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 114
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
//      try {
        node0 = new Node((-656), (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.putBooleanProp(306654252, false);
      node0.getIntProp(41);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node((-862048943), nodeArray0, 1, 56);
      node0.isCase();
      Node node2 = new Node(15, node1);
      node0.checkTreeEqualsImpl(node2);
      node0.isGetProp();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node((-1349), node1, node1, node0, 39, 2189);
      Node node3 = node2.getChildAtIndex(1);
      node3.mayMutateGlobalStateOrThrow();
      Node.newString((-461), "4MMZ5NK(V_2pUTLr", 152, 105);
      node0.isQuotedString();
      node1.isReturn();
      node0.isOptionalArg();
      Node node4 = null;
//      try {
        node4 = new Node(57, (Node[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = new Node(0, (-4853), (-4853));
      Node node1 = new Node((-152));
      node1.mayMutateArguments();
      Node node2 = new Node(54, node1, node1, node1, node1);
      Node node3 = null;
//      try {
        node3 = new Node(51, node2, node0, node2, node1, 2544, 55);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newNumber(589.374);
      node0.mayMutateArguments();
      Node node1 = new Node(42, node0, node0, node0, node0, 2738, 110);
      Node node2 = Node.newNumber(846.8359675, 1224, (-2323));
      node2.hasChildren();
      Charset.defaultCharset();
      Node.newNumber((double) 54);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node2);
      node1.getQualifiedName();
      node0.isEquivalentTo(node1, true, true, true);
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = Node.newNumber((-1575.2420866082));
      node0.putIntProp(0, 0);
      node0.setIsSyntheticBlock(false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      node0.children();
      node0.isOptionalArg();
      Node node1 = new Node(57, 39, (-2323));
      Node node2 = new Node(126, node0, node1);
      node2.isAssign();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("2YCP&aFpLCEfB>v,P+");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.isCall();
      Node node3 = null;
//      try {
        node3 = new Node(4095, node1, node2, node0, 36, 57);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = Node.newNumber((double) 708, 16, 708);
      node0.children();
      node0.getStaticSourceFile();
      Node node1 = new Node(46, 1, 57);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isLocalResultCall();
      Node node3 = Node.newString("", 2325, 4095);
      node0.cloneTree();
      node2.isOptionalArg();
      node1.toStringTree();
      node1.addSuppression(" : ");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node0.getIntProp((-2832));
      node3.addChildToFront(node2);
      // Undeclared exception!
//      try { 
        node2.addChildrenToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = Node.newNumber(712.32532, 8192, 49);
      InputId inputId0 = new InputId("`Id:+9");
      node0.putBooleanProp(8192, false);
      node0.getIntProp(188);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(105, nodeArray0, 39, 54);
      node1.isCase();
      // Undeclared exception!
//      try { 
        node1.checkTreeEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = Node.newNumber((-3275.676));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      Node node1 = Node.newString(15, ",(g");
      node0.addChildToBack(node1);
      node0.hasChild(node1);
      node1.isStringKey();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = Node.newString("b'<PN8qw");
      InputId inputId0 = null;
      node0.setInputId((InputId) null);
      Node node1 = new Node((-2475), node0, node0, node0);
      node1.putProp(31, (Object) null);
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2475
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = Node.newString((-1738), "62o2L*+(t'H{'Lp");
      Node node1 = new Node((-1738), node0, node0);
      node1.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -1738
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Charset.defaultCharset();
      Node node1 = Node.newNumber(1.0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.ArrowType");
      node2.getQualifiedName();
      node0.isRegExp();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node.newString(423, "", 423, 1151);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList.of();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      node0.isScript();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-18));
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node0.hasChildren();
      Charset.defaultCharset();
      Node node2 = Node.newNumber((-225.449918038));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
      node0.getQualifiedName();
      node2.isEquivalentTo(node2, true, false, false);
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) 20);
      node0.setVarArgs(false);
      node0.isNoSideEffectsCall();
      node0.setChangeTime((-1638));
      node0.setDouble(0.0);
      node0.removeProp(0);
      node0.isOptionalArg();
      Node node1 = Node.newNumber((double) 32);
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      Node node2 = Node.newNumber((double) (-632), (-1664), 37);
      node1.isFromExterns();
      InputId inputId0 = new InputId("Object#Key");
      Node node3 = new Node(46, node2);
      node3.setIsSyntheticBlock(true);
      node3.setLineno(47);
      node2.setInputId(inputId0);
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newNumber((double) 12, 3942, 153);
      node0.putIntProp(15, 3942);
      node0.hasMoreThanOneChild();
      Node node1 = Node.newString("2");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry1.createTemplateTypeMap(immutableList0, immutableList1);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>(immutableList1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      node1.isScript();
      node0.getCharno();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newNumber((double) 12, 3942, 153);
      node0.putIntProp(15, 3942);
      node0.hasMoreThanOneChild();
      Node node1 = Node.newString("2");
      Node node2 = Node.newNumber((double) 57, 15, (-19));
      node2.isFromExterns();
      InputId inputId0 = new InputId("2");
      Node node3 = new Node(395, node2);
      node3.setLineno(48);
      node3.setInputId(inputId0);
      node3.isCast();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = Node.newNumber(712.32532, 8192, 49);
      String string0 = "`Id:+9";
      InputId inputId0 = new InputId("`Id:+9");
      node0.putBooleanProp(8192, false);
      Node node1 = new Node(0, 12, 1578);
      node1.addChildrenToFront(node0);
      Node node2 = null;
//      try {
        node2 = new Node(49, node0, node1, node0, node1, 31, 83);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      int int0 = 9;
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(9, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0, 154, 154);
      node0.children();
      node0.isOptionalArg();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-398), nodeArray0);
      Node node1 = new Node(4095, node0, node0);
      InputId inputId0 = new InputId("\"=MJtHbYEKvWWlEft>");
      node1.setInputId(inputId0);
      node1.putBooleanProp((-563), false);
      node0.getIntProp(1004);
      Node node2 = new Node((-2955), nodeArray0, 31, 43);
      node2.isCase();
      node0.checkTreeEqualsImpl(node2);
      node0.isGetProp();
      node2.isWhile();
      node1.isEquivalentToShallow(node2);
      node1.setLength((-1095));
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-398), nodeArray0);
      Node node1 = new Node(4095, node0, node0);
      InputId inputId0 = new InputId("\"=MJtHbYEKvWWlEft>");
      node1.setInputId(inputId0);
      node1.putBooleanProp((-563), false);
      node0.getIntProp(1004);
      Node node2 = new Node(4095, nodeArray0, 4055, 54);
      node2.getAncestors();
      node2.isBreak();
      node1.isScript();
      node2.getCharno();
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isScript();
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = Node.newNumber((-1575.2420866082));
      int int0 = 0;
      node0.putIntProp(0, 0);
//      try { 
        node0.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER -1575.2420866082 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      simpleErrorReporter0.error("Object#Key", "", (-157), 65536);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      node0.isScript();
      node1.getCharno();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node0.setDouble((-1575.2420866082));
      Node node2 = new Node(979, 8, 52);
      // Undeclared exception!
//      try { 
        node2.addChildrenToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      node0.isGetterDef();
      node0.checkTreeEquals(node0);
      Node node1 = new Node(4095, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node0);
      Node node3 = Node.newNumber((double) 0);
      node3.isQualifiedName();
      node2.setSourceEncodedPosition(1);
      node2.setLineno(1456);
      node1.getSourceFileName();
      node3.getAncestors();
      node1.isAnd();
      node0.isCall();
      node2.isScript();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      node0.isGetterDef();
      node0.checkTreeEquals(node0);
      node0.setSourceEncodedPosition((-672));
      node0.setLineno(16);
      node0.getAncestors();
      node0.isBreak();
      node0.isScript();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Charset.defaultCharset();
      Node.newNumber((-82.9));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-992));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.areAllFlagsSet();
      InputId inputId0 = new InputId("<dJPAW@iIO{,mk|]");
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = Node.newNumber((-405.8948299895387));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      Node node1 = Node.newString(2, "C-BZFOX~9tWjA`{~");
      node1.addChildToBack(node0);
      node0.hasChild(node1);
      node1.isThis();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = Node.newString((-4014), "97G}!tvbwbS>H{?", (-2306), 2097152);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("97G}!tvbwbS>H{?");
      node_FileLevelJsDocBuilder0.append("");
      node0.getJsDocBuilderForNode();
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.copyInformationFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = Node.newNumber((-1575.2420866082));
      node0.putIntProp(0, 0);
      node0.setIsSyntheticBlock(false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset.defaultCharset();
      Node node1 = Node.newNumber((-958.8271295948734));
      node1.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = new Node((-19));
      node0.isSyntheticBlock();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset.defaultCharset();
      Node node1 = Node.newNumber((double) 42);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Element", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = Node.newString("8");
      node1.getQualifiedName();
      node0.isRegExp();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node((-439), node0, node0);
      node1.putBooleanProp(57, true);
      Node node2 = Node.newString(20, "Q8}c,Asf$lQrKVV9M");
      node1.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      int int0 = 130;
      node0.isUnscopedQualifiedName();
      node0.setSourceEncodedPosition(130);
      Node node1 = Node.newString(130, "INSTANCEOF", 47, 4095);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = new Node((-19));
      node0.isSyntheticBlock();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset.defaultCharset();
      Node node1 = Node.newNumber((double) 42);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      String string0 = "8";
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      int int0 = 1;
      Node[] nodeArray0 = new Node[2];
      Node node0 = null;
//      try {
        node0 = new Node((-2), (Node) null, 1, (-2));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = new Node(15);
      Node node1 = new Node(587, node0);
      Node node2 = null;
//      try {
        node2 = new Node(0, node0, node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = Node.newNumber(712.32532, 8224, 49);
      InputId inputId0 = new InputId("`Id:+9");
      node0.isUnscopedQualifiedName();
      node0.isLabelName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = new Node((-559));
      node0.isFor();
      Node node2 = Node.newString(63, "Object#Key");
      node2.isArrayLit();
      Node node3 = new Node(4095, node0, node2, node1, (-3199), 1);
      node3.isFunction();
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      node0.isScript();
      node1.getCharno();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-19));
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node0.hasChildren();
      Charset.defaultCharset();
      node0.addChildrenToBack(node1);
      node0.wasEmptyNode();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset charset0 = Charset.defaultCharset();
      Node node1 = Node.newString(51, "", (-308), 0);
      node1.toString(false, false, true);
      node1.isInc();
      node0.addChildToBack(node1);
      node0.getType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.putProp((-1124), charset0);
      node1.getString();
      node1.isSwitch();
      node0.isLabel();
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id -1124
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node1.checkTreeEquals(node0);
      node0.setSourceEncodedPosition((-672));
      node1.toString();
      node1.setLineno(16);
      node1.getSourceFileName();
      node1.getAncestors();
      node0.copyInformationFrom(node1);
      node1.isBreak();
      node0.isScript();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node1.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.getJsDocBuilderForNode();
      Node node3 = node1.copyInformationFromForTree(node2);
      node0.setChangeTime(233508);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node3.toString(false, false, false);
      Node node4 = new Node((-2910), node3, node3);
      // Undeclared exception!
//      try { 
        Node.newString((-381), (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      int int0 = 12;
      int int1 = (-782);
      int int2 = 302;
      // Undeclared exception!
//      try { 
        Node.newString((String) null, (-782), (-782));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node1 = Node.newNumber(255.0815461916);
      node1.setVarArgs(true);
      node1.isNoSideEffectsCall();
      node1.setChangeTime(53);
      // Undeclared exception!
//      try { 
        node0.setDouble(4095);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN_SUB");
      node0.getProp(117);
      node0.isString();
      Node node1 = Node.newNumber(0.0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.addSuppression("*V\"c2]");
      node2.checkTreeEquals(node1);
      node2.getIntProp(63);
      node0.isFunction();
      Node node3 = Node.newString("ASSIGN_SUB");
      node3.removeChildren();
      node0.hasChild(node3);
      // Undeclared exception!
//      try { 
        node3.setSideEffectFlags(38);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = new Node(10);
      node0.isNumber();
      node0.isWhile();
      node0.getJSDocInfo();
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node((-2566), node1, node1);
      node0.putBooleanProp(4, false);
      Node.newString(3798, "Object#Key");
      node1.getIndexOfChild(node0);
//      try { 
        node1.setString("Node tree inequality:\nTree1:\nSETTER_DEF \n\n\nTree2:\nPARAM_LIST\n\n\nSubtree1: SETTER_DEF \n\n\nSubtree2: PARAM_LIST\n");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // PARAM_LIST is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node1.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.getJsDocBuilderForNode();
      node1.copyInformationFromForTree(node2);
      node0.setChangeTime(233508);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      node1.setIsSyntheticBlock(false);
      int int0 = Node.QUOTED_PROP;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isQuotedString();
      node0.isWhile();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node3 = null;
//      try {
        node3 = new Node(32, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isNumber();
      node0.isWhile();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset.defaultCharset();
      Node node1 = new Node(48, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(2160, node0, node1, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(50, node0, node0, node0, node0, 113, 2);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("this");
      node_FileLevelJsDocBuilder0.append("<invalid>");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.getJsDocBuilderForNode();
      Node node3 = node1.copyInformationFromForTree(node0);
      node2.setChangeTime(42);
      node_FileLevelJsDocBuilder1.append("iyN~Vt?346y,HImLP");
      node1.setSourceEncodedPosition((-136));
      node2.setIsSyntheticBlock(true);
      int int0 = Node.QUOTED_PROP;
      // Undeclared exception!
//      try { 
        node3.setString("gF");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 50
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = Node.newString(63, "97G}!tvbwbS>H{?", 63, 63);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$StringNode");
      node0.setInputId(inputId0);
      // Undeclared exception!
//      try { 
        node0.srcrefTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node node1 = new Node(32, node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      InputId inputId0 = new InputId("iCh}||]?");
      node1.setInputId(inputId0);
      node0.getChangeTime();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node1.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      node1.addSuppression((String) null);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append((String) null);
      node1.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder1.append("Should not happen\n");
      node_FileLevelJsDocBuilder1.append("M90T");
      node1.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder2 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder2.append("e70%Qn'");
      node2.isCall();
      Node node3 = node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(57);
      int int0 = 2639;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("com.google.javascript.rhino.SimpleErrorReporter", node3, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.getJsDocBuilderForNode();
      node1.isCall();
      Node node3 = node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(2);
      Node node5 = new Node(3798, node3, 8, 47);
      node5.cloneNode();
      node3.mayMutateGlobalStateOrThrow();
      node2.isGetElem();
      node4.checkTreeTypeAwareEqualsImpl(node5);
      node5.isLabelName();
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-398), nodeArray0);
      Node node1 = new Node((-398), node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2705));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      InputId inputId0 = new InputId(": ");
      node1.setInputId(inputId0);
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node1 = node0.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.getJsDocBuilderForNode();
      node0.copyInformationFromForTree(node1);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      node0.isExprResult();
      node0.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.setVarArgs(true);
      node1.isNoSideEffectsCall();
      node1.setChangeTime(12);
//      try { 
        node1.setDouble(915.30801);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING com.google.javascript.rhino.SimpleErrorReporter 0 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000009] [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000011] [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000012] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node((-2569), node1, node0, node0, 43, 4095);
      node0.getChildAtIndex((-632));
      node1.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString(2, "Object#Key", 47, 52);
      node2.isQuotedString();
      node3.isReturn();
      node1.removeProp(122);
      node3.isOptionalArg();
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = new Node(112);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node1 = null;
//      try {
        node1 = new Node(113, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newNumber(1805.192, 12, 3942);
      node0.putIntProp(15, 12);
      node0.hasMoreThanOneChild();
      Node node1 = Node.newString("z?]r<oB?oNL?U");
      Node.newNumber((double) 36, 2408, 3942);
      node1.isFromExterns();
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(38);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 38
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder1.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.common.collect.RegularImmutableTable$Values");
      node1.isCall();
      Node node3 = node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(2);
      Node node5 = new Node(3798, node3, 8, 47);
      node5.cloneNode();
      node3.mayMutateGlobalStateOrThrow();
      node2.isGetElem();
      node4.checkTreeTypeAwareEqualsImpl(node5);
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node1.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.getJsDocBuilderForNode();
      node1.copyInformationFromForTree(node2);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      node1.isExprResult();
      node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.setVarArgs(true);
      node2.isNoSideEffectsCall();
      node2.setChangeTime(12);
//      try { 
        node2.setDouble(915.30801);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING com.google.javascript.rhino.SimpleErrorReporter 0 [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000012] [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000013] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset charset0 = Charset.defaultCharset();
      Node node1 = Node.newString(51, "", (-308), 0);
      node1.toString(false, false, true);
      node1.isInc();
      node0.addChildToBack(node1);
      node0.getType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.putProp((-1124), charset0);
      node1.getString();
      node1.isSwitch();
      node0.isLabel();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node1.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.getJsDocBuilderForNode();
      Node node3 = node1.copyInformationFromForTree(node2);
      node0.setChangeTime(233508);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      node1.setIsSyntheticBlock(false);
      int int0 = Node.QUOTED_PROP;
      String string0 = "x@1>-Q+ZyXEii*Nx";
      // Undeclared exception!
//      try { 
        node3.setString("x@1>-Q+ZyXEii*Nx");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = Node.newString(0, "B:fK");
      Node node1 = Node.newNumber((double) 57, 4095, 1);
      node1.getBooleanProp(38);
      node0.setIsSyntheticBlock(false);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString(29, "B:fK");
      node0.setIsSyntheticBlock(false);
      node0.getSourceOffset();
      node0.isSwitch();
      node2.addChildToBack(node0);
      node1.isTrue();
      node1.getJSDocInfo();
      node1.isBlock();
      node0.getIndexOfChild(node2);
      node2.replaceChild(node0, node1);
      node2.addSuppression("B:fK");
      node1.isNull();
      node0.detachChildren();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node1.checkTreeEquals(node0);
      node0.setSourceEncodedPosition((-672));
      node1.setLineno(16);
      node1.getSourceFileName();
      node1.getAncestors();
      node1.isBreak();
      node0.isScript();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-398), nodeArray0);
      Node node1 = new Node((-398), node0, node0, node0, node0);
      node1.getSourceOffset();
      node1.isSwitch();
      node1.addChildToBack(node1);
      node1.isTrue();
      node0.getJSDocInfo();
      node0.isBlock();
      node1.isWhile();
      node0.getIndexOfChild(node1);
      Node node2 = Node.newString(" t$6A?w_F!,Rh%a*");
      // Undeclared exception!
//      try { 
        node2.replaceChild(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = Node.newString("}xC#r", 2984, 2984);
      Node node1 = new Node(130);
      node0.isSyntheticBlock();
      node1.isWhile();
      node1.getDirectives();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Node node2 = Node.newNumber((double) 49);
      node2.setChangeTime(16);
      node2.toString(true, true, true);
      node0.isInc();
      node2.addChildToBack(node0);
      node0.getType();
      int int0 = 1402;
      Node node3 = Node.newString("");
      Node node4 = null;
//      try {
        node4 = new Node(4, node0, node3, node1, 48, 47);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = Node.newNumber((double) 708, 16, 708);
      node0.children();
      node0.getStaticSourceFile();
      Node node1 = new Node(46, 1, 57);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = new Node(15, node0, 57, 36);
      node2.isLocalResultCall();
      Node.newString("", 2325, 4095);
      node3.getLineno();
      node0.cloneTree();
      node3.isOptionalArg();
      node1.toStringTree();
      boolean boolean0 = true;
      node3.addSuppression(" : ");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node2.getJSDocInfo();
      node_SideEffectFlags2.setReturnsTainted();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node[] nodeArray0 = new Node[5];
      Node node0 = Node.newNumber(712.32532, 8192, 49);
      nodeArray0[0] = node0;
      String string0 = "";
      Node node1 = new Node(52, 54, 8);
      nodeArray0[1] = node1;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      nodeArray0[2] = null;
      node1.toStringTree();
      Iterable<Node> iterable0 = new Vector<Node>(42);
      node1.isThrow();
      Node node2 = null;
//      try {
        node2 = new Node(54, nodeArray0, (-1877), 16);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = Node.newNumber((-3275.676));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      Node node1 = Node.newString(15, "K,(B");
      node0.addChildToBack(node1);
      node0.hasChild(node1);
      node1.isStringKey();
      node1.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newString("}xC#r", 2984, 2984);
      Node node1 = new Node(121);
      node0.isSyntheticBlock();
      node1.isWhile();
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node1.getJSDocInfo();
      node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      int int0 = 130;
      Node node1 = Node.newString(130, "INSTANCEOF", (-3939), 4095);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = new Node((-19));
      node0.isSyntheticBlock();
      node0.isWhile();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset.defaultCharset();
      Node node1 = Node.newNumber((double) 42);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = Node.newString("8");
      node1.getQualifiedName();
      node0.isRegExp();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = new Node(10);
      node0.isNumber();
      node0.isWhile();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset.defaultCharset();
      Node node1 = new Node(54, node0, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node1.setString("Object#Element");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 54
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = Node.newNumber((double) 31);
      Node node1 = new Node(31, node0, node0, 56, (-3536));
      Node node2 = null;
//      try {
        node2 = new Node((-6), node1, node0, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset.defaultCharset();
      // Undeclared exception!
//      try { 
        node0.setString("Object#Element");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      node0.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node1 = node0.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.getJsDocBuilderForNode();
      Node node2 = node0.copyInformationFromForTree(node1);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      node0.isExprResult();
      Node node3 = node0.useSourceInfoFrom(node0);
      node2.isExprResult();
      Node[] nodeArray0 = new Node[9];
      Node node4 = Node.newNumber((double) 31);
      nodeArray0[0] = node4;
      nodeArray0[1] = node0;
      nodeArray0[4] = node3;
      nodeArray0[3] = node2;
      nodeArray0[4] = node3;
      nodeArray0[5] = node3;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      nodeArray0[8] = node3;
      node4.setSourceEncodedPosition((-1160));
      node0.setLineno(3284);
      node3.getSourceFileName();
      node0.getAncestors();
      node2.isAnd();
      node0.isCall();
      node0.isScript();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      simpleErrorReporter0.error("key", "", 40, 46);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      node0.isScript();
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-398), nodeArray0);
      Node node1 = new Node((-398), node0, node0, node0, node0);
      Node.newString("y", 51, 308);
      node1.setSourceEncodedPosition(43);
      node1.setSourceEncodedPosition((-870));
      Node node2 = node0.srcref(node1);
      node2.isLocalResultCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -398
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = Node.newNumber((-3275.676));
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      node0.setInputId(inputId0);
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = Node.newString(0, "B:fK");
      Node node1 = Node.newNumber((double) 57, 4095, 1);
      node1.getBooleanProp(38);
      node0.setIsSyntheticBlock(false);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString(29, "B:fK");
      node0.setIsSyntheticBlock(false);
      node0.getSourceOffset();
      node0.isSwitch();
      node2.addChildToBack(node0);
      node1.isTrue();
      node1.getJSDocInfo();
      node1.isBlock();
      node1.isWhile();
      node0.getIndexOfChild(node2);
      node2.replaceChild(node0, node1);
      node2.addSuppression("B:fK");
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = Node.newString("", 0, (-296));
      Node node1 = new Node(31, node0, node0, node0);
      Node node2 = new Node(86, node1, 27591, 31);
      Node node3 = null;
//      try {
        node3 = new Node(109, node0, node0, node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.removeProp((-862048943));
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node[] nodeArray0 = new Node[5];
      Node node0 = Node.newNumber(712.32532, 8192, 49);
      nodeArray0[0] = node0;
      Node node1 = Node.newString("");
      nodeArray0[1] = node1;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      nodeArray0[2] = node0;
      node1.toStringTree();
      node0.siblings();
      node1.isThrow();
      Node node2 = null;
//      try {
        node2 = new Node(54, nodeArray0, (-1877), 16);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = Node.newString("not a StringNode");
      node0.setString("?$Z(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      InputId inputId0 = new InputId("CharMatcher.JAVA_LETTER_OR_DIGIT");
      node0.setInputId(inputId0);
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newString("not a StringNode");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(105);
      node_SideEffectFlags0.clearAllFlags();
      node0.getChildAtIndex((-1));
      Node node1 = null;
//      try {
        node1 = new Node(49, (Node) null, node0, node0, 30, 564);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = Node.newString(113, "qZbG'0^w_:NUn)+", 42, 56);
      Node node1 = new Node((-4132), node0, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(42, node1, node1, node0, node0, (-93), (-1412));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = new Node(2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder1.append("4|lA");
      node0.getJsDocBuilderForNode();
      Node node3 = node1.copyInformationFromForTree(node2);
      node_FileLevelJsDocBuilder0.append("com.google.common.collect.RegularImmutableTable$Values");
      node1.setSourceEncodedPosition(88);
      node1.isCall();
      node2.useSourceInfoFrom(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
//      try { 
        node1.getChildAtIndex(37);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = Node.newString("not a StringNode");
      InputId inputId0 = new InputId("C-ZFOX~9tWjA`{~");
      node0.setInputId(inputId0);
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newString((-652), "side_effect_flags");
      node0.getQualifiedName();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset.defaultCharset();
      Node node1 = new Node(54, node0, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node1.setString("Object#Element");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 54
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newString(0, "DATE_TYPE", 126, 126);
      Node node1 = new Node(0, node0, 1742, (-3098));
      node0.addSuppression("DATE_TYPE");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append(",{rm");
      node_FileLevelJsDocBuilder0.append("");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.getJsDocBuilderForNode();
      node2.copyInformationFromForTree(node1);
      node_FileLevelJsDocBuilder1.append("B$x#*");
      node1.setSourceEncodedPosition(37);
      node2.isExprResult();
      Node node3 = node1.useSourceInfoFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = node1.getChildAtIndex((-2988));
      node3.mayMutateGlobalStateOrThrow();
      Node node5 = null;
//      try {
        node5 = new Node(708, node2, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      int int0 = 8192;
      Node[] nodeArray0 = new Node[5];
      Node node0 = Node.newNumber(712.32532, 8192, 49);
      nodeArray0[0] = node0;
      Node node1 = Node.newString("");
      nodeArray0[1] = node1;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      nodeArray0[2] = null;
      node1.toStringTree();
      node0.siblings();
      node1.isThrow();
      Node node2 = null;
//      try {
        node2 = new Node(54, nodeArray0, (-1877), 16);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString("", 0, 564);
      nodeArray0[0] = node0;
      Node node1 = new Node((-447), node0, node0, node0, node0);
      nodeArray0[1] = node1;
      node1.setSourceEncodedPositionForTree(152);
      Node node2 = Node.newNumber((double) 42, 38, (-814));
      nodeArray0[2] = node2;
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(4);
      node_SideEffectFlags1.setMutatesArguments();
      node2.isAnd();
      node1.getInputId();
      node0.setInputId((InputId) null);
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = Node.newNumber((double) 20);
      node0.isOptionalArg();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = new Node((-2436), node0);
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = Node.newString("}xC#r", 2984, 2984);
      Node node1 = new Node(130);
      node0.isSyntheticBlock();
      node1.isWhile();
      node1.getDirectives();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Node node2 = Node.newNumber((double) 49);
      node1.checkTreeEquals(node2);
      Node node3 = null;
//      try {
        node3 = new Node(2, (Node[]) null, 52, 100);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      Charset.defaultCharset();
      node0.checkTreeEquals(node0);
      Node node1 = node0.srcref(node0);
      Node.newString((-2753), "null");
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of();
      TemplateTypeMap templateTypeMap0 = jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      JSType jSType0 = templateTypeMapReplacer0.caseUnknownType();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      jSTypeArray0[0] = jSType0;
      Node node2 = jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset.defaultCharset();
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) 42);
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = Node.newNumber((-3275.676));
      String string0 = "97G}!tvbwbS>H{?";
      Node node1 = Node.newString(55, "97G}!tvbwbS>H{?");
      node0.getIndexOfChild(node1);
      // Undeclared exception!
//      try { 
        node1.replaceChild(node0, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = new Node(2525, 2525, 2525);
      // Undeclared exception!
//      try { 
        node0.getAncestor((-632));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo");
      node0.getDirectives();
      node0.mayMutateArguments();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      Node node1 = new Node(51, node0, node0, node0, node0, 0, 31);
      node1.isGetterDef();
      node0.setSourceEncodedPosition((-672));
      node1.setLineno(16);
      node1.getSourceFileName();
      node1.getAncestors();
      node1.isBreak();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node1;
      nodeArray0[6] = node1;
      Node node2 = null;
//      try {
        node2 = new Node(53, nodeArray0, 47, 3228);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node node0 = Node.newString(148, "", 379, (-632));
      node0.getQualifiedName();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node1.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.getJsDocBuilderForNode();
      Node node3 = node1.copyInformationFromForTree(node2);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      node1.isExprResult();
      Node node4 = node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node5 = node1.getChildAtIndex((-675));
      node1.mayMutateGlobalStateOrThrow();
      node4.isReturn();
      node0.toString(false, false, false);
      Node node6 = new Node(37, node4, node3);
      node6.cloneNode();
      node0.mayMutateGlobalStateOrThrow();
      node5.isGetElem();
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node node0 = Node.newString("not a StringNode");
      node0.setLineno(39);
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) 20);
      node0.setVarArgs(false);
      node0.isNoSideEffectsCall();
      node0.setChangeTime((-1638));
      node0.setDouble(0.0);
      node0.isQualifiedName();
      node0.isObjectLit();
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp((-1638));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: -1638
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node1.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.getJsDocBuilderForNode();
      node1.copyInformationFromForTree(node2);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      node1.isExprResult();
      Node node3 = node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node3.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node node0 = Node.newString("i.2hwxtf}z9B4gT_", (-1783), (-1783));
      Node node1 = new Node((-833), node0, node0, 49, 1731);
      node0.addChildrenToBack(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.getLength();
      node1.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      String string0 = "j|x_zUP";
      Node node0 = Node.newString("j|x_zUP");
      Node node1 = new Node(2, node0, node0, node0, node0, (-3544), 4095);
      node0.isLocalResultCall();
      node1.setChangeTime(16);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.siblings();
      node0.toStringTree();
      // Undeclared exception!
//      try { 
        node2.removeChild(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = Node.newString("i.2hwxtf}z9B4gT_", (-1783), (-1783));
//      try { 
        node0.setDouble((-1783));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING i.2hwxtf}z9B4gT_ is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags((-1344));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      int int0 = 1911;
      Node[] nodeArray0 = new Node[5];
      Node node0 = Node.newNumber(712.32532, 1911, 49);
      nodeArray0[0] = node0;
      Node node1 = Node.newString("");
      nodeArray0[1] = node1;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      nodeArray0[2] = null;
      Node node2 = null;
//      try {
        node2 = new Node(54, nodeArray0, (-1877), 16);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      Node node0 = Node.newString((-309), "", (-643), (-643));
      Node node1 = new Node(12288, node0, node0, node0, node0, 130, 31);
      Node node2 = new Node(4095);
      Node node3 = Node.newNumber(0.0);
      Node node4 = null;
//      try {
        node4 = new Node(29, (Node) null, node1, node3, (Node) null, 126, 152);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 0, (-1555));
      node0.setVarArgs(true);
      Node node1 = new Node(46, node0, node0, (-1389), 2692);
      node0.addChildrenToBack(node1);
      node1.wasEmptyNode();
      node1.setOptionalArg(false);
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString("", 0, 564);
      nodeArray0[0] = node0;
      Node node1 = new Node((-447), node0, node0, node0, node0);
      nodeArray0[1] = node1;
      node1.setSourceEncodedPositionForTree(152);
      Node node2 = Node.newNumber((double) 42, 38, (-814));
      nodeArray0[2] = node2;
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(4);
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      node1.getInputId();
      node0.setInputId((InputId) null);
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset.defaultCharset();
      Node node1 = Node.newNumber((double) 42);
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-398), nodeArray0);
      Node node1 = new Node((-398), node0, node0, node0, node0);
      Node node2 = new Node(113, node1, node1);
      node2.putBooleanProp((-563), false);
      // Undeclared exception!
//      try { 
        Node.newString(47, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder1.append("4|lA");
      node0.getJsDocBuilderForNode();
      Node node3 = node1.copyInformationFromForTree(node2);
      node_FileLevelJsDocBuilder0.append("com.google.common.collect.RegularImmutableTable$Values");
      node1.setSourceEncodedPosition(88);
      node1.isCall();
      node2.useSourceInfoFrom(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
//      try { 
        node1.getChildAtIndex(37);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node node0 = Node.newString(1, "", (-688), (-814));
      node0.setSourceEncodedPositionForTree((-688));
      Node node1 = new Node(0, node0, node0, node0, 0, 16);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.setIsSyntheticBlock(false);
      node1.siblings();
      InputId inputId0 = new InputId("");
      node0.putProp(37, inputId0);
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = Node.newString(0, "B:fK");
      Node node1 = Node.newNumber(0.0, 4095, 433);
      node1.getBooleanProp(38);
      node0.setIsSyntheticBlock(false);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString("B:fK", 0, 29);
      node0.setIsSyntheticBlock(false);
      node0.getSourceOffset();
      node0.isSwitch();
      node2.addChildToBack(node0);
      node1.isTrue();
      node1.getJSDocInfo();
      node1.isBlock();
      node1.isWhile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags5.clearAllFlags();
      node2.isBreak();
      node0.setCharno((-1));
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node((-1707), node0, node0, node0, 1610612736, (-3471));
      // Undeclared exception!
//      try { 
        node1.addChildToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = 0;
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString("", 0, 564);
      nodeArray0[0] = node0;
      int int1 = (-447);
      Node node1 = new Node((-447), node0, node0, node0, node0);
      nodeArray0[1] = node1;
      Node node2 = Node.newNumber((double) 42, 38, (-814));
      nodeArray0[2] = node2;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.getLastChild();
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node node0 = new Node(2121, 2121, 2121);
      Node node1 = new Node(2121, node0, (-970), 1113);
      // Undeclared exception!
//      try { 
        node1.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 2121
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.wasEmptyNode();
      node0.getParent();
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = new Node((-2693));
      // Undeclared exception!
//      try { 
        node0.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node node0 = new Node(0, (-4853), 42);
      // Undeclared exception!
//      try { 
        node0.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) 0);
      node0.setVarArgs(false);
      node0.isNoSideEffectsCall();
      node0.setChangeTime((-1638));
      node0.setDouble(0.0);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp((-1638));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: -1638
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      double double0 = (-1575.2420866082);
      Node node0 = Node.newNumber((-1575.2420866082));
      node0.putIntProp(0, 0);
      node0.setIsSyntheticBlock(false);
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.addChildAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node node0 = Node.newNumber(678.59030417506);
      Node node1 = new Node((-874), node0, node0, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no next sibling.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      Node node0 = Node.newString("i.2hwxtf}z9B4gT_", (-1783), (-1783));
      Node node1 = new Node((-833), node0, node0, 49, 1731);
      node0.addChildrenToBack(node1);
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = Node.newString((-978), "Object#Key");
      node0.getJSType();
      vector0.add((JSType) null);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) node1;
      // Undeclared exception!
//      try { 
        SimpleErrorReporter.getMessage("U", objectArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // no message resource found for message property U
//         //
//         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node node0 = new Node(50, 0, 327);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("n&aj.cKO7KCn?JL");
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0);
      node1.getIntProp(55);
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = Node.newString((-309), "", (-643), 1);
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = new Node((-643), node0, node0, node0, 26, 0);
      node1.setIsSyntheticBlock(true);
      node1.siblings();
      node1.putProp((-309), "");
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getImplementedInterfaces();
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
//      try {
        node0 = new Node(0, (Node) null, (Node) null, (Node) null, (Node) null, 55, 3272);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      node0.isWhile();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString("", 0, 564);
      nodeArray0[0] = node0;
      Node node1 = new Node((-447), node0, node0, node0, node0);
      nodeArray0[1] = node1;
      Node node2 = Node.newNumber((double) 42, 38, (-814));
      nodeArray0[2] = node2;
      Node node3 = Node.newNumber((double) (-447));
      nodeArray0[3] = node3;
      Node node4 = null;
//      try {
        node4 = new Node(0, nodeArray0, 16, 15);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      int int0 = (-2713);
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node((-2713), (Node) null, (Node) null, 746, 1697);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node((-701), node0, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(0, node1, node0, node0, 0, 36);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      int int0 = 2;
      int int1 = (-1421);
      Node node0 = new Node((-3831), (-1421), (-1417));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_TYPE;
      // Undeclared exception!
//      try { 
        jSTypeRegistry1.getNativeFunctionType(jSTypeNative0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // com.google.javascript.rhino.jstype.InstanceObjectType cannot be cast to com.google.javascript.rhino.jstype.FunctionType
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
      Node node1 = new Node(38, node0, 0, 49);
      node1.addSuppression("com.google.javascript.rhino.SimpleErrorReporter");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node1.getJsDocBuilderForNode();
      node1.copyInformationFromForTree(node2);
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.SimpleErrorReporter");
      node0.setSourceEncodedPosition(50);
      node1.isExprResult();
      Node node3 = node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = node1.getChildAtIndex((-675));
      node1.mayMutateGlobalStateOrThrow();
      node3.isReturn();
      node4.setCharno(0);
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      int int0 = (-58);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-58));
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      TemplateType templateType0 = null;
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
//      try { 
        ImmutableList.of((TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 0, (-1555));
      node0.setVarArgs(true);
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.isEquivalentToTyped((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      int int0 = 917;
      Node node0 = null;
//      try {
        node0 = new Node((-3409), (Node[]) null, 917, (-3409));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "";
      Node node0 = Node.newString("$1", 775, (-1));
      Node node1 = new Node(0, node0, 37, (-705));
      JSType jSType0 = null;
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      Node node0 = null;
//      try {
        node0 = new Node(57, (Node[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      int int0 = 2351;
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(2351, (Node) null, (Node) null, (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      Node node0 = Node.newString("P'~*1>@S-J/!E|b6", (-835), (-835));
      node0.putProp((-835), "P'~*1>@S-J/!E|b6");
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      Node node0 = Node.newNumber((-3275.676));
      Node node1 = Node.newString(4, "97G}!tvbwbS>H{?");
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      Node node0 = Node.newNumber(2443.0);
      InputId inputId0 = new InputId("C-BZFOX~9tWjA`{~");
      String string0 = "is_dispatcher";
      Node node1 = new Node(39, node0, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node1.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      Node node0 = Node.newString(0, "B:fK");
      Node node1 = Node.newNumber(0.0, 4095, 433);
      node1.getBooleanProp(38);
      node0.setIsSyntheticBlock(false);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString("B:fK", 0, 29);
      node0.setIsSyntheticBlock(false);
      node0.getSourceOffset();
      node0.isSwitch();
      node2.addChildToBack(node0);
      node1.isTrue();
      node1.getJSDocInfo();
      node1.isBlock();
      node1.isWhile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags5.clearAllFlags();
      node2.isBreak();
      // Undeclared exception!
//      try { 
        node0.toString(false, false, false);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      Node node0 = Node.newNumber((double) 708, 16, 708);
      node0.children();
      node0.getStaticSourceFile();
      Node node1 = new Node(77, node0, node0, (-2988), 2533);
      node0.copyInformationFrom(node1);
      Node node2 = null;
//      try {
        node2 = new Node(708, node0, node0, node0, 91, 48);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.SimpleErrorReporter";
      Node node0 = Node.newString("com.google.javascript.rhino.SimpleErrorReporter", 2984, 2984);
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING com.google.javascript.rhino.SimpleErrorReporter 2984 is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      int int0 = 3540;
      Node node0 = new Node(3397, 1073741823, 1073741823);
      // Undeclared exception!
//      try { 
        node0.setDouble(3540);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3397
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      int int0 = (-398);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-398), nodeArray0);
      Node node1 = new Node((-398), node0, node0, node0, node0);
      Node node2 = new Node(113, node1, node1);
      Node node3 = null;
//      try {
        node3 = new Node((-398), node1, node0, node0, node2, 333, 37);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node node0 = Node.newString((-542), "");
      Node node1 = new Node((-542), node0, node0, 29, 0);
      Node node2 = new Node(0, node1, node1, node1, node1);
      // Undeclared exception!
//      try { 
        node2.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      Node node0 = Node.newString(Integer.MAX_VALUE, "Object#Element", Integer.MAX_VALUE, 0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }
}
