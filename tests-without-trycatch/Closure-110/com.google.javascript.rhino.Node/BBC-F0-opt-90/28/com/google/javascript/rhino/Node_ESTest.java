/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 20:18:16 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.NoType;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.CharArrayWriter;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PipedOutputStream;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = Node.newNumber(0.7);
      Node node1 = new Node(51, 51, 47);
      node1.isIf();
      Node node2 = new Node(39, node0, 4095, (-742));
      node2.setOptionalArg(true);
      node0.isVoid();
      node0.isQuotedString();
      Node.newString(54, "com.google.javascript.rhino.Node$NumberNode", 3133, 147);
      node1.cloneTree();
      node1.isQualifiedName();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(49, node0, node0, node0);
      node0.addChildToFront(node1);
      node0.copyInformationFrom(node1);
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(48);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got THROW
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node(110);
      node0.isEmpty();
      Node node1 = node0.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(100);
      node_SideEffectFlags0.setReturnsTainted();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node1.addChildrenToFront(node0);
      Node.newString(111, "ne)@Q%<`Hv`{5\"Px", 2, 49);
      // Undeclared exception!
//      try { 
        node0.cloneTree();
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = Node.newString("-.F,,9K", (-8), (-8));
      node0.setIsSyntheticBlock(true);
      node0.isVarArgs();
      node0.isThis();
      Node.newNumber((double) 52, 48, 256);
      Node node1 = new Node(42, node0);
      node1.getIndexOfChild(node0);
      node0.getLastSibling();
      node1.mayMutateArguments();
      node1.isGetProp();
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = new Node(44);
      Node node1 = new Node(50);
      node0.getJsDocBuilderForNode();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.addChildrenToFront(node1);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("hy\"UIu[mw7OTU", 56, 54);
      Node node2 = new Node(57, node0, node1, node0, 39, 29);
      node0.useSourceInfoIfMissingFrom(node2);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.mayMutateGlobalStateOrThrow();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.isGetElem();
      node1.addChildToFront(node1);
      Node node2 = node1.copyInformationFrom(node0);
      node1.setSideEffectFlags(36);
      Node.mergeLineCharNo(202, 0);
      node2.detachFromParent();
      node2.isLabel();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isIf();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node2 = new Node(57, node0, node1);
      Node node3 = new Node(35, 54, 54);
      Node node4 = new Node(105, node2, node2);
      node4.cloneNode();
      Node node5 = node3.useSourceInfoFrom(node2);
      node5.isEmpty();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = new Node(108, 0, 1719);
      node0.getQualifiedName();
      node0.isDelProp();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1127));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isSwitch();
      node0.isBreak();
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.isLabel();
      node0.isInstanceOf();
      Node node1 = new Node(52, node0, node0, 55, 55);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newString("7O|]G\"xc>@uzI;y,:");
      Node node1 = new Node(153, node0, node0);
      node1.setWasEmptyNode(false);
      node1.setSourceEncodedPositionForTree(102);
      node0.addChildToFront(node1);
      node0.isFromExterns();
      node0.getLastChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)41;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)124;
      byteArray0[4] = (byte)126;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node((-369));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = Node.newString(679, "_,./{5!^BJXD+9", 231, (-590));
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      Node node2 = Node.newNumber((double) 16);
      Node node3 = new Node(31, node0, node2);
      node3.isEquivalentTo(node0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = new Node((-1129));
      node0.isGetProp();
      Node node1 = new Node(52, node0);
      node1.removeFirstChild();
      node1.putIntProp(31, 53);
      node0.isIn();
      // Undeclared exception!
//      try { 
        node1.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 31
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(110);
      node0.isEmpty();
      Node node1 = node0.getLastSibling();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(100);
      node_SideEffectFlags0.setReturnsTainted();
      node0.isEquivalentTo(node1, false, false, true);
      node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
//      try { 
        node0.replaceChild(node1, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(103, ")uV]y;+Hy");
      Node node1 = new Node(103, node0, node0, node0);
      Node node2 = node1.removeChildren();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node3 = node0.cloneTree();
      node2.putBooleanProp(103, false);
      node1.setChangeTime(2);
      node1.getLength();
      Node node4 = node3.useSourceInfoFromForTree(node1);
      node1.isSetterDef();
      node1.mayMutateGlobalStateOrThrow();
      node3.addChildToBack(node2);
      node1.checkTreeEqualsImpl(node0);
      node3.addSuppression("#");
      node2.isAssign();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node4.getChangeTime();
      Node node5 = node1.setJSDocInfo(jSDocInfo0);
      jSDocInfo0.setOriginalCommentPosition(1993);
      node5.addChildrenToBack(node4);
      // Undeclared exception!
//      try { 
        node5.getExistingIntProp((-1066));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: -1066
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node(31, 31, (-1523));
      node0.setChangeTime(31);
      node0.isNoSideEffectsCall();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node(13);
      Node node1 = new Node(29, node0, 2, (-2012));
      node0.copyInformationFrom(node1);
      Node.mergeLineCharNo(13, 27);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newString("A/eZ:LL_TYAE", 40, 40);
      node0.addSuppression("Brj@Zv!p1A#");
      node0.addSuppression("A/eZ:LL_TYAE");
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node(26, (-2308), (-2041));
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node0.putIntProp((-2308), 26);
      node0.getJsDocBuilderForNode();
      Node node1 = node0.cloneNode();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "String node not created with Node.newString");
      node0.getSourceFileName();
      node0.addChildrenToFront(node1);
      node1.isInstanceOf();
      Node node2 = node1.getParent();
      node2.setCharno(40);
      node1.isName();
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isThis();
      node0.isOptionalArg();
      node0.isAssignAdd();
      node0.isInc();
      Node node1 = new Node(55, node0, node0, node0, node0);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node(125, 125, 2273);
      node0.getLength();
      node0.isEmpty();
      Node node1 = Node.newString(3000, "W|3\"", 11, 3000);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.isCatch();
      node0.isVar();
      node0.isDelProp();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = new Node(31, 31, (-1552));
      Node node1 = new Node((-2791), node0, node0, 16, 36);
      Node node2 = new Node(2, node1, node1);
      Node node3 = node0.useSourceInfoFrom(node2);
      node3.children();
      node0.isEquivalentTo(node0, true, true, true);
      node0.isInc();
//      try { 
        node0.setDouble(31);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // DELPROP is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(31, 31, (-1552));
      Node node1 = new Node(30, node0, node0, 15, 1073741823);
      node0.isEquivalentTo(node1, true, false, true);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(122, nodeArray0, 57, 122);
      node0.setChangeTime(35);
      node0.isSyntheticBlock();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-2150), nodeArray0);
      node2.mayMutateArguments();
      node2.getDirectives();
      node1.isSyntheticBlock();
      node2.setType(51);
      node0.getCharno();
      Node node3 = new Node(4095);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getFirstChild();
      node1.isUnscopedQualifiedName();
      node2.isSetterDef();
      Node.extractCharno(22);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.getInputId();
      node0.setInputId((InputId) null);
      InputId inputId0 = new InputId("&A.-Nx[wNUCLXE");
      Node node1 = new Node(50, node0);
      node0.putIntProp(54, (-415));
      int int0 = Node.SIDE_EFFECTS_ALL;
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // BLOCK 125 [slash_v: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isIf();
      node0.checkTreeEquals(node0);
      Node node1 = new Node((-56), node0, node0, node0);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isWith();
      int int0 = Node.INPUT_ID;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags6.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags7.clearSideEffectFlags();
      node0.isSwitch();
      Node node1 = new Node(39, node0, node0, (-788), 52);
      node1.isBreak();
      // Undeclared exception!
//      try { 
        node1.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(101);
      node0.isLocalResultCall();
      Node node1 = node0.getLastSibling();
      node0.isNoSideEffectsCall();
      int int0 = Node.INPUT_ID;
      node0.isInc();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newNumber(3641.4029, 77, (-1641));
      Node node1 = new Node(77, node0, node0, 4, 38);
      node0.isFromExterns();
      node1.setOptionalArg(false);
      Node node2 = node1.srcref(node0);
//      try { 
        node2.setDouble((-447.0273883283));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // TRY is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(125);
      InputId inputId0 = new InputId("&A.-Nx[wNUCLXE");
      node0.setInputId(inputId0);
      Node node1 = Node.newString("&A.-Nx[wNUCLXE", 133, 153);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getQualifiedName();
      // Undeclared exception!
//      try { 
        node1.removeChild(node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newString(12, "ALL_TYPE", 12, 12);
      Node node1 = new Node(63, node0, node0);
      node1.copyInformationFrom(node0);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(31);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got EQ
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      NoType noType0 = mock(NoType.class, new ViolatedAssumptionAnswer());
      ImmutableList<NoType> immutableList0 = ImmutableList.of(noType0);
      ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      Node node0 = Node.newString(95, "Object#Element");
      Node node1 = new Node(56);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      Node.NodeMismatch node_NodeMismatch1 = node1.checkTreeEqualsImpl(node0);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      node1.isDebugger();
      node1.isDebugger();
      node1.getIntProp(2068);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = new Node((-2639));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals(node_NodeMismatch1);
      Node node2 = Node.newNumber(3875.988);
      node2.isEquivalentTo(node1);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(37);
      Node node1 = new Node(1188);
      Node node2 = new Node(63, node0, 1, 46);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node2);
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeEqualsImpl(node1);
      Node node3 = Node.newNumber(1.0);
      Node node4 = Node.newString(30, " p`sC@S", 4095, 56);
      Node.NodeMismatch node_NodeMismatch2 = new Node.NodeMismatch(node1, node3);
      node_NodeMismatch2.equals(node_NodeMismatch1);
      node1.isLabel();
      node0.isGetElem();
      node4.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(57, node0, node0);
      Node node2 = new Node(38, 4095, 52);
      Node node3 = new Node((-3998), 54, 54);
      node0.isLocalResultCall();
      node2.isName();
      node2.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYLPE", 0, 0);
      Node node1 = new Node(37, node0, node0, 8, 37);
      Node node2 = new Node(31, 85, 152);
      node2.isCast();
      node0.setWasEmptyNode(true);
      node0.isWhile();
      node0.isLabelName();
      node2.isWith();
      node1.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(43);
      Node node1 = new Node(51, node0, node0, node0, node0, 32, 37);
      node1.getDirectives();
      node0.isEquivalentToShallow(node1);
      node0.isSetterDef();
      node1.toString();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.hasChildren();
      Node node1 = new Node(100, node0, node0);
      Node node2 = new Node(51, 56, 40);
      Node node3 = new Node(29, 1, 50);
      Node node4 = new Node((-739), node2, node3);
      node3.isLocalResultCall();
      Node node5 = node2.cloneNode();
      node3.useSourceInfoFrom(node1);
      node5.toString(false, false, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node5.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(110);
      node0.isLocalResultCall();
      Node node1 = node0.getLastSibling();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(100);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node1.addChildrenToFront(node0);
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isSwitch();
      node0.isBreak();
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // SWITCH is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString(44, "    ", 1, 33);
      node0.isNE();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = new Node(95);
      Node node1 = new Node(102);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2012);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node1.isLabel();
      node1.useSourceInfoIfMissingFrom(node0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte)88;
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte)42;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 40, 1707);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(42);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isParamList();
      node1.getJsDocBuilderForNode();
      node1.addChildrenToFront(node2);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.toString(true, false, false);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isSyntheticBlock();
      node0.putProp(116, node_NodeMismatch0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      node0.isNumber();
      node0.isDo();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(32, 32, 32);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      node0.isSyntheticBlock();
      Node node1 = Node.newString((-929), "u4H0c,2JC", 42, (-491));
      Node node2 = node0.cloneTree();
      node2.isQualifiedName();
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = Node.newString(115, "BZ0YqcF}A9Uq$R>B");
      node0.srcref(node1);
      node0.isVarArgs();
      node0.isArrayLit();
      int int0 = Node.EMPTY_BLOCK;
      node0.isAnd();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = new Node(30);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-56));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node1.isSwitch();
      node0.addChildrenToFront(node1);
      node1.isNew();
      Node node2 = Node.newString(100, "!", 57, 54);
      // Undeclared exception!
//      try { 
        node1.replaceChild(node2, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newString((-2), "AL_TYCE", 2062, 2062);
      node0.isWhile();
      Node node1 = new Node(39, node0);
      Object object0 = new Object();
      node1.isThrow();
      node1.addChildBefore(node1, node0);
      // Undeclared exception!
//      try { 
        node1.setDouble(57);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(819, node0, node0, node0, 12288, 0);
      Node node2 = new Node(2081, node1, node1);
      node2.isGetElem();
      Node node3 = new Node(41);
      node3.addChildToFront(node2);
      node3.getDirectives();
      node3.copyInformationFrom(node1);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = new Node(41);
      node0.isNull();
      node0.getDirectives();
      Node node1 = new Node(29, node0, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(4, node0, node0, node0, 1317, 52);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newString("tgiZc_- IOm");
      node0.setQuotedString();
      node0.setWasEmptyNode(true);
      node0.mayMutateGlobalStateOrThrow();
      node0.isVar();
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING tgiZc_- IOm [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000002] [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = new Node(57, node0, node0);
      Node node2 = new Node(38, 4095, 52);
      Node node3 = new Node((-3998), 54, 54);
      Node node4 = new Node(105, node1, node2);
      node4.isLocalResultCall();
      Node node5 = node4.cloneNode();
      node5.copyInformationFromForTree(node2);
      node3.useSourceInfoFrom(node2);
      node4.toString(false, false, false);
      node5.isNew();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.isLabel();
      node0.isInstanceOf();
      Node node1 = Node.newString("", 127, 30);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newNumber((-3514.6909));
      node0.getSourceOffset();
      node0.getInputId();
      Node node1 = new Node(116, node0, node0, node0, node0);
      Node node2 = node1.cloneNode();
      node1.isNew();
      node2.isOnlyModifiesArgumentsCall();
      node1.isEquivalentTo(node2);
      node2.toString();
      // Undeclared exception!
//      try { 
        node2.addChildAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.isLabel();
      node0.isInstanceOf();
      node0.toString(false, true, true);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newNumber(1102.470905, 63, (-736));
      Node node1 = new Node(108, node0, 3938, (-1629));
      node1.isGetElem();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = new Node(30);
      node1.isNull();
      node1.getDirectives();
      Node node2 = new Node(16, node1, node1, node0);
      node2.removeFirstChild();
      node2.isThrow();
      node1.isDelProp();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      InputId inputId0 = new InputId("E9 Xbu<KMeU ]");
      node0.setInputId(inputId0);
      Node node1 = node0.cloneNode();
      node0.useSourceInfoFrom(node1);
      node0.toString(true, true, true);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isCatch();
      node0.isVar();
      Node node1 = new Node(39, node0, 55, 49);
      node1.useSourceInfoIfMissingFrom(node0);
      jSTypeRegistry0.resetForTypeCheck();
      node1.isDefaultCase();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int int0 = 147;
      int int1 = 4095;
      Node node0 = new Node(147, 4095, (-3761));
      Node node1 = new Node(147, node0, node0, node0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(52);
      char[] charArray0 = new char[0];
      char[] charArray1 = null;
      Node node2 = node0.copyInformationFrom(node1);
      // Undeclared exception!
//      try { 
        node2.addChildrenAfter(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString(12, "ALL_TYPE", 12, 12);
      Node node1 = new Node(63, node0, node0);
      node1.setSourceEncodedPosition(35);
      node1.srcrefTree(node0);
      node0.isAssignAdd();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newString(13, "k*$]KR$");
      Node node1 = new Node(13, node0, (-3600), 57);
      node1.removeChildren();
      node1.clonePropsFrom(node0);
//      try { 
        node1.setString("k*$]KR$");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NE is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-2504), 83);
      Node node1 = new Node(47);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newNumber(0.7);
      Node node1 = new Node((-1182), 51, 47);
      node1.isIf();
      Node node2 = Node.newString(93, "H:6");
      Node node3 = new Node(31, node1, node2);
      node3.copyInformationFromForTree(node1);
      node3.addChildrenAfter(node0, node2);
      node3.isDebugger();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newString((-3030), "D ", 16, (-3030));
      node1.isQuotedString();
      node0.srcref(node1);
      node0.isDelProp();
      node0.isNot();
      node0.isLabel();
      node0.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isNot();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isFunction();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      Node node1 = new Node(16, node0);
      node0.useSourceInfoFrom(node1);
      Node node2 = Node.newNumber((double) 0);
      node0.checkTreeEquals(node2);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node2.isNoSideEffectsCall();
      node0.isNumber();
      node0.getAncestors();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(125, node0, node0);
      node1.getFirstChild();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isDelProp();
      node0.isNot();
      node0.isLabel();
      node0.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = Node.newString((-1907), "&=YkYat'N%_ST1 V(", 3776, 4);
      Node node2 = new Node(43, node0, node0);
      node2.clonePropsFrom(node0);
      node1.isAssignAdd();
      Node node3 = null;
//      try {
        node3 = new Node(29, node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(153);
      node0.isSetterDef();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(96, 4095, (-1670));
      node1.setLineno(0);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.isSyntheticBlock();
      Node node1 = new Node(52, node0, node0, 43, 501);
      node1.getStaticSourceFile();
      node0.setLineno(86);
      Node node2 = Node.newString(38, "");
      node2.isGetElem();
      node1.addChildToFront(node2);
      node1.getDirectives();
      node1.copyInformationFrom(node2);
      Node node3 = new Node(36, 50, 57);
      // Undeclared exception!
//      try { 
        node3.setSideEffectFlags(1697);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 36
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      Node node1 = new Node(52);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.isVarArgs();
      node0.isNot();
      node0.isInc();
      Node node1 = new Node(39);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0/L,uI(");
      Node.newNumber((double) 30, 661, 57);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(51);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(100);
      node0.isReturn();
      node0.isArrayLit();
      int int0 = Node.FLAG_NO_THROWS;
      node0.isAnd();
      node0.isObjectLit();
      Node node1 = new Node(100, node0, node0, node0, (-1002), 47);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(30, node0, node0);
      Node node2 = node1.removeChildren();
      int int0 = Node.SIDE_EFFECTS_ALL;
      node1.checkTreeEquals(node0);
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      node0.isIf();
      node0.isName();
      node0.isBreak();
      node0.isNumber();
      Node node1 = new Node(117);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isDo();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      node0.isIf();
      node0.isName();
      node0.isBreak();
      Node node1 = new Node(103, node0, node0);
      node0.srcrefTree(node1);
      node0.isNumber();
      node0.isDo();
      node0.isExprResult();
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(31);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 31
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node(1134, 128, 9);
      Node node1 = new Node(126, 53, 57);
      Node node2 = new Node(128, node0, node1);
      node0.isLocalResultCall();
      Node node3 = node1.cloneNode();
      node3.useSourceInfoFrom(node1);
      node1.toString(true, false, true);
      node3.isEmpty();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(751619250, 751619250, 751619250);
      Node node1 = new Node(26);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isParamList();
      node2.getJsDocBuilderForNode();
      node1.addChildrenToFront(node2);
      Node node3 = null;
//      try {
        node3 = new Node(42, node0, node2, node1, 57, (-95));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      node0.isIf();
      Node node1 = Node.newNumber(1254709.0);
      node0.useSourceInfoFrom(node1);
      node0.isName();
      node0.isBreak();
      node0.isNumber();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newNumber(1209.792194245, 83, 83);
      Node node1 = new Node(113, node0, node0);
      node1.isLocalResultCall();
      Node node2 = node1.cloneNode();
      node0.useSourceInfoFrom(node2);
      Node node3 = Node.newString(102, "M2 ");
      node3.toString(true, true, true);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.hasChildren();
      Node node1 = new Node(50);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node1.getIntProp((-1253));
      node_SideEffectFlags0.setMutatesArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = new Node((-1257), node0, 130, 2);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(49, nodeArray0);
      node1.isLabel();
      Node node4 = Node.newString("{W1", (-313), 1677);
      node4.setQuotedString();
      node0.isEquivalentTo(node1);
      node2.useSourceInfoIfMissingFromForTree(node0);
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node(100);
      node0.isReturn();
      node0.isArrayLit();
      Node node1 = new Node(51, node0, node0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node2.useSourceInfoFrom(node0);
      node2.toString(true, true, false);
      node1.isExprResult();
      Node node3 = node0.setJSDocInfo((JSDocInfo) null);
      node3.toStringTree();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 0, 0);
      Node node1 = new Node(63, node0, node0);
      node1.cloneTree();
      node0.isAssignAdd();
      node1.isObjectLit();
      node1.setLineno(3605);
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(111, 111, 110);
      node0.isIf();
      node0.isWhile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.getSourceFileName();
      node0.isSwitch();
      node0.isBreak();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = new Node(32, 32, 32);
      node0.getInputId();
      Node node1 = node0.cloneNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.isEquivalentTo(node1);
      node1.useSourceInfoFromForTree(node0);
      node1.isCast();
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-119);
      byteArray0[1] = (byte) (-128);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node(57, node0, node0);
      node1.removeFirstChild();
      node0.isComma();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = new Node(57, node0, node0);
      Node node2 = Node.newString("Object#Element", 39, 2);
      Node node3 = new Node((-3998), 54, 54);
      Node node4 = new Node(105, node1, node2);
      node4.isLocalResultCall();
      node4.cloneNode();
      node3.useSourceInfoFrom(node2);
      node4.toString(true, false, true);
      node2.isExprResult();
      Node node5 = new Node(13);
      node4.srcrefTree(node5);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\n\nSubtree2: ");
      Node node0 = new Node(103);
      node0.isArrayLit();
      node0.isTry();
      node0.isLabel();
      Node node1 = node0.getLastSibling();
      node0.isNoSideEffectsCall();
      node0.isGetterDef();
      node0.isEmpty();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.isQualifiedName();
      Node node1 = Node.newString("Object#Element");
      Node node2 = new Node(32, node0, node1, node1, node0, (-2432), 50);
      node2.isEquivalentTo(node0, true, false, false);
      Node node3 = Node.newString("Object#Key");
      Node node4 = node0.useSourceInfoFromForTree(node3);
      node4.getProp(1);
      node4.setIsSyntheticBlock(false);
      node4.setJSDocInfo((JSDocInfo) null);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node3;
      nodeArray0[1] = node1;
      nodeArray0[2] = node4;
      nodeArray0[3] = node2;
      nodeArray0[4] = node3;
      nodeArray0[5] = node4;
      nodeArray0[6] = node1;
      nodeArray0[7] = node2;
      nodeArray0[8] = node0;
      Node node5 = null;
//      try {
        node5 = new Node(16, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node(125);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = new Node(52);
      node0.putBooleanProp(1, false);
      node0.isDefaultCase();
      node0.isUnscopedQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isCatch();
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      node0.isVar();
      node0.isDefaultCase();
      node0.isVoid();
      Node node1 = Node.newNumber((double) 40);
      node1.type = 1645;
      Node node2 = node0.cloneNode();
      node0.useSourceInfoFrom(node2);
      node2.toString(true, false, false);
      node0.getBooleanProp(2);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(120, node0, 3762, (-43));
      Node node2 = node1.cloneTree();
      Node node3 = new Node(42, node2, node2, node1, 49, 42);
      Node node4 = node3.copyInformationFrom(node1);
      node0.getIndexOfChild(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node4.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node0 = new Node(21, 1622, (-2585));
      node0.isFalse();
      node0.getProp(21);
      node0.isDebugger();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = Node.newNumber(1.0, 31, (-119));
      node0.copyInformationFromForTree(node1);
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = new Node(125);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = new Node(416, node0);
      node0.srcrefTree(node1);
      node0.isUnscopedQualifiedName();
      node0.siblings();
      Node node2 = new Node(747, 15, 51);
      // Undeclared exception!
//      try { 
        node2.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 747
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(37, 37, 37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      node1.setSourceFileForTesting("fWHQZ%Zjm]lH");
      node0.isReturn();
      node1.isInstanceOf();
      node0.toStringTree();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(0, 102, 125);
      node0.isExprResult();
      Node node1 = new Node(97, node0, node0);
      node1.isAssignAdd();
      node0.isCast();
      node0.isIn();
      node0.detachFromParent();
//      try { 
        node1.setString("UNKNOWN");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // ASSIGN_MOD is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 0, 0);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      Node node2 = Node.newString("ALL_TYPE");
      node1.useSourceInfoFromForTree(node0);
      node2.getProp(47);
      node0.setIsSyntheticBlock(false);
      node2.isSwitch();
      node0.setSourceEncodedPositionForTree(119);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(111);
      node0.isIf();
      node0.isSyntheticBlock();
      node0.isBreak();
      node0.isBlock();
      node0.isDo();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node((-784), (-784), (-784));
      Node node1 = new Node((-784), node0, node0, node0, node0);
      Node.newString("missing prop: ", 31, 4);
      node1.getBooleanProp(29);
      node1.removeChildren();
      Node.newString("com.google.javascript.rhino.Node$ObjectPropListItem");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      Node node1 = Node.newString("In(");
      Node node2 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node2.clonePropsFrom(node1);
      node_SideEffectFlags1.setMutatesArguments();
      node0.getAncestors();
      node1.hasMoreThanOneChild();
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newString(132, "new:");
      Node node1 = new Node(132, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getEnumParameterType();
      jSDocInfo0.documentReference("YzA'<,8");
      jSDocInfo0.setBaseType((JSTypeExpression) null);
      jSDocInfo0.setShouldPreserveTry(true);
      node1.setJSDocInfo(jSDocInfo0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node0.checkTreeEquals(node1);
      node0.isLocalResultCall();
      node0.getString();
      Node node2 = Node.newString((-6618), "new:", 57, 4095);
      node2.isObjectLit();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(132);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got SCRIPT
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newString((-4245), "{Q8l]\"", (-429), (-1397));
      Node node1 = new Node(44, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.isEquivalentToTyped(node2);
      node0.getBooleanProp(43);
      node2.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = Node.newString("", (-3386), (-2932));
      Node node2 = new Node(51, node0, node1);
      Node node3 = Node.newString("is_dispatcher", 15, 53);
      Node node4 = new Node(39, node3, node3);
      Node node5 = new Node((-2932), node4, node2, 30, 152);
      node2.useSourceInfoFromForTree(node5);
      Node node6 = new Node(8, (-3030), 0);
      Node node7 = null;
//      try {
        node7 = new Node(100, node6, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = new Node(57, node0, node0);
      node1.isEquivalentToTyped(node0);
      node0.useSourceInfoFrom(node1);
      // Undeclared exception!
//      try { 
        node1.toString(true, false, true);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 57
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isCatch();
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      node0.isAssign();
      node0.isVar();
      node0.isDefaultCase();
      node0.isVoid();
      Node node1 = Node.newNumber((double) 8);
      Node node2 = node1.cloneNode();
      Node node3 = node0.useSourceInfoFrom(node1);
      node3.toString(false, false, false);
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newString("In(");
      Node.mergeLineCharNo(15, 42);
      Node node1 = new Node(51);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.cloneNode();
      Node node2 = node1.clonePropsFrom(node0);
      node1.checkTreeEquals(node0);
      node0.getJsDocBuilderForNode();
      int int0 = Node.INPUT_ID;
      node2.isInstanceOf();
      node2.isSyntheticBlock();
      node1.isArrayLit();
      // Undeclared exception!
//      try { 
        node2.getChildAtIndex(2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newString("In(");
      Node.mergeLineCharNo(15, 42);
      Node node1 = new Node(51);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.clonePropsFrom(node0);
      node1.checkTreeEquals(node0);
      node0.getJsDocBuilderForNode();
      int int0 = Node.INPUT_ID;
      node0.mayMutateGlobalStateOrThrow();
      Node.extractCharno(0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = new Node(0, node0, node0, 38, 0);
      Node node2 = Node.newString("Object#Element", 39, 2);
      Node node3 = new Node((-3998), 54, 54);
      Node node4 = new Node(105, node1, node2);
      node4.isLocalResultCall();
      node4.cloneNode();
      node3.useSourceInfoFrom(node2);
      node4.toString(true, false, true);
      node2.isExprResult();
      Node.newString("Object#Key");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      node0.isExprResult();
      node0.setSourceEncodedPositionForTree(42);
      Node node1 = new Node(49, node0, node0);
      node0.getProp(51);
      node1.useSourceInfoIfMissingFromForTree(node0);
      int int0 = Node.SIDE_EFFECTS_ALL;
      node1.checkTreeEquals(node0);
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33, 135201, 33);
      node0.isNull();
      node0.hasOneChild();
      node0.getDirectives();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(30, nodeArray0);
      node1.isScript();
      Node node2 = new Node(48, 37, (-1222));
      Node node3 = node0.useSourceInfoFrom(node2);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node2);
      node4.getLineno();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 0, 0);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.isTypeOf();
      node1.addChildToFront(node1);
      node1.setSideEffectFlags(36);
      node1.useSourceInfoFrom(node0);
      node1.copyInformationFrom(node0);
      node1.isDebugger();
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isCatch();
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      node0.isAssign();
      node0.isVar();
      node0.isDefaultCase();
      node0.isVoid();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = new Node(37, 37, 37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      Node node2 = node0.cloneNode();
      Node node3 = node1.useSourceInfoFrom(node2);
      node3.siblings();
      node2.toString(false, true, false);
      node2.isExprResult();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(116, 123, 1004);
      // Undeclared exception!
//      try { 
        node0.isEquivalentToShallow((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node(125);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = new Node((-3983), node0, node0, node0, node0, 16, 32);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node1.isLabel();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = Node.newString("%2({us?y~EI^]78UErG");
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isHook();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = new Node(100);
      node0.isNot();
      node0.isCast();
      node0.isArrayLit();
      Node node1 = new Node(5105);
      node0.getProp(36);
      Node node2 = new Node(51, node1, 43, 53);
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(63, "10~\"'-J-|1cxaEH", 63, 65);
      node0.isCast();
      node0.isArrayLit();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.isAnd();
      node0.isInstanceOf();
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = new Node(119);
      node0.isLocalResultCall();
      node0.isString();
      node0.isLabel();
      Node node1 = node0.getLastSibling();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1366);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node0.isSwitch();
      node1.addChildrenToFront(node0);
      Node node2 = Node.newString(30, "ne)@Q%<`Hv`{5\"Px", 93, 2);
      node0.replaceChild(node1, node2);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isUnscopedQualifiedName();
      node0.isCall();
      node0.setLength(83);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(125);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node0.isLabel();
      node0.hasOneChild();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String string0 = "3=01M6cd'6JeJ";
      Node node0 = Node.newString(1393, "3=01M6cd'6JeJ", 102, 37);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setIsSyntheticBlock(true);
      node0.setJSDocInfo(jSDocInfo0);
      node0.isBlock();
      node0.isSyntheticBlock();
      node0.getInputId();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(37);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1393
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = new Node(120, 120, 110);
      node0.isIf();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = Node.newString("");
      node0.useSourceInfoFromForTree(node1);
      node0.getProp(86);
      node0.putProp(120, (Object) null);
      node0.setIsSyntheticBlock(false);
      node0.getDirectives();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(125);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.useSourceInfoFrom(node1);
      node0.isOptionalArg();
      node0.toString(false, true, false);
      Node node2 = Node.newString(40, "-g@'Iok3#6Bx?F5rrL'");
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(132);
      node0.isOptionalArg();
      node0.isString();
      node0.isLabel();
      Node node1 = node0.getLastSibling();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1366);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node0.isSwitch();
      Node node2 = node0.cloneNode();
      node1.useSourceInfoFrom(node0);
      node1.toString(false, false, false);
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = Node.newString(117, "Object#Key", 117, 159);
      node0.isContinue();
      node0.isQualifiedName();
      node0.isVoid();
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newString(106, "");
      Node node1 = Node.newString(")M", 38, 0);
      Node node2 = new Node(106, node0, node0, node1, (-1036), (-1916));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(37, 37, 37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.useSourceInfoIfMissingFrom(node2);
      node1.setIsSyntheticBlock(true);
//      try { 
        node1.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // INSTANCEOF [synthetic: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString(19, "ALL_TYPE", 19, 19);
      node0.mayMutateArguments();
      Node node1 = new Node(40, node0, node0);
      node1.isVoid();
      PipedWriter pipedWriter0 = new PipedWriter();
//      try { 
        node0.appendStringTree(pipedWriter0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Pipe not connected
//         //
//         verifyException("java.io.PipedWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isCall();
      Node node1 = new Node(122, node0);
      node1.setSourceFileForTesting("fWHQZ%Zjm]lH");
      node0.getDirectives();
      node0.isScript();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      Node node2 = node1.cloneNode();
      node0.useSourceInfoFrom(node1);
      node2.toString(false, true, false);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = Node.newString("com.google.comm9n.base.Objects", 553, 553);
      node0.setChangeTime(553);
      node0.siblings();
      CharBuffer charBuffer0 = CharBuffer.allocate(16);
      // Undeclared exception!
//      try { 
        node0.appendStringTree(charBuffer0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node(111, 111, 110);
      node0.cloneTree();
      node0.isIf();
      node0.isWhile();
//      try { 
        node0.setDouble((-3192.381810100021));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // CASE 111 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isOnlyModifiesThisCall();
      node0.useSourceInfoFromForTree(node2);
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      Node node3 = node0.cloneNode();
      node0.setIsSyntheticBlock(true);
      // Undeclared exception!
//      try { 
        node3.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3133
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newString((-8), "-.F,,9K", (-8), (-8));
      node0.setIsSyntheticBlock(true);
      Node node1 = new Node(108);
      Node node2 = new Node(102, node0, node1, 12, 114);
      node2.clonePropsFrom(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>(64);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node3.isOnlyModifiesThisCall();
      node0.getJsDocBuilderForNode();
      node1.addChildrenToFront(node3);
      node3.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node(25);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      node1.putIntProp(31, 48);
      // Undeclared exception!
//      try { 
        node1.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 31
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H>,xvsVi=53");
      Node node0 = new Node(111, 111, 111);
      Node node1 = new Node(42, node0);
      node0.srcref(node1);
      node0.setVarArgs(false);
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber(1373.244027174335);
      nodeArray0[0] = node0;
      Node node1 = new Node(122, nodeArray0);
      Node node2 = new Node(301, 57, 48);
      Node node3 = new Node((-1927), node1, node2);
      Node node4 = new Node(122, node3);
      Node node5 = new Node(29, node4, 149, 36);
      node5.removeChildren();
//      try { 
        node5.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NEG 149 is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      Node node1 = new Node(116);
      Node node2 = new Node(2, node1, node0, node1, 51, 12);
      node1.isContinue();
      node1.toString(true, true, true);
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node(111, 111, 110);
      node0.isIf();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = Node.newString("");
      node0.useSourceInfoFromForTree(node1);
      node0.getProp(86);
      node0.putProp(111, (Object) null);
      node0.setIsSyntheticBlock(false);
      node0.isSwitch();
      node0.setSourceEncodedPositionForTree(110);
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node(100);
      node0.isNot();
      node0.isCast();
      node0.getJsDocBuilderForNode();
      Node node1 = node0.cloneNode();
      node1.setIsSyntheticBlock(true);
      node1.checkTreeEquals(node0);
      node0.isNot();
      node0.useSourceInfoFromForTree(node1);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(120, node0, 3762, (-43));
      Node node2 = node1.cloneTree();
      Node node3 = new Node(42, node2, node2, node1, 49, 42);
      node3.copyInformationFrom(node1);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33, 135201, 33);
      Node node1 = node0.getLastSibling();
      node1.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1558);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node1.isSwitch();
      Node node2 = Node.newString(730, "com.google.javascript.rhino.jstype.VoidType", 30, 1);
      node1.addChildrenToFront(node2);
      Node node3 = Node.newString(38, "com.google.javascript.rhino.jstype.VoidType", 31, 37);
      // Undeclared exception!
//      try { 
        node3.replaceChild(node0, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newString(4, "ALL_TYPE", (-1), 0);
      node0.isReturn();
      Node node1 = new Node(15, node0, node0, 2278, (-603));
      node0.isCast();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = new Node(100);
      node0.isNot();
      node0.isCast();
      node0.isArrayLit();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.isAnd();
      Node node1 = Node.newString(108, "*6`_0`/L,uI(", 85, 2);
      node0.isEquivalentToShallow(node1);
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int int0 = Node.FLAG_LOCAL_RESULTS;
      Node node0 = new Node(1333);
      node0.getSourceOffset();
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.useSourceInfoFromForTree(node0);
      Node[] nodeArray0 = new Node[17];
      nodeArray0[0] = node0;
      node0.setLineno(29);
      node0.hasOneChild();
      node0.isInc();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node node0 = new Node(0);
      Node node1 = new Node(2732);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = new Node((-1409), node2, node2, node2, node2);
      node3.isOnlyModifiesThisCall();
      node1.putIntProp(122, 54);
      node3.getJsDocBuilderForNode();
      Node node4 = node2.cloneNode();
      node2.setIsSyntheticBlock(false);
      node2.checkTreeEquals(node0);
      node4.isNot();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newString("8n%");
      Node node1 = new Node(55, node0, node0, node0, node0, 2, 53);
      Node node2 = new Node(112, 15, 49);
      node1.getAncestors();
      node2.isFor();
      node0.isRegExp();
      node2.useSourceInfoFrom(node0);
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = new Node(57, node0, node0);
      Node node2 = Node.newString("Object#Element", 39, 2);
      Node node3 = new Node((-3998), 54, 54);
      Node node4 = new Node(105, node1, node2);
      node4.isLocalResultCall();
      Node node5 = node4.cloneNode();
      node3.useSourceInfoFrom(node2);
      node4.toString(true, false, true);
      node3.isFromExterns();
      node5.getLastSibling();
      node0.checkTreeEquals(node5);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      node2.srcref(node0);
      node0.isOnlyModifiesThisCall();
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      Node node3 = node0.cloneNode();
      node0.setIsSyntheticBlock(true);
      // Undeclared exception!
//      try { 
        node3.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3133
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = new Node(3133);
      node0.setCharno(3133);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(47, 30, (-1));
      Node node2 = node1.cloneNode();
      node1.cloneTree();
      node2.isWhile();
      node1.isFromExterns();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(49, 49, 152);
      node0.isNot();
      node0.putIntProp(163, 49);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31, 38, 57);
      Node node2 = node0.cloneNode();
      node1.cloneTree();
      node0.isWhile();
      node2.isFromExterns();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = new Node(21, 21, 21);
      node0.isNot();
      node0.putIntProp(21, 21);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(110, (-2928), 15);
      Node node2 = node0.cloneNode();
      Node node3 = node1.cloneTree();
      node2.isFromExterns();
      node1.isDebugger();
      node3.getParent();
      node3.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(28, 28, 163);
      node0.isNot();
      node0.putIntProp(163, 28);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(38, 8, 57);
      Node node2 = node1.cloneNode();
      Node node3 = node0.cloneTree();
      node2.isWhile();
      node3.isFromExterns();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE");
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.removeProp(57);
      Node node2 = node0.getAncestor(1);
      node0.isLocalResultCall();
      Node node3 = new Node(2486);
      int int0 = Node.NO_SIDE_EFFECTS;
      node2.getProp(155);
      Node node4 = null;
//      try {
        node4 = new Node(54, node0, 153, 30);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(21, 21, 21);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      node0.isWhile();
      node0.getSourceFileName();
      node0.isAdd();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 0, 0);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.getStaticSourceFile();
      Node node2 = new Node(63, node1, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node1.getAncestors();
      node2.hasMoreThanOneChild();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      node1.srcref(node1);
      Node node3 = null;
//      try {
        node3 = new Node(50, nodeArray0, 16, 217);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = new Node(21, 21, 21);
      node0.isNot();
      node0.putIntProp(21, 21);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(110, (-2928), 15);
      Node node2 = node0.cloneNode();
      node2.copyInformationFrom(node0);
      node1.isLabel();
      node2.isFromExterns();
      node1.children();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(21, 21, 21);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      node0.isWhile();
      Node node1 = new Node((-4317), node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.toString(true, true, true);
      node1.isFromExterns();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 0, 0);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.getStaticSourceFile();
      node1.isGetElem();
      node1.addChildToFront(node1);
      node1.copyInformationFrom(node0);
      node1.setSideEffectFlags(36);
      Node.mergeLineCharNo(202, 0);
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = Node.newString(310, "ES", 310, 310);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node((-380), 36, (-3155));
      node1.isWhile();
      Node node2 = Node.newString(39, "ES");
      Node node3 = new Node(47, node0, node2);
      node3.addChildrenAfter(node1, node0);
      node3.isNoSideEffectsCall();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = new Node(57, node0, node0);
      Node node2 = Node.newString("Object#Element", 39, 2);
      Node node3 = new Node((-3998), 54, 54);
      Node node4 = new Node(105, node1, node2);
      node4.isLocalResultCall();
      Node node5 = node4.cloneNode();
      node3.useSourceInfoFrom(node2);
      node4.toString(true, false, true);
      node1.getAncestor(1);
      node3.isFromExterns();
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node5, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node((-3014));
      node0.hasOneChild();
      // Undeclared exception!
//      try { 
        node0.srcref((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = new Node(125);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>(42);
      Node node1 = new Node(36);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isOnlyModifiesThisCall();
      node2.getJsDocBuilderForNode();
      node2.addChildrenToFront(node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.isOptionalArg();
      node2.isAssign();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.isCall();
      Node node1 = new Node(2, 57, 48);
      node0.useSourceInfoFromForTree(node1);
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString(125, "w(!4:Wg,1487 MM}", 2081, 2081);
      node0.isReturn();
      Node node1 = new Node(272, node0, node0, 51, 2);
      node0.putIntProp(51, 57);
      Object object0 = new Object();
      // Undeclared exception!
//      try { 
        node0.copyInformationFrom(node1);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = new Node(37, 37, 37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      Node node2 = node1.removeFirstChild();
      node1.isTrue();
      Node node3 = new Node(29, node1, node0, node1, node0);
      node1.isIn();
      node1.children();
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node(103);
      node0.isOptionalArg();
      node0.isNot();
      node0.isLabel();
      Node node1 = new Node(103, node0, node0, node0, node0);
      node0.isInc();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = new Node(100);
      Node node1 = node0.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.VoidType");
      node0.useSourceInfoFrom(node1);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Node node2 = new Node(1, node1, node0, node0, node0, 30, 12);
      node1.isWhile();
      Node node3 = node1.cloneNode();
      node0.toString(false, false, true);
      node1.isEquivalentToShallow(node0);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isOnlyModifiesThisCall();
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      Node node3 = node0.cloneNode();
      node3.useSourceInfoIfMissingFrom(node0);
      node0.setIsSyntheticBlock(true);
      node3.isNot();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = new Node(125);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      node_SideEffectFlags0.setMutatesArguments();
      node0.getDirectives();
      node0.isFunction();
      node0.isIf();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString(16, "fWHQZ%Zjm]lH", 16, (-4377));
      node0.isReturn();
      Node node1 = new Node(93, node0, node0, 42, 30);
      node0.putIntProp(1, 2);
      Object object0 = new Object();
      Node node2 = node1.copyInformationFrom(node0);
      node0.isThrow();
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(116);
      node0.putBooleanProp((-1848), true);
      node0.cloneTree();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = new Node(37, 37, 37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      node1.getAncestor(54);
      node1.setIsSyntheticBlock(true);
      node0.checkTreeEquals(node1);
      node0.isAdd();
      node1.getChildAtIndex((-2053));
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = new Node(100);
      Node node1 = node0.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Node node2 = new Node(1, node1, node0, node0, node0, 30, 12);
      node1.isWhile();
      Node node3 = new Node(8);
      node0.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      node0.getInputId();
      node0.addChildrenToBack(node1);
      node1.isEquivalentTo(node0);
      node1.isContinue();
      // Undeclared exception!
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 0, 0);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.isGetElem();
      node1.addChildToFront(node1);
      Node node2 = node1.copyInformationFrom(node0);
      node1.setSideEffectFlags(36);
      Node.mergeLineCharNo(202, 0);
      node1.toString();
      node2.getParent();
      node0.isIf();
      Node.newNumber((double) 55, 57, 35);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newString(115, "\n\nSubtree1: ");
      Node node1 = Node.newString("\n\nSubtree1: ", 2, 36);
      Node node2 = new Node(64, 57, 49);
      Node node3 = new Node(64, node0, 4, 4);
      Node node4 = new Node(148, node2, node3);
      node1.isStringKey();
      Node node5 = node4.cloneNode();
      node5.useSourceInfoFrom(node0);
      node2.toString(false, false, false);
      node3.hasChildren();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      node0.getLength();
      Node node1 = new Node(116);
      Node.newNumber((double) 4095, 26, (-1311));
      Node node2 = new Node(56);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(150, 150, 150);
      node0.isNot();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.putIntProp(150, (-4096));
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(40, 97, 16);
      Node node2 = node0.cloneNode();
      Node node3 = node1.cloneTree();
      node2.isFromExterns();
      node1.isWhile();
      node2.isFromExterns();
      node3.isIf();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node node1 = Node.newString(31, "*6`_0`/L,uI(", 55, 1123);
      node1.isReturn();
      Node node2 = new Node(39, node1, node1, 32, 31);
      node0.putIntProp(57, 4);
      node0.getJsDocBuilderForNode();
      Object object0 = new Object();
      Node node3 = node2.copyInformationFrom(node0);
      node2.isThrow();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      node3.isGetProp();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      Node node2 = node1.cloneNode();
      node2.cloneTree();
      node2.isWhile();
      node2.isFromExterns();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = new Node(100);
      Node node1 = node0.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Node node2 = new Node(1, node1, node0, node0, node0, 30, 12);
      node1.isWhile();
      Node node3 = node1.cloneNode();
      node0.toString(false, false, true);
      node1.isEquivalentToShallow(node0);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node3.getLastChild();
      // Undeclared exception!
//      try { 
        node1.copyInformationFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = new Node(39);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isOnlyModifiesThisCall();
      node1.putIntProp(4095, Integer.MIN_VALUE);
      node2.getJsDocBuilderForNode();
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isOnlyModifiesThisCall();
      node2.setType(52);
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      Node node3 = node0.cloneNode();
      node0.setIsSyntheticBlock(true);
      // Undeclared exception!
//      try { 
        node3.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3133
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      node0.getLength();
      Node node1 = new Node(116);
      Node node2 = new Node(2, node1, node0, node1, 0, 333);
      node1.copyInformationFrom(node0);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(50);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got CASE
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node(103);
      node0.isOptionalArg();
      node0.isNot();
      node0.isLabel();
      Node node1 = new Node(103, node0, node0, node0, node0);
      node0.isInc();
      node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 0, 31);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newString((-1475), "Should not happen\n", 103, 1);
      node0.isReturn();
      Node node1 = new Node(103, node0, node0, 8, 12);
      node0.putIntProp(4095, 15);
      node1.getJsDocBuilderForNode();
      Object object0 = new Object();
      Node node2 = node1.copyInformationFrom(node0);
      node2.isThrow();
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString(28, "ALL_TYPE", 2081, 1);
      node0.isReturn();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node1.putIntProp(3162, 8);
      node1.srcrefTree(node0);
      node1.getJsDocBuilderForNode();
      Object object0 = new Object();
      Node node2 = node1.copyInformationFrom(node0);
      node1.isThrow();
      node2.removeProp(2);
      node1.addChildBefore(node2, node0);
      node1.isGetProp();
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.mergeLineCharNo(114, 114);
      Node node0 = new Node(30);
      Node node1 = new Node(55);
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesThisCall();
      node1.putIntProp(4, 4095);
      node0.getJsDocBuilderForNode();
      Node node3 = node1.cloneNode();
      node0.setIsSyntheticBlock(false);
      // Undeclared exception!
//      try { 
        node2.checkTreeEquals(node3);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 55
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      String string0 = "8n%";
      Node node0 = Node.newString("8n%");
      node0.isAssignAdd();
      node0.isNull();
      node0.isOnlyModifiesThisCall();
      node0.isNE();
      // Undeclared exception!
//      try { 
        node0.clonePropsFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newString("8n%");
      Node node1 = new Node(112, 15, 49);
      Node node2 = new Node(43, node0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.getAncestors();
      node0.isTrue();
      node0.isThrow();
      node0.isGetProp();
      node0.isFor();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = new Node(132);
      node0.isOptionalArg();
      node0.isTry();
      node0.isLabel();
      Node node1 = node0.getLastSibling();
      node1.clonePropsFrom(node0);
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1366);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node0.isSwitch();
      node1.addChildrenToFront(node0);
      Node node2 = Node.newString(30, "ne)@Q%<`Hv`{5\"Px", 93, 2);
      node0.replaceChild(node1, node2);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      NoType noType0 = mock(NoType.class, new ViolatedAssumptionAnswer());
      ImmutableList<NoType> immutableList0 = ImmutableList.of(noType0);
      ImmutableList<NoType> immutableList1 = immutableList0.reverse();
      ImmutableList<JSType> immutableList2 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList1);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList2);
      Node node1 = new Node(52, node0, node0, node0, node0, (-2798), (-2580));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20479);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node0.isSwitch();
      node0.addChildrenToFront(node1);
      Node node2 = Node.newString((-2798), "second new child has existing parent", 38, (-330));
      // Undeclared exception!
//      try { 
        node0.replaceChild(node2, node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(110);
      node0.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      boolean boolean0 = false;
      Node node1 = Node.newString("Brj@Zv!p1A#");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "Object#Element";
      objectArray0[1] = (Object) node1;
      objectArray0[2] = (Object) node1;
      objectArray0[3] = (Object) simpleErrorReporter1;
      objectArray0[4] = (Object) simpleErrorReporter0;
      objectArray0[5] = (Object) "Object#Element";
      objectArray0[6] = (Object) simpleErrorReporter1;
      objectArray0[7] = (Object) "Object#Element";
      // Undeclared exception!
//      try { 
        SimpleErrorReporter.getMessage("Object#Element", objectArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // no message resource found for message property Object#Element
//         //
//         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      node0.isExprResult();
      node0.setSourceEncodedPositionForTree(42);
      Node node1 = new Node(49, node0, node0);
      Node.extractLineno(1);
      node1.checkTreeEquals(node0);
      node0.getStaticSourceFile();
      Node node2 = node1.getFirstChild();
      node0.getDirectives();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(125);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1419));
      node_SideEffectFlags0.setMutatesArguments();
      node0.cloneNode();
      node0.getJsDocBuilderForNode();
      // Undeclared exception!
//      try { 
        Node.newString(33, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node(49);
      Node.mergeLineCharNo(49, 15);
      Node node1 = new Node((-3588));
      Node node2 = new Node(31);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.clonePropsFrom(node2);
      node0.isOnlyModifiesThisCall();
      node2.getJsDocBuilderForNode();
      Node node3 = new Node(1556);
      node3.addChildrenToFront(node2);
      Node.newString("com.google.common.base.Joiner$MapJoiner");
      Node node4 = Node.newString("com.google.common.base.Joiner$MapJoiner");
      node4.getSourceOffset();
      node4.isInstanceOf();
      node4.isSyntheticBlock();
      Node node5 = node2.detachFromParent();
//      try { 
        node5.setString("com.google.common.base.Joiner$MapJoiner");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // DELPROP is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newString("8n%");
      node0.isQuotedString();
      node0.setOptionalArg(false);
      Node node1 = new Node(55, node0, node0, node0, node0, 2, 53);
      node0.setLength(1571);
      node0.setLineno(301);
      node1.isBreak();
      node1.isQuotedString();
      node0.isTry();
      node0.getAncestors();
      node1.isIn();
      node1.isWith();
      node1.isAnd();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = new Node(37, 37, 37);
      node0.isLocalResultCall();
      Node node1 = new Node(125);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node0.getQualifiedName();
      node1.isLabel();
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      int int0 = Node.IS_DISPATCHER;
      Node node0 = new Node(33, 47, 33);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = new Node((-231), node1, node0, 29, 307);
      node1.putIntProp(4095, 30);
      node1.getJsDocBuilderForNode();
      Object object0 = new Object();
      node2.copyInformationFrom(node1);
      Node node4 = null;
//      try {
        node4 = new Node(471, node3, node1, node2, node0, 1, 49);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = new Node(510, 510, 593);
      node0.getLength();
      Node node1 = new Node(47);
      Node node2 = new Node((-3014), node0, node1, node0, 969, 65535);
      node2.getLength();
      node1.cloneNode();
      node1.isContinue();
      node1.addSuppression("#");
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(132);
      node0.isOptionalArg();
      node0.isTry();
      node0.isLabel();
      Node node1 = node0.getLastSibling();
      node1.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1366);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node1.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      node0.addChildrenToBack(node1);
      node1.isArrayLit();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = Node.newString(";m=i0f=U-2,zX:ukn#");
      Node.mergeLineCharNo(51, 57);
      Node node1 = new Node(308);
      Node node2 = new Node(63);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.clonePropsFrom(node1);
      node1.isOnlyModifiesThisCall();
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node.newString(";m=i0f=U-2,zX:ukn#");
      node2.getSourceOffset();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = "th~7:";
      // Undeclared exception!
//      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "th~7:");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newString(302, "\n\nSubtree1: ", (-767), 124);
      node0.hasMoreThanOneChild();
      Node node1 = new Node(31, node0, node0, node0, node0);
      node0.wasEmptyNode();
      node0.setChangeTime(1);
      node1.isIn();
      node0.wasEmptyNode();
      node1.isTypeOf();
      node1.useSourceInfoIfMissingFrom(node0);
      node0.isOptionalArg();
      // Undeclared exception!
//      try { 
        node1.addChildrenToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 0, 0);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.isGetElem();
      node1.addChildToFront(node1);
      node1.copyInformationFrom(node0);
      node1.setSideEffectFlags(36);
      Node.mergeLineCharNo(202, 0);
      node0.getAncestor(1358);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node(21, 21, 21);
      node0.putIntProp(21, 21);
      node0.getJsDocBuilderForNode();
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneTree();
      node2.isWhile();
      node1.isFromExterns();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = new Node(100);
      node0.isCast();
      Node node1 = new Node(1, node0, node0, node0, 57, 1);
      node1.isWith();
      node0.getSourceOffset();
      node0.isEquivalentToShallow(node1);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = new Node(1);
      Node node1 = new Node(153);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.clonePropsFrom(node0);
      node1.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      String string0 = "STRING_OBJECT_TYPE";
      JSType jSType0 = null;
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
//      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Unknown class name");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = new Node(100);
      Node node1 = node0.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Node node2 = new Node(1, node1, node0, node0, node0, 30, 12);
      node1.isWhile();
      Node node3 = node1.cloneNode();
      node3.getSourceOffset();
      node0.isAnd();
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0, node0, node0, 39, 42);
      Node node2 = new Node(0, node1, 37, 1141);
      Node node3 = Node.newNumber((double) 57, 46, 51);
      Node node4 = new Node(0, node2, node3, node3, node2);
      node3.getInputId();
      node3.setCharno(15);
      node3.getNext();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      node0.isExprResult();
      node0.setSourceEncodedPositionForTree(42);
      Node node1 = new Node(49, node0, node0);
      Node.extractLineno(1);
      node1.checkTreeEquals(node0);
      Node node2 = new Node(126);
      Node node3 = new Node(53, node1, node2, node1, 56, (-671));
      node3.putIntProp(1, 47);
      node3.isGetterDef();
      node2.isEmpty();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(57);
      Node node1 = new Node(38);
      Node node2 = new Node(51, node0, node0, node1);
      node0.isOr();
      // Undeclared exception!
//      try { 
        node1.appendStringTree((Appendable) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString(19, "ALL_TYPE", 2081, 1);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString("ALL_TYPE");
      node0.checkTreeEquals(node1);
      Node node2 = new Node(51);
      Node node3 = Node.newString("?r0(`_jIvuSh{etX");
      Node node4 = new Node(2, node2, node2, node3, 1443, 14);
      node4.removeChild(node3);
      node0.isGetterDef();
      Node node5 = new Node(57, node1, 113, 40);
      node5.isEmpty();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = new Node((-3014));
      node0.isReturn();
      Node node1 = new Node(2, node0, (-7), 1678);
      node1.isNE();
      node0.isLocalResultCall();
      Node node2 = new Node((-2246), node1);
      node1.isEquivalentToShallow(node1);
      node2.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = new Node(129, 129, 129);
      Node node1 = new Node(43, 129, 4);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isEquivalentToShallow(node0);
      node0.isVar();
      node2.isExprResult();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 0, 0);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node0.isTypeOf();
      node1.addChildToFront(node1);
      Node node2 = node1.copyInformationFrom(node0);
      node1.setSideEffectFlags(36);
      node1.isTry();
      node1.isInstanceOf();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node(132);
      node0.isArrayLit();
      node0.isTry();
      node0.isLabel();
      Node node1 = node0.getLastSibling();
      node0.isNoSideEffectsCall();
      node0.isGetterDef();
      node0.isEmpty();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node node2 = node0.srcrefTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(64);
      node2.removeProp(49);
      node1.isLocalResultCall();
      Node node3 = new Node(112);
      node1.getSourceOffset();
      node0.getProp(0);
      Node node4 = new Node(101, node1, 49, (-1376));
      node0.isOr();
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newString("9SG$(dO+B.PqkFQT+");
      node0.isQuotedString();
      node0.setOptionalArg(false);
      Node node1 = new Node(47, node0, node0, node0, node0, 29, 30);
      Node node2 = new Node((-1596), 155, (-656));
      node2.isEquivalentTo(node0, false, false, false);
      node1.getAncestors();
      node0.isFor();
      node1.isRegExp();
      node2.isDebugger();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("comparator");
      node0.isAssignAdd();
      node0.isQuotedString();
      node0.setOptionalArg(false);
      node0.setIsSyntheticBlock(false);
      Node node1 = new Node(46, 4194304, 0);
      Node node2 = new Node(31);
      node1.clonePropsFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node0.mayMutateGlobalStateOrThrow();
      Node.newString(48, "Node tree inequality:\nTree1:\nSTRING Sf1R4$EK$Pk4CM,NU 56\n\n\nTree2:\nLABEL_NAME 153\n\n\nSubtree1: STRING Sf1R4$EK$Pk4CM,NU 56\n\n\nSubtree2: LABEL_NAME 153\n");
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node(36);
      node1.putBooleanProp(4095, false);
      Node node2 = new Node(50, node0, node0, node1);
      node0.isOr();
      node1.isSyntheticBlock();
      node0.isCast();
      node2.isIn();
      node0.isComma();
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newString("T(");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.setVarArgs(true);
      Node node1 = new Node(57, node0, node0, node0, 0, 4095);
      node0.isWith();
      node0.getSourceOffset();
      node1.isAnd();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      Node node1 = new Node(1771, node0, node0, 1771, (-862048943));
      Vector<Node> vector0 = new Vector<Node>(30, 154);
      node0.getStaticSourceFile();
      Node node2 = node1.getFirstChild();
      node2.removeChildren();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node(21, 21, 21);
      node0.isNot();
      node0.putIntProp(21, 21);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(110, (-2928), 15);
      Node node2 = node0.cloneNode();
      Node node3 = node1.cloneTree();
      node3.isWhile();
      node2.isFromExterns();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString(127, ">", 52, (-2919));
      node0.isFalse();
      Node node1 = new Node(38, node0);
      Node node2 = new Node(105, 33, 50);
      node0.isDefaultCase();
      Node node3 = new Node(50);
      Node node4 = new Node(29, node3, 1, 48);
      node4.addSuppression(">");
//      try { 
        node2.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FUNCTION <invalid> 33 is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 0, 0);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.isGetElem();
      node1.addChildToFront(node1);
      Node node2 = node1.copyInformationFrom(node0);
      node1.setSideEffectFlags(36);
      Node.mergeLineCharNo(4, 20);
      node2.mayMutateArguments();
      node0.isFromExterns();
      node0.isVarArgs();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      node0.getLength();
      Node node1 = new Node(116);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node0.putIntProp((-271), 306);
      node0.getJsDocBuilderForNode();
      Node node2 = new Node(4, 40, 12);
      node0.cloneNode();
      node2.cloneTree();
      node1.isWhile();
      node0.isFromExterns();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = new Node(132);
      node0.isOptionalArg();
      node0.isTry();
      node0.isLabel();
      Node node1 = node0.getLastSibling();
      node0.isNoSideEffectsCall();
      Node[] nodeArray0 = new Node[1];
      node1.srcref(node0);
      nodeArray0[0] = node1;
      Node node2 = new Node(1, nodeArray0);
      Node node3 = null;
//      try {
        node3 = new Node(52, node1, node1, node0, node2, 38, 1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      node0.getLength();
      Node node1 = new Node(116);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      node0.getAncestors();
      node0.isSwitch();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.isEquivalentToShallow(node1);
      node1.isSwitch();
      Node node2 = new Node(766, node0, node1, node0);
      node2.isLabelName();
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = Node.newString("Object#Element", 39, 2);
      Node node2 = new Node(63, 42, 54);
      Node node3 = new Node(105, node0, node1);
      node3.isLocalResultCall();
      node3.cloneNode();
      node2.useSourceInfoFrom(node1);
      node3.toString(true, false, true);
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      node0.getLength();
      Node node1 = new Node(116);
      node1.isLabel();
      Node node2 = node0.getLastSibling();
      node2.isNoSideEffectsCall();
      node0.isGetterDef();
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isCatch();
      Node.extractLineno(150);
      node0.isAssign();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = new Node(110);
      Node node1 = Node.newString("Gt8p6");
      Node node2 = node0.clonePropsFrom(node1);
      node0.isOnlyModifiesThisCall();
      node1.putIntProp((-804), (-1408));
      node0.getJsDocBuilderForNode();
      node1.cloneNode();
      node2.setIsSyntheticBlock(false);
      Node node3 = Node.newNumber((-5406.40224));
      node2.checkTreeEquals(node3);
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node.mergeLineCharNo(153, (-3078));
      Node node0 = new Node((-1), 153, (-1));
      Node node1 = new Node(52);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isOnlyModifiesThisCall();
      node0.getJsDocBuilderForNode();
      node2.addChildrenToFront(node1);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node2.isOptionalArg();
      node2.isSyntheticBlock();
      Node node3 = Node.newString("nn'&2nBq4i01z3tjs", 131072, 4095);
      node3.getLastChild();
      node3.getString();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = new Node(128);
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getDirectives();
      Node node1 = new Node(57, node0, node0, node0, node0, 108, 39);
      Node node2 = new Node(43, 32, 30);
      node2.isBreak();
      node1.isTry();
      node0.isInstanceOf();
      node2.getSourcePosition();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node2.removeChildAfter((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte)68;
      byteArray0[3] = (byte)98;
      byteArray0[4] = (byte) (-122);
      byteArray0[5] = (byte)51;
      byteArray0[6] = (byte) (-50);
      byteArray0[7] = (byte) (-70);
      byteArray0[8] = (byte)93;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(124, 124, 3169);
      Node node1 = new Node(1285, node0, node0, node0);
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString("In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node0.getAncestors();
      node1.hasMoreThanOneChild();
      node2.isCase();
      // Undeclared exception!
//      try { 
        node1.addChildToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = new Node(57, node0, node0);
      Node node2 = Node.newString("Object#Element", 39, 2);
      Node node3 = new Node(105, node1, node2);
      node2.isEquivalentToTyped(node0);
      node1.setOptionalArg(false);
      node0.isComma();
      node3.clonePropsFrom(node1);
      Node node4 = node0.getParent();
      node3.getLastChild();
      node4.isObjectLit();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = Node.newString(52, "Object#Key", 55, Integer.MAX_VALUE);
      node0.isSetterDef();
      node0.isScript();
      Node node1 = new Node(42, node0);
      node1.isQualifiedName();
      node1.isVoid();
      node1.isEquivalentToTyped(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.getQualifiedName();
      Node node2 = null;
//      try {
        node2 = new Node(32, node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Node.mergeLineCharNo(861, 861);
      Node node0 = new Node(159, 861, 159);
      Node node1 = new Node(124);
      Node node2 = new Node(36, node1, node0, node0, node1);
      Node node3 = node0.clonePropsFrom(node2);
      node3.getJsDocBuilderForNode();
      node1.addChildrenToFront(node2);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.isOptionalArg();
      node3.isSyntheticBlock();
      node2.getLastChild();
      // Undeclared exception!
//      try { 
        node0.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 159
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(122, 122, 37);
      Node node1 = Node.newNumber((double) 4095);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node2);
      node_NodeMismatch0.equals((Object) null);
      node2.getAncestors();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString("8n%");
      node0.isQuotedString();
      node0.setOptionalArg(false);
      Node node1 = new Node(55, node0, node0, node0, node0, 2, 53);
      Node node2 = new Node(112, 15, (-2928));
      node1.isBreak();
      node0.isTry();
      node0.getAncestors();
      node0.isArrayLit();
      node0.isEquivalentTo(node1);
      node0.isCast();
      node2.copyInformationFromForTree(node1);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node(103);
      node0.isWhile();
      node0.isOptionalArg();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.toString(false, true, false);
      node2.isFromExterns();
      Node.newNumber((double) 38, 8, 119);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node.mergeLineCharNo(31, 31);
      Node node0 = new Node(31);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isOnlyModifiesThisCall();
      node2.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.getSourceOffset();
      node0.isInstanceOf();
      node0.isSyntheticBlock();
      node2.getLastChild();
//      try { 
        node2.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // DELPROP is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setLength(48);
      node0.isQualifiedName();
      node0.toStringTree();
      node0.isComma();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(56);
      node_SideEffectFlags5.clearSideEffectFlags();
      node0.getAncestors();
      node0.isSwitch();
      node0.addSuppression("[N@Wp\"Bd'X6$Y");
      Node node1 = new Node((-4043), node0, node0, node0, node0, 2720, 53);
      node1.isBreak();
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      int int0 = 21;
      Node node0 = new Node(21);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.detachChildren();
      node0.setDirectives(treeSet0);
      node0.isQuotedString();
      node0.isWhile();
      Node node1 = Node.newString(":XX iqs", 42, 57);
      node0.useSourceInfoFromForTree(node1);
      node0.isContinue();
//      try { 
        node0.setDouble(1.0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // ADD 42 [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000002] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isTrue();
      node0.getInputId();
      node0.isNew();
      node0.isCast();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(105, "Object#Element", 105, (-767));
      node0.isAssignAdd();
      Node node1 = new Node(1073, node0, node0, node0, 54, 36);
      node0.wasEmptyNode();
      node0.getLength();
      node1.isContinue();
      node0.isCatch();
      node0.isTypeOf();
      node0.isOptionalArg();
      node1.addChildrenToFront(node1);
      node1.children();
      node0.isHook();
      node1.getFirstChild();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      node0.checkTreeEquals(node1);
      InputId inputId0 = new InputId("MAq4/tT98r");
      node0.addChildrenToBack(node1);
      Node node2 = node0.getParent();
      node0.getLastChild();
      node2.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node.mergeLineCharNo(4, 4);
      Node node0 = new Node(4);
      node0.setSourceEncodedPositionForTree((-1205));
      Node node1 = new Node(42, node0);
      node0.getAncestor(16388);
      node1.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.getInputId();
      node1.children();
      node0.isNew();
      Node node3 = null;
//      try {
        node3 = new Node((-4249), (Node) null, node2, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node(36);
      Node node2 = new Node(50, node0, node0, node1);
      node0.isOr();
      node1.isSyntheticBlock();
      node0.isCast();
      node2.isIn();
      node0.isCast();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = Node.newString(127, ">", 52, (-2919));
      node0.isVarArgs();
      node0.isFalse();
      Node node1 = node0.cloneNode();
      Node node2 = new Node(38, node1);
      Node node3 = new Node(105, 33, 50);
      node0.isDefaultCase();
      node3.srcref(node2);
      node3.setSourceEncodedPositionForTree(38);
      node2.isCase();
      node3.isIf();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(47);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      node0.isLabel();
      Node node1 = Node.newString("Object#Key", 4095, 16);
      node0.addChildrenToBack(node1);
      node1.toString();
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      int int0 = 30;
      Node node0 = new Node(30);
      Node node1 = Node.newString(262144, "x\"Z:\".c;(`U3>r/b_");
      node0.addChildrenToFront(node1);
      Node node2 = new Node((-1202), node0);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isTrue();
      Node node1 = new Node(2);
      // Undeclared exception!
//      try { 
        node0.isUnscopedQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = new Node(57, node0, node0);
      Node node2 = Node.newString("Object#Element", 39, 2);
      Node node3 = new Node((-3998), 54, 54);
      node1.getLastChild();
      Node node4 = null;
//      try {
        node4 = new Node(37, node0, node2, 32, 49);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = new Node(72);
      node0.setChangeTime(17);
      Node node1 = new Node(2, node0, node0, node0, node0);
      node0.isEquivalentToTyped(node1);
      node1.isLabel();
      node1.getDirectives();
      node0.getAncestor(1);
      node0.isFunction();
      Node node2 = null;
//      try {
        node2 = new Node((-665), node1, node0, 31, 36);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newString(1, "((8S", 3001, 2081);
      node0.isSyntheticBlock();
      Node node1 = new Node(111, node0, node0, 40, 30);
      node0.isOnlyModifiesThisCall();
      node1.putIntProp(50, 2004);
      node0.getJsDocBuilderForNode();
      Object object0 = new Object();
      node1.copyInformationFrom(node0);
      node0.isThrow();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = new Node(64);
      node0.isDebugger();
      Node node1 = new Node(4, node0, node0, node0, node0, 2804, 57);
      node0.copyInformationFromForTree(node1);
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newString("8n%");
      Node node1 = Node.newString(8192, "Object#Key");
      node1.clonePropsFrom(node0);
      Node node2 = Node.newNumber(1636.1435911936);
      node2.isOnlyModifiesThisCall();
      node1.putIntProp(300, 32);
      Node node3 = new Node(124, node0);
      Node node4 = new Node(583, node3, node2, 730, 47);
      node4.getJsDocBuilderForNode();
      Node node5 = node3.cloneNode();
      node5.setIsSyntheticBlock(true);
      // Undeclared exception!
//      try { 
        node5.checkTreeEquals(node4);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 583
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.checkTreeEquals(node0);
      InputId inputId0 = new InputId("MAq4/tT98r");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(12);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = Node.newNumber(1.2);
      node1.getAncestors();
      node1.hasMoreThanOneChild();
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 2, 1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node(0, (-3014), 0);
      node0.isReturn();
      Node node1 = new Node(2, node0, (-7), 1678);
      node1.isVarArgs();
      node1.isFalse();
      Node node2 = new Node(53);
      Node node3 = node2.cloneNode();
      Node node4 = new Node(2082, node1);
      Node node5 = new Node((-416), 36, 37);
      node5.isDefaultCase();
      node3.isCase();
      node5.useSourceInfoFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      node0.isExprResult();
      node0.setSourceEncodedPositionForTree(42);
      Node node1 = new Node(32);
      node0.isOptionalArg();
      node0.isNot();
      node1.getLastSibling();
      node0.isInc();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.hasOneChild();
      node0.isQuotedString();
      Node node1 = Node.newString(48, "In(");
      node1.isEquivalentTo(node0);
      node1.setOptionalArg(false);
      Node node2 = node1.srcrefTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.removeProp(29);
      node1.isLocalResultCall();
      Node node3 = new Node(32);
      node3.copyInformationFrom(node2);
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(46);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 48
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newString("In(");
      Node.mergeLineCharNo(15, 3411);
      Node node1 = new Node(51);
      Node node2 = new Node(15);
      Node node3 = node1.clonePropsFrom(node0);
      node3.isOnlyModifiesThisCall();
      node0.getJsDocBuilderForNode();
      node3.addChildrenToFront(node0);
      Node node4 = Node.newString("In(");
      node0.checkTreeTypeAwareEqualsImpl(node4);
      node2.getSourceOffset();
      node3.isInstanceOf();
      node3.isSyntheticBlock();
      Node node5 = node4.getLastChild();
      int int0 = 1709;
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node2;
      nodeArray0[3] = node2;
      nodeArray0[4] = node1;
      nodeArray0[5] = node3;
      nodeArray0[6] = null;
      Node node6 = null;
//      try {
        node6 = new Node(40, node5, node3, 39, 4);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = new Node(54, 54, 54);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(131072);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node node1 = new Node(4);
      node0.isOptionalArg();
      node0.isNot();
      Node node2 = node1.getLastSibling();
      node2.isInc();
      node1.isGetterDef();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      Node node1 = new Node(37, node0, node0, 8, 37);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node2 = new Node(155);
      node2.isOptionalArg();
      node0.isNot();
      Node node3 = node2.getLastSibling();
      node2.isInc();
      node3.isGetterDef();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      Node node1 = Node.newString(30, "Ds8$8{g,08mg(");
      node0.setOptionalArg(true);
      node0.setIsSyntheticBlock(true);
      Node node2 = new Node(47, node0, node1);
      Node node3 = node2.useSourceInfoFromForTree(node1);
      // Undeclared exception!
//      try { 
        node1.removeChild(node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = new Node(119);
      node0.removeFirstChild();
      node0.isTrue();
      node0.isInstanceOf();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getDirectives();
      Node node1 = new Node(57, node0, node0, node0, node0, 108, 39);
      Node node2 = new Node(43, 32, 30);
      node2.addChildToFront(node1);
      node2.getAncestors();
      node2.isFalse();
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0, node0, node0, 39, 42);
      Node node2 = new Node(0, node1, 37, 1141);
      Node node3 = Node.newNumber((double) 57, 46, 51);
      Node node4 = new Node(0, node2, node3, node3, node2);
      node1.getInputId();
      node3.setCharno(15);
      node4.removeChildren();
      node1.setIsSyntheticBlock(false);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node4);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newString(28, "ALL_TYPE", 2081, 1);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.isOnlyModifiesThisCall();
      node1.putIntProp(3162, 8);
      node1.setLineno(35);
      node1.getJsDocBuilderForNode();
      Object object0 = new Object();
      Node node2 = node1.copyInformationFrom(node0);
      node1.isThrow();
      node1.addChildBefore(node2, node0);
      node1.isGetProp();
      node0.isBlock();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = new Node(33);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(52);
      node0.isOptionalArg();
      node1.isNot();
      node1.isLabel();
      Node node2 = node1.getLastSibling();
      node2.isInc();
      node0.isGetterDef();
      node2.isEmpty();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType((String) null);
      JSType jSType0 = jSTypeRegistry0.getType((StaticScope<JSType>) templateType0, "`IN*njp(@Q0;}", "D", 931, 20);
      jSTypeArray0[0] = jSType0;
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0, templateType0, templateType0);
      JSType[] jSTypeArray1 = new JSType[8];
      jSTypeArray1[0] = (JSType) templateType0;
      jSTypeArray1[1] = (JSType) templateType0;
      jSTypeArray1[2] = (JSType) templateType0;
      jSTypeArray1[3] = jSType0;
      jSTypeArray1[4] = (JSType) templateType0;
      jSTypeArray1[5] = jSType0;
      jSTypeArray1[6] = (JSType) templateType0;
      jSTypeArray1[7] = jSType0;
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) templateType0, jSTypeArray1);
      ImmutableList<JSType> immutableList1 = templatizedType0.getTemplateTypes();
      TemplateTypeMap templateTypeMap0 = jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      JSType jSType1 = templateTypeMap0.getTemplateType(templateType0);
      jSTypeArray0[1] = jSType1;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      FunctionType functionType0 = jSTypeRegistry1.createConstructorType(jSType0, jSTypeArray1);
      JSType jSType2 = jSTypeRegistry0.createNullableType(functionType0);
      jSTypeArray0[2] = jSType2;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      node0.isExprResult();
      node0.setSourceEncodedPositionForTree(42);
      StaticSourceFile staticSourceFile0 = node0.getStaticSourceFile();
      node0.setStaticSourceFile(staticSourceFile0);
//      try { 
        node0.setString("&FtQ2#hcYqn$![x~3");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // LABEL_NAME 0 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(19);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags5.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags8.clearSideEffectFlags();
      Node node0 = new Node(132);
      node0.isOptionalArg();
      node0.isNot();
      node0.isLabel();
      Node node1 = new Node(39);
      node1.getLastSibling();
      node0.isInc();
      node0.isGetterDef();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = new Node(100);
      node0.isAssignAdd();
      node0.setOptionalArg(false);
      node0.setIsSyntheticBlock(false);
      Node node1 = new Node(79, node0, node0, node0, node0);
      node0.getInputId();
      node1.setCharno(38);
      Node node2 = Node.newString("!eMyFUvKOO&Pa", 31, 100);
      node2.isEquivalentTo(node0, false, true, false);
      node0.detachFromParent();
      node1.wasEmptyNode();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = new Node(49);
      node0.isVarArgs();
      node0.isObjectLit();
      node0.isThis();
      Node node1 = new Node(43, node0, 2, 43);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      Node node2 = null;
//      try {
        node2 = new Node(64, node0, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      node2.mayMutateGlobalStateOrThrow();
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      Node node3 = new Node(38, node0);
      node0.addChildrenToFront(node1);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node3.getSourceOffset();
      node0.isInstanceOf();
      node3.isSyntheticBlock();
      Node node4 = node3.getLastChild();
      // Undeclared exception!
//      try { 
        node4.addChildToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 0, 0);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.setLength(2);
      node1.isEquivalentToShallow(node0);
      node2.addChildToFront(node1);
      Node node3 = node1.copyInformationFrom(node0);
      node3.setSourceEncodedPosition(742);
      node1.setSideEffectFlags(36);
      Node.mergeLineCharNo(202, 0);
      node3.mayMutateArguments();
      node2.isDebugger();
      node1.getChildAtIndex(0);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newString(33, "10~\"'-J-|1cxaEH", 33, 33);
      node0.isVarArgs();
      node0.wasEmptyNode();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      Node node1 = new Node(4, node0);
      Node node2 = node1.copyInformationFrom(node0);
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(21);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got RETURN
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = new Node(33);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(42, node0);
      node0.isFalse();
      node0.isGetProp();
      node1.siblings();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = node0.getLastSibling();
      node1.isInc();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2152));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node node0 = new Node(132);
      node0.isOptionalArg();
      node0.isNot();
      node0.isLabel();
      node0.isFromExterns();
      node0.getParent();
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      node0.isExprResult();
      node0.setSourceEncodedPositionForTree(42);
      node0.getDirectives();
      node0.isFunction();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.isFromExterns();
      node0.getParent();
      Node node1 = Node.newString(1, "*6`_0`/L,uI(");
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node0, (Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("", 1, 43);
      Node node2 = new Node(43, node1, node0, node0, node1);
      Node node3 = Node.newNumber((double) 55, 29, 37);
      node0.getChangeTime();
      node1.isEquivalentTo(node3, false, false, false);
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      node0.setChangeTime(2337);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(54, node0);
      node0.getInputId();
      Node node2 = new Node(63, node1, 4095, 110);
      node1.isNull();
      node1.getParent();
      node2.toString();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(153);
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setLineno(57);
      node0.isEquivalentToShallow(node1);
      node1.addChildToFront(node0);
      node0.copyInformationFrom(node1);
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags((-3687));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got LABEL_NAME
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 0);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = new Node(37, node0, node0, 8, 37);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getJSDocInfo();
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.isEquivalentToShallow(node0);
      node1.useSourceInfoIfMissingFrom(node2);
      node2.addChildToFront(node1);
      node1.copyInformationFrom(node0);
      node1.setSideEffectFlags(36);
      Node.mergeLineCharNo(202, 0);
      node1.isSwitch();
      // Undeclared exception!
//      try { 
        node1.addChildrenToFront(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      Node node1 = Node.newString(30, "Ds8$8{g,08mg(");
      node0.setOptionalArg(true);
      Node node2 = new Node(2450, node1, node1, node0);
      Node node3 = new Node(2, (-1776), 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(67);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(32);
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node1.getAncestors();
      node1.isAdd();
      node_SideEffectFlags2.clearAllFlags();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags((Node.SideEffectFlags) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      Node node1 = new Node(64, node0, node0, (-2932), (-488));
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.getStaticSourceFile();
      node0.getJsDocBuilderForNode();
      node1.setLineno((-1703));
      node2.isEquivalentToShallow(node0);
      Node node3 = null;
//      try {
        node3 = new Node(52, node0, 57, 8);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isCall();
      node0.isVarArgs();
      node0.isAssignAdd();
      Node node1 = new Node(111);
      Node node2 = new Node(2, node0, node1, node1, (-1304), 57);
      node1.getLength();
      Node node3 = new Node(116);
      node2.isContinue();
      node3.isCatch();
      Node.newString("NEW");
      node0.isName();
      // Undeclared exception!
//      try { 
        node2.getChildAtIndex(57);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node(103);
      node0.cloneTree();
      node0.isWhile();
      node0.isOptionalArg();
      node0.isNot();
      node0.isCast();
      node0.isIn();
      node0.mayMutateGlobalStateOrThrow();
      int int0 = Node.CHANGE_TIME;
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = new Node(153);
      node0.cloneNode();
      node0.isCast();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = new Node(103);
      node0.isOptionalArg();
      node_SideEffectFlags3.setMutatesArguments();
      node0.isDec();
      node0.isContinue();
      node0.getProp(103);
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newString(33, "10~\"'-J-|1cxaEH", 33, 33);
      node0.isVarArgs();
      node0.setVarArgs(true);
      node0.getJSDocInfo();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node((-2791), nodeArray0, 1, 42);
      node0.addChildrenToFront(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setQuotedString();
      node0.isNE();
      node0.setChangeTime((-726));
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(49, node0);
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(314, 52, 38);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.mayMutateGlobalStateOrThrow();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node3.isBreak();
      node1.isTry();
      node2.isInstanceOf();
      node3.isParamList();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node(54);
      node0.getAncestor(54);
      // Undeclared exception!
//      try { 
        node0.srcrefTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(856, 856, 856);
      node0.wasEmptyNode();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isInstanceOf();
      node0.isOnlyModifiesArgumentsCall();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)52;
      byteArray0[5] = (byte) (-18);
      byteArray0[6] = (byte) (-88);
      byteArray0[7] = (byte)64;
      byteArray0[8] = (byte)76;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node(117, node0, node0);
      node0.addChildrenToBack(node1);
      node0.isTry();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      node0.isFalse();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.getQualifiedName();
      // Undeclared exception!
//      try { 
        node2.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString("1{c", 111, 1671);
      Node node1 = Node.newString(53, "1{c", 54, 16);
      Node node2 = new Node(2, node0, node1, node1);
      node1.setLineno(53);
      Vector<Node> vector0 = new Vector<Node>(47, 83);
      node2.removeChild(node0);
      node0.getStaticSourceFile();
      node2.getFirstChild();
      node2.isQualifiedName();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte) (-99);
      byteArray0[5] = (byte)122;
      byteArray0[6] = (byte)85;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(108, 0, 108);
      node0.hasMoreThanOneChild();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node(103);
      Node node1 = node0.cloneNode();
      node0.getSourceFileName();
      node1.addChildrenToFront(node0);
      node0.isCase();
      Node node2 = Node.newString(33, "Object#Element");
      node2.isTypeOf();
      node2.isOptionalArg();
      node0.isComma();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.isThrow();
      Node node1 = new Node(49, node0, node0);
      Node.extractLineno(1);
      Node node2 = Node.newString("&+JKg7V", 1, 7);
      node2.checkTreeEquals(node0);
      node1.isThrow();
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node0 = new Node(38);
      // Undeclared exception!
//      try { 
        node0.isUnscopedQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = new Node(37);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isEmpty();
      node0.isGetProp();
      node2.isReturn();
      Node.extractLineno(35);
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newString(19, "ALL_TYPE", 2081, 1);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.isOnlyModifiesThisCall();
      node1.putIntProp(3162, 8);
      node1.getJsDocBuilderForNode();
      Node node2 = new Node(117, 30, 51);
      Node node3 = node2.cloneNode();
      node1.cloneTree();
      node3.isWhile();
      Node node4 = new Node(46, node3);
      node3.isVoid();
      node4.setCharno((-428));
      Node node5 = new Node(43, node4, node2);
      node5.addChildrenAfter(node1, node2);
      node5.isOptionalArg();
      node1.useSourceInfoFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      node0.setSourceEncodedPositionForTree((-1205));
      Node node1 = new Node((-484), (-1205), 2);
      Node node2 = new Node(39, node0, node0);
      node0.isLocalResultCall();
      Node node3 = node2.cloneNode();
      Node node4 = node3.useSourceInfoFrom(node1);
      node0.isVarArgs();
      node0.toString(false, false, true);
      node2.isEquivalentToShallow(node4);
      // Undeclared exception!
//      try { 
        node4.getExistingIntProp((-2085));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: -2085
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2152));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node node0 = new Node(132);
      node0.isOptionalArg();
      node0.isNot();
      node0.isLabel();
      Node node1 = node0.getLastSibling();
      node1.isInc();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isCall();
      node0.getDirectives();
      node0.setLength(48);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(43, 4095, 3314);
      node1.cloneNode();
      node1.cloneTree();
      node1.isWhile();
      Node node2 = new Node(4, node1);
      node0.isVoid();
      Node node3 = null;
//      try {
        node3 = new Node(43, node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      StringWriter stringWriter0 = new StringWriter();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.toString(false, false, false);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = new Node((-689));
      node1.isOptionalArg();
      node2.isNot();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node3.isLabel();
      Node node4 = node3.getLastSibling();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node2;
      nodeArray0[3] = node4;
      nodeArray0[4] = node1;
      nodeArray0[5] = node2;
      Node node5 = null;
//      try {
        node5 = new Node(16, nodeArray0, 30, 16);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString("In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(31, node1, node1, node0);
      Node node3 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node0.isNot();
      node0.isLabel();
      node2.getLastSibling();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber(482.487, 25, 115);
      node0.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node0.isIn();
      node0.getLength();
      node0.setOptionalArg(false);
      Node node1 = new Node(31);
      node1.useSourceInfoFromForTree(node0);
      Node node2 = new Node(30, (-1326), 38);
      node0.isVar();
//      try { 
        node0.setString("#\"ESo[<-<?");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 482.487 25 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isCall();
      node0.setIsSyntheticBlock(false);
      Node node1 = new Node(57, 48, 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-927));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.clearSideEffectFlags();
      node1.getAncestors();
      node0.isSwitch();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.addChildrenToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isCall();
      node0.getDirectives();
      node0.setLength(48);
      node0.isGetProp();
      node0.mayMutateArguments();
      node0.getInputId();
      node0.getLength();
      node0.isGetElem();
      Node node1 = new Node(38, node0, 31, 30);
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = new Node(57, node0, node0);
      Node node2 = Node.newString("Object#Element", 39, 2);
      Node node3 = new Node((-3998), 54, 54);
      Node node4 = new Node(105, node1, node2);
      node4.isLocalResultCall();
      node4.cloneNode();
      node3.useSourceInfoFrom(node2);
      node4.toString(true, false, true);
      node4.isEquivalentToShallow(node0);
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp(4095);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 4095
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isHook();
      Node node1 = new Node(53, node0, node0, node0);
      Node node2 = Node.newString(56, "{(~vc;])@@Q#uL,", 44, 30);
      // Undeclared exception!
//      try { 
        node1.replaceChild(node2, node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newString(19, "ALL_TYPE", 2081, 1);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.isOnlyModifiesThisCall();
      node1.putIntProp(3162, 8);
      node1.getJsDocBuilderForNode();
      Node node2 = new Node(117, 30, 51);
      Node node3 = node2.cloneNode();
      node1.cloneTree();
      node3.isWhile();
      Node node4 = new Node(46, node3);
      node3.isVoid();
      Node node5 = new Node(43, node4, node2);
      node5.addChildrenAfter(node1, node2);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node((-1091));
      node0.isWhile();
      node0.isOptionalArg();
      node0.isNot();
      node0.isLabel();
      Node node1 = node0.getLastSibling();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node1.isFalse();
      Node node2 = new Node(0, node1, node1);
      Node.newString("Object#Key", (-3216), 557);
      Node node3 = new Node((-1477), 4, 32);
      node2.isDefaultCase();
      node0.isAnd();
      node0.isDec();
      node2.isAdd();
      Node node4 = null;
//      try {
        node4 = new Node(47, node1, 133, 46);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString("[N@Wp\"Bd'X6$Y", 36, 36);
      node0.isOnlyModifiesThisCall();
      node0.isOptionalArg();
      node0.setOptionalArg(false);
      node0.isLocalResultCall();
      node0.setLineno(36);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = new Node(108, 0, 108);
      Node node1 = new Node(0, node0, 37, 57);
      Node node2 = Node.newNumber((double) 57, 46, 51);
      Node node3 = new Node(0, node1, node2, node2, node1);
      node2.getInputId();
      node3.isNew();
      node2.setCharno(15);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_NUMBER_STRING;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      JSType jSType1 = jSTypeRegistry0.createNullableType(jSType0);
      jSType0.matchConstraint(jSType1);
      jSTypeArray0[0] = jSType0;
      Node node4 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node4.addChildToFront(node3);
      node4.copyInformationFrom(node3);
      // Undeclared exception!
//      try { 
        node3.setSideEffectFlags(46);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node.mergeLineCharNo(43, 43);
      Node node0 = new Node(43);
      Node node1 = new Node(3133);
      Node.newString(37, "_(;uiRKMua");
      Node node2 = Node.newString(55, "_(;uiRKMua");
      node0.isOnlyModifiesThisCall();
      node2.putIntProp(53, 29);
      Node node3 = node0.cloneNode();
      node3.getSourceFileName();
      node0.addChildrenToFront(node2);
      node1.hasOneChild();
      node0.isTypeOf();
      node2.isQualifiedName();
      node3.isNot();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = new Node(1136, 1136, 1136);
      node0.setChangeTime(61);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(44);
      node_SideEffectFlags0.setMutatesThis();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCase();
      Node node1 = new Node(53, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.detachChildren();
      node2.getParent();
      Node node3 = Node.newString("com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.isName();
      node0.getChildAtIndex((-4033));
      node3.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = Node.newNumber((double) 38, 46, 4096);
      Node node1 = new Node(38, node0, node0, node0);
      node0.isOptionalArg();
      node1.isExprResult();
      // Undeclared exception!
//      try { 
        node1.getQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 0);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = new Node(37, node0, node0, 8, 37);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.isEquivalentToShallow(node0);
      node2.addChildToFront(node1);
      node1.copyInformationFrom(node0);
      // Undeclared exception!
//      try { 
        node1.addChildrenToBack(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString(48, "In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node node3 = new Node(154, node1, node0, node0);
      node3.useSourceInfoIfMissingFromForTree(node2);
      node3.isFromExterns();
      node0.getParent();
      node1.children();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      Node node2 = Node.newString(" [");
      node2.toString(false, false, false);
      Node node3 = new Node(29, node0);
      Node node4 = new Node(12, 53, (-729));
      node0.isDefaultCase();
      node1.isRegExp();
      node3.isVoid();
      node1.isArrayLit();
      node4.getType();
      node3.getNext();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node.mergeLineCharNo(0, 1333);
      Node node0 = Node.newNumber((double) 1333);
      node0.getSourceOffset();
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      node1.isEquivalentTo(node1, false, false, false);
      nodeArray0[4] = node0;
      nodeArray0[0] = node0;
      nodeArray0[6] = node1;
      Node node2 = null;
//      try {
        node2 = new Node((-644), nodeArray0, 0, 54);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString(1670, "", 1670, 1670);
      node0.setIsSyntheticBlock(true);
      node0.isAssign();
      node0.isThis();
      Node node1 = new Node((-862048943), node0, 3067, 39);
      Node node2 = null;
//      try {
        node2 = new Node(30, node0, node1, node0, 4, 53);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      Node node1 = new Node(118);
      node1.isEquivalentTo(node0, true, true, true);
      Node node2 = new Node(11);
      JSType[] jSTypeArray0 = new JSType[4];
      node2.isOnlyModifiesThisCall();
      node0.putIntProp(56, 3784);
      Node node3 = node1.cloneNode();
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.cloneTree();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.hasChildren();
      node0.isLocalResultCall();
      Node node1 = new Node(50);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node0.getQualifiedName();
      node0.isLabel();
      Node node2 = Node.newString("#", 4, 4095);
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      node2.setDirectives(set0);
      node2.checkTreeEquals(node0);
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node.extractLineno((-1));
      Node node0 = Node.newString(132, "Vz(<", 406, (-1776));
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      node0.clonePropsFrom(node1);
      Node node2 = Node.newString(55, "_(;uiRKMua");
      node0.isOnlyModifiesThisCall();
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      Node node3 = node0.cloneNode();
      node2.cloneTree();
      node3.isWhile();
      Node node4 = new Node(16, node0);
      node2.isBlock();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      jSTypeArray0[0] = (JSType) templateType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      Node node0 = Node.newString(0, "M)C-", 1, (-3339));
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node0, jSTypeArray0[1]);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      jSTypeArray0[2] = (JSType) enumElementType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      Node node1 = Node.newString(30, "Ds8$8{g,08mg(");
      node0.setOptionalArg(true);
      Node node2 = new Node(2462, node1, node1, node0);
      Node node3 = new Node(2, (-1776), 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(67);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node1.getAncestors();
      node1.hasMoreThanOneChild();
      node1.isAdd();
      node0.isName();
      node0.getFirstChild();
      node2.addChildrenAfter(node3, node0);
      // Undeclared exception!
//      try { 
        node3.replaceChild(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.setSourceEncodedPositionForTree(3420);
      node0.isTrue();
      Node node1 = new Node(47, node0);
      node1.putProp((-610), simpleErrorReporter0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node[] nodeArray0 = new Node[2];
      Node node2 = Node.newString("Object#Element", 36, 56);
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      Node node3 = new Node(130, nodeArray0, (-1776), 61);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node3);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node_NodeMismatch0.equals(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = new Node(100);
      node0.setChangeTime(38);
      node0.isIf();
      node0.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Stack<JSType> stack0 = new Stack<JSType>();
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = new Node(100, 100, 100);
      Node node1 = new Node(100, node0, 3762, (-43));
      Node node2 = node1.cloneTree();
      Node node3 = node1.clonePropsFrom(node0);
      node3.copyInformationFrom(node1);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(13);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = new Node(0);
      node0.isWhile();
      node0.isOptionalArg();
      Node node1 = new Node(1052);
      Node node2 = new Node(1575, node1, node1, node0, node0);
      node2.isNot();
      node1.cloneNode();
      node0.isLabel();
      node1.getLastSibling();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isOnlyModifiesThisCall();
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      Node node3 = node0.cloneNode();
      node0.addChildrenToFront(node1);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node3.getSourceOffset();
      node0.isInstanceOf();
      node3.isSyntheticBlock();
      node3.getLastChild();
//      try { 
        node2.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // GETPROP [input_id: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString(48, "In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.getAncestors();
      node2.isSwitch();
      node2.addChildrenToFront(node1);
      node0.addSuppression("inferred");
      node1.isThrow();
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING In( [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000007] is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString("-.F,,9K", (-8), (-8));
      node0.isVarArgs();
      node0.isAssign();
      node0.isThis();
      Node.newNumber((double) 52, 48, 256);
      Node node1 = new Node(42, node0);
      node1.getIndexOfChild(node0);
      Node node2 = node0.getLastSibling();
      node1.mayMutateArguments();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node((-274), node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isFromExterns();
      node0.isEmpty();
      node2.isGetProp();
      node1.isBlock();
      node2.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node(103);
      node0.isWhile();
      node0.isOptionalArg();
      node0.isNot();
      node0.isLabel();
      node0.getLastSibling();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getSourceOffset();
      node0.getInputId();
      Node node1 = node0.cloneNode();
      node0.removeProp(1);
      node0.getJsDocBuilderForNode();
      node1.getDirectives();
      node1.addChildrenToBack(node1);
      node0.isArrayLit();
      // Undeclared exception!
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = node0.cloneNode();
      Node node2 = new Node(4, node0);
      Node node3 = new Node((-3998), 1461, 54);
      node2.isDefaultCase();
      node2.getAncestors();
      node2.hasMoreThanOneChild();
      node0.isCase();
      node2.isEquivalentTo(node1);
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("comparator");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString(352, "Kj(viePikz>T7ERE");
      node0.setOptionalArg(false);
      node0.setIsSyntheticBlock(false);
      Node node2 = new Node(46, 4194304, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node0.getAncestors();
      node1.isSwitch();
      node0.addChildrenToFront(node2);
      node0.replaceChild(node2, node1);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = new Node(1136, 1136, 1136);
      node0.setChangeTime(61);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(44);
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = new Node(49, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isCase();
      Node node2 = new Node(53, node1, node1);
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node0.detachChildren();
      Node node4 = new Node(122, node2, 31, 1461);
      node2.isParamList();
      node0.getParent();
      node3.isUnscopedQualifiedName();
      node4.getLastChild();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      int int0 = Node.VAR_ARGS_NAME;
      node0.getInputId();
      Node node1 = node0.cloneNode();
      node0.removeProp(1);
      node1.isOnlyModifiesThisCall();
      node0.putIntProp(46, 0);
      Node node2 = Node.newNumber((double) 8, 31, 55);
      node2.setLength(1245);
      node2.getSourceFileName();
      node1.addChildrenToFront(node0);
      node1.isCase();
      node0.isTypeOf();
      node1.isOptionalArg();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newNumber(1254709.0);
      Node node1 = new Node((-1518), node0, node0, node0, node0, 53, 63);
      node1.srcrefTree(node0);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 0);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = new Node(37, node0, node0, 8, 37);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.isEquivalentToShallow(node0);
      node2.addChildToFront(node1);
      node1.copyInformationFrom(node0);
      node1.setSideEffectFlags(36);
      Node.mergeLineCharNo(202, 0);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newNumber((-3193.7801023167));
      node0.isGetElem();
      Node node1 = new Node(43, node0, node0, node0, 8, 52);
      node0.isVar();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isLabelName();
      node1.removeChild(node0);
      Node node3 = new Node((-701), node0, node0, node0, (-1533), 38);
      node0.getLength();
      Node node4 = new Node(126);
      node3.isContinue();
      Node node5 = Node.newNumber((-3193.7801023167), 15, 1843);
      node5.checkTreeTypeAwareEqualsImpl(node3);
      node2.getSourceOffset();
      Node node6 = Node.newNumber((double) 30);
      node6.getSourceFileName();
      node6.isInstanceOf();
      node4.isSyntheticBlock();
      node6.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = Node.newString(127, ">", 52, (-2919));
      node0.isVarArgs();
      node0.isAssignAdd();
      node0.getQualifiedName();
      node0.isObjectLit();
      Node node1 = new Node((-321), 4, (-546));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node node2 = new Node(38, node0, node0);
      node2.isTypeOf();
      node2.isOptionalArg();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.getDouble();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 0);
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = new Node(37, node0, node0, 8, 37);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.isEquivalentToShallow(node0);
      node2.addChildToFront(node1);
      Node node3 = node1.copyInformationFrom(node0);
      node1.setSideEffectFlags(36);
      Node.mergeLineCharNo(202, 0);
      node3.mayMutateArguments();
      Node.newNumber((double) 48);
      Node.newString(57, "INSTANCEOF", (-391), 50);
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = Node.newString(">");
      node0.isVarArgs();
      node0.isAssignAdd();
      Node node1 = new Node(54, node0, node0, node0, 3081, 85);
      node0.getLength();
      Node node2 = new Node(40);
      node2.isContinue();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node node3 = new Node(32, node2, node2, node2, 1, 2);
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = new Node(108, 0, 108);
      Node node1 = new Node(0, node0, 37, 57);
      Node node2 = Node.newNumber((double) 57, 46, 51);
      Node node3 = new Node(0, node1, node2, node2, node1);
      node2.getInputId();
      node3.isNew();
      node2.setCharno(15);
      node0.setIsSyntheticBlock(false);
      node0.toString(false, false, false);
      Node node4 = new Node((-577));
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      Node.newString("_(;uiRKMua", 51, 8);
      Node node2 = Node.newString(55, "_(;uiRKMua");
      node0.isOnlyModifiesThisCall();
      node2.putIntProp(53, 29);
      Node node3 = node0.cloneNode();
      node3.getSourceFileName();
      node0.addChildrenToFront(node2);
      node2.isCase();
      Node node4 = new Node(0, 108, 4);
      // Undeclared exception!
//      try { 
        node3.isQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(57);
      node0.setChangeTime(35);
      node0.isIf();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-2150), nodeArray0);
      node2.isExprResult();
      node2.getDirectives();
      node0.isFunction();
      node0.checkTreeEqualsImpl(node1);
      node1.addChildrenToFront(node0);
      // Undeclared exception!
//      try { 
        node1.addChildToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isOnlyModifiesThisCall();
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      Node node3 = node0.cloneNode();
      node0.addChildrenToFront(node1);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node3.getSourceOffset();
      node0.isInstanceOf();
      node3.isSyntheticBlock();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString(48, "In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = node1.srcrefTree(node0);
      node2.detachChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2014));
      node1.removeProp(2);
      node1.isLocalResultCall();
      Node node3 = new Node(32);
      node0.getSourceOffset();
      node3.getProp(43);
      Node node4 = new Node(101, node3, 2, 4095);
      node4.removeChildren();
      node4.isOr();
      node4.isSyntheticBlock();
      node1.hasMoreThanOneChild();
      node0.isCast();
      node3.isIn();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString(48, "In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(112, 15, (-2928));
      node0.getAncestors();
      Node.newString("com.google.common.base.Predicates$InstanceOfPredicate", 40, 56);
      node2.isScript();
      Object object0 = new Object();
      node2.copyInformationFrom(node0);
      node0.isThrow();
      Node node3 = Node.newString("com.google.common.collect.Lists$2");
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node2, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newString("T(");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.setVarArgs(true);
      node0.getJSDocInfo();
      Node node1 = Node.newString(35, "FOR");
      node1.isWhile();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.setSourceEncodedPositionForTree(154);
      node_SideEffectFlags0.setMutatesThis();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = Node.newString(127, ">", 52, (-2919));
      node0.isVarArgs();
      node0.isAssignAdd();
      Node node1 = new Node(54, node0, node0, node0, 3081, 85);
      node0.getLength();
      Node node2 = new Node(40);
      node2.isContinue();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.getSourceOffset();
      node0.isInstanceOf();
      node0.isSyntheticBlock();
      node1.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(111);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isOnlyModifiesThisCall();
      node1.putIntProp(717, 55);
      node2.getJsDocBuilderForNode();
      Node node3 = node0.cloneNode();
      node0.addChildrenToFront(node2);
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node1.getSourceOffset();
      node3.isInstanceOf();
      Node node4 = new Node(38, node3, node0, 29, 1374);
      node4.isSyntheticBlock();
      node4.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = new Node(153);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node0.removeProp(2314);
      node0.isLocalResultCall();
      Node node1 = new Node(52);
      node0.getSourceOffset();
      node0.getProp(1749);
      Node node2 = Node.newString("V)gWz@>?xYM_#");
      node2.isOr();
      node1.isSyntheticBlock();
      node0.hasMoreThanOneChild();
      node1.isCast();
      node0.isIn();
      node0.isWith();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = new Node(4095, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isVar();
//      try { 
        node0.setString("");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // CAST is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(43, 153, 4);
      node0.useSourceInfoFromForTree(node1);
      node0.isEquivalentToShallow(node0);
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      node0.setSourceEncodedPositionForTree((-1205));
      Node node1 = new Node(42, node0);
      node0.getAncestor(135201);
      node1.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.getInputId();
      node1.children();
      node0.isNew();
      Node node3 = null;
//      try {
        node3 = new Node((-4249), (Node) null, node2, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newNumber((-3193.7801023167));
      node0.isGetElem();
      Node node1 = new Node(43, node0, node0, node0, 8, 52);
      node0.isVar();
      node1.useSourceInfoIfMissingFrom(node0);
      node0.isLabelName();
      node1.removeChild(node0);
      node0.getQualifiedName();
      node1.isObjectLit();
      Node node2 = new Node(2, 32, 39);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node node3 = new Node((-8), 38, 16);
      node0.isQualifiedName();
      // Undeclared exception!
//      try { 
        node3.getExistingIntProp(2);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 2
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString("In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node3 = new Node(12, node0);
      Node.newString("Raja\rapvo%E;", 37, 54);
      node1.isEquivalentToTyped(node0);
      node1.setOptionalArg(false);
      node1.toStringTree();
      node2.isComma();
      node3.getParent();
      Node node4 = Node.newString("com.google.javascript.rhino.jstype.JSType$TypePair");
      node3.isName();
      // Undeclared exception!
//      try { 
        node4.getChildAtIndex(132);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      node0.getProp(135201);
      node0.putBooleanProp((-1205), true);
      Node node1 = new Node(12288, node0, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newNumber(674.655939759);
      node3.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newNumber((-1331.6800407100943), 35, (-1487));
      node0.setLength(2820);
      node0.detachChildren();
      node0.isExprResult();
      node0.isTry();
      // Undeclared exception!
//      try { 
        node0.addChildAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node.mergeLineCharNo(0, 1333);
      Node node0 = Node.newNumber((double) 1333);
      node0.getSourceOffset();
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      node1.isEquivalentTo(node1, true, true, true);
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node1;
      Node node2 = null;
//      try {
        node2 = new Node((-644), nodeArray0, 0, 54);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(42);
      Node node2 = node0.clonePropsFrom(node1);
      node2.isOnlyModifiesThisCall();
      node1.putIntProp((-3757), 1085);
      node2.getJsDocBuilderForNode();
      Node node3 = node1.cloneNode();
      node2.addChildrenToFront(node1);
      Node node4 = new Node((-1408), node3, node0, node0, node3, 0, 37);
      node1.checkTreeTypeAwareEqualsImpl(node4);
      node0.getSourceOffset();
      node3.isInstanceOf();
      node4.isSyntheticBlock();
      node3.isEquivalentToShallow(node4);
      node2.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newString(497, "t_/*-[bjda.", 497, 497);
      node0.isVarArgs();
      node0.isAssignAdd();
      Node node1 = new Node(2450, node0, node0, node0, (-947), 12);
      node1.getLength();
      Node node2 = new Node(38);
      node0.isContinue();
      node0.isCatch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.addSuppression("synthetic");
      Node node3 = null;
//      try {
        node3 = new Node((-2089), node1, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node0 = new Node(0, 0, 0);
      simpleErrorReporter0.warning("Unknown class name", "{W1", 155679, 57);
      node0.getQualifiedName();
      node0.setChangeTime(1136);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = new Node((-1276), 4095, 2);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isCase();
      Node node2 = new Node(51, node0, node1);
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node3.getBooleanProp(54);
      node2.detachChildren();
      Node node4 = new Node(38, node0, 2, 57);
      node1.isParamList();
      node4.getParent();
      node0.isUnscopedQualifiedName();
      node4.getLastChild();
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isHook();
      Node node1 = node0.cloneNode();
      node0.toString(false, false, false);
      Node node2 = new Node(4, node0);
      node1.isEquivalentToTyped(node2);
      Node.newNumber(1.0);
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node0.isWhile();
      node2.getAncestor(2);
      Node.newString(3545, "Object#Element");
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node node1 = new Node(30, node0);
      node0.toString();
      Node node2 = Node.newNumber(0.5);
      node2.getIndexOfChild(node0);
      Node node3 = node0.getLastSibling();
      node3.mayMutateArguments();
      node2.isEmpty();
      node0.getLineno();
      node0.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isLocalResultCall();
      node0.getLength();
      Node node1 = new Node(29);
      node1.isContinue();
      node0.isGetProp();
      node0.toStringTree();
      node1.isSetterDef();
      Node node2 = new Node(11, node1, node1, node0, node1, 39, 36);
      Node node3 = new Node(270, node2, 8, 56);
      node3.useSourceInfoIfMissingFrom(node2);
      node1.isLabel();
//      try { 
        node2.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // BITAND 39 is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isFalse();
      Node node1 = node0.cloneNode();
      simpleErrorReporter0.warning("MUL", "", 125, 8);
      Node.newNumber(3875.988, 38, 1);
      Node node2 = new Node(4, node0);
      node2.getSourceOffset();
      node2.isDebugger();
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newNumber((-3193.7801023167));
      node0.isGetElem();
      Node node1 = node0.cloneNode();
      node0.isVar();
      Node node2 = node0.cloneNode();
      node0.removeProp(8);
      node1.getBooleanProp((-128));
      node2.getJsDocBuilderForNode();
      Node node3 = node1.srcref(node2);
      node0.getDirectives();
      node1.addChildrenToBack(node3);
      node2.isArrayLit();
      node0.isEquivalentTo(node2);
      Node node4 = Node.newString((-2298), "ZaPF[)(Mc!%*UfV?");
      node4.isCast();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getProp(0);
      Node node1 = Node.newNumber((double) 4095, 50, 57);
      node1.getIntProp(524288);
      Node node2 = new Node((-1694), node0, node0, node1, 2, 47);
      Node node3 = node2.cloneTree();
      node0.isWhile();
      Node node4 = new Node(46, node3);
      node4.isVoid();
      Node node5 = null;
//      try {
        node5 = new Node((-3669), node4, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(9, node0, node0, 56, 15);
      node1.getParent();
      // Undeclared exception!
//      try { 
        node1.addChildToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      int int0 = (-1694);
      Node node0 = Node.newNumber((-4009.29657210773), (-1694), (-356));
      Node node1 = new Node((-356), node0, node0, node0);
      Node node2 = null;
      node1.copyInformationFromForTree(node0);
      int int1 = (-531);
      // Undeclared exception!
//      try { 
        node1.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -356
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      Node node2 = Node.newString("_(;uiRKMua", 51, 8);
      node2.isEquivalentTo(node1, false, true, true);
      Node node3 = Node.newString(55, "_(;uiRKMua");
      node0.isOnlyModifiesThisCall();
      node3.putIntProp(53, 29);
      Node node4 = node0.cloneNode();
      node4.getSourceFileName();
      node0.addChildrenToFront(node3);
      node3.isCase();
      node0.isTypeOf();
      node0.isOptionalArg();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.setChangeTime(1136);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setMutatesThis();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCase();
      Node node1 = new Node(49, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.detachChildren();
      Node node3 = new Node(31, node1, 46, (-1996));
      node2.isParamList();
      Node node4 = node2.getParent();
      node3.isEmpty();
      node0.getQualifiedName();
      node4.getChildCount();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = new Node(0);
      node0.wasEmptyNode();
      Node node1 = Node.newString(4095, ") ");
      Node node2 = new Node(4095, node0, node0, 152, 54);
      node2.addChildAfter(node1, node0);
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      Node node1 = new Node(49, node0, node0, 41, 212);
      Node node2 = node1.clonePropsFrom(node0);
      int int0 = 2219;
      String string0 = "first new child has existing sibling";
      Node node3 = Node.newString(2219, "first new child has existing sibling");
      node3.isOnlyModifiesThisCall();
      node2.putIntProp((-219), 31);
      node2.getJsDocBuilderForNode();
      Node node4 = node1.cloneNode();
      node2.getSourceFileName();
      Node node5 = null;
//      try {
        node5 = new Node(8, node0, node0, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = new Node(37);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0);
      node1.setIsSyntheticBlock(true);
      node0.checkTreeEquals(node1);
      InputId inputId0 = new InputId("MAq4/tT98r");
      inputId0.toString();
      Node node2 = null;
//      try {
        node2 = new Node(12, node0, node0, node1, 52, 35);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = new Node(4);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Comparator<NoType> comparator0 = (Comparator<NoType>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      PriorityQueue<NoType> priorityQueue0 = new PriorityQueue<NoType>(comparator0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.clonePropsFrom(node1);
      node0.wasEmptyNode();
      Node.newString(108, ") ");
      Node.newString(") ");
      node0.getAncestors();
      node0.isFalse();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString("-.F,,9K", (-8), (-8));
      node0.setIsSyntheticBlock(true);
      node0.isVarArgs();
      node0.isAssign();
      node0.isThis();
      Node.newNumber((double) 52, 48, 256);
      Node node1 = new Node(42, node0);
      node1.getIndexOfChild(node0);
      Node node2 = node0.getLastSibling();
      node1.mayMutateArguments();
      node2.isEmpty();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newString(153, "Gqr9ze2N7`jY^l-Dw1@", 153, (-2915));
      node0.isVarArgs();
      node0.isAssignAdd();
      Node node1 = new Node(54, node0, node0, node0, 31, 2);
      node1.getLength();
      Node node2 = new Node(21);
      node0.isContinue();
      node1.isCatch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2972));
      node_SideEffectFlags0.areAllFlagsSet();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
      // Undeclared exception!
//      try { 
        Locale.Category.valueOf("Gqr9ze2N7`jY^l-Dw1@");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // No enum constant java.util.Locale.Category.Gqr9ze2N7`jY^l-Dw1@
//         //
//         verifyException("java.lang.Enum", e);
//      }
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getSourceOffset();
      node0.getInputId();
      Node node1 = node0.cloneNode();
      node0.removeProp(1);
      node1.getBooleanProp(40);
      node0.getJsDocBuilderForNode();
      Node node2 = node0.srcref(node1);
      node1.getDirectives();
      node2.addChildrenToBack(node1);
      node0.isArrayLit();
      node0.isEquivalentTo(node0);
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = Node.newString("empty_block");
      node0.hasOneChild();
      node0.toString(false, true, true);
      Node node1 = Node.newNumber((-300.23), (-1357), 2);
      Node node2 = new Node(30, node0);
      Node node3 = Node.newNumber((double) 49);
      node0.getIndexOfChild(node3);
      node2.getLastSibling();
      node3.mayMutateArguments();
      node0.isEmpty();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString(2081, "O?zI,l", 24, 2081);
      node0.isRegExp();
      node0.setSourceEncodedPositionForTree((-910));
      Node node1 = new Node(303, node0, node0, 56, 51);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = new Node(48);
      node3.getStaticSourceFile();
      node1.setLineno(4);
      node1.toString();
      node2.isEquivalentToShallow(node3);
      // Undeclared exception!
//      try { 
        node2.addChildToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.getProp(0);
      node0.setSourceEncodedPositionForTree(147);
      node0.isTrue();
      Node node1 = new Node(115, node0, node0);
      node0.isEquivalentToShallow(node1);
      Object object0 = new Object();
      Node node2 = node1.copyInformationFrom(node0);
      node1.isThrow();
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setThrows();
      Node node0 = Node.newString("&ZdGX%_PKV+r");
      node0.getAncestors();
      node0.isNull();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node.mergeLineCharNo(116, 116);
      Node node0 = new Node(116);
      Node node1 = node0.clonePropsFrom(node0);
      Node node2 = Node.newString(55, "_;uKMua");
      node0.isOnlyModifiesThisCall();
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node2;
      Node node3 = null;
//      try {
        node3 = new Node(57, nodeArray0, 57, 44);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node(2097152, node0, 8, 32);
      node0.srcrefTree(node1);
      node0.isQualifiedName();
      node0.isAssign();
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isNE();
      Node node1 = Node.newNumber((double) 57);
      node1.setChangeTime((-339));
      node0.isLocalResultCall();
      Node node2 = new Node(38, node1);
      Node node3 = new Node(42, node0, 2662, 55);
      node0.setOptionalArg(true);
      node2.isGetterDef();
      node3.isEquivalentToShallow(node1);
      Node node4 = new Node((-1028), node3, node2, node3);
      // Undeclared exception!
//      try { 
        node2.isQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = new Node(49);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("node is not a child");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.NamedType", 15, 31);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isSyntheticBlock();
      int int0 = Node.SLASH_V;
      node1.isGetElem();
      node_FileLevelJsDocBuilder0.append("(");
      node1.isCase();
      node1.getStaticSourceFile();
      node2.removeChildren();
      node_FileLevelJsDocBuilder0.append("7$QPQt4fJ4#kRpbL.");
      node1.isIn();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.setChangeTime(1136);
      node0.isDo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setMutatesThis();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCase();
      Node node1 = new Node(49, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.detachChildren();
      Node node3 = new Node(31, node1, 46, (-1996));
      node3.isQualifiedName();
      node2.isBreak();
      node2.isParamList();
      Node node4 = node2.getParent();
      node3.isEmpty();
      node4.toStringTree();
      node3.setJSDocInfo((JSDocInfo) null);
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node1.toString(false, false, false);
      Node node2 = new Node((-2951), node0);
      Node node3 = new Node((-5), 2048, (-4096));
      node0.isDefaultCase();
      node2.isAnd();
      node1.isStringKey();
      node1.putIntProp(2, 16);
      node1.isWith();
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newString("58ss30 Cz5K9[");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString(48, "58ss30 Cz5K9[");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node node3 = new Node(3663);
      node0.getSourceOffset();
      node1.getProp(49);
      Node node4 = new Node(2, node3, node0, node1);
      node3.isOr();
      node1.isSyntheticBlock();
      node1.hasMoreThanOneChild();
      node3.isCast();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = Node.newString(153, "Gqr9ze2N7`jY^l-Dw1@", 153, (-2915));
      node0.isIn();
      node0.isAssign();
      Node node1 = Node.newString("Gqr9ze2N7`jY^l-Dw1@", 4095, 32);
      node1.getLength();
      Node node2 = new Node(50);
      node1.isVoid();
      node0.isGetProp();
      node0.toStringTree();
      node0.isSetterDef();
      Node node3 = new Node(4095, node1, 37, 4);
      node3.getQualifiedName();
      node2.isLabel();
      node3.isFor();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = new Node((-2915));
      Node node1 = new Node((-2915));
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = Node.newString(2, "Gqr9ze2N7`jY^l-Dw1@");
      node2.isOnlyModifiesThisCall();
      node3.putIntProp((-2617), 52);
      Node node4 = new Node(8);
      node4.getJsDocBuilderForNode();
      node3.cloneNode();
      node3.getSourceFileName();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(20);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2915
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node.mergeLineCharNo(21, 21);
      Node node0 = Node.newString(21, "_(;uiRKMua", 86037, 86037);
      node0.isVarArgs();
      Node node1 = Node.newString(30, "_(;uiRKMua", 9, (-2915));
      node1.isAssign();
      node1.setSideEffectFlags(49);
      Node node2 = Node.newString("end-char: ", 49, 36);
      node0.isCatch();
      node1.getLength();
      Node node3 = new Node(57);
      node2.isContinue();
      node2.isGetProp();
      node2.toStringTree();
      node0.isSetterDef();
      node0.isCall();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      node0.removeProp(1);
      node1.getBooleanProp(40);
      node0.setChangeTime((-1251));
      node1.isHook();
      node1.cloneNode();
      node0.getDirectives();
      node1.getDouble();
      node0.setType(33);
      node0.getCharno();
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = new Node(0, node0, node0, node0);
      node1.isLocalResultCall();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      Node node2 = node1.srcref(node0);
      node2.setLength(1484);
      node_FileLevelJsDocBuilder0.append("k.%bd");
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString(50, "J` n$V]6lDomRih'2");
      Node node4 = node2.useSourceInfoFrom(node3);
      node3.isSyntheticBlock();
      int int0 = Node.SLASH_V;
      node3.isGetElem();
      node_FileLevelJsDocBuilder0.append("k.%bd");
      node3.isStringKey();
      node1.getStaticSourceFile();
      node4.removeChildren();
      node_FileLevelJsDocBuilder0.append("L5");
      node4.isIn();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.getSourceFileName();
      node0.isExprResult();
      node0.toStringTree();
      node0.isVoid();
      node0.getInputId();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = new Node(3120);
      Node node1 = Node.newString(118, "_(;uiRKMua", 4095, 32);
      int int0 = 540;
      int int1 = 85;
      // Undeclared exception!
//      try { 
        node1.removeChildAfter((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newString("\"6\"euJ80<");
      node0.isEquivalentTo(node0);
      node0.isQuotedString();
      Node node1 = Node.newString((-567), "Kj(viePikz>T7ERE");
      node0.setOptionalArg(true);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(1574, 4, 39);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(5);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node1.getAncestors();
      node2.isSwitch();
      node0.addChildrenToFront(node1);
      node0.isNull();
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString("\"6\"euJ80<");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString((-567), "Kj(viePikz>T7ERE");
      boolean boolean0 = true;
      node0.setOptionalArg(true);
      node1.setIsSyntheticBlock(false);
      Node.newString("\"6\"euJ80<", 4, 2669);
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -567
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString(48, "In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.getAncestors();
      node2.isSwitch();
      node2.addChildrenToFront(node1);
      Node node3 = Node.newString("In(");
      node2.addChildrenToFront(node3);
      node3.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = Node.newString(153, "Gqr9ze2N7`jY^l-Dw1@", 153, (-2915));
      node0.isVarArgs();
      node0.isAssign();
      Node node1 = Node.newString("Gqr9ze2N7`jY^l-Dw1@", 4095, 32);
      node1.isCatch();
      node1.getLength();
      Node node2 = new Node(21);
      node0.isContinue();
      node0.isGetProp();
      node0.toStringTree();
      node0.isSetterDef();
      node1.isCall();
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newString((-8), "-.F,,9K", (-8), (-8));
      node0.setIsSyntheticBlock(true);
      node0.isVarArgs();
      node0.isAssign();
      node0.isThis();
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node0.removeProp(29);
      node0.isLocalResultCall();
      Node node1 = new Node((-1419));
      node0.getSourceOffset();
      node1.getProp(37);
      Node node2 = new Node(130, node1, 16, 46);
      node2.isOr();
      node2.isSyntheticBlock();
      node2.hasMoreThanOneChild();
      node2.isCast();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.setChangeTime(1136);
      node0.isDo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setMutatesThis();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCase();
      Node node1 = new Node(49, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.detachChildren();
      Node node3 = new Node(31, node1, 46, (-1996));
      node3.isQualifiedName();
      node2.isBreak();
      node2.isParamList();
      node2.getParent();
      node3.isEmpty();
      node3.getType();
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      node0.isExprResult();
      node0.setSourceEncodedPositionForTree(42);
      Node node1 = new Node(49, node0, node0);
      Node.extractLineno(1);
      node0.toString(true, true, false);
      Node node2 = new Node((-891), node1);
      Node node3 = new Node(122, 53, (-5));
      node0.isDefaultCase();
      node1.isAnd();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = Node.newString("_(;uiRKMua", 135201, 33);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = Node.newString(55, "_(;uiRKMua");
      node0.isOnlyModifiesThisCall();
      node3.putIntProp(53, 29);
      node3.getJsDocBuilderForNode();
      node3.siblings();
      Node node4 = new Node(12, node1, node2, node1, node3, 4095, 48);
      node4.getSourceFileName();
      node4.isParamList();
      node0.getParent();
      node0.isEmpty();
      node2.getType();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = new Node(1096);
      Node node1 = node0.cloneNode();
      Node node2 = Node.newNumber((double) 55, 36, 37);
      Node node3 = node0.cloneTree();
      node2.isFromExterns();
      node1.children();
      Node node4 = new Node((-833), node2, node1, node1);
      node4.setChangeTime(38);
      node2.isLocalResultCall();
      Node node5 = new Node(52, node3);
      Node node6 = new Node(40, node5, 1, 90);
      node5.setOptionalArg(false);
      node3.isGetterDef();
      Node node7 = null;
//      try {
        node7 = new Node(54, node0, node1, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = Node.newNumber((-517.764072));
      node0.isNE();
      Node node1 = Node.newNumber((-3193.7801023167));
      node1.setChangeTime(116);
      node0.isLocalResultCall();
      Node node2 = new Node(46, node0);
      Node node3 = new Node(56, node2, 40, 48);
      node1.setOptionalArg(false);
      node3.isGetterDef();
      node1.isEquivalentToShallow(node0);
      Node node4 = null;
//      try {
        node4 = new Node(8, node0, node1, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getSourceOffset();
      node0.getInputId();
      Node node1 = node0.cloneNode();
      node0.removeProp(1);
      node1.getBooleanProp(40);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      Node node2 = node0.srcref(node1);
      node1.setLength(48);
      node_FileLevelJsDocBuilder0.append("L5");
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = node0.useSourceInfoFrom(node2);
      node3.isSyntheticBlock();
      node0.getIntProp((-2644));
      node0.isGetElem();
      node_FileLevelJsDocBuilder0.append("HK.0Jo(<");
      node1.isCase();
      node1.getStaticSourceFile();
      node2.removeChildren();
      node_FileLevelJsDocBuilder0.append("hMD%S6");
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node node1 = null;
      node0.setCharno((-3114));
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setChangeTime((-1168));
      node0.isEquivalentToShallow(node0);
      Node node1 = new Node(1136, node0);
      node1.isBreak();
      node1.setOptionalArg(false);
      Node.mergeLineCharNo(1251, 29);
      node0.getParent();
      node1.isName();
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString("In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(31, node1, node1, node0);
      Node node3 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node_SideEffectFlags0.setReturnsTainted();
      node1.getInputId();
      node0.setInputId((InputId) null);
      node3.isTry();
      Node node4 = null;
//      try {
        node4 = new Node(50, node0, node3, node1, node0, 101, 2135);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      node0.setIsSyntheticBlock(true);
      node0.isVarArgs();
      node0.isAssign();
      node0.isEquivalentToTyped(node0);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node0.removeProp(29);
      node0.isLocalResultCall();
      Node node1 = new Node((-1419));
      node0.getSourceOffset();
      node1.getProp(37);
      Node node2 = new Node(130, node1, 16, 46);
      node2.isOr();
      node2.isSyntheticBlock();
      node0.hasMoreThanOneChild();
      node2.isCast();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      node0.isExprResult();
      node0.setSourceEncodedPositionForTree(42);
      Node node1 = new Node(49, node0, node0);
      Node.extractLineno(1);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isQualifiedName();
//      try { 
        node1.setString("ES");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // THROW is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newString(307, "com.google.common.collect.Sets$SetView");
      Node node1 = Node.newString("com.google.common.collect.Sets$SetView", 51, 51);
      node0.copyInformationFrom(node1);
      node0.isAssignAdd();
      node1.getSourceOffset();
      node0.setLength((-1777));
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // EQUALS com.google.common.collect.Sets$SetView 51 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setChangeTime(4095);
      Node node1 = node0.cloneNode();
      node0.toString(false, true, false);
      Node node2 = new Node(57, node1);
      node2.addSuppression("d*,#");
      node1.isInc();
      node2.getFirstChild();
      node1.getString();
      node1.isObjectLit();
      node0.isEquivalentTo(node2, false, false, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node3 = null;
//      try {
        node3 = new Node(4, node0, node1, node1, node1, 31, 1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newNumber(1050.983292335356);
      Node node1 = new Node(54);
      node1.getJsDocBuilderForNode();
      node0.getDouble();
      node1.children();
      node1.getLength();
      node1.isNoSideEffectsCall();
      node1.isDebugger();
      // Undeclared exception!
//      try { 
        node1.appendStringTree((Appendable) null);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 54
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newNumber((double) 153, 10, 59);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      node0.removeProp(27);
      Node node1 = new Node(1052);
      node1.getSourceOffset();
      node1.getProp(1164);
      Node node2 = new Node(10, node0, (-1595), 55);
      node0.isOr();
      node0.setDouble(1.0);
      node0.isSyntheticBlock();
      node2.hasMoreThanOneChild();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      boolean boolean0 = true;
      Node node0 = null;
//      try {
        node0 = new Node(135201, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = new Node(0, (-3081), 0);
      node0.isReturn();
      Node node1 = new Node(2, node0, 0, 1678);
      node1.isNE();
      Node node2 = node0.copyInformationFrom(node1);
      node1.isThrow();
      Node node3 = Node.newNumber((double) 4, 42, (-4167));
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node2, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = Node.newString(55, "_(;uiRKMua");
      node0.isOnlyModifiesThisCall();
      node3.putIntProp(53, 29);
      node3.getJsDocBuilderForNode();
      Node node4 = node0.cloneNode();
      node4.getSourceFileName();
      node0.addChildrenToFront(node3);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.isInstanceOf();
      node0.getParent();
      node1.isName();
      node4.isBlock();
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setMutatesThis();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCase();
      Node node1 = new Node(49, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.detachChildren();
      Node node3 = new Node(31, node1, 46, (-1996));
      node3.isQualifiedName();
      node2.isBreak();
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = Node.newString(33, "10~\"'-J-|1cxaEH", 33, 33);
      node0.isVarArgs();
      node0.isAssign();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      Node node1 = new Node((-2307), node0, node0, 31, 8);
      node0.siblings();
      Node node2 = node1.cloneNode();
      node2.getSourceFileName();
      node2.isParamList();
      node2.getParent();
      node0.isEmpty();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = new Node((-2041), (-3567), 36);
      Node node1 = new Node((-3567), node0, node0);
      node1.isDec();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      node1.putIntProp(52, (-3108));
      Node node2 = node1.cloneNode();
      node0.addChildrenToFront(node2);
      node1.getCharno();
      Node node3 = new Node(86);
      // Undeclared exception!
//      try { 
        node3.replaceChild(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setThrows();
      Node node0 = Node.newString("&ZdGX%_PKV+r");
      node0.getAncestors();
      node0.isLabelName();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.toString(false, false, false);
      Node node2 = new Node(4, node0);
      Node node3 = Node.newString("Object#Key", (-1573), 46);
      node0.isEquivalentToTyped(node3);
      node2.setIsSyntheticBlock(false);
      node0.checkTreeEquals(node1);
      node3.isLocalResultCall();
      Node.newString("PARAM_LIST", 53, 48);
      Node node4 = null;
//      try {
        node4 = new Node(16384, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = new Node((-2041), (-2041), 105);
      Node node1 = new Node(53, node0, node0);
      node1.isDec();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      node0.putIntProp((-1), 3);
      node0.cloneNode();
      node0.addChildrenToFront(node1);
      node1.getCharno();
      Node node2 = new Node(50);
      node1.getFirstChild();
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = Node.newString("_(;uiRKMua", 135201, 33);
      node0.isOptionalArg();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node node1 = Node.newString("_(;uiRKMua", 53, 39);
      Node node2 = new Node(40, node1, node0, node1);
      node1.isFromExterns();
      node2.isEquivalentToTyped(node1);
      node2.setOptionalArg(true);
      node2.isContinue();
      Node node3 = new Node(57, 4095, 50);
      node2.getBooleanProp(54);
      // Undeclared exception!
//      try { 
        node2.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isGetElem();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = new Node(50);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCase();
      Node node2 = new Node(49, node1, node0);
      node2.useSourceInfoIfMissingFrom(node0);
      Node node3 = new Node(31, node2, 46, (-1996));
      node3.isQualifiedName();
      // Undeclared exception!
//      try { 
        Node.newString(1, (String) null, 4103, 102);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      node0.isExprResult();
      node0.setSourceEncodedPositionForTree((-1086));
      Node node1 = new Node(49, node0, node0);
      Node.extractLineno(1);
      Node node2 = Node.newString("&+JKg7V", 1, 7);
      node2.checkTreeEquals(node0);
      node2.isExprResult();
      node1.toString(true, true, true);
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = new Node(0, (-3081), 0);
      node0.isReturn();
      Node node1 = new Node(2, node0, 0, 1678);
      node1.isNE();
      node1.setChangeTime(57);
      node0.isLocalResultCall();
      Node node2 = new Node((-2246), node1);
      node1.isEquivalentToShallow(node1);
      node2.isSwitch();
      node0.isVar();
      node1.addChildToFront(node2);
      node1.getAncestors();
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newString("1C)hc", 8233, 8233);
      Node node1 = new Node(42, node0, node0, node0);
      Node node2 = node1.srcref(node0);
      node2.getLength();
      node0.setLineno((-4462));
      node1.children();
      node0.useSourceInfoFromForTree(node2);
      // Undeclared exception!
//      try { 
        node0.removeChild(node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = Node.newString(33, "10~\"'-J-|1cxaEH", 33, 33);
      node0.isVarArgs();
      node0.isAssign();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      Node node1 = new Node((-2307), node0, node0, 31, 8);
      // Undeclared exception!
//      try { 
        node0.getQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = Node.newString(597, "lK?E", 597, 597);
      node0.children();
      node0.removeProp(318);
      node0.removeChildren();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("lK?E");
      // Undeclared exception!
//      try { 
        node0.copyInformationFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      String string0 = "*6`_0`/L,uI(";
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      node0.setSourceEncodedPositionForTree((-1086));
      Node node1 = new Node(49, node0, node0);
      node1.isEquivalentTo(node0);
      node1.hasChildren();
      node0.checkTreeEquals(node1);
      Node node2 = Node.newString("PDYB#jh\"4_9p>", 51, 48);
      node1.isScript();
      node0.isQuotedString();
      node0.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node3 = null;
//      try {
        node3 = new Node(50, node2, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setQuotedString();
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime((-726));
      node0.isLocalResultCall();
      Node node1 = new Node(49, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node.mergeLineCharNo((-1231), 528);
      // Undeclared exception!
//      try { 
        node0.setString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 41);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.removeProp(1998);
      node0.getType();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isGetElem();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node1.isLocalResultCall();
      Node node2 = new Node(37, (-1419), (-1056));
      Node node3 = node2.cloneNode();
      node1.toString(true, false, true);
      Node node4 = new Node(42, node0);
      Node node5 = Node.newString(":XX iqs", 4095, 4095);
      node2.isEquivalentToTyped(node0);
      node5.setOptionalArg(false);
      node3.isContinue();
      Node node6 = new Node((-2628), 38, 806);
      node6.getBooleanProp((-1573));
//      try { 
        node2.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // CALL is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      int int0 = 0;
      node0.getProp(0);
      node0.setSourceEncodedPositionForTree(147);
      node0.isTrue();
      node0.putProp(1664, "");
      node0.isNE();
      InputId inputId0 = new InputId("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(5769);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node0.getQualifiedName();
      node0.isLabel();
      node0.setIsSyntheticBlock(false);
      Node node1 = Node.newString("ES", 40, 31);
      node1.setOptionalArg(false);
      node1.isGetterDef();
      node0.isEquivalentTo(node1);
      node1.hasChildren();
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 1664
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setSourceFileForTesting("*6`_0`/L,uI(");
      node0.isExprResult();
      node0.setSourceEncodedPositionForTree((-1086));
      Node node1 = new Node(49, node0, node0);
      node1.useSourceInfoFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("o2}TU", node1, jSType0);
      Set<String> set0 = enumType0.getElements();
      node1.setDirectives(set0);
      node1.getInputId();
      node1.setInputId((InputId) null);
      Node node2 = null;
//      try {
        node2 = new Node(1, node1, node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = Node.newString("1hc", (-2309), 1273);
      Node node1 = new Node(1273, node0, node0, node0);
      Node node2 = node1.srcref(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-862048943));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node node3 = new Node(1359, 30, 46);
      node3.getQualifiedName();
      node3.isLabel();
      node3.setIsSyntheticBlock(false);
      Node node4 = new Node(16, node1);
      // Undeclared exception!
//      try { 
        node2.checkTreeEquals(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1273
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newNumber(1333.0);
      node0.isCall();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      node0.setLength(111);
      node0.isGetProp();
      node_SideEffectFlags0.setAllFlags();
      node0.toStringTree();
      node0.isComma();
      node0.getParent();
      Node.newString("NUMBER 1333.0 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000003]\n");
      node0.isName();
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString("In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(31, node1, node1, node0);
      Node node3 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node2.isOnlyModifiesArgumentsCall();
      node3.useSourceInfoFromForTree(node1);
      Node node4 = null;
//      try {
        node4 = new Node(8, node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      String string0 = "ES";
      Node node0 = Node.newString("ES", 553, 553);
      node0.setChangeTime(553);
      node0.siblings();
//      try { 
        node0.setDouble(2367.324101);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING ES 553 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node0.setSourceEncodedPositionForTree(153);
      node_SideEffectFlags0.setMutatesThis();
      node0.isStringKey();
      node0.isHook();
      Node node1 = new Node(1136, node0, node0, node0, node0, 4781, 4095);
      node0.copyInformationFromForTree(node1);
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node0.isNoSideEffectsCall();
      node0.isDebugger();
      node0.getType();
      node0.isCase();
      Node node1 = new Node((-166), node0);
      node1.isTypeOf();
      node0.isOptionalArg();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = Node.newNumber(1050.983292335356);
      Node node1 = new Node(874, node0, node0);
      Node node2 = node1.removeChildren();
      node2.getJsDocBuilderForNode();
      node2.getDouble();
      node1.setOptionalArg(false);
      node2.children();
      node2.getLength();
      node1.setSourceEncodedPositionForTree(46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1950));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node1.isStringKey();
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = Node.newString(":XX iqs");
      node0.hasOneChild();
      node0.toString(true, true, true);
      Node node1 = Node.newNumber((double) 54, 51, 31);
      Node node2 = new Node(53, node1, node1, node1, 57, 1136);
      Node node3 = new Node(16, node2);
      node3.getIndexOfChild(node1);
      node2.getLastSibling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = new Node((-710));
      // Undeclared exception!
//      try { 
        node0.setDouble((-1.0));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -710
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = new Node((-2041), (-2041), 105);
      Node node1 = new Node(53, node0, node0);
      node1.isDec();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      node0.putIntProp((-1), 3);
      Node node2 = node0.cloneNode();
      node0.addChildrenToFront(node1);
      node2.isInstanceOf();
      Node node3 = new Node(1, node2, node2);
      node2.isNew();
      // Undeclared exception!
//      try { 
        node0.toString(true, false, false);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2041
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      node0.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node0.isAssign();
      Node node1 = Node.newString("#\"ESo[<-<?", 46, 31);
      node1.isEquivalentToTyped(node0);
      node1.getLength();
      Node node2 = new Node(26);
      node2.isContinue();
      node2.isGetProp();
      Node node3 = new Node(0, node1, node1);
      node3.children();
      node3.isNull();
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.areAllFlagsSet();
      Node node0 = Node.newNumber(1975.50019558);
      Node node1 = new Node(11, node0, node0, node0, node0);
      Node node2 = new Node(11, node1, node1);
      Node node3 = new Node((-802), node2);
      node3.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      Node node1 = Node.newString(30, "Ds8$8{g,08mg(");
      node0.setOptionalArg(true);
      node0.setIsSyntheticBlock(true);
      Node node2 = new Node(2462, node1, node1, node0);
      Node node3 = node2.useSourceInfoFromForTree(node1);
      // Undeclared exception!
//      try { 
        node1.removeChild(node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString("ES", 51, (-2641));
      Node node2 = new Node(4095, node1);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node1.isVar();
      node2.isThrow();
      node0.toStringTree();
      node1.isSetterDef();
      node1.isCall();
      node0.isDelProp();
      node0.isLocalResultCall();
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      Node node1 = new Node(31, 52, 36);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.toString();
      node1.isEquivalentToShallow(node0);
      Object object0 = new Object();
      Node node2 = node1.copyInformationFrom(node0);
      node0.isThrow();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node2, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = new Node(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(57, node0, node0);
      node1.getInputId();
      node0.putProp(42, (Object) null);
      node1.siblings();
      node1.isFalse();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node0.getCharno();
      Node node2 = new Node((-825));
      Node node3 = new Node(4);
      Node node4 = node1.getFirstChild();
      node4.isUnscopedQualifiedName();
      node4.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = Node.newNumber(1333.0, 46, (-1188));
      node0.getIntProp(41);
      Node node1 = new Node(1300, node0, node0, node0, 38, 29);
      node1.cloneTree();
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(307, node1);
      node2.isVoid();
      node2.isFor();
      node0.isEquivalentTo(node2);
      Node node3 = node0.cloneTree();
      node3.getParent();
      node3.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node.mergeLineCharNo(307, 35);
      Node node0 = Node.newString(4886, "#");
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(39, nodeArray0);
      node1.addChildToBack(node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.newString("#");
      // Undeclared exception!
//      try { 
        node1.setString("J*,i2C_X1ms");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = new Node(0, (-3081), 0);
      node0.addSuppression("side_effect_flags");
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node0.setOptionalArg(false);
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.getChildBefore((Node) null);
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = new Node(0, (-3081), 0);
      node0.isReturn();
      Node node1 = new Node(2, node0, 0, 1678);
      node1.isNE();
      node1.setChangeTime(57);
      node0.isLocalResultCall();
      Node node2 = new Node((-2246), node1);
      node2.isContinue();
      Node node3 = new Node(50);
      node3.isSwitch();
      node0.isVar();
      // Undeclared exception!
//      try { 
        node2.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2246
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = new Node(26, (-2308), (-2041));
      node0.isDec();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node0.putIntProp((-2308), 26);
      node0.getJsDocBuilderForNode();
      Node node1 = node0.cloneNode();
      node0.getSourceFileName();
      node0.addChildrenToFront(node1);
      node1.isInstanceOf();
      node1.getParent();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = Node.newString("[N@Wp\"Bd'X6$Y");
      node0.hasOneChild();
      boolean boolean0 = true;
      node0.toString(false, false, true);
      Node node1 = Node.newNumber((double) 48, 21, 16);
      Node node2 = new Node(112, node0);
      node2.getIndexOfChild(node1);
      node2.getLastSibling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node0.setSourceEncodedPositionForTree(153);
      node_SideEffectFlags0.setMutatesThis();
      node0.isStringKey();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node0.setSourceEncodedPositionForTree(153);
      node_SideEffectFlags0.setMutatesThis();
      node0.hasMoreThanOneChild();
      node0.isCase();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      String string0 = "{6 Pv";
      Node node0 = Node.newString("{6 Pv");
      node0.setChangeTime(903);
      node0.mayMutateGlobalStateOrThrow();
      node0.isNE();
      Node node1 = new Node(15);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(54, nodeArray0);
      node2.setVarArgs(true);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node0, (Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      int int0 = 0;
      node0.getProp(0);
      node0.setSourceEncodedPositionForTree(147);
      node0.isTrue();
      node0.putProp(1664, "");
      node0.isNE();
      InputId inputId0 = new InputId("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(5769);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node0.getQualifiedName();
      node0.isLabel();
      node0.setIsSyntheticBlock(false);
      Node node1 = Node.newString("ES", 40, 31);
      node1.setOptionalArg(false);
      node1.isGetterDef();
      node0.isEquivalentTo(node1);
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 1664
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = new Node(98, 98, 98);
      Node node1 = new Node(98, node0, 3762, (-43));
      Node node2 = node1.cloneTree();
      Node node3 = node1.clonePropsFrom(node0);
      node3.copyInformationFrom(node1);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = new Node(108, 0, 108);
      Node node1 = new Node(0, node0, node0, node0, node0, 39, 42);
      Node node2 = new Node(0, node1, 37, 1141);
      Node node3 = Node.newNumber(0.0, 2214, 2497);
      Node node4 = new Node(0, node2, node3, node3, node2);
      node3.getInputId();
      node4.isNew();
      node3.setCharno(15);
      node1.setIsSyntheticBlock(false);
      Node.newString("by?%eaB:mtn\"Q,Vi", 47, 35);
      node4.isEquivalentToTyped(node1);
      node3.setOptionalArg(true);
      node4.isContinue();
      // Undeclared exception!
//      try { 
        node4.addChildrenToFront(node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = new Node((-242), 1858, (-242));
      Node node1 = new Node(12, node0, 1, 47);
      Node node2 = node1.cloneTree();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = new Node(98, 98, 98);
      Node node1 = new Node(98, node0, 3762, (-43));
      Node node2 = node1.cloneTree();
      node1.clonePropsFrom(node0);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags3.areAllFlagsSet();
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString("ES", 51, (-2641));
      node0.isLocalResultCall();
      Node node2 = new Node(4095, node1);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.isSwitch();
      node1.isVar();
      Node node3 = null;
//      try {
        node3 = new Node(1, node0, node2, node2, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = Node.newString((-5118), ":XX iqs");
      node0.isTry();
      node0.isVoid();
      Node node1 = Node.newString("");
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -5118
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = new Node(26, (-2308), (-2041));
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node0.putIntProp((-2308), 26);
      node0.getJsDocBuilderForNode();
      Node node1 = node0.cloneNode();
      node0.getSourceFileName();
      node0.addChildrenToFront(node1);
      node1.isInstanceOf();
      node1.getParent();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      node0.isGetElem();
      Node node1 = new Node(15, node0, node0);
      node1.hasOneChild();
      node1.getDirectives();
      node1.isTypeOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getType("ALL_TYPE");
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.toString();
      node1.isEquivalentToShallow(node0);
      Object object0 = new Object();
      Node node2 = node1.copyInformationFrom(node0);
      node0.isThrow();
      node1.addChildBefore(node2, node0);
      node0.removeFirstChild();
      Node node3 = null;
//      try {
        node3 = new Node(16, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = Node.newNumber(1050.983292335356);
      Node node1 = new Node(874, node0, node0);
      Node node2 = node1.removeChildren();
      node2.getJsDocBuilderForNode();
      node2.getDouble();
      node1.setOptionalArg(false);
      node2.children();
      node2.getLength();
      node2.isNoSideEffectsCall();
      node2.isDebugger();
      node1.getType();
      node0.isCase();
      node2.isTypeOf();
      node2.isOptionalArg();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString(48, "In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(31, node1, node1, node0);
      Node node3 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.getAncestors();
      node3.isSwitch();
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(49, nodeArray0, (-1725), 36);
      node4.isVar();
      // Undeclared exception!
//      try { 
        node2.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 48
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newString("[", (-1949), (-1949));
      Node node1 = new Node(0, node0, node0, node0);
      nodeArray0[0] = node1;
      node0.setCharno(110);
      node1.getSourceFileName();
      node0.isExprResult();
      Node node2 = Node.newNumber((double) 32);
      Node node3 = new Node((-147));
      node2.isContinue();
      Node node4 = new Node(2066, 0, 42);
      node4.getBooleanProp(897);
      Node node5 = new Node(29, node2, node4, node1, node1, 32768, (-860));
      node5.isVar();
      Node.mergeLineCharNo((-285), (-285));
//      try { 
        node5.setString("[");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NEG is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.toString(false, false, false);
      Node node2 = new Node(4, node0);
      Node node3 = Node.newString("Object#Key", (-1573), 46);
      node0.isEquivalentToTyped(node3);
      node2.setOptionalArg(false);
      node1.isContinue();
      Node node4 = new Node(42, (-5716), 2264);
      node3.getBooleanProp(118);
//      try { 
        node4.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // THIS is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newString(597, "lK?E", 597, 597);
      node0.siblings();
      node0.removeProp(318);
      node0.removeChildren();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("lK?E");
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newString("", 140, 140);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(974, node0, 70, 41);
      Node node2 = new Node(51, node1);
      node2.isSyntheticBlock();
      Node node3 = new Node((-3555), node2, node2);
      node3.children();
      node2.isNull();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      String string0 = "[N@Wp\"Bd'X6$Y";
      Node node0 = Node.newString("[N@Wp\"Bd'X6$Y");
      node0.hasOneChild();
      node0.toString(false, false, true);
      Node node1 = Node.newNumber((double) 12, 8, 571);
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      Node node2 = node1.getLastSibling();
      node0.getLineno();
      int int1 = 46;
      Node node3 = null;
      Node node4 = null;
//      try {
        node4 = new Node(51, node2, node1, (Node) null, node0, 1, 15);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-1774), nodeArray0, (-1774), (-2000));
      node0.isQuotedString();
      Node node1 = Node.newString(1175, "p)WQ{");
      node0.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node((-435), node0, node0, node0);
      Node node3 = new Node(36, 152, 4095);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(23);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node2.getAncestors();
      node2.hasMoreThanOneChild();
      node0.isAdd();
      node3.isName();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.setCharno(110);
      node0.getSourceFileName();
      node0.isWith();
      Node.newNumber((double) 46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = Node.newString("", 57, 37);
      node0.isScript();
      node0.isQuotedString();
      node1.isContinue();
      Node.newNumber(1012.87881387056, 55, (-3805));
      node0.getInputId();
      Node node2 = Node.newNumber((double) 32);
      node2.setInputId((InputId) null);
      node0.getInputId();
      Node node3 = new Node(29, node1);
      node3.setInputId((InputId) null);
      node1.isTry();
      // Undeclared exception!
//      try { 
        node3.setSideEffectFlags((-1666));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NEG
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.setQuotedString();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.removeProp(36);
      Node node1 = new Node(2, nodeArray0, 4095, (-1202));
      node1.isIf();
      node0.cloneNode();
      Node node2 = Node.newString("tgkv6.", 51, (-1));
      node2.removeProp((-1994091974));
      // Undeclared exception!
//      try { 
        node1.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 2
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-2150), nodeArray0);
      node2.mayMutateArguments();
      node2.getDirectives();
      node1.isSyntheticBlock();
      node0.getDirectives();
      Node node3 = new Node(41);
      Node node4 = new Node(487, node2, 55, 46);
      node4.getSourceOffset();
      Node node5 = new Node(29, nodeArray0);
      node5.getProp(0);
      node4.isOr();
      node3.isSyntheticBlock();
      node5.isName();
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      node0.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node0.isAssign();
      Node node1 = Node.newString("#\"ESo[<-<?", 46, 31);
      node1.isEquivalentToTyped(node0);
      node1.getLength();
      node1.setOptionalArg(false);
      Node node2 = new Node(26);
      node2.isContinue();
      node2.isGetProp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.toStringTree();
      node2.isSetterDef();
      node1.isCall();
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = new Node(33);
      Node node1 = new Node(3133);
      node0.clonePropsFrom(node1);
      Node node2 = Node.newString(55, "_(;uiRKMua");
      node0.isOnlyModifiesThisCall();
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      Node node3 = node0.cloneNode();
      node3.getSourceFileName();
      node0.addChildrenToFront(node2);
      node0.isInstanceOf();
      node0.getParent();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isGetElem();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.toString(false, true, false);
      Node node2 = new Node(57, node1);
      Node node3 = Node.newString("[N@Wp\"Bd'X6$Y", 542, (-1629));
      node3.isEquivalentToTyped(node0);
      node3.setOptionalArg(false);
      node3.isContinue();
      Node node4 = new Node(55, 30, 2);
      node4.setOptionalArg(true);
      node4.useSourceInfoIfMissingFrom(node0);
      node4.getBooleanProp(4095);
      // Undeclared exception!
//      try { 
        node4.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 55
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString("In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(31, node1, node1, node0);
      Node node3 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags3.setAllFlags();
      node0.getAncestors();
      node2.hasMoreThanOneChild();
      node3.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = new Node(153);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node0.setSourceEncodedPositionForTree(153);
      node_SideEffectFlags0.setMutatesThis();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNot();
      Node node1 = Node.newString(2429, "com.google.common.collect.ImmutableMap", 5529, 2429);
      Node node2 = new Node(2902, node0, node1, (-1322), 50);
      node0.getDirectives();
      // Undeclared exception!
//      try { 
        node2.replaceChild(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("");
      node0.setQuotedString();
      Node node2 = new Node(308, 4105, (-3989));
      node2.getQualifiedName();
      node1.isNE();
      node2.setChangeTime(602);
      node2.isLocalResultCall();
      Node node3 = new Node(31, node0);
      node1.isContinue();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node4.isSwitch();
      Node node5 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node5.isVar();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.getProp(3252);
      Node node1 = Node.newString("", 42, 87855567);
      HashSet<NoType> hashSet0 = new HashSet<NoType>(46);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) hashSet0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node3 = new Node(39, node0, node1, node2);
      node0.srcref(node1);
      Node node4 = null;
//      try {
        node4 = new Node(32, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newString("dnT|6G4U");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      Node node2 = new Node(2770, node1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      Node node3 = Node.newNumber(1333.0);
      Node node4 = new Node(38, node2, node3, 57, 8);
      node2.getDirectives();
      node2.isDebugger();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<NoType> stack0 = new Stack<NoType>();
      Vector<JSType> vector0 = new Vector<JSType>(stack0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      JSType[] jSTypeArray0 = new JSType[8];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("H:zm3`L0`");
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, (List<JSType>) vector0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0, (JSType) templateType0, (JSType) functionType0, (JSType) templateType0, (JSType) templateType0, (JSType) functionType0, (JSType) templateType0, (JSType) templateType0, (JSType) functionType0);
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) templateType0, immutableList0);
      jSTypeArray0[0] = (JSType) templatizedType0;
      JSType jSType0 = jSTypeRegistry0.createDefaultObjectUnion(templatizedType0);
      jSTypeArray0[1] = jSType0;
      ObjectType objectType0 = jSTypeRegistry0.createObjectType("Unknown class name", node0, (ObjectType) functionType0);
      jSTypeArray0[2] = (JSType) objectType0;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("H:zm3`L0`", node0, templatizedType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      ObjectType objectType1 = enumType1.getImplicitPrototype();
      jSTypeArray0[3] = (JSType) objectType1;
      ObjectType objectType2 = jSTypeRegistry0.createObjectType((ObjectType) enumType0);
      jSTypeArray0[4] = (JSType) objectType2;
      FunctionType functionType1 = jSTypeRegistry0.createConstructorType(jSTypeArray0[3], false, jSTypeArray0);
      jSTypeArray0[5] = (JSType) functionType1;
      JSType jSType1 = jSTypeRegistry0.createOptionalNullableType(jSTypeArray0[5]);
      objectType1.unboxesTo();
      jSTypeArray0[6] = jSType1;
      EnumElementType enumElementType0 = enumType1.getElementsType();
      functionType1.isDateType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      jSTypeArray0[7] = (JSType) enumElementType1;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = node0.srcref(node1);
      node2.putIntProp(32, 31);
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setQuotedString();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(2, nodeArray0, (-2741), (-1202));
      node1.isIf();
      node0.cloneNode();
      node1.getSideEffectFlags();
      Node node2 = Node.newString("tgkv6.", 51, (-1));
      node2.removeProp((-1994091956));
      // Undeclared exception!
//      try { 
        node1.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 2
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = new Node(37, node0, node0, 8, 37);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getStaticSourceFile();
      node0.setLineno(39);
      node1.toString();
      node1.isEquivalentToShallow(node0);
      node2.addChildToFront(node1);
      node1.getProp(48);
      Node node3 = node1.copyInformationFrom(node0);
      node1.setSideEffectFlags(36);
      Node.mergeLineCharNo(202, 0);
      node3.mayMutateArguments();
      Node node4 = Node.newNumber((double) 48);
      node4.isSyntheticBlock();
      node3.isEmpty();
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = new Node(37, node0, node0, 8, 37);
      node0.getStaticSourceFile();
      node0.setLineno(39);
      node1.toString();
      node1.isEquivalentToShallow(node0);
      node1.addChildToFront(node1);
      node1.getProp(48);
      Node node2 = node1.copyInformationFrom(node0);
      node0.isThrow();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node2, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(740, nodeArray0, (-1133), 740);
      Node node1 = new Node((-1133), node0);
      node1.copyInformationFrom(node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.setSourceFileForTesting((String) null);
      node2.wasEmptyNode();
      node0.type = 51;
      node2.detachChildren();
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.areAllFlagsSet();
      Node node0 = Node.newNumber(1333.0);
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = new Node(0, node0, node0, node0);
      node1.isLocalResultCall();
      node1.isFor();
      Node node2 = node1.cloneNode();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      node2.getLineno();
      node2.isInc();
      Node node3 = new Node((-90), node1);
      Node node4 = node3.getFirstChild();
      node4.isObjectLit();
      node1.isEquivalentTo(node4, true, false, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", 1266, (-1204));
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = Node.newNumber(1333.0);
      node0.appendStringTree(stringWriter0);
      node0.isCall();
      node0.setLength(111);
      node0.isGetProp();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.toStringTree();
      node0.isSetterDef();
      node0.isCall();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = Node.newString("_(;uiRKMua", 135201, 33);
      Node node1 = new Node(3133);
      node0.clonePropsFrom(node1);
      Node node2 = Node.newString(55, "_(;uiRKMua");
      node0.isOnlyModifiesThisCall();
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      Node node3 = node0.cloneNode();
      node3.getSourceFileName();
      node0.addChildrenToFront(node2);
      node0.isInstanceOf();
      node0.getParent();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setChangeTime((-1168));
      node0.isEquivalentToShallow(node0);
      Node node1 = new Node(1136, node0);
      node1.isBreak();
      node1.setOptionalArg(false);
      node1.isContinue();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.getBooleanProp(111);
      node1.isVar();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = new Node(0, node0, node0, node0);
      node1.isLocalResultCall();
      node1.isFor();
      Node node2 = node1.cloneNode();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(2, nodeArray0);
      node0.mayMutateArguments();
      node0.getDirectives();
      node3.isSyntheticBlock();
      node0.getDirectives();
      node1.isFunction();
      Node.mergeLineCharNo(110, (-1994091956));
      node0.isAnd();
      node2.setLength(37);
      node2.isStringKey();
      node3.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = Node.newString("_(;uiRKMua", 135201, 33);
      Node node1 = new Node(3133);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = Node.newString(55, "_(;uiRKMua");
      node0.isOnlyModifiesThisCall();
      node3.putIntProp(53, 29);
      node3.getJsDocBuilderForNode();
      node3.siblings();
      Node node4 = node0.cloneNode();
      Node node5 = new Node(56, node3, node4, node1, 8, 1820);
      // Undeclared exception!
//      try { 
        node3.addChildrenAfter(node2, node5);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.isIf();
      Node node1 = node0.cloneNode();
      node1.getSideEffectFlags();
      node1.removeProp(29);
      // Undeclared exception!
//      try { 
        node1.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 845
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = new Node(49, node0);
      node0.isEquivalentToTyped(node1);
      node1.setOptionalArg(false);
      node1.isContinue();
      Node node2 = new Node(15, node1, node1, 2, 52);
      node1.copyInformationFromForTree(node0);
      node1.getJSDocInfo();
      node1.toStringTree();
      node1.isComma();
      Node.extractLineno(1926);
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node(2845, nodeArray0);
      node2.mayMutateArguments();
      Node node3 = node2.cloneNode();
      node2.getSourceFileName();
      node3.addChildrenToFront(node0);
      node1.isInstanceOf();
      node2.getParent();
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 648, 103);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = Node.newString("[N@Wp\"Bd'X6$Y");
      node0.hasOneChild();
      int int0 = 46;
      node0.toString(false, false, true);
      Node node1 = Node.newNumber((double) 8, 46, 36);
      node0.getIndexOfChild(node1);
      Node node2 = node1.getLastSibling();
      node0.getLineno();
      node2.isInc();
      node0.getFirstChild();
      node2.isObjectLit();
      // Undeclared exception!
//      try { 
        node1.isEquivalentTo((Node) null, true, false, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setQuotedString();
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1);
      node0.isLocalResultCall();
      Node node1 = new Node(49, node0);
      node1.setOptionalArg(false);
      node1.isContinue();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.isSwitch();
      node1.isVar();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-2150), nodeArray0);
      node2.mayMutateArguments();
      node2.getDirectives();
      node1.isSyntheticBlock();
      node2.setType(51);
      node0.getCharno();
      Node node3 = new Node(4095);
      node0.getFirstChild();
      node1.isUnscopedQualifiedName();
      node2.isSetterDef();
      node2.setLineno(1048575);
      Node.extractCharno(327);
      node2.setWasEmptyNode(false);
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getProp(0);
      node0.setChangeTime(128);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.toString(false, false, false);
      Node node2 = new Node(56, node1, node1, node1, node1, 861, 1596);
      Node node3 = new Node(639, node2);
      Node node4 = Node.newString("\n\nSubtree1: ", 101, 126);
      node1.isEquivalentToTyped(node4);
      node2.setOptionalArg(false);
      node1.isContinue();
      Node node5 = new Node((-751), 39, 2);
      node3.getBooleanProp((-377));
      node3.isVar();
      Node.mergeLineCharNo(2, 2869);
      node4.setString("");
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = new Node(1115, 436, 37);
      node0.setType(37);
      node0.getCharno();
      Node node1 = new Node(42);
      JSType[] jSTypeArray0 = new JSType[0];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.setSourceEncodedPositionForTree(2849);
      node0.setSideEffectFlags(29);
      Node.mergeLineCharNo(57, (-1002));
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = new Node(1096);
      Node node1 = node0.cloneNode();
      Node node2 = Node.newNumber((double) 55, 36, 37);
      node0.cloneTree();
      node2.isFromExterns();
      node1.children();
      node2.srcrefTree(node1);
      node0.getJSType();
      node2.getStaticSourceFile();
      Node node3 = new Node(42, node0, 0, (-2079));
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node3, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node((-278), node0, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isRegExp();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = new Node(153);
      node0.getSourceOffset();
      Node.newString((-1419), "", 54, 1552);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      Node node1 = new Node(48, node0, node0, 49, (-90));
      node1.getDirectives();
      node1.isDebugger();
      node1.isVar();
      Node.mergeLineCharNo(2, 29);
//      try { 
        node0.setString("");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // LABEL_NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isGetElem();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.toString(false, true, false);
      Node node2 = new Node(57, node1);
      Node node3 = Node.newString("[N@Wp\"Bd'X6$Y", 542, (-1629));
      node3.isEquivalentToTyped(node0);
      node3.setOptionalArg(false);
      node3.isContinue();
      Node node4 = new Node(55, 30, 2);
      node4.getBooleanProp(4095);
      // Undeclared exception!
//      try { 
        node4.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 55
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = new Node(49, node0);
      node0.isEquivalentToTyped(node1);
      node1.setOptionalArg(false);
      node1.isContinue();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node1.getBooleanProp(57);
      node1.isVar();
      node0.toStringTree();
      node1.isSetterDef();
      node0.isCall();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isIf();
      Node node1 = node0.cloneNode();
      node1.getSideEffectFlags();
      node1.removeProp(29);
      Node node2 = new Node(30, node0, node1, 1005, 8);
      Node node3 = node0.copyInformationFromForTree(node0);
      node3.getJSDocInfo();
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 845
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = new Node(0, node0, node0, node0);
      node1.isLocalResultCall();
      node1.isFor();
      Node node2 = node1.cloneNode();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(55);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 55
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString(48, "In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(31, node1, node1, node0);
      Node node3 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.getAncestors();
      node1.hasMoreThanOneChild();
      node0.isAdd();
      node2.isName();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1);
      node0.isLocalResultCall();
      Node node1 = new Node(49, node0);
      node1.setOptionalArg(false);
      node1.isContinue();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.isSwitch();
      node1.isVar();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      String string0 = "_(;uiRKMua";
      Node node0 = Node.newString("_(;uiRKMua", 33, 45);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(52, nodeArray0);
      Node node2 = null;
//      try {
        node2 = new Node((-2645), node1, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newString("[", (-1949), (-1949));
      Node node1 = new Node(0, node0, node0, node0);
      nodeArray0[0] = node1;
      node0.setCharno(110);
      node1.getSourceFileName();
      node0.isExprResult();
      Node node2 = Node.newNumber((double) 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      node2.removeProp(53);
      Node node3 = new Node(37);
      node2.getSourceOffset();
      node1.getProp(1552);
      node0.isOr();
      node0.isSyntheticBlock();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = new Node(98, 98, 98);
      Node node1 = new Node(98, node0, 3762, (-1));
      Node node2 = node1.cloneTree();
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newString("", (-1949), (-1949));
      Node node1 = new Node(0, node0, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newNumber(0.0);
      node3.removeChildren();
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node1.isNoSideEffectsCall();
      node0.setOptionalArg(false);
      node0.getType();
      Node node4 = null;
//      try {
        node4 = new Node(54, node3, node2, 48, 96);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.toString(false, true, false);
      Node node2 = new Node(57, node1);
      Node node3 = Node.newString("[N@Wp\"Bd'X6$Y", 542, (-1629));
      node3.isEquivalentToTyped(node0);
      node3.setOptionalArg(false);
      node3.isContinue();
      Node node4 = new Node(55, 30, 2);
      node4.getBooleanProp(4095);
      node2.isVar();
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      node2.copyInformationFromForTree(node4);
      // Undeclared exception!
//      try { 
        node2.setString((String) null);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 57
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2325, 2325, 154);
      node0.isOnlyModifiesThisCall();
      node0.getLength();
      Node node1 = new Node(2325, node0, node0, node0, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.getBooleanProp(49);
      node2.copyInformationFrom(node1);
      double double0 = 99.13009770075;
      // Undeclared exception!
//      try { 
        node2.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 2325
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = new Node(0);
      node0.cloneTree();
      node0.getSourceOffset();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = new Node(153);
      node0.isRegExp();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isDo();
      node0.setSourceEncodedPositionForTree(53);
      Node node1 = new Node(31, node0, node0, 46, 52);
      node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp(38);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 38
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.toString(false, true, false);
      Node node2 = new Node(57, node1);
      Node node3 = Node.newString("[N@Wp\"Bd'X6$Y", 542, (-1629));
      node3.isEquivalentToTyped(node0);
      node3.setOptionalArg(false);
      node3.isContinue();
      Node node4 = new Node(55, 30, 2);
      node4.getBooleanProp(4095);
      node2.isVar();
      Node.mergeLineCharNo(1, 54);
      // Undeclared exception!
//      try { 
        node2.setString((String) null);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 57
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      node0.toString(true, false, false);
      Node node1 = new Node(49, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags6.setThrows();
      node_SideEffectFlags7.valueOf();
      Node.mergeLineCharNo(40, 43);
      node0.isWhile();
      Node.extractCharno(43);
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = new Node(153);
      node0.toString(false, false, false);
      node0.getSourceOffset();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = Node.newNumber(1333.0);
      node0.appendStringTree(stringWriter0);
      node0.isCall();
      node0.setLength(111);
      node0.isGetProp();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isString();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = new Node(153);
      node0.getSourceOffset();
      Node.newString((-1419), "", 54, 1552);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      Node node1 = new Node(48, node0, node0, 49, (-90));
      node1.getDirectives();
      node1.isDebugger();
      // Undeclared exception!
//      try { 
        node1.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 48
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = Node.newString(52, "[N@Wp\"Bd'X6$Y", (-1), 2);
      node0.setType(1937);
      // Undeclared exception!
//      try { 
        node0.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1937
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node.mergeLineCharNo(33, 33);
      Node node0 = Node.newString("_(;uiRKMua", 135201, 33);
      Node node1 = new Node(3133);
      node0.clonePropsFrom(node1);
      Node node2 = Node.newString(55, "_(;uiRKMua");
      node0.isOnlyModifiesThisCall();
      node2.putIntProp(53, 29);
      node2.getJsDocBuilderForNode();
      node2.siblings();
      Node node3 = node0.cloneNode();
      node3.getSourceFileName();
      node0.addChildrenToFront(node2);
      node0.isInstanceOf();
      node0.getParent();
      Node.newString("_(;uiRKMua", 1674, (-2807));
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setChangeTime((-2578));
      node0.isLocalResultCall();
      Node node1 = new Node(1136, node0);
      node0.isEquivalentToTyped(node1);
      node1.setOptionalArg(false);
      node1.isContinue();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.getBooleanProp(111);
      node1.isVar();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = new Node(31, node0);
      node1.isEquivalentToTyped(node0);
      node1.setOptionalArg(true);
      node1.isContinue();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node1.type = 1736;
      node0.getBooleanProp((-511));
      node1.isVar();
      // Undeclared exception!
//      try { 
        node1.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1736
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = new Node(37, node0, node0, 2692, 37);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getStaticSourceFile();
      node0.setLineno(39);
      node1.toString();
      node1.isEquivalentToShallow(node0);
      node2.setSourceFileForTesting("ALL_TYPE");
      node2.addChildToFront(node1);
      node1.getProp(48);
      Node node3 = node1.copyInformationFrom(node0);
      Node node4 = Node.newString("CALL 2692", 33, 43);
      node3.copyInformationFrom(node4);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node3, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getProp(0);
      node0.setSourceEncodedPositionForTree(128);
      node0.setSourceEncodedPositionForTree((-4003));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(123, nodeArray0);
      node0.addChildrenToBack(node1);
      node0.setSourceFileForTesting("O^hAQT<yn@,N~GoF\u0001");
      node0.isExprResult();
      Node node2 = node0.removeFirstChild();
      node2.removeProp(48);
      Node node3 = new Node(5561);
      node3.getSourceOffset();
      node0.getProp((-1218));
      node0.isOr();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.hasOneChild();
      Node node1 = node0.cloneNode();
      node0.isParamList();
      node0.isExprResult();
      node0.getDirectives();
      node1.isFunction();
      node0.setCharno(130);
      Node.mergeLineCharNo(4, 0);
      node0.isAnd();
      node0.setLength(50);
      node1.detachChildren();
      node0.isStringKey();
      node0.removeProp(2);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = new Node((-1173));
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isIf();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-2150), nodeArray0);
      node2.isExprResult();
      node2.getDirectives();
      node0.isFunction();
      node1.addChildrenToFront(node0);
      // Undeclared exception!
//      try { 
        node1.addChildToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = new Node(0, node0, node0, node0);
      node1.isLocalResultCall();
      node0.setChangeTime((-1508));
      node1.isFor();
      Node node2 = node1.cloneNode();
      node0.getDirectives();
      node2.setType(39);
      node0.getCharno();
      Node node3 = node0.detachFromParent();
      node1.srcrefTree(node3);
      node1.children();
      node0.getString();
      node3.isDefaultCase();
      node3.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = new Node(98, 152, (-449));
      int int0 = 1712;
      int int1 = (-942);
      Node node1 = new Node((-1015), node0, 3762, (-1));
      Node node2 = node1.cloneTree();
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = new Node(37, node0, node0, 2692, 37);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getStaticSourceFile();
      node0.setLineno(39);
      node1.toString();
      node1.isEquivalentToShallow(node0);
      node2.addChildToFront(node1);
      node1.getProp(48);
      Node node3 = node1.copyInformationFrom(node0);
      node0.isThrow();
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node3, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = Node.newString((-2004), "[N@Wp\"Bd'X6$Y");
      node0.isComma();
      node0.isOnlyModifiesThisCall();
      Node.extractLineno(57);
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      node0.setIsSyntheticBlock(true);
      node0.isVarArgs();
      node0.isAssign();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      Node node1 = new Node(1, node0, node0, 12, 12);
      node0.checkTreeEqualsImpl(node1);
      node0.getDirectives();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      node0.setIsSyntheticBlock(true);
      node0.isVarArgs();
      node0.isAssign();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte) (-31);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      Node node1 = new Node(1, node0, node0, 12, 12);
      node0.getDirectives();
      node0.isDebugger();
      // Undeclared exception!
//      try { 
        node1.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newString("", (-1949), (-1949));
      Node node1 = new Node(0, node0, node0, node0);
      nodeArray0[0] = node1;
      node0.setCharno(110);
      node1.getSourceFileName();
      node0.isExprResult();
      node1.mayMutateArguments();
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.toString();
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = new Node(4095, node0, node0, node0);
      node1.isOptionalArg();
      node0.isEquivalentToTyped(node1);
      node0.getDirectives();
      node0.isTypeOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      node0.mayMutateArguments();
      Node node1 = new Node(15, node0, node0);
      node1.hasOneChild();
      node1.getDirectives();
      node1.isTypeOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getType("ALL_TYPE");
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      node0.isExprResult();
      node0.getDirectives();
      node1.isFunction();
      node1.addChildrenToFront(node0);
      node0.setCharno(130);
      Node.mergeLineCharNo(4, 0);
      node0.isAnd();
      node0.setLength(50);
      node0.isStringKey();
      node0.removeProp(2);
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isIf();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-2150), nodeArray0);
      Node node3 = new Node(31, nodeArray0);
      node1.mayMutateArguments();
      node0.getDirectives();
      node2.isSyntheticBlock();
      node3.setType(37);
      node3.getCharno();
      Node node4 = new Node(8232);
      node1.getFirstChild();
      node0.getIntProp(51);
      node2.isUnscopedQualifiedName();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = new Node(153);
      node0.isEquivalentToShallow(node0);
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newString("", (-1949), (-1949));
      Node node1 = new Node(0, node0, node0, node0);
      nodeArray0[0] = node1;
      node0.setCharno(110);
      node1.getSourceFileName();
      node0.isExprResult();
      Node.newNumber((double) 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      Node.mergeLineCharNo(47, 40);
      Node.newString(2160, "{j<^`n*n_");
      node1.isWhile();
      node0.getAncestor(46);
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isDo();
      node0.setSourceEncodedPositionForTree((-3766));
      Node node1 = new Node(31, node0, node0, 46, (-2308));
      node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp(38);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 38
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString("In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(4, node1, node1, node0);
      Node node3 = new Node(112, 15, (-2928));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      node2.appendStringTree(stringWriter0);
      node2.isCall();
      node3.setLength(1);
      Node node4 = null;
//      try {
        node4 = new Node(8388608, node0, node0, node3, node1, 56, 917);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.valueOf();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isString();
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // PARAM_LIST is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = Node.newString((-2004), "[N@Wp\"Bd'X6$Y");
      Node node1 = Node.newNumber((double) 57);
      Node node2 = new Node((-2004), node0, node0, node0, node1);
      // Undeclared exception!
//      try { 
        node2.addChildrenAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = new Node(52, node0, node0, 2677, 52);
      node0.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp(1974);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 1974
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = new Node(26, (-2340), (-2041));
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node1 = new Node(26);
      node0.isDebugger();
      node0.getLastSibling();
      Node.newNumber(673.2141543387, 102, 36);
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = Node.newNumber(1333.0);
      node0.appendStringTree(stringWriter0);
      node0.isCall();
      node0.setLength(111);
      node0.isGetProp();
      Node node1 = null;
//      try {
        node1 = new Node(57, (Node[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      node0.toString(true, false, false);
      Node node1 = new Node(49, node0);
      node0.isEquivalentToTyped(node1);
      node1.copyInformationFrom(node0);
      node1.setOptionalArg(false);
      node1.isContinue();
      node1.getDirectives();
      node1.getBooleanProp(57);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      node0.toString(true, false, false);
      // Undeclared exception!
//      try { 
        Node.newString(5254, (String) null, (-3514), 36);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = Node.newString("", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.error("", "", 2876, 114);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getSourceOffset();
      Node node1 = new Node(4, node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node1.isEquivalentToTyped(node0);
      node1.setOptionalArg(false);
      node1.isEmpty();
      node0.getDirectives();
      node1.putBooleanProp(38, false);
      node0.getBooleanProp((-345));
      node1.isVar();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = new Node(4095, node0, node0, node0);
      node0.isEquivalentToTyped(node1);
      node0.hasOneChild();
      node1.getDirectives();
      node1.isTypeOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getType("VQpnY'PtLtndL_)!JZ");
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.toString(false, true, false);
      Node node2 = new Node(57, node1);
      Node node3 = Node.newString("[N@Wp\"Bd'X6$Y", 542, (-1629));
      node3.isEquivalentToTyped(node0);
      node3.setOptionalArg(false);
      node3.isContinue();
      node3.getDirectives();
      Node node4 = new Node(55, 30, 2);
      node4.getBooleanProp(4095);
      node2.isVar();
      // Undeclared exception!
//      try { 
        node2.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 57
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.UnionType");
      Node node1 = new Node(593, node0, node0, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(46, node0, node1, node1, 89, 4079);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1));
      Node node1 = new Node((-1119), node0, node0, node0, node0, 1875, 4095);
      Node node2 = new Node((-1), node1);
      // Undeclared exception!
//      try { 
        node1.addChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      String string0 = "{6 Pv";
      Node node0 = Node.newString("{6 Pv");
      node0.setChangeTime(903);
      node0.mayMutateGlobalStateOrThrow();
      node0.isNE();
      // Undeclared exception!
//      try { 
        node0.getAncestor((-263));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(16384, "KM7:KqjQ+U", 2257, 39);
      node1.isSyntheticBlock();
      node0.setType(55);
      node1.getCharno();
      Node[] nodeArray0 = new Node[16];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = null;
//      try {
        node2 = new Node(51, nodeArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString("ALL_TYPE", 246, 0);
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(246);
      node0.isLocalResultCall();
      node0.toString(false, true, false);
      Node node1 = new Node(36, node0);
      // Undeclared exception!
//      try { 
        node1.isEquivalentToTyped((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isIf();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-2150), nodeArray0);
      node2.isExprResult();
      node2.getDirectives();
      node0.isFunction();
      node1.addChildrenToFront(node0);
      node0.setCharno(108);
      Node.mergeLineCharNo(57, 705);
      node1.isAnd();
      node0.setLength((-1629));
      node2.isStringKey();
      node0.isOptionalArg();
      node0.setSourceEncodedPosition(2383);
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getProp(0);
      node0.setSourceEncodedPositionForTree(128);
      node0.setSourceEncodedPositionForTree((-4003));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(123, nodeArray0);
      node0.addChildrenToBack(node1);
      node0.setSourceFileForTesting("O^hAQT<yn@,N~GoF\u0001");
      node1.isEquivalentTo(node0, true, true, true);
      node0.setSourceEncodedPositionForTree(631);
      int int0 = (-3598);
      node1.setSideEffectFlags(int0);
      int int1 = 8199;
      Node.mergeLineCharNo(int1, node1.IS_DISPATCHER);
      node0.isSyntheticBlock();
      nodeArray0[0].mayMutateArguments();
      int int2 = 40;
      nodeArray0[0].getAncestor(int2);
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = new Node(26, (-2340), (-2041));
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      StringWriter stringWriter0 = new StringWriter();
      node0.appendStringTree(stringWriter0);
      node0.isCall();
      node0.setLength((-2735));
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = Node.newString("", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getSourceOffset();
      Node node1 = new Node(4, node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      node1.isComma();
      node0.isOnlyModifiesThisCall();
      Node.extractLineno((-2346));
      node1.isQualifiedName();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isOnlyModifiesThisCall();
      node0.putBooleanProp(8523821, false);
      node0.putProp((-1738), "");
      Node node1 = new Node(2924, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no next sibling.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = Node.newString("UdW s]`~5,Fzz/]&K-");
      node0.isOnlyModifiesThisCall();
      node0.putProp(122, "UdW s]`~5,Fzz/]&K-");
      Node node1 = new Node(119, node0, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(1, node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = new Node(0, (-3081), 0);
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.isEquivalentTo((Node) null, false, false, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(153);
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = new Node(26, (-2336), (-2041));
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = new Node(15, node0, node0, 8, (-3630));
      node1.mayMutateGlobalStateOrThrow();
      node1.detachChildren();
      node1.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isDo();
      node0.putProp((-1738), "");
      Node node1 = new Node((-1738), node0, node0, 51, 43);
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no next sibling.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNot();
      node0.setCharno(110);
      node0.getSourceFileName();
      node0.isNoSideEffectsCall();
      Node.newNumber((double) 46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setThrows();
      node0.getAncestors();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      Node node1 = null;
//      try {
        node1 = new Node(52, (Node) null, (Node) null, node0, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = Node.newString("", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getSourceOffset();
      Node node1 = new Node(4, node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.valueOf();
      Node.mergeLineCharNo(4095, 57);
      node1.isWhile();
      node1.mayMutateGlobalStateOrThrow();
      node0.detachChildren();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = new Node(0, node0, node0, node0);
      node1.isLocalResultCall();
      node1.isFor();
      Node node2 = node1.cloneNode();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(2, nodeArray0);
      node0.mayMutateArguments();
      node0.getDirectives();
      node3.isSyntheticBlock();
      node1.setType(47);
      node1.getCharno();
      Node node4 = new Node((-2111));
      node2.getFirstChild();
      node0.isUnscopedQualifiedName();
      node1.isSetterDef();
      node1.addSuppression("XSu'M$h=");
      node4.isInc();
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isIf();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-2150), nodeArray0);
      node2.isExprResult();
      node2.getDirectives();
      node0.isFunction();
      node1.addChildrenToFront(node0);
      node0.setCharno(108);
      Node.mergeLineCharNo(57, 705);
      node1.isAnd();
      node0.setLength((-1629));
      node2.isStringKey();
      node2.removeProp(13);
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      node0.setType(1161);
      node0.getCharno();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
//      try {
        node1 = new Node(1, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      node0.toString(true, false, false);
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      node1.setOptionalArg(false);
      node0.mayMutateArguments();
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.setVarArgs(true);
      node1.putIntProp(48, 38);
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(847, nodeArray0, 57, 847);
      node0.setChangeTime(13);
      node0.isIf();
      Node node1 = new Node(46, node0, node0, 4095, 43);
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node(32, 57, (-3630));
      Node node3 = new Node(55, nodeArray0, 53, 29);
      Node node4 = null;
//      try {
        node4 = new Node(40, node2, node3, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      int int0 = (-410);
      Node node1 = Node.newString("-.F,,9K", (-410), 118);
      node1.setCharno(56);
      node1.getSourceFileName();
      node0.isWith();
      Node node2 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      Node node3 = new Node(1, node0, node1, 118, 2);
      nodeArray0[1] = node3;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node1;
      nodeArray0[6] = node2;
      Node node4 = null;
//      try {
        node4 = new Node(0, nodeArray0, 49, 29);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      node0.toString(true, false, false);
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      node1.setOptionalArg(false);
      node0.mayMutateArguments();
      node1.getDirectives();
      node1.mayMutateGlobalStateOrThrow();
      node0.addChildToBack(node1);
      node1.getBooleanProp(57);
      node1.isVar();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = new Node(26, (-2336), (-2041));
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = new Node(15, node0, node0, 8, (-3630));
      node1.getDirectives();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      node0.getDirectives();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = new Node(0, 51, 48);
      Node node1 = new Node(53, node0, node0, node0, node0, (-631), 1250);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node.newNumber((double) 56, 46, 16);
      Node node2 = null;
//      try {
        node2 = new Node(Integer.MAX_VALUE, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2081, nodeArray0, 57, 2081);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.setType(32);
      node1.getCharno();
      Node node2 = new Node(37);
      node0.getFirstChild();
      node2.isUnscopedQualifiedName();
      node1.useSourceInfoIfMissingFrom(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPositionForTree(1);
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(101);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got TYPEOF
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      node0.setIsSyntheticBlock(true);
      node0.isVarArgs();
      node0.isAssign();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      // Undeclared exception!
//      try { 
        mockPrintWriter1.write((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.PrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isIf();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-2150), nodeArray0);
      node2.isExprResult();
      node2.getDirectives();
      node0.isFunction();
      node1.addChildrenToFront(node0);
      Node.mergeLineCharNo(57, 705);
      node1.isAnd();
      node0.setLength((-1629));
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = Node.newString(26, "", 26, 26);
      int int0 = 38;
      node0.putProp(38, "");
      node0.isFalse();
      node0.getLineno();
      // Undeclared exception!
//      try { 
        node0.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = new Node(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(57, node0, node0);
      node0.isEquivalentToShallow(node1);
      node0.getInputId();
      node1.removeFirstChild();
      node0.setSourceEncodedPositionForTree(51);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(54);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.BooleanType");
      node0.isAssignAdd();
      node0.isQuotedString();
      node0.setOptionalArg(false);
      node0.setIsSyntheticBlock(false);
      node0.setOptionalArg(true);
      // Undeclared exception!
//      try { 
        node0.clonePropsFrom(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Node has existing properties.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.putIntProp((-1078), (-2071));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags6.setMutatesThis();
      node0.getQualifiedName();
      Node node1 = new Node(32, (-524), 43);
      node1.isLabel();
      node1.setIsSyntheticBlock(false);
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id -1078
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.setCharno(110);
      node0.getSourceFileName();
      node0.isWith();
      Node.newNumber((double) 46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node node1 = Node.newNumber(0.0, 39, 112);
      node1.mayMutateArguments();
      Node node2 = null;
      Node node3 = null;
//      try {
        node3 = new Node(161, (Node) null, (Node) null, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isOnlyModifiesThisCall();
      node0.putProp((-1738), "");
      Node node1 = new Node(2924, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no next sibling.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = new Node(0, node0, node0, node0, 46, 0);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.setCharno(110);
      node0.getSourceFileName();
      node0.isWith();
      Node node1 = Node.newNumber((double) 46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node1.getQualifiedName();
      node1.isLabel();
      node1.setIsSyntheticBlock(false);
      node0.checkTreeEquals(node1);
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 46, 15);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      node0.isSyntheticBlock();
      node0.setType(1161);
      node0.getCharno();
      Node node1 = new Node(46);
      node0.getFirstChild();
      node1.toString(true, true, false);
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isNE();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      node0.toString(true, false, false);
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      node1.setOptionalArg(false);
      node0.mayMutateArguments();
      node1.getDirectives();
      node1.getBooleanProp(57);
      node1.isVar();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node(2, nodeArray0);
      node2.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node2.hasMoreThanOneChild();
      node0.isCase();
      node1.isUnscopedQualifiedName();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = Node.newString("", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getSideEffectFlags();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      templateTypeMapReplacer0.caseNumberType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1, true);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter1, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.EVAL_ERROR_TYPE;
      // Undeclared exception!
//      try { 
        jSTypeRegistry2.getNativeFunctionType(jSTypeNative0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // com.google.javascript.rhino.jstype.InstanceObjectType cannot be cast to com.google.javascript.rhino.jstype.FunctionType
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(845, nodeArray0, 57, 845);
      node0.setChangeTime(35);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-2150), nodeArray0);
      node2.mayMutateArguments();
      node2.getDirectives();
      node1.isSyntheticBlock();
      node1.addChildrenToFront(node0);
      Node.mergeLineCharNo(57, 705);
      node1.isAnd();
      node0.setLength((-1629));
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = Node.newString("-.F,,9K", (-410), 118);
      node1.setCharno((-205));
      node1.getSourceFileName();
      node0.isWith();
      Node node2 = Node.newNumber(0.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(154);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.hasMoreThanOneChild();
      node2.isCase();
      node1.isUnscopedQualifiedName();
      node2.isNumber();
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getProp(0);
      node0.setSourceEncodedPositionForTree(128);
      node0.isTrue();
      node0.putProp(1664, "");
      node0.isNE();
      InputId inputId0 = new InputId("");
      Node node1 = Node.newString("", 30, (-586));
      node1.isScript();
      node0.isQuotedString();
      node1.isContinue();
      Node node2 = Node.newNumber((double) 37, 2204, 489);
      node2.getInputId();
      Node node3 = Node.newNumber((double) 56);
      node3.setInputId(inputId0);
      node1.getInputId();
      node3.setInputId((InputId) null);
      node3.isParamList();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(9071065);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2081, nodeArray0, 57, 2081);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNumberType();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry1.getNativeFunctionType(jSTypeNative0);
      JSType[] jSTypeArray0 = new JSType[8];
      jSTypeArray0[0] = (JSType) functionType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = (JSType) functionType0;
      jSTypeArray0[3] = jSType0;
      jSTypeArray0[4] = jSType0;
      jSTypeArray0[5] = (JSType) functionType0;
      jSTypeArray0[6] = jSType0;
      jSTypeArray0[7] = (JSType) functionType0;
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      FunctionType functionType1 = jSTypeRegistry1.createFunctionType(jSType0, (List<JSType>) immutableList0);
      jSTypeRegistry1.createFunctionTypeWithNewThisType(functionType0, functionType1);
      ImmutableList.copyOf(jSTypeArray0);
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) functionType0, jSTypeArray0);
      ImmutableList<JSType> immutableList1 = templatizedType0.getTemplateTypes();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList1);
      node1.getIndexOfChild(node0);
      InputId inputId0 = new InputId((String) null);
      node1.setInputId(inputId0);
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = new Node(0, node0, node0, node0);
      node1.isLocalResultCall();
      node0.setChangeTime((-1508));
      node1.isFor();
      Node node2 = node1.cloneNode();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(2, nodeArray0);
      node0.mayMutateArguments();
      node0.getDirectives();
      node3.isSyntheticBlock();
      node1.setType(47);
      node1.getCharno();
      Node node4 = new Node((-2111));
      node2.getFirstChild();
      node0.isUnscopedQualifiedName();
      node1.isSetterDef();
      node1.addSuppression("XSu'M$h=");
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      int int0 = 985;
      Node node0 = Node.newString(985, ",uM^$GLkV_<y2zxC<");
      node0.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node0.isAssign();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      // Undeclared exception!
//      try { 
        mockPrintWriter1.write((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.PrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = Node.newString("-.F,,9K", (-410), 118);
      node1.setCharno((-205));
      node0.removeChildren();
      node1.getSourceFileName();
      node0.isWith();
      Node node2 = Node.newNumber(0.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(154);
      // Undeclared exception!
//      try { 
        node2.checkTreeTypeAwareEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node[] nodeArray0 = new Node[6];
      Node node0 = new Node((-2167));
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(47, node0, node0, node0);
      node0.putProp(48, node1);
      Node node2 = null;
//      try {
        node2 = new Node(472, node0, 39, (-357));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0, 39, 42);
      node1.setChangeTime(103);
      node0.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToTyped(node2);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node2;
      nodeArray0[5] = node1;
      nodeArray0[6] = node0;
      Node node3 = null;
//      try {
        node3 = new Node(15, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node.mergeLineCharNo(39, 1333);
      Node node0 = Node.newNumber((double) 161077);
      node0.getChangeTime();
      node0.getSourceOffset();
      Node node1 = new Node(57, node0, node0, node0);
      node0.isSyntheticBlock();
      node1.setType(12);
      node0.getCharno();
      node0.getFirstChild();
      node0.toString(false, true, true);
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = Node.newString("QMmh)rScQ(7%~");
      Node node1 = Node.newString("", 29, (-1140));
      Node node2 = new Node(1, node0, node1, node0);
      Node node3 = new Node(12, 30, 46);
      int int0 = 2542;
      Node node4 = null;
//      try {
        node4 = new Node((-1904), node1, node3, 57, 32);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getProp(0);
      node0.setSourceEncodedPositionForTree(128);
      node0.isTrue();
      node0.putProp(1664, "");
      node0.isNE();
      InputId inputId0 = new InputId("");
      inputId0.toString();
      node0.setSourceEncodedPositionForTree(128);
      Node node1 = new Node(40, node0, node0, node0, node0, (-2367), (-1908));
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      Node node0 = Node.newString(48, "    ");
      Node[] nodeArray0 = new Node[5];
      Node node1 = Node.newString(57, "    ", 46, 42);
      nodeArray0[0] = node1;
      nodeArray0[1] = null;
      Node node2 = Node.newString(48, "@q$./:?3xXcH");
      nodeArray0[2] = node2;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node3 = null;
//      try {
        node3 = new Node(39, nodeArray0, 2, 906);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2081, nodeArray0, 57, 2081);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      node0.addChildrenToFront(node0);
      Node.mergeLineCharNo(39, 2);
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.URI_ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0, (JSType) functionType0, (JSType) functionType0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.getStaticSourceFile();
      // Undeclared exception!
//      try { 
        node0.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = Node.newString(48, "    ");
      Node node1 = null;
      int int0 = (-1510);
      node0.setJSType((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-182));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 48
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0, 39, 42);
      Node node2 = new Node(0, node1, 37, 1141);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node node3 = Node.newNumber(0.0, 2214, 2521);
      Node node4 = new Node(0, node2, node3, node3, node2);
      node3.getInputId();
      node4.isNew();
      node3.setCharno(15);
      node1.getSourceFileName();
      node1.isWith();
      Node.newNumber((double) 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node1.children();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = Node.newString(26, "", 26, 26);
      node0.removeFirstChild();
      node0.setSourceEncodedPositionForTree(2576);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(26);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NOT
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      node0.mayMutateArguments();
      node1.getDirectives();
      node0.isSyntheticBlock();
      node0.setType(42);
      node0.getCharno();
      Node node2 = new Node(57, node1);
      Node node3 = node2.getFirstChild();
      node3.addChildToBack(node0);
      node2.isUnscopedQualifiedName();
      // Undeclared exception!
//      try { 
        node2.toString(false, true, false);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 57
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newString("", (-1949), (-1949));
      Node node1 = new Node(0, node0, node0, node0);
      nodeArray0[0] = node1;
      Node node2 = new Node(0, 709, 0);
      // Undeclared exception!
//      try { 
        node1.getChildBefore(node1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      node0.mayMutateArguments();
      node1.getDirectives();
      node0.isSyntheticBlock();
      node0.setType(42);
      node0.getCharno();
      Node node2 = new Node(2);
      node2.getFirstChild();
      node0.toString(true, false, false);
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = new Node(108, 0, 108);
      Node node1 = new Node(0, node0, node0, node0, node0, 39, 42);
      Node node2 = new Node(0, node1, 37, 1141);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.isVarArgs();
      Node node3 = Node.newNumber(0.0, 2214, 2521);
      Node node4 = new Node(0, node2, node3, node3, node2);
      node3.getInputId();
      node4.isNew();
      node3.setCharno(15);
      node1.getSourceFileName();
      node1.isWith();
      Node.newNumber((double) 32);
      node0.wasEmptyNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.getAncestors();
      node3.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getProp(0);
      node0.setSourceEncodedPositionForTree(128);
      node0.isSetterDef();
      node0.putProp(1664, "");
      node0.isNE();
      InputId inputId0 = new InputId("");
      inputId0.toString();
      node0.setSourceEncodedPositionForTree(128);
      Node node1 = new Node(40, node0, node0, node0, node0, (-2367), (-1908));
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(47, nodeArray0, 49, 46);
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node node0 = new Node((-773), 2487, 27591);
      node0.mayMutateGlobalStateOrThrow();
      String string0 = "S1#^EQZZb`N8`/OE";
      int int0 = (-2123);
      Node node1 = Node.newString("S1#^EQZZb`N8`/OE", 2, 36);
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      String string0 = "node is not a child";
      Node node0 = Node.newString("node is not a child", 256, 256);
      // Undeclared exception!
//      try { 
        node0.checkTreeEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setCharno(110);
      node0.getSourceFileName();
      node0.isWith();
      Node node1 = Node.newNumber((double) 46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.getAncestors();
      node1.hasMoreThanOneChild();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node.mergeLineCharNo(39, 1333);
      Node node0 = Node.newNumber((double) 161077);
      node0.getChangeTime();
      node0.getSourceOffset();
      Node node1 = new Node(8, node0, node0, node0, 48, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(57);
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.getAncestors();
      node0.hasMoreThanOneChild();
      // Undeclared exception!
//      try { 
        node0.removeChild(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = Node.newString("1hc", (-2309), 1273);
      Node node1 = new Node(1273, node0, node0, node0);
      Node node2 = node1.srcref(node0);
      node1.getLength();
      node0.setLineno((-2309));
      node1.isQualifiedName();
      node0.children();
      Node node3 = node2.useSourceInfoFromForTree(node1);
      // Undeclared exception!
//      try { 
        node3.removeChild(node1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = Node.newString("-.F,,9K", (-410), 118);
      node1.setCharno((-205));
      node1.getSourceFileName();
      node0.isWith();
      Node node2 = Node.newNumber(0.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(154);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.getAncestors();
      node0.hasMoreThanOneChild();
      node2.isCase();
      node2.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      node0.mayMutateArguments();
      node1.getDirectives();
      node0.isSyntheticBlock();
      node0.setType(42);
      node0.getCharno();
      Node node2 = new Node(2);
      node2.getFirstChild();
      node2.isUnscopedQualifiedName();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = new Node(0, node0, node0, node0);
      node1.isLocalResultCall();
      node0.setChangeTime((-1508));
      node1.isFor();
      Node node2 = node1.cloneNode();
      node0.getDirectives();
      node2.setType(39);
      node0.getCharno();
      Node node3 = node0.detachFromParent();
      node1.srcrefTree(node3);
      node1.children();
      node0.getString();
      node3.isDefaultCase();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = Node.newString("-.F,,9K", (-410), 118);
      node1.setCharno((-205));
      node0.removeChildren();
      node1.getSourceFileName();
      node0.isWith();
      Node node2 = Node.newNumber(0.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(154);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.getAncestors();
      node0.hasMoreThanOneChild();
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = new Node(108, 0, 108);
      Node node1 = new Node(0, node0, node0, node0, node0, 39, 42);
      Node node2 = new Node(0, node1, 37, 1141);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node node3 = Node.newNumber(0.0, 2214, 2521);
      Node node4 = new Node(0, node2, node3, node3, node2);
      node4.setIsSyntheticBlock(true);
      node3.getInputId();
      node4.isNew();
      node3.setCharno(15);
      node1.getSourceFileName();
      node1.isWith();
      Node.newNumber((double) 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.getAncestors();
      node3.hasMoreThanOneChild();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("", 1612, 910);
      node0.getStaticSourceFile();
      node0.siblings();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isNumber();
      node0.isString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Node.newString("can't use .skipNulls() with maps", 36, 16);
      JSType jSType0 = null;
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = Node.newString("", (-1949), (-1949));
      Node node1 = new Node(0, node0, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = Node.newString("", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getSourceOffset();
      Node node1 = new Node(4, node0, node0, node0, node0);
      node0.isQuotedString();
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      Node.mergeLineCharNo(51, (-3818));
      Node node1 = Node.newNumber((double) 12);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNumberType();
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      jSTypeArray0[4] = jSType0;
      jSTypeArray0[5] = jSType0;
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node2 = Node.newNumber((double) 57, 2826, 592);
      node1.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      Node node0 = Node.newString("", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNumberType();
      jSTypeArray0[0] = jSType0;
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node0, jSTypeArray0[0]);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      Set<String> set0 = enumElementType0.getPropertyNames();
      node0.setDirectives(set0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.getAncestors();
      node0.getIndexOfChild(node1);
      node1.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node1;
      nodeArray0[7] = node1;
      nodeArray0[8] = node1;
      Node[] nodeArray1 = new Node[9];
      Node node2 = null;
//      try {
        node2 = new Node(40, nodeArray1, 4095, 49);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      Node.newString(1770, "");
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2081, nodeArray0, 57, 2081);
      Node node1 = Node.newString("<u}p");
      node0.addChildrenToFront(node1);
      Node node2 = new Node(49);
      node2.children();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-1443), nodeArray0);
      node0.getJSDocInfo();
      Node node1 = null;
      node0.getCharno();
      node0.setLineno(1204);
      // Undeclared exception!
//      try { 
        node0.isEquivalentTo((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node node0 = Node.newString("/$ZHaU!I!:yuF%`2->", (-2), 47);
      node0.getAncestors();
      Node node1 = new Node((-3150), node0, node0, 61440, 38);
      node1.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newString("", (-1949), (-1949));
      Node node1 = new Node(0, node0, node0, node0);
      nodeArray0[0] = node1;
      node0.setCharno(110);
      node1.getSourceFileName();
      node1.isWith();
      Node node2 = Node.newNumber((double) 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node2.getAncestors();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToTyped(node1);
      node1.getDirectives();
      node0.setType(42);
      node0.getCharno();
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      Node node0 = new Node(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(57, node0, node0);
      node1.getInputId();
      node0.putProp(46, (Object) null);
      node1.isFalse();
      node0.getLineno();
      // Undeclared exception!
//      try { 
        node0.removeChild(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      node0.isQuotedString();
      Node node1 = Node.newString("In(");
      node1.setOptionalArg(false);
      node1.setIsSyntheticBlock(false);
      node0.clonePropsFrom(node1);
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      Node node0 = new Node(108, 0, 108);
      Node node1 = new Node(0, node0, node0, node0, node0, 39, 42);
      Node node2 = new Node(0, node1, 37, 1141);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node node3 = Node.newNumber(0.0, 2214, 2521);
      Node node4 = new Node(0, node2, node3, node3, node2);
      node3.getInputId();
      node4.isNew();
      node3.setCharno(15);
      node1.setIsSyntheticBlock(false);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node4);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      Node.mergeLineCharNo(51, (-3818));
      Node node1 = Node.newNumber((double) 12);
      node0.getSourceOffset();
      Node node2 = new Node(40, node1, node0, node0, node1);
      node2.isQuotedString();
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      Node node0 = Node.newString((-523), "hJ{'?%[[Bagjzh ");
      node0.setChangeTime((-1796));
      node0.isFor();
      Node node1 = node0.cloneNode();
      node0.getDirectives();
      node0.setType(36);
      node1.getCharno();
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      Node node0 = new Node(26, (-2336), (-2041));
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NOT
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      Node node0 = Node.newString((-3081), "", (-1908), 0);
      node0.setSourceEncodedPositionForTree((-1239));
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags((-1908));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -3081
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      Node.mergeLineCharNo(39, 1333);
      Node node0 = Node.newNumber((double) 161077);
      node0.getChangeTime();
      node0.getSourceOffset();
      Node node1 = new Node(57, node0, node0, node0);
      node1.isTypeOf();
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      Node node0 = new Node(0, (-3081), 0);
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isString();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags3);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.wasEmptyNode();
      Node node1 = Node.newString(9, "d5@m'5[}i@]Vhe");
      Node node2 = new Node(118, node0, node1, (-3630), 43);
      // Undeclared exception!
//      try { 
        node1.addChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.wasEmptyNode();
      Node node1 = Node.newString(108, ")");
      node1.useSourceInfoFrom(node0);
      Node node2 = new Node(49, node1, node1, 15, 56);
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2081, nodeArray0, 57, 2081);
      Node node1 = new Node(49);
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newString("", (-1949), (-1949));
      Node node1 = new Node(0, node0, node0, node0);
      nodeArray0[0] = node1;
      Node node2 = new Node(0, 709, 0);
      Node node3 = new Node(0, node1, node2, node1, node1);
      nodeArray0[1] = node3;
      Node.newString(51, "StringNode: str is null");
      Node.newNumber((double) 57);
      Node node4 = Node.newString((-4349), "", 46, 1527);
      node3.isVar();
      Node node5 = null;
//      try {
        node5 = new Node(53, node1, node2, node4, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node.mergeLineCharNo(0, 1333);
      Node node0 = Node.newNumber((double) 1333);
      node0.getSourceOffset();
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      node1.isEquivalentTo(node1, true, true, false);
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node1;
      Node node2 = null;
//      try {
        node2 = new Node((-644), nodeArray0, 0, 54);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test701()  throws Throwable  {
      Node node0 = Node.newString(0, "-.F,,9K", 0, 0);
      Node node1 = new Node(0, node0, node0, node0);
      node1.isLocalResultCall();
      node1.getJsDocBuilderForNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("incrdecr", true);
      node0.isEquivalentTo(node1);
      node1.setSourceEncodedPositionForTree(1671);
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(43);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test702()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags((-55));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test703()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-1443), nodeArray0);
      node0.getJSDocInfo();
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.isEquivalentTo((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test704()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.putIntProp((-1078), (-2079));
      Node node1 = Node.newNumber(2233.04718, 0, 49);
      node1.mayMutateArguments();
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test705()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isFunction();
      node0.setChangeTime(1136);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node1.getDirectives();
      node0.setType(42);
      node0.getCharno();
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test706()  throws Throwable  {
      int int0 = 115;
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(115, (Node) null, 115, 115);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test707()  throws Throwable  {
      int int0 = 4095;
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(0, (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test708()  throws Throwable  {
      Node node0 = Node.newString(0, "ALL_TYPE", 2081, 45);
      boolean boolean0 = node0.isVar();
      assertEquals(0, node0.getType());
      assertFalse(boolean0);
      assertEquals(8523821, node0.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test709()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(931, node0, 50, 869);
      node1.isQuotedString();
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test710()  throws Throwable  {
      Node node0 = new Node(0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(47, nodeArray0, (-1338), 37);
      boolean boolean0 = node0.isEquivalentTo(node1);
      assertTrue(node1.isRegExp());
      assertEquals((-1), node1.getLineno());
      assertEquals(0, node0.getType());
      assertFalse(boolean0);
      assertEquals((-1), node0.getCharno());
  }

  @Test(timeout = 4000)
  public void test711()  throws Throwable  {
      Node node0 = Node.newString("", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNumberType();
      jSTypeArray0[0] = jSType0;
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      int int0 = node0.getIndexOfChild(node1);
      assertEquals(0, node0.getSourcePosition());
      assertTrue(node1.isParamList());
      assertEquals((-1), int0);
      assertTrue(node0.isString());
  }

  @Test(timeout = 4000)
  public void test712()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[9];
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-355), nodeArray0);
      Node node1 = new Node(2438, node0, node0, node0, node0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("", node1, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test713()  throws Throwable  {
      Node node0 = Node.newString(1553, "node is not a child", 42, 42);
      node0.siblings();
      node0.getSourceOffset();
      node0.setType(1553);
      double double0 = (-1.1659368);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createOptionalType((JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test714()  throws Throwable  {
      int int0 = 127;
      String string0 = "change_time";
      Node node0 = Node.newString(127, "change_time");
      Node node1 = new Node(127, node0, node0, 57, 827);
      Node node2 = null;
//      try {
        node2 = new Node(2083, node1, node1, node0, node0, 3000, (-536870912));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test715()  throws Throwable  {
      Node node0 = new Node(0);
      node0.wasEmptyNode();
      Node node1 = Node.newString(108, ") ");
      Node node2 = new Node(49, node1, node1, 0, 56);
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test716()  throws Throwable  {
      int int0 = 111;
      Node.newString(0, "");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = Node.newString("Not declared as a constructor");
      node0.getJSType();
      jSTypeArray0[0] = null;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test717()  throws Throwable  {
      int int0 = 0;
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(0, (Node) null, (Node) null, (Node) null, 783, 33);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test718()  throws Throwable  {
      Node node0 = new Node((-3815));
      Node node1 = new Node(0, node0, node0, node0);
      String string0 = null;
      // Undeclared exception!
//      try { 
        Node.newString((-916), (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test719()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      Node node0 = Node.newNumber(629.631, (-699), 2776);
      node0.isNoSideEffectsCall();
      Node node1 = new Node((-699), node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node((-699), node1, node0, node0, node1, 32, (-563));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test720()  throws Throwable  {
      Node node0 = new Node(108, 0, 108);
      Node node1 = new Node(0, node0, node0, node0, node0, 39, 42);
      Node node2 = new Node(0, node1, 37, 1141);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node node3 = Node.newNumber(0.0, 2214, 2521);
      Node node4 = new Node(0, node2, node3, node3, node2);
      node3.getInputId();
      node4.isNew();
      node3.setCharno(15);
      node1.getSourceFileName();
      node1.isWith();
      Node.newNumber((double) 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      assertFalse(node_SideEffectFlags3.areAllFlagsSet());
      
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.getAncestors();
      node3.hasMoreThanOneChild();
      assertEquals(15, node3.getCharno());
  }

  @Test(timeout = 4000)
  public void test721()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[6];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      jSTypeArray0[0] = (JSType) templateType0;
      TemplateType templateType1 = JSType.toMaybeTemplateType(jSTypeArray0[0]);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) templateType0, (JSType) templateType0, jSTypeArray0[0], (JSType) templateType0, (JSType) templateType1, (JSType) templateType0);
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) templateType0, immutableList0);
      jSTypeArray0[1] = (JSType) templatizedType0;
      JSType jSType0 = jSTypeRegistry0.createOptionalNullableType(templatizedType0);
      jSTypeArray0[2] = jSType0;
      TemplateTypeMap templateTypeMap0 = templatizedType0.getTemplateTypeMap();
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      JSType jSType1 = templateTypeMapReplacer0.caseBooleanType();
      jSTypeArray0[3] = jSType1;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      jSTypeArray0[4] = (JSType) objectType0;
      JSType jSType2 = templateTypeMapReplacer0.caseNullType();
      jSTypeArray0[5] = jSType2;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(5930, node0, node0, 29, 1);
      Node node2 = new Node((-1780), node1, node1, node1);
      node2.getBooleanProp(0);
      assertEquals((-1780), node2.getType());
      assertTrue(node0.isParamList());
      assertEquals(5930, node1.getType());
      assertEquals(6, node0.getChildCount());
      assertEquals(118785, node1.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test722()  throws Throwable  {
      int int0 = 1324;
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 65535, 65535);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test723()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[4];
      String string0 = "Q>}`d;q>pN)tO";
      Node.newNumber((-4854.3375), 2795, 2795);
      // Undeclared exception!
//      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "76kfz7jE~`o>t");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test724()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node((-23), (Node) null, (Node) null, (-23), (-23));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test725()  throws Throwable  {
      Node node0 = Node.newString("QMmh)rScQ(7%~");
      Node node1 = Node.newString("QMmh)rScQ(7%~", 4095, 4095);
      // Undeclared exception!
//      try { 
        node0.replaceChild(node1, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test726()  throws Throwable  {
      int int0 = (-1625);
      Node[] nodeArray0 = new Node[9];
      String string0 = "";
      Node node0 = Node.newString("", (-825), 114);
      Node node1 = new Node((-825), node0, node0);
      Node node2 = new Node(0, node1);
      Node node3 = null;
//      try {
        node3 = new Node((-1625), node2, node2, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test727()  throws Throwable  {
      Node node0 = Node.newString(26, "", (-1908), (-1908));
      node0.setSourceEncodedPositionForTree(2576);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags((-1908));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NOT
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test728()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[0];
      int int1 = 56;
      Node node0 = new Node(0, nodeArray0, 0, 56);
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test729()  throws Throwable  {
      Node node0 = null;
//      try {
        node0 = new Node(2937, (Node[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test730()  throws Throwable  {
      String string0 = "    ";
      Node node0 = Node.newString(48, "    ");
      Node node1 = null;
      node0.setSourceEncodedPositionForTree((-1510));
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test731()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newString("", (-1949), (-1949));
      Node node1 = new Node(0, node0, node0, node0);
      nodeArray0[0] = node1;
      Node node2 = new Node(0, 709, 0);
      Node node3 = new Node(0, node1, node2, node1, node1);
      nodeArray0[1] = node3;
      Node node4 = Node.newNumber((double) 57);
      nodeArray0[2] = node4;
      Node node5 = null;
//      try {
        node5 = new Node(0, nodeArray0, 91, 1110);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test732()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      JSTypeNative jSTypeNative0 = JSTypeNative.EVAL_ERROR_FUNCTION_TYPE;
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[7];
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative0;
      jSTypeNativeArray0[2] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative1;
      jSTypeNativeArray0[4] = jSTypeNative0;
      jSTypeNativeArray0[5] = jSTypeNative0;
      JSTypeNative jSTypeNative2 = JSTypeNative.ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[6] = jSTypeNative2;
      jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      FunctionType functionType0 = JSType.toMaybeFunctionType(jSType0);
      jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      jSTypeRegistry0.getObjectIndexKey();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node node1 = Node.newString("Object#Element");
      // Undeclared exception!
//      try { 
        node1.addChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test733()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.isAssignAdd();
      Node node1 = null;
      node0.isQuotedString();
      Node node2 = null;
//      try {
        node2 = new Node(33, (Node[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test734()  throws Throwable  {
      String string0 = "The new child node already has a parent.";
      Node node0 = Node.newString((-3333), "The new child node already has a parent.", 0, 49);
      Node node1 = new Node((-3333), node0, node0, node0);
      int int0 = 0;
      // Undeclared exception!
//      try { 
        node1.addChildToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test735()  throws Throwable  {
      // Undeclared exception!
//      try { 
        Node.newString((String) null, (-431), 0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test736()  throws Throwable  {
      Node.mergeLineCharNo(0, 1333);
      Node node0 = Node.newNumber((double) 1333);
      node0.getSourceOffset();
      Node node1 = new Node(0, node0, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test737()  throws Throwable  {
      int int0 = 21;
      int int1 = (-1545);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_TYPE;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // com.google.javascript.rhino.jstype.NumberType cannot be cast to com.google.javascript.rhino.jstype.ObjectType
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test738()  throws Throwable  {
      Node node0 = new Node(0, (-3081), 0);
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags3);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test739()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.addSuppression("var_args_name");
      jSDocInfo0.getSourceName();
      jSDocInfo0.getAssociatedNode();
      boolean boolean0 = false;
      jSDocInfo0.getSuppressions();
      // Undeclared exception!
//      try { 
        Node.newString(0, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }
}
