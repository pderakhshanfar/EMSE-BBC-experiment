/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 19:34:37 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Predicate;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.NoObjectType;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.StringType;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.common.collect.ImmutableSet");
      Node node0 = Node.newString("unknown");
      Node node1 = new Node((-2805), node0, 0, 12);
      Node node2 = new Node(22, node1, node1);
      Node node3 = node2.srcref(node0);
      node3.isSetterDef();
      node2.useSourceInfoIfMissingFrom(node1);
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(64, 134, 12288);
      node0.getIntProp(64);
      Node node1 = new Node(56, node0, 57, 86);
      node0.isArrayLit();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString("A6Cwq\"g~Y]\"");
      Node node2 = new Node(50, node1, 0, (-3456));
      node0.clonePropsFrom(node2);
      Node node3 = Node.newNumber((-1.0), 112, 31);
      node0.isEquivalentTo(node3);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = new Node(87);
      Node node1 = new Node(12, node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isNE();
      node1.putIntProp(43, 45);
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = new Node(113, 113, 113);
      node0.isAssign();
      Node node1 = new Node(132, node0, node0, node0, node0, 0, 98);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = Node.newString(0, "zVV3s.BoO'u_VcO", (-2651), 1610612736);
      node0.isGetProp();
      node0.setOptionalArg(false);
      Node node1 = Node.newString("]yE/_+emk^p", 0, 32);
      Node node2 = new Node(31, node1, node0, node1, node0);
      Node.newString("@n1\u0006W)x]=d3j", 145, 0);
      node2.getAncestor(0);
      node2.getStaticSourceFile();
      node1.setString("]yE/_+emk^p");
      Node.newNumber(0.0, 27, (-1047));
      node0.isEquivalentTo(node2, false, false, false);
      // Undeclared exception!
//      try { 
        node0.addChildrenToFront(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte)68;
      byteArray0[3] = (byte)83;
      byteArray0[4] = (byte)105;
      byteArray0[5] = (byte) (-52);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(102, (-1300), 130);
      Node node1 = new Node((-2915), node0, node0, node0, node0, 4095, (-1300));
      node1.isAssign();
      node1.getSourceOffset();
      Node node2 = Node.newString(16, "string");
      node1.isCase();
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node2.getType();
      node3.setLineno((-622));
      node0.isNE();
      node0.getChangeTime();
      // Undeclared exception!
//      try { 
        node2.addChildToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.isDefaultCase();
      node0.isFor();
      node0.isBreak();
      Node node1 = Node.newString("tmjR+.Ft-91>y*T4", 52, 55);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      node0.setType(119);
      node0.type = 100;
      node0.isEquivalentTo(node0, true, true, true);
      node0.isAssign();
      node0.isOr();
      node0.isOnlyModifiesThisCall();
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setChangeTime(153);
      node0.putIntProp(153, 153);
      Node node1 = new Node(153, node0);
      node1.isEquivalentTo(node0, false, false, true);
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString(149, "Y\"C");
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.addChildToFront(node0);
      node0.isAdd();
      Node node1 = node0.getFirstChild();
      // Undeclared exception!
//      try { 
        node1.checkTreeEqualsImpl(node0);
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = Node.newString("_p*rgN8k96X");
      node0.toString();
      node0.putIntProp(42, 42);
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(155, node0);
      node1.getIndexOfChild(node0);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = Node.newString("INHERITED");
      Node node1 = new Node(101);
      node1.copyInformationFromForTree(node0);
      node0.addChildrenToBack(node1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(110, (-631), (-631));
      Node node1 = new Node((-1852));
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer1);
      node0.isInstanceOf();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node1.getIntProp((-1941));
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(52, 1, 512);
      Node node2 = new Node(53, node1, node1, node1);
      Node node3 = node0.clonePropsFrom(node2);
      node1.isNE();
      Node node4 = new Node(323, node2, node3, node3, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(63);
      node0.setChangeTime((-1581));
      node0.putIntProp(93, 93);
      node0.isFalse();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newString(".");
      node0.addChildrenToBack(node0);
      node0.isReturn();
      // Undeclared exception!
      node0.getAncestor(32768);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = Node.newString(" : ");
      node0.isArrayLit();
      Node node1 = new Node(42, node0, node0, node0, node0, 8, 4095);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = node2.srcref(node1);
      node1.checkTreeEquals(node3);
      node2.isEquivalentTo(node3, false, true, true);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node(64, 134, 12288);
      node0.isReturn();
      node0.isName();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isCast();
      node0.putIntProp(117, 32);
      node0.isIn();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isBreak();
      node0.isUnscopedQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(81);
      Node node1 = new Node(40, node0, node0, node0, node0, 37, 31);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isQualifiedName();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = Node.newString("29)y\"`=n[X.tWao6");
      Node node1 = Node.newString("29)y\"`=n[X.tWao6", 2333, 595);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isNE();
      Node node3 = new Node(8, node0, node2, node2, node1);
      node3.getChildBefore(node1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(52);
      Node node1 = new Node(47, 49, (-667));
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = new Node(64, 134, 12288);
      node0.getIntProp(64);
      Node node1 = new Node(56, node0, 57, 86);
      node1.isUnscopedQualifiedName();
      Node.mergeLineCharNo(5696, 38);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(64, 134, 12288);
      node0.getIntProp(64);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = new Node(1875, node0, node0, node0, node0, 32, 972);
      node0.addChildrenToBack(node1);
      // Undeclared exception!
//      try { 
        node0.addChildToBack(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = new Node(42, (-3879), (-1));
      Node node1 = new Node(8199, node0, node0, node0);
      node1.isDefaultCase();
      node0.isNew();
      node0.isThrow();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(124);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)98;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte) (-16);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.setJSDocInfo((JSDocInfo) null);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[18];
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, false, jSTypeArray0);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, jSTypeArray0[0]);
      node0.cloneTree();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6g[(tXYehvt6");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte) (-13);
      byteArray0[3] = (byte)51;
      byteArray0[4] = (byte) (-67);
      byteArray0[5] = (byte)58;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((double) 103, (-2636), 103);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(103, node0, 47, 30);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node0.removeChildren();
      Node node3 = node0.setJSDocInfo((JSDocInfo) null);
      Node node4 = new Node((-2636), node1, node1, 31, 8);
      node4.getSourceOffset();
      node4.isSetterDef();
      node0.addChildToFront(node4);
      Node.extractLineno(51);
      node3.isComma();
      node1.isBreak();
      Node node5 = null;
//      try {
        node5 = new Node(31, node3, node2, (Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType((String) null);
      JSType[] jSTypeArray0 = new JSType[8];
      jSTypeArray0[0] = (JSType) templateType0;
      ObjectType objectType0 = ObjectType.cast(jSTypeArray0[0]);
      TemplateType templateType1 = JSType.toMaybeTemplateType(jSTypeArray0[0]);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0, (JSType) templateType1, jSTypeArray0[0], (JSType) objectType0, (JSType) objectType0, (JSType) templateType0, (JSType) templateType1, jSTypeArray0[0]);
      JSType jSType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs((ObjectType) templateType0, (JSType) templateType0, (List<JSType>) immutableList0);
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = (JSType) templateType0;
      jSTypeArray0[3] = (JSType) templateType0;
      jSTypeArray0[4] = (JSType) templateType0;
      jSTypeArray0[5] = (JSType) templateType0;
      jSTypeArray0[6] = (JSType) templateType0;
      jSTypeArray0[7] = (JSType) templateType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.setJSType(objectType0);
      node0.toStringTree();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(13);
      node0.isStringKey();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString((-1034), "*GP+QjarihQ0", 118, 57);
      node0.getChangeTime();
      Node node1 = new Node(122, node0, node0, (-1034), 50);
      node0.isSyntheticBlock();
      node0.addSuppression("g");
      node1.setLineno(55);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.isGetElem();
      node0.setSourceEncodedPositionForTree(4095);
      node1.getChangeTime();
      node0.isInstanceOf();
      node1.isAssign();
      node0.isAssign();
      node2.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.toString(false, true, true);
      node0.isSwitch();
      Node node1 = Node.newString(36, "IF");
      Node node2 = new Node(34, node1, node0, 39, 47);
      node0.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = new Node(114, 7, 7);
      node0.getJsDocBuilderForNode();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte) (-99);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node(119, node0);
      node0.copyInformationFrom(node1);
      String string0 = "@5$PptYVKy49WM:e<gd";
      File file0 = MockFile.createTempFile("@5$PptYVKy49WM:e<gd", "@5$PptYVKy49WM:e<gd");
      String string1 = "ASSIGN_BITXOR";
      MockFile mockFile0 = new MockFile(file0, "ASSIGN_BITXOR");
//      try { 
        MockFile.createTempFile("@5$PptYVKy49WM:e<gd", "@5$PptYVKy49WM:e<gd", (File) mockFile0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.isDefaultCase();
      node0.isFor();
      Node node1 = new Node(115, node0, node0, node0);
      node1.siblings();
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(25);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node node1 = new Node(0, node0, node0);
      node0.getAncestors();
      node0.isSetterDef();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newString("J~#=R8)imZ\"+:&#2", 597, 597);
      node0.addChildToBack(node0);
      // Undeclared exception!
//      try { 
        node0.cloneTree();
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(21, 21, 21);
      node0.isAdd();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(101);
      Node node1 = new Node(145, node0, node0);
      node0.useSourceInfoFrom(node1);
      Node node2 = null;
//      try {
        node2 = new Node(101, node0, 524, 101);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, 36, 65536);
      node1.isFromExterns();
      node0.toStringTree();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isReturn();
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(37, node0, node0, node0, node0, 39, 47);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newNumber((double) 49);
      node2.srcref(node1);
      Node node4 = node0.srcref(node3);
      node1.checkTreeEquals(node2);
      node1.isEquivalentTo(node2, false, false, false);
      node4.isExprResult();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = new Node(103, 108, 108);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node((-2867), nodeArray0);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newString("Object#Key");
      node0.useSourceInfoFromForTree(node1);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      NoObjectType noObjectType0 = (NoObjectType)modificationVisitor0.caseNoObjectType();
      Node node2 = new Node(39, node0, 37, 30);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry1.createTemplatizedType((ObjectType) noObjectType0, (Map<TemplateType, JSType>) hashMap0);
      ImmutableList<JSType> immutableList0 = templatizedType0.getTemplateTypes();
      hashMap0.put((TemplateType) null, (JSType) null);
      Node node3 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.isEquivalentToTyped(node2);
      node0.getProp((-1880));
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(51, 520, 491);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      String string0 = "^@`";
      Node node1 = Node.newString((-335), "^@`");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.isOptionalArg();
      // Undeclared exception!
//      try { 
        node2.getChildBefore(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(39);
      node0.isDec();
      // Undeclared exception!
//      try { 
        node0.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node((-1808), (-1808), 154);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isOnlyModifiesThisCall();
      node0.detachChildren();
      node0.getQualifiedName();
      node0.getIntProp(154);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(721, nodeArray0);
      node0.useSourceInfoFrom(node1);
      // Undeclared exception!
//      try { 
        node0.setString("GbE8N");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -1808
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newString("0PU");
      Node node1 = Node.newNumber(480.15846, 1, 2);
      Node node2 = new Node(39, node1, node1, node0, (-1634), 52);
      node0.isReturn();
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isReturn();
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(37, node0, node0, node0, node0, 39, 47);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newNumber((double) 49);
      node0.srcref(node3);
      node1.checkTreeEquals(node2);
      node2.copyInformationFrom(node3);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(21, 116, 116);
      Node node1 = node0.cloneNode();
      node0.copyInformationFrom(node1);
      Node node2 = Node.newNumber((double) 8, 134, 57);
      node2.putBooleanProp(38, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node3 = Node.newString((-419), "yJ'_IR{q");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.addChildToBack(node3);
      node0.isDefaultCase();
      node3.siblings();
      node0.isArrayLit();
      // Undeclared exception!
//      try { 
        node3.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -419
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.toStringTree();
      node0.isDo();
      Node node1 = new Node(154, (-4566), (-4566));
      node0.clonePropsFrom(node1);
      node0.isEquivalentTo(node0, false, false, false);
      node0.isAssign();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isReturn();
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(37, node0, node0, node0, node0, 39, 47);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newNumber((double) 49);
      node0.srcref(node3);
      node1.checkTreeEquals(node2);
      node2.setSideEffectFlags(0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(136);
      Node node1 = new Node(31, node0, node0, node0);
      Node node2 = new Node(53, 0, 46);
      Node node3 = new Node((-784));
      Node node4 = new Node(55, node3, (-989), 2933);
      node4.getSideEffectFlags();
      node4.removeFirstChild();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      Stack<Node> stack0 = new Stack<Node>();
      Node node1 = new Node(39, node0, node0, node0, 2, (-2449));
      node1.mayMutateGlobalStateOrThrow();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newString("cO");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node1 = new Node(112, node0, node0, 12, 14);
      node1.isQualifiedName();
      node0.setString("S/9yVaY+hJ");
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString("{a[dX5`j[)a");
      node0.isReturn();
      node0.isArrayLit();
      Node node1 = Node.newNumber((double) 52);
      Node node2 = new Node(153, node0, node0, node0, node1, 1, 35);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = node3.srcref(node1);
      node4.checkTreeEquals(node2);
      Node node5 = new Node((-1988), 41, (-1891));
      node0.isEquivalentTo(node5, false, false, true);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newString(149, "Y\"C");
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.spliterator();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.addChildToFront(node0);
      node0.isSetterDef();
      node0.toString();
      MockFile mockFile0 = new MockFile("CONST Y\"C");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, false);
      // Undeclared exception!
      node0.appendStringTree(mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(4, nodeArray0);
      node0.copyInformationFrom(node1);
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(25);
      node0.putIntProp(54, 25);
      node0.toStringTree();
      node0.isNot();
      Node.newString(29, "MOD [slash_v: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(108);
      node0.toStringTree();
      node0.isFor();
      node0.toStringTree();
      Node node1 = new Node(32, node0);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString((-457), "4Gw%QOY.G");
      Node node1 = new Node(105, node0, 30, 16);
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node(130);
      node0.isNoSideEffectsCall();
      node0.getQualifiedName();
      Node node1 = node0.getLastSibling();
      Node.newString("jsdoc_info");
      node1.setIsSyntheticBlock(false);
      node0.isUnscopedQualifiedName();
//      try { 
        node1.setString(",; ixy#D_`");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // EXPR_RESULT is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString("TgK^W~zIa;481<");
      Node node1 = new Node(31, node0, node0, node0, 0, 40);
      node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DELPROP
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = new Node(471, 471, (-1024));
      node0.isDo();
      Node node1 = Node.newString(".", 131072, (-4727));
      node0.isEquivalentTo(node1, true, true, true);
      node0.isAssign();
      node1.setLineno(2505);
      node0.isInstanceOf();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.getProp(131072);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString(".");
      node0.setChangeTime(44);
      Node.newString(".", 48, 55);
      node0.putIntProp(44, 44);
      node0.getIntProp(44);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = new Node(32, node1, node1, node1);
      Node node3 = new Node(38, 16, 1);
      Node.newString(38, ".");
      Node node4 = Node.newString(38, "r+f]@X4RO#00>kF}", 56, 31);
      node4.getQualifiedName();
      node4.isCase();
      Node node5 = new Node(2);
      Node node6 = node2.removeChildren();
      node6.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2087, nodeArray0, 2087, 2087);
      node0.children();
      Node node1 = new Node(2087, node0);
      Node node2 = new Node(2087, node1, node1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isEquivalentTo(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      // Undeclared exception!
//      try { 
        node1.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 2087
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      node0.isEquivalentTo(node0, false, true, false);
      node0.isFor();
      Node node1 = Node.newString("Number node not created with Node.newNumber");
      Node node2 = new Node(155, node0, node0, node0, node1);
      node0.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newString(".");
      node0.putIntProp(34, 34);
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 34
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[0];
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, true, jSTypeArray0);
      modificationVisitor0.caseFunctionType(functionType0);
      Node node0 = new Node(108, 102, (-347));
      Node node1 = new Node(0, node0, node0, node0, 43, 119);
      node1.isWhile();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newString(".");
      node0.putIntProp(44, 44);
      node0.isReturn();
      Node node1 = new Node(37, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      Node node2 = null;
//      try {
        node2 = new Node(36, node0, node0, node0, node1, 16, 53);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(117);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node0.setLineno(117);
      node1.setSourceEncodedPosition(1);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.putIntProp(32, 54);
      node2.toStringTree();
      node0.siblings();
      // Undeclared exception!
//      try { 
        node2.getExistingIntProp(0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 0
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = new Node(31, node0, node0, node0);
      Node node2 = new Node(53, 0, 46);
      node0.getQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node2.setJSDocInfo(jSDocInfo0);
      node2.isInstanceOf();
      node2.isDebugger();
      node1.getSourceFileName();
      Node.extractCharno(43);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isReturn();
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(37, node0, node0, node0, node0, 39, 47);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newNumber((double) 49);
      node0.srcref(node3);
      node1.checkTreeEquals(node2);
      node1.isEquivalentTo(node2, false, false, false);
      // Undeclared exception!
//      try { 
        node0.srcref((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = new Node(31, node0, node0, node0);
      Node node2 = new Node(53, 0, 46);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node3 = Node.newString(47, "AL#{D]-gqQjw", 47, 16384);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node3);
      Node.NodeMismatch node_NodeMismatch1 = node1.checkTreeTypeAwareEqualsImpl(node3);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node3, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(118);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.setSourceEncodedPosition(1);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.putIntProp(32, 54);
      node2.toStringTree();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node(0, (-2429), (-2429));
      Node node1 = new Node(51, node0, node0, 46, 29);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = new Node(56, 100, (-1205));
      node0.copyInformationFromForTree(node1);
      InputId inputId0 = new InputId("?Zw2Qg:dzd'");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getObjectIndexKey();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[10];
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, false, jSTypeArray0);
      // Undeclared exception!
//      try { 
        modificationVisitor0.caseFunctionType(functionType0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isName();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      node0.setChangeTime(31);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node1 = new Node(42, node0, node0, node0, (-945), 95);
      node0.addChildrenToBack(node1);
      // Undeclared exception!
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = new Node(32, node1, node1, node1);
      Node node3 = new Node(38, 16, 1);
      Node node4 = Node.newString(38, ".");
      node4.isUnscopedQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node4);
      node3.isDebugger();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y\"C");
      Node node0 = Node.newString(103, "Yw|", 103, 103);
      Node node1 = new Node(53);
      node0.addChildToBack(node1);
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.getCharno();
      node0.putProp(50, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = null;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node(119);
      node0.isWith();
      node0.putIntProp(1341, 1341);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      node0.setJSType(jSType0);
      node0.isLabel();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(108);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.hasMoreThanOneChild();
      Node node1 = Node.newString((-1074), "?w2Qg:dz|'", 51, 57);
      node0.copyInformationFrom(node1);
      int int0 = 40;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeFunctionType((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createOptionalNullableType((JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.UnionTypeBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newString("v");
      Node node1 = new Node(51, node0, node0, node0, 155, 49);
      node0.isReturn();
      node1.copyInformationFrom(node0);
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      Node node1 = new Node((-1395), node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isDefaultCase();
      node0.isName();
      node0.isFor();
      node2.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(44);
      node0.isTrue();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node((-1371), 24, 24);
      node0.setCharno(122);
      Node node1 = new Node(12, node0, node0, node0, node0, 39, 52);
      node1.isOnlyModifiesThisCall();
      Node node2 = node1.getAncestor(0);
      Node node3 = Node.newString("String node not created with Node.newString");
      node3.isEquivalentTo(node1);
      node0.detachFromParent();
      Node node4 = node0.useSourceInfoIfMissingFrom(node1);
      node4.getJSDocInfo();
      // Undeclared exception!
//      try { 
        node2.removeChild(node4);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.isDefaultCase();
      node0.isName();
      node0.isFor();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newString(69, "A|A-H \"S;7E");
      Node node1 = new Node(43, 47, 43);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = Node.newString("A|A-H \"S;7E", 33, 4);
      node0.isEquivalentTo(node2, true, true, true);
      Node node3 = new Node(57, node0, 1307, (-3046));
      node1.isDebugger();
      node2.isThrow();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry1.createConstructorType(jSType0, true, jSTypeArray0);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeRegistry jSTypeRegistry3 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry3.createFunctionTypeWithNewThisType(functionType0, functionType0);
      JSTypeRegistry jSTypeRegistry4 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry4.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(37, node0, node0, node0);
      node1.toStringTree();
      node1.isDec();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0, 47, 2040);
      Node node2 = node1.cloneNode();
      node2.setSourceEncodedPosition((-2142));
      node1.useSourceInfoIfMissingFromForTree(node2);
      node0.putIntProp((-2150), 31);
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(395, nodeArray0);
      Node node1 = new Node(106, node0, node0, node0);
      Node node2 = new Node(33, 0, 2);
      String string0 = "@";
      Node.newString(16777216, "@");
      // Undeclared exception!
//      try { 
        node2.isUnscopedQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isOnlyModifiesThisCall();
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(47, node0, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newNumber((double) 49);
      node0.srcref(node3);
      node1.checkTreeEquals(node2);
      node3.hasChild(node3);
      Node.newString("qE");
      node3.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry1.createConstructorType(jSType0, true, jSTypeArray0);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0, true);
      functionType0.canCastTo(jSType0);
      JSTypeRegistry jSTypeRegistry3 = new JSTypeRegistry(simpleErrorReporter0, false);
      FunctionType functionType1 = jSTypeRegistry3.createFunctionTypeWithNewThisType(functionType0, functionType0);
      JSTypeRegistry jSTypeRegistry4 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray1 = new JSType[6];
      jSTypeArray1[0] = (JSType) functionType0;
      jSTypeArray1[1] = jSType0;
      jSTypeArray1[2] = jSType0;
      jSTypeArray1[3] = (JSType) functionType1;
      jSTypeArray1[4] = jSType0;
      jSTypeArray1[5] = (JSType) functionType1;
      jSTypeRegistry4.createConstructorType(jSTypeArray0[0], true, jSTypeArray1);
      Node node0 = jSTypeRegistry4.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(37, node0, node0, node0);
      node1.toStringTree();
      node1.isDec();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newString(".");
      node0.cloneNode();
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = new Node(32, node1, node1, node1);
      Node node3 = new Node(38, 16, 1);
      Node node4 = Node.newString(38, ".");
      node4.isUnscopedQualifiedName();
      node3.isGetterDef();
      node1.getSourceOffset();
      node1.isDec();
      node0.isOnlyModifiesArgumentsCall();
      node2.srcrefTree(node3);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString(">29)By\"`=n[X.tWao6");
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = new Node(32, node1, node1, node1);
      node2.getQualifiedName();
      node1.useSourceInfoFromForTree(node2);
      node2.setSourceEncodedPosition(48);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.putIntProp(5459, 2);
      node3.toStringTree();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = new Node(32, node1, node1, node1);
      Node node3 = new Node(38, 16, 1);
      Node node4 = Node.newString(38, ".");
      Node[] nodeArray0 = new Node[0];
      node4.setType(32);
      node2.mayMutateGlobalStateOrThrow();
      node4.isQualifiedName();
      node3.useSourceInfoIfMissingFromForTree(node3);
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(117, 117, 44);
      Node node1 = new Node(117, node0, node0, node0, node0, 16, 18);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString("v");
      node0.setChangeTime(4095);
      InputId inputId0 = new InputId("v");
      node0.setInputId(inputId0);
      node0.putIntProp(35, 122);
      node0.isRegExp();
      node0.getBooleanProp(35);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = new Node(32, node1, node1, node1);
      Node node3 = new Node(38, 16, 1);
      Node node4 = Node.newString(38, ".");
      Node[] nodeArray0 = new Node[0];
      Node node5 = new Node((-2036), nodeArray0, 36, 35);
      node4.isQualifiedName();
      node5.useSourceInfoIfMissingFromForTree(node3);
      node5.isDebugger();
      node2.useSourceInfoFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(117);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = new Node(39, 47, 36);
      Node node3 = new Node(38, node1, node2, node0, node1, 4095, 47);
      node2.setSourceEncodedPosition(1);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      Node node5 = Node.newNumber((-1744.0));
      node0.isFunction();
      node4.putIntProp(32, 54);
      Node node6 = node2.srcref(node5);
      node1.useSourceInfoFromForTree(node4);
      node4.checkTreeEquals(node5);
      node1.isObjectLit();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node6.getChildCount();
      node5.isDebugger();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = new Node(31, node0, node0, node0);
      Node node2 = new Node(53, 0, 46);
      node0.getQualifiedName();
      node2.isInstanceOf();
      node0.isLabel();
      node2.isBreak();
      node1.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newString("?w2Qg:dz|'");
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      Node node2 = new Node(111, 43, 12);
      node1.setSourceEncodedPosition(32);
      Node node3 = new Node(54);
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node3);
      node2.putIntProp(38, 8);
      Node node5 = new Node(116);
      node0.isEquivalentTo(node5, true, true, false);
      node4.getParent();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node6 = jSTypeRegistry0.createParameters(jSTypeArray0);
      // Undeclared exception!
//      try { 
        node1.addChildBefore((Node) null, node6);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0, 47, 2040);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(53);
      node1.isTrue();
      node1.cloneTree();
      node0.isHook();
      node1.mayMutateArguments();
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = new Node(46, 46, 46);
      node0.isOr();
      Node node1 = new Node(47, node0, node0, node0, node0, 48, 40);
      Node node2 = Node.newNumber(1.0, 2, (-3864));
      node1.copyInformationFromForTree(node2);
      node1.isGetterDef();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getInputId();
      node1.useSourceInfoFrom(node2);
      node2.setInputId((InputId) null);
      node2.getString();
      node1.removeProp(36);
      node1.toStringTree();
      node2.isGetterDef();
      Node node3 = Node.newString(528, "FALSE\n    STRING \n");
      Node node4 = Node.newString("com.google.common.base.CharMatcher$NegatedMatcher", 29, 46);
      node2.isGetElem();
      node3.setString("");
      node4.setString("FALSE\n    STRING \n");
      // Undeclared exception!
//      try { 
        node4.getChildAtIndex(2480);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(31, node0, node0, node0, 0, 40);
      node1.srcrefTree(node0);
      node0.isEquivalentTo(node1);
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(31);
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      Node node3 = Node.newString(53, "");
      node2.setSourceEncodedPosition(1);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      Node node5 = Node.newNumber((-1744.0));
      node5.isAssignAdd();
      node4.putIntProp(32, 54);
      Node node6 = node2.srcref(node5);
      node6.srcrefTree(node5);
      node4.checkTreeEquals(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      Node.extractLineno(30);
      Node node7 = node1.getLastSibling();
      node7.addChildToBack(node5);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newString(103, "Y\"C", 103, 103);
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.getCharno();
      node0.putProp(50, node0);
      Node node1 = Node.newNumber((double) 52);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Y\"C");
      // Undeclared exception!
//      try { 
        node1.appendStringTree(charBuffer0);
//        fail("Expecting exception: ReadOnlyBufferException");
      
//      } catch(ReadOnlyBufferException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = new Node(152);
      Node node1 = new Node(49, node0, node0, node0);
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = node0.cloneNode();
      node0.setSourceEncodedPosition(36);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      node3.putIntProp(52, 1);
      node3.toStringTree();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.setSourceEncodedPosition(152);
      Node node1 = new Node((-192), (-2468), 43);
      node1.setOptionalArg(false);
      node0.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(108);
      InputId inputId0 = new InputId("?w2Qg:dz|'");
      Node node1 = Node.newString(53, "?w2Qg:dz|'", 1764, 56);
      Node node2 = new Node(6, node0, node0, node1, node1);
      node2.getInputId();
      node0.setInputId((InputId) null);
      node2.putIntProp(30, 41);
      node1.mayMutateArguments();
      node0.toString();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newString(100, "(mmFf]3<,");
      Node node1 = new Node(100, node0, node0, node0);
      node1.getSourceOffset();
      Node node2 = node1.cloneNode();
      node1.isAssignAdd();
      Node node3 = node2.getLastSibling();
      node3.removeProp(4095);
      Node.newNumber((double) 57);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(105);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = Node.newNumber((-1700.42734352514));
      node1.isScript();
      node2.isAssignAdd();
      node0.putIntProp(38, 26);
      Node node3 = node0.srcref(node1);
      Node node4 = new Node(53, node1, node1, node3);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node4);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 53
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isScript();
      Vector<Node> vector0 = new Vector<Node>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isGetProp();
      node0.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.copyInformationFrom(node0);
      node1.setSourceEncodedPosition(1);
      node0.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = Node.newNumber((double) 29);
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.isVar();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      JSType jSType0 = modificationVisitor0.caseTemplateType(templateType0);
      Node node0 = Node.newString(147, "directives", 147, 1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, node0);
      jSTypeArray0[0] = (JSType) functionType0;
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = node1.cloneTree();
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString("v");
      node0.setChangeTime(421991);
      InputId inputId0 = new InputId("v");
      node0.setInputId(inputId0);
      node0.putIntProp(35, 122);
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 35
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString(108, "cO", 108, 108);
      node0.getAncestors();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(147, nodeArray0, (-4717), 12);
      node1.srcrefTree(node0);
      node1.isCast();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.isDo();
      node0.isEquivalentTo(node0, false, false, false);
      node0.isAssign();
      node0.isEmpty();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isScript();
      Vector<Node> vector0 = new Vector<Node>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(56, node0, node0, node0);
      node1.isOr();
      node0.getJSDocInfo();
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newString("W");
      Node node1 = new Node(0, node0, node0, node0, node0, 1, 30);
      node0.mayMutateArguments();
      Node node2 = node1.useSourceInfoFrom(node0);
      // Undeclared exception!
//      try { 
        node2.setDouble(12);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = new Node(31, node0, node0, node0);
      Node node2 = new Node(53, 0, 46);
      node2.isCatch();
      node1.cloneNode();
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(117);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(42, 55, 29);
      Node node2 = new Node(36, 54, 29);
      Node node3 = node1.cloneNode();
      node3.setSourceEncodedPosition(15);
      node1.useSourceInfoIfMissingFromForTree(node2);
      node2.putIntProp(4095, 15);
      // Undeclared exception!
//      try { 
        node2.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 36
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setChangeTime(44);
      InputId inputId0 = new InputId((String) null);
      node0.setInputId(inputId0);
      node0.putIntProp(44, 2789);
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 44
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      Node node1 = new Node(48, node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node.newNumber(56.41675895453402);
      node1.putIntProp(48, 32);
      node2.isEquivalentTo(node1, false, true, true);
      node1.getParent();
      // Undeclared exception!
//      try { 
        node2.addChildBefore((Node) null, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isWith();
      node0.isDefaultCase();
      node0.isNew();
      node0.isFor();
      Node node1 = Node.newNumber(1753.4948205366352, 52, 32);
      Node node2 = node0.srcrefTree(node1);
      node0.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = new Node(1029, 53, 30);
      Node node1 = new Node(4, node0, node0, node0);
      Node node2 = new Node(36, 57, (-859));
      Node node3 = Node.newString((-788), "NUMBER_OBJECT_FUNCTION_TYPE");
      node3.getQualifiedName();
      node3.getQualifiedName();
      node3.isInc();
      node0.getAncestors();
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      node0.getType();
      node4.cloneNode();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(100);
      node0.getBooleanProp(100);
      node0.getStaticSourceFile();
      Node node1 = new Node((-3926), node0, node0, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString("p]");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getStaticSourceFile();
      Node node1 = Node.newString(40, "=VRQCgjmSj(1}#");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.wasEmptyNode();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = new Node(51, node1);
      node0.detachChildren();
      node2.isIn();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = node0.cloneNode();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isSyntheticBlock();
      Node node2 = new Node(53);
      node1.isVoid();
      node1.isLabel();
      node2.isAssign();
      // Undeclared exception!
//      try { 
        node1.getChildBefore(node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0, 47, 2034);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(53);
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = Node.newNumber((double) 47);
      Node node3 = node2.srcref(node1);
      node3.checkTreeEquals(node1);
      Node node4 = new Node((-569), node3, node2, node1, node1, 30, 0);
      Node node5 = null;
//      try {
        node5 = new Node(49, node4, node4, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newString(108, "?Zw2Qg:dzd'", 108, 108);
      InputId inputId0 = new InputId("?Zw2Qg:dzd'");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      Node node1 = new Node(2036, 52, (-419));
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node.newNumber((double) 0);
      node0.putIntProp(2, 118);
      node2.isEquivalentTo(node1, true, false, true);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("1Il", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.getRootNode();
      Node node3 = null;
//      try {
        node3 = new Node(3342, (Node) null, node1, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isCatch();
      node0.setIsSyntheticBlock(true);
      int int0 = Node.VAR_ARGS_NAME;
      node0.isAssignAdd();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3834, 49);
      node0.setVarArgs(true);
      node0.isVoid();
      node0.isNE();
      node0.isNE();
      node0.isGetProp();
      node0.isNull();
      node0.isOr();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, false, jSTypeArray0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      jSTypeArray0[1] = (JSType) functionType1;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = new Node(120, node1, node0, node1);
      node2.toStringTree();
      node0.isObjectLit();
      node1.isCase();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = new Node(24, node1, 49, 4095);
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = new Node(111, (-235), (-1577));
      node0.isCatch();
      node0.cloneNode();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newString("v&Z");
      Node node1 = Node.newString("v&Z");
      node1.checkTreeTypeAwareEqualsImpl(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node2.isAssignAdd();
      Node node3 = new Node(125, node1, 40, 54);
      node3.setLineno(38);
      node1.removeProp((-1541));
      Node node4 = new Node(40, node3, node0, 8, (-4676));
      node2.useSourceInfoFrom(node4);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(53, 49, 16);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.wasEmptyNode();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = new Node(43, node0);
      node2.detachChildren();
      node1.isIn();
      node2.clonePropsFrom(node0);
      node1.isGetterDef();
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newString("J~#=R8)immZ\"+:&#2", 1006, 1006);
      Node node1 = Node.newNumber((double) 4);
      node0.mayMutateArguments();
      node1.putIntProp(55, (-444));
      node1.toStringTree();
      Node.extractCharno(49);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newString(">29)By\"`=n[X.tWao6");
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = new Node(32, node1, node1, node1);
      node2.getQualifiedName();
      node2.setSourceEncodedPosition(48);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.putIntProp(5436, 2);
      node3.toStringTree();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(117);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString(38, "NUMBER_OBJECT_FUNCTION_TYPE");
      node1.isUnscopedQualifiedName();
      node0.getQualifiedName();
      node1.getQualifiedName();
      Node node2 = new Node(116, 49, 33);
      node0.isInc();
      node2.isTry();
      node1.isInstanceOf();
      node0.getAncestors();
      node2.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newNumber(866.0, 47, 118);
      InputId inputId0 = new InputId("Object#Element");
      node0.setInputId(inputId0);
      node0.putIntProp(47, 110);
      node0.toStringTree();
      node0.isCase();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getStaticSourceFile();
      Node node1 = Node.newString(40, "=VRQCgjmSj(1}#");
      Node.newString(48, "");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(31, nodeArray0, 1, 213);
      node2.isQualifiedName();
      Node node3 = new Node(1823, node2, node1, node1, node2, 0, 56);
      node3.isEquivalentToShallow(node0);
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node3);
      node_NodeMismatch0.equals(node0);
      node1.toString();
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node((-1824));
      node0.isOnlyModifiesArgumentsCall();
      node0.putIntProp((-1824), (-2202));
      node0.isWith();
      node0.removeProp((-1824));
      node0.putIntProp((-1824), 108);
      node0.isLabel();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<StringType> vector0 = new Vector<StringType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) vector0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.isBreak();
      node1.removeChildren();
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node(132);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      Node node2 = new Node((-1364), (-1882), (-2837));
      node0.setSourceEncodedPosition(2269);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = Node.newNumber((double) 39);
      node1.addChildrenToBack(node4);
      node0.putIntProp(46, 201);
      node2.isEquivalentTo(node3, true, false, true);
      Node node5 = new Node(29, node2, node0, 4095, 46);
      node5.getParent();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x%7");
      Node node6 = null;
//      try {
        node6 = new Node(56, node5, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.wasEmptyNode();
      Node node1 = Node.newString(37, "O", 1836, 36);
      Node node2 = node0.clonePropsFrom(node1);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isSwitch();
      node0.useSourceInfoFromForTree(node2);
      node0.isAssign();
//      try { 
        node0.setDouble((-3329.6002946262));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // DO 114 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newString("BANG");
      Node node1 = new Node(53, node0, node0, node0);
      Node node2 = new Node(38, node1, 47, 46);
      Node node3 = Node.newNumber((double) 56);
      node3.putIntProp(1635, 1199);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node4.isEquivalentTo(node0, false, false, false);
      node1.getParent();
      Node node5 = Node.newNumber((double) 52, 4095, (-1749));
//      try { 
        node5.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 52.0 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(86);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Recorded bad position information\nstart-line: ");
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      Node node2 = new Node(86, 1559, 0);
      Node node3 = new Node((-2499));
      node3.setSourceEncodedPosition(30);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      Node node5 = Node.newNumber((-1.0));
      node3.putIntProp(31, 53);
      node5.isEquivalentTo(node3, false, false, false);
      node5.getParent();
      // Undeclared exception!
//      try { 
        node4.addChildBefore(node3, node5);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString(130, "com.google.javascript.rhino.Node$NodeMismatch", 130, 130);
      Node node1 = Node.newString(48, "com.google.javascript.rhino.Node$NodeMismatch", 155, 12);
      node1.getSideEffectFlags();
      node1.isThrow();
      node0.putIntProp(53, 0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 108, 108);
      node0.getAncestors();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(147, nodeArray0, (-4717), 12);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isCast();
      Node node2 = new Node(53);
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.isDo();
      node0.setSourceEncodedPosition(108);
      Node node1 = new Node(47, (-981), 2164);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.putIntProp(8, 57);
      Node node2 = new Node(4095, node0, 1986, 37);
      // Undeclared exception!
//      try { 
        node2.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 4095
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node.newString("");
      Node.newString("");
      Node node0 = new Node(38, 16, 1);
      Node node1 = Node.newString(38, "");
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-2036), nodeArray0, 36, 57);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node2.isEquivalentTo((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = new Node(32, node1, node1, node1);
      Node node3 = new Node(38, 16, 1);
      node2.setWasEmptyNode(false);
      // Undeclared exception!
//      try { 
        node1.setString("<invalid>");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.isDo();
      node0.getInputId();
      node0.setVarArgs(true);
      node0.isAdd();
      node0.isNot();
      node0.isVarArgs();
      node0.isDefaultCase();
      node0.isNew();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = new Node(32, node1, node1, node1);
      Node node3 = new Node(38, 16, 1);
      Node node4 = Node.newString(38, ".");
      node4.isUnscopedQualifiedName();
      node2.getQualifiedName();
      node1.clonePropsFrom(node2);
      Node node5 = new Node(4095, 36, (-1895));
      node1.isInc();
      node1.isTry();
      node5.isInstanceOf();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(37);
      node0.wasEmptyNode();
      node0.addSuppression((String) null);
      node0.isQuotedString();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(126);
      node0.setSideEffectFlags(node_SideEffectFlags0);
      Node node1 = new Node((-788), node0, 22, 1151);
      Node node2 = null;
//      try {
        node2 = new Node(87855567, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(117);
      node0.isString();
      Node node1 = node0.cloneNode();
      node1.setSourceEncodedPosition(1);
      Node node2 = new Node(46);
      Node node3 = Node.newNumber((-1744.0));
      node0.isFunction();
      node2.putIntProp(32, 54);
      Node node4 = node1.cloneNode();
      node3.isLabel();
      node1.isBreak();
      node2.getStaticSourceFile();
      node4.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("ULMU");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSDocInfo0.setDefine(true);
      node0.isQuotedString();
      jSDocInfo0.disposesOf("*");
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getJSDocInfo();
      jSDocInfo0.getThisType();
      node1.addChildToFront(node0);
      jSDocInfo0.addExtendedInterface((JSTypeExpression) null);
      jSDocInfo0.getSourceName();
      node1.mayMutateGlobalStateOrThrow();
      node0.siblings();
      node1.isAdd();
      node0.isCase();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(64);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.copyInformationFrom(node0);
      node0.setSourceEncodedPosition(8);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node.newNumber((double) 1);
      node1.putIntProp(370, 8);
      node0.isEquivalentTo(node2, false, true, true);
      node0.getParent();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newString("I<");
      node0.setQuotedString();
      node0.isHook();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newNumber((double) 56, 1229, 22);
      Node node2 = new Node(42, node0, node0, node1);
      node2.clonePropsFrom(node0);
      node2.wasEmptyNode();
      Node node3 = new Node(0, node2);
      node3.getInputId();
      int int0 = Node.FREE_CALL;
      node0.isGetElem();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = new Node(32, node1, node1, node1);
      Node node3 = new Node(38, 16, 1);
      Node node4 = Node.newString(38, ".");
      node4.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node5 = new Node((-2036), nodeArray0, 36, 35);
      node4.isQualifiedName();
      node4.useSourceInfoIfMissingFromForTree(node3);
      node5.getLength();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(38, node0, 2, 46);
      int int0 = Node.EMPTY_BLOCK;
      node0.isGetElem();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.clonePropsFrom(node0);
      Node node2 = new Node(42);
      Node node3 = new Node(108);
      // Undeclared exception!
//      try { 
        node3.replaceChild(node0, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(120);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node1.copyInformationFrom(node1);
      Node node3 = new Node(38, node1, node2, node0, node1, 4095, 47);
      node2.setSourceEncodedPosition(1);
      Node node4 = new Node(36);
      Node.newNumber(1.2);
      HashSet<String> hashSet0 = new HashSet<String>();
      node2.isVar();
      node0.getChildCount();
      node1.isThrow();
      Node node5 = Node.newNumber(2423.38722041161, 2791, 4095);
      node5.isFunction();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(54, node0, node0);
      node1.setVarArgs(true);
      node1.isObjectLit();
      node1.isEquivalentToTyped(node1);
      node1.isEmpty();
      node0.isDefaultCase();
      Node node2 = node1.removeFirstChild();
      node2.getInputId();
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      Charset.defaultCharset();
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      // Undeclared exception!
//      try { 
        node0.appendStringTree(charBuffer0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(117);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      Node node2 = node1.copyInformationFrom(node1);
      node2.setSourceEncodedPosition(1);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node.newNumber((-1744.0));
      node3.putIntProp(32, 54);
      node3.isEquivalentTo(node1, false, true, false);
      node0.getParent();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.isDo();
      node0.isEquivalentTo(node0, false, false, false);
      node0.isAssign();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.srcref((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newString("J~#=R8)immZ\"+:&#2", 1006, 1006);
      Node node1 = Node.newNumber((double) 4);
      Node node2 = Node.newString("=<y$i~^l7", 44, 95);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node0);
      node0.isIn();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node node3 = Node.newString("=<y$i~^l7", (-4096), 17);
      node2.checkTreeEqualsImpl(node3);
      Node.NodeMismatch node_NodeMismatch1 = new Node.NodeMismatch(node3, node1);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      node1.isIn();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0, 47, 56);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(53);
      node1.isTrue();
      Node node2 = new Node(49);
      Node node3 = node2.cloneNode();
      node3.isTry();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newString(108, "?Zw2Qg:dzd'", 108, 108);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.hasMoreThanOneChild();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.addChildrenToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString("+j,\"b[W");
      Node node1 = new Node(52, 16, 32);
      node1.isCatch();
      node0.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[8];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      // Undeclared exception!
//      try { 
        modificationVisitor0.caseUnionType(unionType0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newString((-1), "com.google.javascript.rhino.Node$NodeMismatch", 145, 45);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString("second new child has existing parent");
      Node node2 = new Node(48, node0, node0, node1, node1, 52, 3537);
      node2.hasMoreThanOneChild();
      node0.setVarArgs(false);
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(85, "GETELEM");
      Node node1 = new Node(115, node0, node0, node0, node0, 51, 2320);
      node1.removeChild(node0);
      node1.setChangeTime(29);
      node1.setSourceEncodedPositionForTree(2688);
      node1.getChangeTime();
      node0.isScript();
      Node node2 = node1.cloneTree();
      node2.getStaticSourceFile();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GETELEM");
      node2.setStaticSourceFile((StaticSourceFile) null);
      node2.setSourceFileForTesting("GETELEM");
      node2.checkTreeEquals(node0);
      Node node3 = new Node(36, node1);
      node1.isEquivalentTo(node3);
      // Undeclared exception!
//      try { 
        node0.addChildToFront(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = new Node(153, 116, 153);
      Node node1 = Node.newNumber((double) 53);
      node0.checkTreeEquals(node1);
      node0.isCatch();
      Node node2 = node0.cloneNode();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-2213), nodeArray0);
      Node node1 = Node.newNumber((double) 4095, 2900, 986);
      node1.siblings();
      node1.children();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node2 = new Node((-2213), node0, node0, node0, (-463), 51);
      node2.getJsDocBuilderForNode();
      node2.isFromExterns();
      Node node3 = node2.cloneNode();
      Node node4 = new Node(55, node2);
      node2.checkTreeTypeAwareEqualsImpl(node4);
      node2.getType();
      node0.getAncestors();
      node4.putBooleanProp(1, false);
      Node.newNumber((double) 1);
      node4.putIntProp((-198), (-200));
      node2.mayMutateArguments();
      node0.isUnscopedQualifiedName();
      Node node5 = node3.useSourceInfoFromForTree(node2);
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node5, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newString("M'afb8a&]Q7`eAGKqM", 38, (-1784));
      Node node1 = Node.newNumber(0.0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      node0.setLineno((-2528));
      Node node2 = new Node(155, 54, 50);
      node2.getInputId();
      node2.toStringTree();
      node2.srcref(node0);
      node1.getType();
      node0.isGetElem();
      Node.extractLineno(2985);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString(40, "kNGKd");
      Node node1 = new Node(116, node0, node0);
      node1.srcref(node0);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(51);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 51
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isDo();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      node0.setChangeTime(44);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node1 = new Node(105, node0, node0, 2147483645, 40);
//      try { 
        node1.setString("Object#Element");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FUNCTION <invalid> 1048573 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newString(153, "Y\"C");
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isTypeOf();
      node0.isAssignAdd();
      Node node1 = new Node(42, node0, 29, 4);
      node1.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      int int0 = Node.DIRECT_EVAL;
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(117);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isDelProp();
      Node node2 = node1.copyInformationFrom(node1);
      node2.setSourceEncodedPosition(1);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node.newNumber((-1744.0));
      node3.putIntProp(32, 54);
      node3.toStringTree();
      node0.isCase();
      Node node4 = node0.cloneTree();
      // Undeclared exception!
//      try { 
        node4.getChildAtIndex(49);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString("", 739, 8192);
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node0.putIntProp(39, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.wasEmptyNode();
      Node node1 = new Node(39, node0);
      node0.isCast();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node node2 = node1.cloneNode();
      node2.isTry();
      node1.isInstanceOf();
      node0.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.isCatch();
      Node node1 = node0.cloneNode();
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(130);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node1.copyInformationFrom(node0);
      Node node3 = new Node(39, node0, node2, node0, node1, 21, 113);
      node0.setSourceEncodedPosition(50);
      Node node4 = null;
//      try {
        node4 = new Node(36, node1, node1, node3, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newString(153, "Y\"C");
      node0.isParamList();
      node0.isEquivalentTo(node0);
      node0.putIntProp(46, 1);
      node0.toStringTree();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newString(103, "Y\"C", 103, 103);
      node0.isDo();
      Node node1 = Node.newString(103, "Y\"C", 115, 105);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isWhile();
      node1.getDirectives();
      node1.isDec();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isDo();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node2 = new Node(153, node0, node1, node1);
      node0.isWith();
      Node.newString("%JZLaPo~X~e|", 57, 30);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(49, node0, node0);
      node1.isScript();
      Vector<Node> vector0 = new Vector<Node>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isContinue();
      Node node3 = node2.getLastChild();
      // Undeclared exception!
//      try { 
        node3.appendStringTree((Appendable) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setVarArgs(true);
      node0.isFalse();
      node0.isVoid();
      node0.isNE();
      node0.isNE();
      node0.isGetProp();
      node0.isNull();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      jSTypeArray0[4] = jSType0;
      jSTypeArray0[5] = jSType0;
      FunctionType functionType0 = jSTypeRegistry1.createFunctionType(jSType0, false, jSTypeArray0);
      JSType jSType1 = modificationVisitor0.caseFunctionType(functionType0);
      jSTypeRegistry0.createConstructorType(jSType1, false, jSTypeArray0);
      jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter1);
      Node node1 = jSTypeRegistry2.createOptionalParameters(jSTypeArray0);
      Node node2 = new Node(38, 51, 1221);
      Node node3 = new Node((-2657), node2, node0, node1);
      node1.toStringTree();
      node3.isObjectLit();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isComma();
      Node node1 = new Node(47, node0, node0, node0, node0, 15, 154);
      node1.isThrow();
      node1.isCase();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(12);
      node0.getAncestors();
      node0.isSyntheticBlock();
      node0.getDirectives();
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = Node.newNumber(48.0, 16, 0);
      node0.useSourceInfoFrom(node1);
      Node node2 = new Node(37, 31, 56);
      Node node3 = node2.cloneTree();
      node1.setDouble(636.187290914);
      node3.isAdd();
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      node0.getAncestor(0);
      Node node1 = new Node((-1586), node0, node0);
      int int0 = Node.FREE_CALL;
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = new Node(124);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = node0.cloneNode();
      node0.isSyntheticBlock();
      node0.useSourceInfoFrom(node1);
      Node node2 = new Node(53);
      node1.isVoid();
      node1.isLabel();
      node2.siblings();
      node2.getStaticSourceFile();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString(41, "&");
      node0.isNull();
      node0.setVarArgs(true);
      node0.isUnscopedQualifiedName();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 15);
      node0.addChildToBack(node1);
      Node node2 = Node.newNumber((double) 30);
      node1.isStringKey();
      Node node3 = new Node(105, 4095, 52);
      Node node4 = new Node(43, 101, 578);
      node0.isHook();
      Node node5 = new Node(51, 48, 2);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node5.setJSDocInfo(jSDocInfo0);
      node2.isEquivalentToTyped(node5);
      Node node6 = new Node(51, node2, node0, node2);
      Node node7 = Node.newString(31, "");
      node0.getQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      ObjectType objectType1 = jSTypeRegistry0.createObjectType(objectType0);
      node1.setJSType(objectType1);
      node1.isOnlyModifiesArgumentsCall();
      node4.isRegExp();
      node7.cloneNode();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      node0.getAncestors();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(147, nodeArray0, (-4717), 12);
      node1.isCast();
      Node node2 = node1.cloneNode();
      node2.isSyntheticBlock();
      Node node3 = new Node(32, node1, node0, node1, 49, 49);
      Node node4 = node3.copyInformationFrom(node2);
      node3.siblings();
      node1.getStaticSourceFile();
      node1.srcref(node3);
      node4.isRegExp();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newNumber(0.7, (-26), (-26));
      node0.isName();
      Node node1 = new Node(2, node0, node0, node0, 2, 4095);
      Node node2 = Node.newString("B\"z6q0");
      node2.isWhile();
      Node node3 = Node.newString(4096, "B\"z6q0", 2, 111);
      Node node4 = new Node((-2283), node2, node3, node3);
      node2.putProp(48, node4);
      // Undeclared exception!
//      try { 
        node2.getDirectives();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // com.google.javascript.rhino.Node cannot be cast to java.util.Set
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(117);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node0.isName();
      Node node2 = Node.newString(3216, "incrdecr", 1353, 1353);
      Node node3 = new Node(50, node0, node2, node0, 48, 4095);
      node1.isEquivalentTo(node0);
      node1.isQuotedString();
      node1.isReturn();
      Node node4 = node0.detachFromParent();
      node4.isAnd();
      Node node5 = null;
//      try {
        node5 = new Node((-2912), node1, node2, node4, node3, 38, 38);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(5975);
      node1.isHook();
      Node node2 = Node.newNumber((-3214.732064539), 8, 0);
      node1.copyInformationFromForTree(node2);
      node0.getDouble();
      node0.isOnlyModifiesArgumentsCall();
      node1.mayMutateArguments();
      node0.getChildCount();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(24);
      node0.isSyntheticBlock();
      node0.isDelProp();
      node0.getStaticSourceFile();
      node0.isDo();
      Node node1 = Node.newString("ERROR", 278, 54);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      node1.isGetProp();
      node1.getAncestors();
      Node node2 = Node.newString("ERROR", 26, (-3018));
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      Node node3 = Node.newString("ERROR", (-414), (-1521));
      nodeArray0[4] = node3;
      nodeArray0[5] = node0;
      nodeArray0[6] = node2;
      nodeArray0[7] = node0;
      Node node4 = null;
//      try {
        node4 = new Node(1660, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.isDo();
      node0.getInputId();
      node0.setVarArgs(true);
      node0.setLineno(4589);
      Node node1 = Node.newString("com.google.common.collect.AbstractMapBasedMultimap", 32, 29);
      Node node2 = new Node(54, node1, node0, node0);
      Node node3 = new Node(52, (-1803), 36);
      node0.toStringTree();
      node3.isSetterDef();
      node1.addChildAfter(node2, (Node) null);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.isDo();
      Node node1 = new Node(51, node0, node0, node0, 129, (-3589));
      node1.isEquivalentTo(node0);
      node0.isQuotedString();
      node0.isReturn();
      Node node2 = node0.detachFromParent();
      node2.isAnd();
      Node node3 = new Node(57, node2);
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newString("I~");
      node0.setQuotedString();
      Node node1 = Node.newString("I~");
      node1.checkTreeEqualsImpl(node0);
      node1.isVoid();
      node1.isThis();
      node0.isQuotedString();
      node0.isReturn();
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = new Node(24);
      node0.isSyntheticBlock();
      EvoSuiteFile evoSuiteFile0 = null;
      node0.getAncestor(1048576);
      boolean boolean0 = false;
      boolean boolean1 = false;
      // Undeclared exception!
//      try { 
        node0.addChildAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.mergeLineCharNo((-2882), 239);
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(4, node0, node0, node0, node0, 112, 42);
      node0.srcrefTree(node1);
      Node node2 = node0.getParent();
      // Undeclared exception!
//      try { 
        node2.replaceChild(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isComma();
      node0.siblings();
      node0.getStaticSourceFile();
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = node0.cloneTree();
//      try { 
        node1.setDouble((-477.3416196331783));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // DO 114 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.wasEmptyNode();
      Node node1 = Node.newString(37, "O", 1836, 36);
      node0.clonePropsFrom(node1);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isSwitch();
      node0.isAssign();
//      try { 
        node0.setDouble((-3329.6002946262));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // DO 114 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node0 = new Node(119, 119, 119);
      node0.isCatch();
      Node node1 = node0.cloneNode();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isUnscopedQualifiedName();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.isExprResult();
      Node node1 = Node.newString("<GrlG7", (-2119), 0);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals("<GrlG7");
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // PARAM_LIST is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      node0.getAncestors();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(147, nodeArray0, (-4717), 12);
      node1.isCast();
      Node node2 = node1.cloneNode();
      node2.isSyntheticBlock();
      Node node3 = new Node(32, node1, node0, node1, 49, 49);
      Node node4 = node3.copyInformationFrom(node2);
      Node node5 = Node.newString(55, "jsdoc_info");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.newNumber((double) 52);
      node2.isGetProp();
      node5.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isEmpty();
      Node node6 = new Node(38);
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node4);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMisatcj", 125, 114);
      node0.checkTreeEqualsImpl(node0);
      node0.setSourceFileForTesting("com.google.javascript.rhino.Node$NodeMisatcj");
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.getQualifiedName();
      Node node1 = new Node((-2009), node0, 345, 31);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.removeProp(125);
      node0.isEmpty();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node(25);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.addSuppression((String) null);
      node0.toString();
      Node node1 = new Node(4, node0, node0, node0, 54, 29);
      Node node2 = new Node(57, node1, 40, 0);
      node1.removeChildren();
      node0.isArrayLit();
      node0.isString();
      Node node3 = new Node(8, node0, node0, 2, 16);
      node3.getChildCount();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(117);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      Node node2 = new Node(15, 1762, (-3807));
      Node.newString(48, "Object#Key");
      node1.isContinue();
      node0.isNull();
      node1.getChildCount();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newString(108, "?QZRw2Qg:dzd'", 108, 108);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isWhile();
      node0.putProp(108, (Object) null);
      Node node1 = new Node(39, node0, node0, 13, 49);
      node1.cloneTree();
      node0.useSourceInfoIfMissingFrom(node1);
      node0.getDirectives();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(38, node0, 2, 46);
      node1.isAnd();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = Node.newNumber((-2593.6842729355));
      node3.getJsDocBuilderForNode();
      node2.isFunction();
      node1.putIntProp(85, 8);
      Node node4 = new Node(787, 1178, 122);
      node2.toStringTree();
      node3.hasOneChild();
      node1.isBreak();
      node2.isDefaultCase();
      node3.isOptionalArg();
      node1.isGetElem();
      // Undeclared exception!
//      try { 
        node1.isUnscopedQualifiedName();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 85
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(27);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.wasEmptyNode();
      node0.addSuppression((String) null);
      node0.getInputId();
      node0.setVarArgs(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      node0.isFalse();
      node0.isNot();
      node0.isDefaultCase();
      node0.isNew();
      node0.setSourceEncodedPosition(392);
      node0.isThrow();
      node0.getChangeTime();
      Node node1 = node0.cloneNode();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(112);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(16, node1, node0, node0, 47, 119);
      Node node3 = new Node(122, 51, (-3714));
      Node node4 = new Node(42, node3, 43, 1829);
      node1.isArrayLit();
      node2.isString();
      Node node5 = null;
//      try {
        node5 = new Node(977, node4, node0, 4095, 119);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(114);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      node1.toString(false, false, true);
      Node node2 = new Node(1764);
      node1.isVoid();
      node2.isLabel();
      node0.isUnscopedQualifiedName();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(125, "com.google.javascript.rhino.Node$NodeMismatch", 114, 114);
      node0.checkTreeEqualsImpl(node0);
      node0.setSourceFileForTesting("com.google.javascript.rhino.Node$NodeMismatch");
      node0.getSourceFileName();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.getQualifiedName();
      node0.hasOneChild();
      node0.isComma();
      node0.getChangeTime();
      node0.isBreak();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(38, node0, 2, 46);
      node1.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.copyInformationFromForTree(node0);
      node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NAME
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString("+j,\"b[W");
      Node node1 = Node.newNumber((double) 48);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node node2 = node1.clonePropsFrom(node0);
      Node node3 = new Node(1, node0, node2, node2);
      node0.isWith();
      node3.children();
      node3.getChildCount();
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = Node.newString("+j,\"b[W");
      Node node1 = Node.newNumber((double) 48);
      Node node2 = node1.clonePropsFrom(node0);
      node1.getLength();
      Node node3 = new Node(1, node0, node2, node2);
      node0.isWith();
      node3.children();
      node3.getChildCount();
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      HashSet<JSType> hashSet0 = new HashSet<JSType>();
      Iterator<JSType> iterator0 = hashSet0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString((-1869), "", 1389, 40);
      node0.isCast();
      node1.mayMutateArguments();
      node0.getInputId();
      node0.isLabelName();
      node1.isTrue();
      node0.isDefaultCase();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-245));
      Node node0 = Node.newString("", 38, (-1784));
      Node node1 = Node.newNumber(0.0);
      node0.putIntProp(57, 55);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      node0.setLineno((-2528));
      Node node2 = new Node(42, node0, node0, node1);
      node2.srcref(node0);
      node2.checkTreeEquals(node0);
      node1.isObjectLit();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node2.getChildCount();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newString(130, "com.google.javascript.rhino.Node$NodeMismatch", 130, 130);
      node0.isGetProp();
      Node node1 = Node.newString(48, "com.google.javascript.rhino.Node$NodeMismatch", 155, 12);
      node1.setChangeTime(1505);
      node1.isQuotedString();
      node1.isSetterDef();
      node1.isBreak();
      node1.getBooleanProp((-2008));
      node1.isDefaultCase();
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0);
      Node node2 = new Node(43, node1, 47, 2047);
      node2.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isWith();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(126);
      Node node1 = node0.cloneNode();
      node0.setSourceEncodedPosition(1);
      Node.newNumber((double) 40);
      StringWriter stringWriter0 = new StringWriter();
      node0.appendStringTree(stringWriter0);
      node1.isScript();
      Vector<Node> vector0 = new Vector<Node>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isDo();
      node0.isEmpty();
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.isNull();
      node0.isNE();
      node0.isNew();
      node0.isFor();
      node0.isAnd();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(43, nodeArray0, 112, 8);
      Node node2 = node1.srcrefTree(node0);
      node1.isQualifiedName();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.putProp(1, (Object) null);
      node0.isUnscopedQualifiedName();
      node0.getChildCount();
      node0.isDebugger();
      node2.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(117);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      Node node3 = new Node(38, node1, node2, node0, node1, 4095, 47);
      node2.setSourceEncodedPosition(1);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      Node node5 = Node.newNumber((-1744.0));
      node0.isFunction();
      node4.putIntProp(32, 54);
      Node node6 = node2.srcref(node5);
      node1.useSourceInfoFromForTree(node4);
      node4.checkTreeEquals(node5);
      node1.isObjectLit();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node6.getChildCount();
      node5.isDebugger();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newString("+j,\"b[W");
      Node node1 = Node.newNumber((double) 48);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node node2 = node1.clonePropsFrom(node0);
      node2.putIntProp(56, 50);
      Node node3 = new Node(31, node0, node1, node2, node2);
      node3.srcref(node2);
      node3.checkTreeEquals(node0);
      node0.isObjectLit();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.getChildCount();
      node0.isDebugger();
      node1.cloneTree();
      Node.extractLineno((-1586));
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString("J~#=R8)imZ\"+:&#2", 597, 597);
      Node node1 = new Node(1, node0, node0, node0);
      Node node2 = new Node(32, 43, 31);
      node0.isObjectLit();
      node0.isEquivalentToTyped(node2);
      node0.hasChildren();
      node0.isDefaultCase();
      Node node3 = node1.removeFirstChild();
      node0.isContinue();
      Node node4 = new Node(56, node3, node1, node1, node1, 329, 21);
      // Undeclared exception!
//      try { 
        node4.replaceChild(node2, node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString(108, "?QZRw2Qg:dzd'", 108, 108);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isWhile();
      Node node1 = Node.newString(38, "?QZRw2Qg:dzd'");
      node1.isName();
      node0.isCatch();
      node1.isEmpty();
      Node node2 = new Node(4095, node0, node0, node1, 1083, 2147483645);
      node2.removeChildAfter(node0);
      node0.isOptionalArg();
      node2.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node1 = new Node(31, node0, node0, node0, 0, 40);
      node0.isHook();
      node1.getBooleanProp(64);
      node0.isAnd();
      node1.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DELPROP
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newString(114, "Y\"C", 114, 114);
      node0.isDo();
      node0.checkTreeEqualsImpl(node0);
      node0.isGetProp();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.wasEmptyNode();
      Node node1 = new Node(39, node0);
      node1.useSourceInfoFrom(node0);
      node1.getInputId();
      int int0 = Node.FREE_CALL;
      node1.isGetElem();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node(108, 125, 122);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.isNull();
      node0.setDirectives(treeSet0);
      Node node1 = Node.newString(119, "NUMBER_OBJECT_FUNCTION_TYPE");
      Node node2 = node0.srcref(node1);
      node2.checkTreeEquals(node1);
      node0.isObjectLit();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.getChildCount();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = node0.cloneNode();
      node1.getSourceOffset();
      node1.setSourceEncodedPosition((-2389));
      Node node2 = Node.newNumber(866.0);
      node2.isScript();
      Vector<Node> vector0 = new Vector<Node>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isDo();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node((-2070), (-2070), 3970);
      Node node1 = new Node(1111, node0, 119, 1803);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node0.addChildrenAfter(node1, (Node) null);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newNumber(0.7);
      node0.setChangeTime(105);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
//      try { 
        node0.setString("): ");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 0.7 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString("J~#=R8)imZ\"+:&#2", 597, 597);
      Node node1 = new Node(1, node0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      Node node3 = new Node(30);
      Node node4 = new Node(406, node2, node1, node2, node3, 4095, 43);
      node3.setSourceEncodedPosition(3770);
      Node node5 = node3.useSourceInfoIfMissingFromForTree(node4);
      Node.newNumber((double) 50);
      node0.isFunction();
      node5.putIntProp(12, 1889);
      node0.srcref(node3);
      Node node6 = null;
//      try {
        node6 = new Node(110, node5, node0, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isDo();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isCatch();
      int int0 = Node.POST_FLAG;
      node0.getCharno();
      node0.isAssignAdd();
      node0.isFalse();
      node0.isVoid();
      node0.setSourceFileForTesting("H,3/-n3");
      node0.getSourceOffset();
      node0.isScript();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Node node2 = new Node(4, node1, node0, node0);
      Node node3 = new Node(55);
      String string0 = "r+f]@X4\\RO#00>kF}";
      Node node4 = new Node((-1043), 4849, (-1186));
      String string1 = "O";
      Node node5 = Node.newString(15, "O");
      node5.isUnscopedQualifiedName();
      int int0 = (-569);
      int int1 = (-2591);
      // Undeclared exception!
//      try { 
        node2.removeChild(node5);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.getAncestor(0);
      Node node1 = new Node(1, 49, 0);
      node1.siblings();
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte) (-41);
      byteArray0[2] = (byte) (-95);
      byteArray0[3] = (byte) (-55);
      byteArray0[4] = (byte) (-125);
      byteArray0[5] = (byte)8;
      byteArray0[6] = (byte) (-105);
      byteArray0[7] = (byte)49;
      byteArray0[8] = (byte)102;
      // Undeclared exception!
//      try { 
        ByteBuffer.wrap(byteArray0, 155, 0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.ByteBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ASSIGN");
      Node node0 = Node.newString(114, "Y\"C", 114, 114);
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCatch();
      int int0 = Node.POST_FLAG;
      node0.getCharno();
      node0.isAssignAdd();
      node0.putProp(50, node0);
      node0.toStringTree();
      node0.isSwitch();
      node0.isWith();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = new Node(124);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = new Node(15, node0, node1);
      node1.isVoid();
      node1.isLabel();
      node1.isUnscopedQualifiedName();
      node0.getChildCount();
      node2.isDebugger();
      node2.isLabelName();
      node1.isLocalResultCall();
      node1.isAssign();
      node2.useSourceInfoFrom(node0);
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newString(114, "Y\"C", 114, 114);
      node0.isDo();
      node0.checkTreeEqualsImpl(node0);
      node0.isCatch();
      int int0 = Node.POST_FLAG;
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isCase();
      node0.getSideEffectFlags();
      Node node1 = new Node((-2895), node0, node0, 126, 47);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node2 = null;
//      try {
        node2 = new Node(301, nodeArray0, 0, 57);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      node0.isDo();
      Node node1 = Node.newString("O");
      node0.checkTreeEqualsImpl(node1);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[4] = node1;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[4];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, false, jSTypeArray0);
      jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      Node node2 = new Node((-934), node1, node1, node1);
      ObjectType objectType0 = ObjectType.cast(jSTypeArray0[2]);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSTypeArray0[2], jSTypeArray0[0], jSTypeArray0[1], jSTypeArray0[0], (JSType) objectType0, jSTypeArray0[2], jSType0, jSTypeArray0[2], jSTypeArray0[3]);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.toStringTree();
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.setVarArgs(true);
      node0.isFalse();
      node0.isVoid();
      node0.isNE();
      node0.isNE();
      node0.isGetProp();
      node0.isNull();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isThis();
      node0.isEmpty();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(35, nodeArray0, 667, 48);
      node0.isNoSideEffectsCall();
      node1.setSourceFileForTesting("H,3/-n3");
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newString(108, "?QZRw2Qg:dzd'", 4713, 108);
      node0.getAncestors();
      node0.isDo();
      Node node1 = new Node(38, node0, node0);
      Node node2 = new Node(113, node1, 16, 4095);
      node2.isFor();
      node2.cloneTree();
      Node node3 = null;
//      try {
        node3 = new Node(124, node0, node1, 4, 49);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.Iterators$1");
      Node node1 = new Node((-2141), node0);
      node1.isFor();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node0.getIntProp((-2133));
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      node3.getIntProp(2);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-3979.465));
      node0.addChildToBack(node1);
      Node node2 = Node.newNumber((-3979.465));
      node1.isStringKey();
      Node node3 = new Node(105, 4095, 52);
      Node node4 = new Node(43, 101, 578);
      node0.isHook();
      Node node5 = new Node(51, 48, 2);
      node4.copyInformationFromForTree(node0);
      node2.putBooleanProp(2, true);
      node5.isGetterDef();
      node1.getInputId();
      node4.isHook();
      node3.removeProp(42);
      node2.toString(false, false, true);
      node4.isIn();
      node2.isDebugger();
      node2.getIndexOfChild(node0);
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(31);
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      Node node3 = Node.newString(53, "");
      node2.setSourceEncodedPosition(1);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      Node node5 = Node.newNumber((-1744.0));
      node5.isAssignAdd();
      node4.putIntProp(32, 54);
      node2.srcref(node5);
      node4.checkTreeEquals(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      Node.extractLineno(30);
      Node node6 = node1.getLastSibling();
      node6.addChildToBack(node5);
      node1.getAncestor(52);
      node1.cloneTree();
      node3.removeProp(56);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node(124);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = node0.cloneNode();
      node0.isSyntheticBlock();
      Node node2 = new Node(53);
      node1.isVoid();
      node1.isLabel();
      node1.isUnscopedQualifiedName();
      node0.getChildCount();
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node0.getJSDocInfo();
      node2.isDebugger();
      node1.isLabelName();
      node1.checkTreeEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = Node.newString("J~#=R8)imZ\"+:&#2", 597, 597);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(1, node0, node0, node0);
      Node node2 = new Node(32, 43, 256);
      node0.isFalse();
      node1.hasOneChild();
      node1.getInputId();
      node1.isEquivalentTo(node2);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      node1.isReturn();
      node2.srcref(node0);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = Node.newString(33, "{>`On", 26, 35);
      Node node1 = new Node((-168), node0, node0, node0, node0);
      Node node2 = new Node(33, node1, node1, node1);
      node2.clonePropsFrom(node0);
      Node node3 = new Node(33, node2, node2, 120, 42);
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString(125, "com.google.javascript.rhino.Node$NodeMismatch", 125, 125);
      node0.isGetProp();
      Node node1 = Node.newString(48, "com.google.javascript.rhino.Node$NodeMismatch", 155, (-500));
      Node node2 = new Node(50, node0, node1, node1, node1, (-2418), 2006);
      node2.getSideEffectFlags();
      Node node3 = Node.newString(53, "com.google.javascript.rhino.Node$NodeMismatch");
      node3.isVarArgs();
      // Undeclared exception!
//      try { 
        node1.addChildAfter(node0, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.FunctionParamBuilder");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.addSuppression("com.google.javascript.rhino.jstype.FunctionParamBuilder");
      node1.getAncestors();
      node1.isString();
      node0.getString();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isGetterDef();
      node0.getInputId();
      node0.isGetterDef();
      node1.getInputId();
      node0.isHook();
      node0.removeProp(43);
      node0.toString(true, false, true);
      Node node2 = Node.newNumber((double) 12);
      node2.setIsSyntheticBlock(false);
      node2.isIn();
      node1.isDebugger();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = new Node((-26));
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = node1.cloneNode();
      node1.setSourceEncodedPosition(57);
      Node.newNumber(1.2);
      node1.isScript();
      Vector<Node> vector0 = new Vector<Node>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isThis();
      node2.isDo();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(54, node0, node0);
      Node node2 = Node.newNumber(0.0, 4095, 21);
      node2.setVarArgs(true);
      node1.isObjectLit();
      node1.isEquivalentToTyped(node1);
      node2.isNot();
      node2.hasChildren();
      node0.isDefaultCase();
      node2.removeFirstChild();
      node2.isContinue();
      node1.replaceChild(node0, node2);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newString("Y\"C");
      Node node1 = new Node(113, 56, (-1881));
      Node node2 = Node.newNumber(0.7, 46, 0);
      node0.setVarArgs(true);
      node0.isAnd();
      int int0 = Node.POST_FLAG;
      node2.getCharno();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node2.putProp(1, node3);
      node3.isSwitch();
      node0.isWith();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString(101, "?QZRw2Qg:dzd'", 4721, 101);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.getAncestors();
      node0.isWhile();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isThis();
      node0.isStringKey();
      Node node1 = new Node(2465, node0, 51, 98);
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node.extractCharno((-2572));
      Node node0 = new Node((-1504), 2112, (-3224));
      node0.setIsSyntheticBlock(false);
      node0.getAncestors();
      node0.isWith();
      node0.isNE();
      node0.isIn();
      node0.isComma();
      node0.isFromExterns();
      node0.isInstanceOf();
      Node node1 = new Node(37, node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node0.copyInformationFromForTree(node1);
      node1.getSourceOffset();
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newString(125, "com.google.javascript.rhino.Node$NodeMismatch", 114, 114);
      node0.isGetProp();
      Node node1 = Node.newString(48, "com.google.javascript.rhino.Node$NodeMismatch", 155, (-500));
      Node node2 = new Node(37, node0, node0, node1, 4, 47);
      node1.checkTreeEqualsImpl(node2);
      node1.setSourceFileForTesting("com.google.javascript.rhino.Node$NodeMismatch");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node2.getQualifiedName();
      node2.isGetElem();
      node1.getStaticSourceFile();
      node0.hasChildren();
      node1.isNew();
      node0.children();
      node2.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString(108, "?QZRw2Qg:dzd'", 4743, 108);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.setSourceFileForTesting("?QZRw2Qg:dzd'");
      node0.getAncestors();
      node0.isWhile();
      node0.isAnd();
      Node node1 = new Node(49, node0, node0, node0);
      node1.hasChild(node0);
      Node.extractLineno(36);
      node1.getLastSibling();
      node1.isInc();
      node1.isTry();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = Node.newString(108, "?QZRw2Qg:dzd'", 4743, 108);
      node0.getAncestors();
      node0.isDo();
      Node node1 = new Node(38, node0, node0);
      Node node2 = new Node(113, node1, 16, 4095);
      node2.isFor();
      node0.checkTreeEqualsImpl(node2);
      node2.removeFirstChild();
      node2.isTry();
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node((-1371), (-1371), (-1371));
      Node node1 = new Node(37);
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node3 = new Node(2);
      Node node4 = new Node((-3118), node3, node2, node2, node1);
      Node node5 = node4.copyInformationFrom(node1);
      Node node6 = null;
//      try {
        node6 = new Node(50, node0, node5, node3, node1, 4095, 46);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-245));
      Node node0 = Node.newString("", 38, (-1784));
      Node node1 = Node.newNumber(0.0);
      node0.putIntProp(2441, 55);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      node0.setLineno((-2528));
      Node node2 = new Node(42, node0, node0, node1);
      Node node3 = new Node(155, 54, 50);
      node3.toStringTree();
      Node node4 = node2.srcrefTree(node1);
      node3.isSetterDef();
      node0.children();
      Node node5 = new Node(38, node4, node3, 42, 29);
      // Undeclared exception!
//      try { 
        node3.addChildAfter(node5, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node(2822, 2822, 2822);
      Node node1 = new Node(30);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(2822, node0, node0, node0, node0);
      node2.isLabel();
      node1.addSuppression("1x suv+k{");
      node3.setSourceEncodedPosition(57);
      node0.cloneNode();
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node1);
      node0.detachFromParent();
      node2.getBooleanProp(54);
      node3.isTrue();
      node3.getLength();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node5 = node0.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
//      try { 
        node5.addChildAfter(node2, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newNumber((-3214.732064539));
      Node node1 = new Node(105, 57, (-1932735280));
      node1.isStringKey();
      Node node2 = new Node(42, node0, node0, node0, node1, (-533), 49);
      node0.getInputId();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.toStringTree();
      node0.isGetterDef();
      node2.getInputId();
      node3.isHook();
      node2.isEquivalentTo(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "bFVfQHKq#UC");
      Node node4 = Node.newString("Should not happen\n");
      node4.setQuotedString();
      node4.isDefaultCase();
      node1.isInc();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newNumber((-3214.732064539));
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node0.isSyntheticBlock();
      Node node2 = node1.copyInformationFrom(node0);
      node1.copyInformationFrom(node2);
      Node node3 = new Node(37, node0, node0, node2, node2, 21, 31);
      node3.setSourceEncodedPosition(31);
      Node node4 = node0.useSourceInfoIfMissingFromForTree(node2);
      Node node5 = Node.newNumber((double) 37);
      node5.isFunction();
      node0.putIntProp(39, 48);
      node1.srcref(node4);
      node0.checkTreeEquals(node5);
      node2.isObjectLit();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node6 = null;
//      try {
        node6 = new Node((-297), node1, 40, 36);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString("~ ]t7~2=eJvVEt.. ");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      node0.isOptionalArg();
      JSType jSType0 = modificationVisitor0.caseStringType();
      node0.setJSType(jSType0);
      Predicate<JSType> predicate0 = (Predicate<JSType>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(predicate0).apply(any(com.google.javascript.rhino.jstype.JSType.class));
      jSType0.isObject();
      jSType0.setValidator(predicate0);
      node0.isStringKey();
      Node node1 = node0.getAncestor(0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node1;
      Node node2 = null;
//      try {
        node2 = new Node(48, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newString(125, "com.google.javascript.rhino.Node$NodeMismatch", 114, 114);
      node0.isWhile();
      node0.setOptionalArg(false);
      node0.isBlock();
      Node node1 = Node.newString(37, "com.google.javascript.rhino.Node$NodeMismatch");
      Node node2 = new Node(51);
      node1.getSideEffectFlags();
      Node node3 = new Node((-2014), node0, node0, 37, 1);
      // Undeclared exception!
//      try { 
        node2.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-245));
      Node node0 = Node.newString("", 38, (-1784));
      Node node1 = Node.newNumber(0.0);
      node0.putIntProp(2441, 55);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      node0.setLineno((-2528));
      node1.isEquivalentTo(node0);
      Node node2 = new Node((-870), node1, node1, node0);
      Node node3 = Node.newString(57, "*ini@Elg0");
      node2.getQualifiedName();
      node1.isOnlyModifiesArgumentsCall();
      node3.isContinue();
      node1.isRegExp();
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString("Y\"C");
      Node node1 = new Node(113, 56, (-1881));
      Node node2 = node1.copyInformationFrom(node0);
      Node node3 = Node.newString(54, "lluY.v+p");
      node3.setSourceEncodedPosition(29);
      node2.isString();
      Node node4 = new Node(2, node0, 102, 56);
      node2.isGetterDef();
      // Undeclared exception!
//      try { 
        node1.getChildBefore(node4);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O;S]A ");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = new Node((-553), node1, node2, node0, node0, 32, 4);
      node1.isThrow();
      node3.children();
      Node node4 = node3.removeChildAfter(node1);
      Node node5 = new Node(35, node3, node3, node4);
      node5.isEmpty();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-245));
      Node node0 = Node.newString("", 38, (-1784));
      Node node1 = Node.newNumber(0.0);
      node0.putIntProp(2436, 55);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      node0.setLineno((-2528));
      Node node2 = new Node(42, node0, node0, node1);
      Node node3 = new Node(155, 54, 50);
      node3.toStringTree();
      Node node4 = Node.newString((-2095), "", (-1566), 120);
      node3.useSourceInfoFrom(node4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node3.isSetterDef();
      Iterable<Node> iterable0 = new ArrayDeque<Node>((-1784));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node1.isNew();
      // Undeclared exception!
//      try { 
        node3.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(119, 837, (-955));
      Node node1 = Node.newString("d0[BB/]qHxm2loMg", 94, 2);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.FunctionParamBuilder");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isString();
      node0.getString();
      int int0 = 823;
      node0.removeProp(823);
      node1.putIntProp(31, (-2624));
      // Undeclared exception!
//      try { 
        node1.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 31
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newString("Y\"C");
      Node node1 = new Node(113, 56, (-1881));
      Node node2 = Node.newNumber(0.7, 46, 0);
      node0.setVarArgs(true);
      node0.isAnd();
      node2.isFalse();
      Node node3 = Node.newString("Y\"C");
      Node node4 = new Node(47, node3, node2, 3199, 53);
      node4.isNot();
      node4.isLocalResultCall();
      node3.isNull();
      node3.isDefaultCase();
      Node node5 = new Node((-2459), node4, node1, node4, node0);
      Node node6 = node5.removeFirstChild();
      node6.useSourceInfoFromForTree(node0);
      node2.isContinue();
      node4.replaceChild(node3, node6);
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newString(153, "Y\"C");
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isTypeOf();
      node0.getLineno();
      node0.isAssignAdd();
      node0.getInputId();
      node0.isHook();
      node0.isEquivalentTo(node0);
      node0.getJsDocBuilderForNode();
      node0.getInputId();
      node0.getChildCount();
      node0.isDebugger();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-3979.465));
      node0.addChildToBack(node1);
      Node node2 = node1.cloneTree();
      node1.isStringKey();
      Node node3 = new Node(105, 4095, 52);
      node2.isStringKey();
      Node node4 = new Node(39, node3, node0, node3, node3, 16, 2);
      node0.getInputId();
      node1.useSourceInfoIfMissingFromForTree(node2);
      node3.toStringTree();
      node0.isGetterDef();
      node3.getInputId();
      node3.isHook();
      node0.isEquivalentTo(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "V6Uu!V~f]");
      Node.newString("~oTJ\"W'\"gR;eMm-cL");
      node2.isDefaultCase();
      node0.isInc();
      node4.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(117);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      Node node3 = new Node(38, node1, node2, node0, node1, 4095, 47);
      node2.setSourceEncodedPosition(1);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      Node node5 = Node.newNumber((-1744.0));
      node0.isFunction();
      node4.putIntProp(32, 54);
      node2.srcref(node5);
      node4.checkTreeEquals(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node4.isQuotedString();
      node3.isNew();
      node3.isWith();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = Node.newString("Uxhz?]}gg");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.isEquivalentToShallow((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = new Node(105, (-1937), 105);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.setLineno(308);
      Node node1 = Node.newString(155, "NUMBER_OBJECT_FUNCTION_TYPE");
      node1.isBlock();
      Node node2 = Node.newString(36, "HOOK");
      Node node3 = new Node(115);
      node2.getSideEffectFlags();
      Node node4 = new Node(39, node0, node0, (-669), 15);
      node4.useSourceInfoFromForTree(node2);
      // Undeclared exception!
//      try { 
        node1.addChildrenAfter(node3, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newString(108, "?QZRw2Qg:dzd'", 4743, 108);
      node0.getAncestors();
      node0.isDo();
      Node node1 = new Node(38, node0, node0);
      Node node2 = new Node(113, node1, 16, 4095);
      node2.isFor();
      Node node3 = Node.newString(29, "URIError", 43, 4);
      node3.setQuotedString();
      Node node4 = new Node(54);
      node1.getLastSibling();
      node2.isInc();
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = new Node(6);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(16, node0, node0, node0);
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node1.addSuppression("&");
      Node node3 = Node.newString(34, "io.7WwHrUN");
      node3.isContinue();
      node2.isLabel();
      node3.isNull();
      node3.isUnscopedQualifiedName();
      node2.getChildCount();
      node3.isDebugger();
      node2.isLabelName();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 37);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Node node2 = new Node(32, node1, node1, node1);
      Node node3 = new Node((-619), node2, 47, 53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node_SideEffectFlags0.setMutatesArguments();
      Node node4 = Node.newString(45, "r+f]@X4RO#00>kF}");
      node4.setSourceFileForTesting("");
      Node node5 = Node.newString(38, "com.google.common.collect.UnmodifiableIterator");
      node5.isUnscopedQualifiedName();
      Node node6 = Node.newString(38, "r+f]@X4RO#00>kF}", 56, 31);
      node6.getQualifiedName();
      node6.getParent();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node((-2464));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isSyntheticBlock();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node1 = new Node(39, node0, node0, node0);
      node1.getLength();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node2 = new Node(119);
      node2.isEquivalentTo(node0);
      node2.isNE();
      node0.isAnd();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newString("Y\"C");
      Node node1 = new Node(113, 56, (-1881));
      Node node2 = Node.newNumber(0.7, 46, 0);
      node0.setVarArgs(true);
      node0.isAnd();
      node2.isFalse();
      Node node3 = Node.newString("Y\"C");
      Node node4 = new Node(47, node3, node2, 3199, 53);
      node4.isNot();
      node3.isNull();
      node3.isDefaultCase();
      Node node5 = new Node((-2459), node4, node1, node4, node0);
      Node node6 = node5.removeFirstChild();
      node2.isContinue();
      node4.replaceChild(node3, node6);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = new Node((-1937), 32, 64);
      node2.setSourceEncodedPosition(0);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node1);
      Node node5 = Node.newNumber(1854.4953506);
      node1.isFunction();
      node4.putIntProp(46, 40);
      node5.srcref(node4);
      node1.setIsSyntheticBlock(true);
      node1.checkTreeEquals(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isQuotedString();
      node1.isNew();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node2;
      nodeArray0[1] = node3;
      Node node6 = new Node((-6553), nodeArray0, 120, 2);
      node6.children();
      node6.removeChildAfter(node2);
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.setVarArgs(true);
      node0.isFalse();
      node0.isVoid();
      node0.isNE();
      node0.isNE();
      node0.isGetProp();
      node0.isNull();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, false, jSTypeArray0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      jSTypeArray0[1] = (JSType) functionType1;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = new Node(102, node1, node0, node1);
      node2.toStringTree();
      Node node3 = node0.getLastSibling();
      node2.isInc();
      Node node4 = null;
//      try {
        node4 = new Node(1, node0, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(53, 49, 16);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setLineno(37);
      node0.isBlock();
      Node node2 = Node.newString((-1996), "HOOK");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
//      try { 
        node2.appendStringTree(pipedWriter0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -1996
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(105, (-1937), 105);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) linkedList0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCase();
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.valueOf();
      Node.mergeLineCharNo(36, 16);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("com.google.common.base.Predicates", 2480, 637);
      nodeArray0[0] = node0;
      Node node1 = new Node(36, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.getBooleanProp((-1094));
      node0.isTrue();
      node0.setWasEmptyNode(true);
      node1.getLength();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = new Node(1168);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a constructor", node0, jSTypeArray0[0]);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getParentScope();
      jSTypeArray0[1] = (JSType) null;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      nodeArray0[0] = node1;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      nodeArray0[1] = node2;
      Node node3 = new Node(1083, nodeArray0);
      Node node4 = new Node(21, node3, node3);
      node4.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 30);
      node1.getJsDocBuilderForNode();
      node0.addChildToBack(node1);
      Node node2 = node1.cloneTree();
      node2.isStringKey();
      Node node3 = new Node(43, 101, 578);
      node0.getInputId();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "xT");
      node3.isFalse();
      node2.isNot();
      node0.isNull();
      node3.isDefaultCase();
      Node node4 = Node.newString("com.google.common.base.Predicates");
      node4.isNew();
      Node node5 = null;
//      try {
        node5 = new Node(32, node2, node1, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newString(153, "Y\"C");
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isTypeOf();
      node0.getLineno();
      node0.isAssignAdd();
      Node node1 = new Node(153, node0);
      node0.getInputId();
      node1.isHook();
      node1.isEquivalentTo(node0);
      node0.getInputId();
      node0.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node1.isNoSideEffectsCall();
      node_SideEffectFlags1.setThrows();
      Node.extractLineno(118);
      Node node2 = node1.getLastSibling();
      node2.isDec();
      // Undeclared exception!
//      try { 
        node2.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = new Node(6);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(16, node0, node0, node0);
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.setLineno(94);
      Node node3 = new Node(124, node2, node2, node1);
      node3.isFalse();
      node1.wasEmptyNode();
      node3.isScript();
      node2.isVarArgs();
      Node node4 = node3.getLastSibling();
      node2.isInc();
      Node node5 = null;
//      try {
        node5 = new Node(1, node1, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newNumber((double) 108);
      node0.isArrayLit();
      node0.isString();
      Node node1 = new Node(0, node0);
      Node node2 = new Node((-1724), 43, 43);
      node2.getInputId();
      node1.isEquivalentTo(node2);
      Node.newString("J-/I_>Ar>7", 4095, (-2201));
      Node.extractLineno(32);
      Node node3 = node1.getLastSibling();
      node3.isDec();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString(114, "new child has existing parent", 114, 114);
      node0.isDo();
      // Undeclared exception!
//      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString("h");
      node0.addSuppression("h");
      node0.isArrayLit();
      node0.isString();
      Node node1 = new Node(55, node0);
      Node node2 = new Node(3739, 57, 2);
      node1.getInputId();
      node0.isEquivalentTo(node2);
      int int0 = 120;
      String string0 = ")=hn)#-'::270";
      node0.getInputId();
      // Undeclared exception!
//      try { 
        node1.addChildrenAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newString("", 739, 8192);
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node0.putIntProp(39, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setLineno(2);
      node0.isFalse();
      node0.wasEmptyNode();
      Node node1 = new Node(39, node0);
      node1.isParamList();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.getJSDocInfo();
      // Undeclared exception!
//      try { 
        node2.removeChild(node1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newString("J~#=R8)imZ\"+:&#2", 597, 597);
      node0.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
//      try { 
        node0.addChildToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(103, "H,3/-n3", (-471), 1560);
      node0.isDebugger();
      node0.mayMutateGlobalStateOrThrow();
      node0.mayMutateArguments();
      Node node1 = new Node(86, node0, 36, 0);
      node1.isUnscopedQualifiedName();
      node1.removeProp(23);
      node0.getChildCount();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.valueOf();
      Node.extractLineno(606);
      node1.getLastSibling();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = null;
//      try {
        node2 = new Node((-3120), nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = new Node(32);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(16, node0, node0, node0);
      Node node2 = new Node(4095, 40, 40);
      node2.isFalse();
      node2.isRegExp();
      node0.clonePropsFrom(node2);
      Node node3 = new Node((-2201), node2, node1, node2, node2, (-1522), 56);
      node1.isThrow();
      node2.children();
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newString(114, "Y\"C", 114, 114);
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCatch();
      int int0 = Node.POST_FLAG;
      node0.getCharno();
      node0.isAssignAdd();
      node0.putProp(50, node0);
      node0.isSwitch();
      node0.isWith();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isString();
      node0.getString();
      node0.removeProp(57);
      node1.toStringTree();
      node1.isGetterDef();
      node0.getInputId();
      node0.isEquivalentTo(node1);
      node1.getQualifiedName();
      Node node2 = new Node(43, node1, 31, 2);
      node1.isGetElem();
      node0.putBooleanProp(52, false);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node.extractLineno(2529);
      node1.getLastSibling();
      node2.isInc();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      HashSet<JSType> hashSet0 = new HashSet<JSType>();
      hashSet0.iterator();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString((-471), "Object#Element", (-471), (-471));
      node0.isDebugger();
      node0.mayMutateGlobalStateOrThrow();
      node0.mayMutateArguments();
      Node node1 = new Node((-3895), node0, 4095, 4095);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(4, nodeArray0, 48, 108);
      node2.removeProp(17);
      node1.getChildCount();
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2946));
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.valueOf();
      Node.extractLineno(41);
      Node node3 = node1.getLastSibling();
      node3.isInc();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.setVarArgs(true);
      node0.isFalse();
      node0.isVoid();
      node0.isNE();
      node0.isNE();
      node0.isGetProp();
      node0.isNull();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, false, jSTypeArray0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      jSTypeArray0[1] = (JSType) functionType1;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = new Node(102, node1, node0, node1);
      node2.toStringTree();
      node1.isContinue();
      node0.isRegExp();
      node1.isInstanceOf();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = new Node((-1371), 24, 24);
      node0.isOnlyModifiesThisCall();
      Node node1 = node0.getAncestor(0);
      Node.newString("String node not created with Node.newString");
      Node node2 = node0.useSourceInfoIfMissingFrom(node0);
      node2.getJSDocInfo();
      // Undeclared exception!
//      try { 
        node1.removeChild(node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newNumber((double) 108);
      node0.isBreak();
      node0.addSuppression("com.google.javascript.rhino.Node$ObjectPropListItem");
      node0.isArrayLit();
      node0.isString();
      Node node1 = new Node(0, node0);
      Node node2 = new Node((-1724), 43, 43);
      node2.getInputId();
      node0.setSourceEncodedPosition(1023);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node4 = Node.newNumber(1.0);
      node3.isScript();
      Node node5 = node2.srcref(node3);
      node4.children();
      Node node6 = new Node((-687), node5);
      // Undeclared exception!
//      try { 
        node6.checkTreeEquals(node3);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -687
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node0.getInputId();
      node2.setInputId((InputId) null);
      node0.setVarArgs(true);
      node0.isFalse();
      node1.isNot();
      node2.isNull();
      node2.getLastSibling();
      Node node3 = Node.newNumber(0.7);
      node3.isInc();
      node1.isTry();
      node0.isInstanceOf();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node3;
      Node node4 = new Node(2, nodeArray0);
      node1.srcref(node4);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("", 38, (-1797));
      int int0 = Node.COLUMN_MASK;
      node0.putIntProp(2441, 524288);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      node0.setLineno((-2535));
      Node node1 = new Node(42, node0, node0, node0);
      node1.isFalse();
      node1.wasEmptyNode();
      node0.isScript();
      node1.isVarArgs();
      node1.getLastSibling();
      node1.isInc();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.spliterator();
      node0.getAncestors();
      node0.getAncestors();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.iterator();
      Node node1 = Node.newNumber(2001.064856948, 950, 126);
      node1.isDec();
      node0.isGetterDef();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isInc();
      node1.isCatch();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-371), nodeArray0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = node0.cloneTree();
      node3.getSourcePosition();
      Node node4 = new Node(1317, nodeArray0, 32, 47);
      node4.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(124, "INHEEbITED", 124, (-471));
      node0.isDebugger();
      node0.mayMutateGlobalStateOrThrow();
      node0.mayMutateArguments();
      Node node1 = new Node(53, node0, 1, (-2650));
      node1.isUnscopedQualifiedName();
      node1.removeProp(279);
      node1.getChildCount();
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-358));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.valueOf();
      Node.extractLineno(50);
      node0.getLastSibling();
      node1.isInc();
      node1.isTry();
      node0.getChildAtIndex(0);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(32);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(16, node0, node0, node0);
      Node node2 = new Node(4095, 40, 40);
      node2.isFalse();
      node2.isRegExp();
      node0.hasOneChild();
      node2.isEquivalentTo(node1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      node1.isReturn();
      Node.extractLineno(12);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-3979.465));
      node0.addChildToBack(node1);
      Node node2 = node1.cloneTree();
      node1.isStringKey();
      Node node3 = new Node(56, 4095, 52);
      node2.isStringKey();
      Node.newNumber((double) 49, 1, 1);
      node0.getInputId();
      node1.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setAllFlags();
      Node.newString(50, "\"aYD!d32");
      node3.isCase();
      node3.isNE();
      node1.setDouble(36);
      node1.getInputId();
      node1.setInputId((InputId) null);
      node0.getQualifiedName();
      Node.newNumber(1.0);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-3979.465));
      node0.addChildToBack(node1);
      Node node2 = node1.cloneTree();
      node1.isStringKey();
      Node node3 = new Node(105, 4095, 52);
      node2.isStringKey();
      Node node4 = new Node(39, node3, node0, node3, node3, 16, 2);
      node0.getInputId();
      node1.useSourceInfoIfMissingFromForTree(node2);
      node3.toStringTree();
      node0.isGetterDef();
      node3.getInputId();
      node3.isHook();
      node0.isEquivalentTo(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "V6Uu!V~f]");
      Node node5 = Node.newString("~oTJ\"W'\"gR;eMm-cL");
      node5.isAnd();
      node1.getParent();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isString();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getString();
      node0.removeProp(786);
      node1.toStringTree();
      node1.isGetterDef();
      node0.getInputId();
      node0.isEquivalentTo(node1);
      node0.setInputId((InputId) null);
      node1.getQualifiedName();
      Node node2 = new Node(43, node1, 31, 2);
      node1.isNull();
      node1.isDefaultCase();
      node0.isContinue();
      node2.isUnscopedQualifiedName();
      // Undeclared exception!
//      try { 
        node0.isEquivalentTo((Node) null, false, false, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newString(103, "Y\"C", 103, 103);
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCatch();
      int int0 = Node.POST_FLAG;
      node0.getCharno();
      node0.isAssignAdd();
      node0.putProp(50, node0);
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isOptionalArg();
      node0.isWith();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-285));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isSyntheticBlock();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node1 = Node.newString("l4{qm!?");
      Node node2 = new Node(50, node0, node0, node1);
      Node node3 = node2.useSourceInfoFromForTree(node0);
      node1.isEquivalentTo(node3);
      node2.isNE();
      node2.isAnd();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newString("", 105, 105);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node2 = Node.newNumber((-1700.42734352514));
      node1.isScript();
      node2.isAssignAdd();
      node0.putIntProp(38, 26);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      InputId inputId0 = new InputId("Object#Element");
      node0.setInputId(inputId0);
      node1.isThis();
      node2.isStringKey();
      node1.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isAssign();
      Node node1 = Node.newString(35, "rH");
      Node node2 = new Node(57, node0, node0, node1, node1, 2, 36);
      node0.useSourceInfoIfMissingFromForTree(node2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
//      try { 
        node0.appendStringTree((Appendable) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      String string0 = "";
      Node node0 = new Node(105, (-1937), 105);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) linkedList0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCase();
      Node node2 = Node.newString("");
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node3.getJSDocInfo();
      // Undeclared exception!
//      try { 
        node0.removeChild(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-245));
      Node node0 = Node.newString("", 38, (-1797));
      node0.getType();
      InputId inputId0 = new InputId("");
      node0.setInputId(inputId0);
      node0.getString();
      node0.toStringTree();
      node0.isGetterDef();
      node0.getInputId();
      Node node1 = new Node(52, node0, node0);
      node1.isHook();
      Node node2 = Node.newNumber((-34.440002386925), 152, 40);
      Node node3 = Node.newString("H,3/-n3");
      node1.hasChild(node2);
      node0.isThis();
      node1.cloneNode();
      node3.isVar();
      Node node4 = new Node((-1), node3, node3, node1, node3, (-3632), 32);
      node4.cloneTree();
      node4.getChildCount();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-245));
      Node node0 = Node.newString("7a-cpN!<");
      Node node1 = Node.newNumber(1304.18980084938);
      Node node2 = new Node(55);
      node2.addChildrenToBack(node0);
      node0.getSideEffectFlags();
      Node node3 = new Node(39, node2, node1, node2, node2, 48, 1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node3;
      Node node4 = new Node(2051, nodeArray0);
      Node node5 = node3.removeChildAfter(node1);
      node5.isAnd();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString("J~#=R8)imZ\"+:&#2", 597, 597);
      node0.isOnlyModifiesArgumentsCall();
      node0.mayMutateArguments();
      Node node1 = new Node(39, node0, node0, node0);
      Node node2 = new Node(37, node1, 12, 38);
      InputId inputId0 = new InputId("J~#=R8)imZ\"+:&#2");
      node1.setInputId(inputId0);
      // Undeclared exception!
//      try { 
        node1.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString("", 739, 8192);
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node0.putIntProp(39, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setLineno(2);
      node0.isFalse();
      node0.wasEmptyNode();
      Node node1 = new Node(39, node0);
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.valueOf();
      Node.extractLineno(42);
      Node node2 = node1.getLastSibling();
      node2.isInc();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4739, 108);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.spliterator();
      Node.AncestorIterable node_AncestorIterable1 = node0.getAncestors();
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.iterator();
      node0.isDec();
      node0.isGetterDef();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node1 = Node.newString(126, "yJT[(}*:.sadP");
      node0.isName();
      node1.isGetElem();
      node0.isCatch();
      int int0 = Node.NO_SIDE_EFFECTS;
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = Node.newNumber((double) 4095, 1260, (-1747));
      Node node3 = new Node(42, node0, node1, node1, node2, 1, 2097152);
      node3.isThis();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.isNull();
      node0.isNE();
      node0.isNew();
      node0.isFor();
      node0.getLineno();
      node0.isAssignAdd();
      Node node1 = new Node(42, node0);
      node1.getInputId();
      node1.isEquivalentTo(node0);
      node1.getInputId();
      node1.isThis();
      node0.isStringKey();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node0.isSyntheticBlock();
      Node node2 = node1.copyInformationFrom(node0);
      node1.isBlock();
      node2.checkTreeEqualsImpl(node1);
      node0.clonePropsFrom(node1);
      Node node3 = new Node(53);
      node3.addChildToBack(node2);
//      try { 
        node2.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // EMPTY 124 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      Node.newNumber((-1698.6));
      Node node1 = Node.newString(47, "");
      node0.setSourceEncodedPosition(147);
      Node node2 = new Node((-166), 93, 49);
      node2.useSourceInfoIfMissingFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node node3 = new Node(1, node1);
      // Undeclared exception!
//      try { 
        node3.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isString();
      node0.getString();
      node0.removeProp(786);
      node0.setWasEmptyNode(false);
      node1.toStringTree();
      node1.isGetterDef();
      node0.getInputId();
      node0.isEquivalentTo(node1);
      node1.getQualifiedName();
      Node node2 = new Node(43, node1, 31, 2);
      Node node3 = Node.newString(8, "com.google.common.base.Predicates");
      node0.setLength((-518));
      node3.isGetterDef();
      node0.getParent();
      node3.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-3979.465));
      node0.addChildToBack(node1);
      Node node2 = node1.cloneTree();
      node1.isStringKey();
      Node node3 = new Node(38, 4095, 52);
      node2.isStringKey();
      Node node4 = new Node(39, node3, node0, node3, node3, 16, 2);
      node0.getInputId();
      node1.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
//      try { 
        node3.setString("com.google.common.base.Predicates");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newString("", 105, 105);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = Node.newNumber((-1700.42734352514));
      node1.isScript();
      node3.isAssignAdd();
      node0.putIntProp(38, 26);
      Node node4 = node0.srcref(node1);
      Node node5 = new Node(47, node2, node1, node2, node4);
      node1.checkTreeEquals(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      simpleErrorReporter0.error("com.google.javascript.rhino.jstype.JSType$1", "com.google.javascript.rhino.jstype.JSType$1", 83, 86);
      node1.srcrefTree(node3);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      node3.clonePropsFrom(node4);
      Node node6 = null;
//      try {
        node6 = new Node(48, node3, node1, node3, node3, 43, (-463));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = Node.newString(74, "Y\"C");
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isFor();
      node0.getLineno();
      node0.isAssignAdd();
      Node node1 = new Node(153, node0);
      node0.getInputId();
      node1.isHook();
      node1.isEquivalentTo(node0);
      node0.getInputId();
      node1.isWhile();
      node1.isWith();
      node0.isDebugger();
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isString();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getString();
      node0.removeProp(786);
      node1.toStringTree();
      node1.isGetterDef();
      Node node2 = Node.newString("String node not created with Node.newString");
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node0.getJSDocInfo();
      node1.removeChild(node0);
      // Undeclared exception!
//      try { 
        node3.removeChild(node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      node0.getAncestors();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(1033, nodeArray0, (-4717), 12);
      node1.isCast();
      Node node2 = node1.cloneNode();
      node2.isSyntheticBlock();
      Node node3 = new Node(32, node1, node0, node1, 49, 49);
      Node node4 = node3.copyInformationFrom(node2);
      Node node5 = Node.newString(55, "jsdoc_info");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.newNumber((double) 52);
      node2.isGetProp();
      node5.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isEmpty();
      Node node6 = new Node(38);
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node4);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.spliterator();
      node0.getAncestors();
      Node.AncestorIterable node_AncestorIterable1 = node0.getAncestors();
      node_AncestorIterable1.iterator();
      Node.AncestorIterable node_AncestorIterable2 = new Node.AncestorIterable(node0);
      node_AncestorIterable2.iterator();
      node_AncestorIterable2.iterator();
      Node node1 = Node.newNumber(2001.064856948, 950, 126);
      node1.isDec();
      node0.isGetterDef();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node2 = Node.newString(119, "Object#Key");
      node0.isName();
      node1.isInc();
      node2.isCatch();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(1, nodeArray0);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      Node node4 = node3.cloneTree();
      node0.getSourcePosition();
      node4.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte) (-27);
      byteArray0[4] = (byte)52;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("/D=`QB9UE%", (int) (byte)116, 132);
      Node node1 = new Node(132, node0, node0);
      Node node2 = new Node((byte)117, node1, node1, 4095, 30);
      node2.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(136);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = new Node(136, node0, 40, 8);
      node2.isUnscopedQualifiedName();
      node0.removeProp(29);
      node2.getChildCount();
      node2.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1907));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.valueOf();
      Node.extractLineno(105);
      Node node3 = node1.getLastSibling();
      node2.isInc();
      node3.isTry();
      node3.isDo();
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(124, (-471), 124);
      node0.isDebugger();
      node0.mayMutateGlobalStateOrThrow();
      node0.mayMutateArguments();
      Node node1 = new Node(53, node0, 1, (-2650));
      node1.isUnscopedQualifiedName();
      node1.getChangeTime();
      node1.removeProp(279);
      node1.getChildCount();
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-358));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.valueOf();
      Node.extractLineno(33);
      Node node2 = node0.getLastSibling();
      node1.isInc();
      node1.isTry();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(48, node0, (-1907), 46);
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 48
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = new Node(24);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(46, node0, 16, 36);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node1.addSuppression("com.google.common.base.Predicates");
      node0.isContinue();
      node2.isLabel();
      node2.isNull();
      node2.isUnscopedQualifiedName();
      Node node3 = Node.newString(740, "<invalid>", (-854), 30);
      node3.getChildCount();
      node3.isDebugger();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-3979.465));
      node0.addChildToBack(node1);
      Node node2 = node1.cloneTree();
      node2.isStringKey();
      Node node3 = new Node(43, 101, 578);
      node0.getInputId();
      node1.setInputId((InputId) null);
      node0.isHook();
      Node node4 = Node.newString("");
      node4.addChildToFront(node0);
      node0.isEquivalentTo(node4);
      node1.setInputId((InputId) null);
      Node node5 = null;
//      try {
        node5 = new Node(32, node2, node0, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isString();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getString();
      node1.toStringTree();
      node1.isGetterDef();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node1.getQualifiedName();
      Node node2 = new Node(43, node1, 31, 2);
      node1.isGetElem();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags2.valueOf();
      Node.extractLineno(57);
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-245));
      Node node0 = Node.newString("", 38, (-1797));
      node0.getType();
      InputId inputId0 = new InputId("");
      node0.setInputId(inputId0);
      node0.getString();
      node0.toStringTree();
      node0.isGetterDef();
      node0.getInputId();
      Node node1 = new Node(52, node0, node0);
      node1.isHook();
      Node node2 = Node.newNumber((-34.440002386925), 152, 40);
      Node node3 = Node.newString("H,3/-n3");
      node2.isEquivalentTo(node3);
      node0.setInputId(inputId0);
      node3.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-3979.465));
      node0.addChildToBack(node1);
      Node node2 = node1.cloneTree();
      node1.isStringKey();
      Node node3 = new Node(105, 4095, 52);
      node2.isStringKey();
      Node node4 = new Node(39, node3, node0, node3, node3, 16, 2);
      node0.getInputId();
      Node node5 = node1.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setAllFlags();
      node5.checkTreeEquals(node2);
      node_SideEffectFlags0.setMutatesArguments();
      node5.setSourceFileForTesting("com.google.javascript.rhino.Node$AbstractPropListItem");
//      try { 
        node3.setString("com.google.common.base.Predicates");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FUNCTION <invalid> 4095 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      Node node3 = Node.newString(53, "");
      node2.setSourceEncodedPosition(1);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      Node node5 = Node.newNumber((-1744.0));
      node4.isScript();
      node5.isAssignAdd();
      node2.srcref(node5);
      node4.checkTreeEquals(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      node_SideEffectFlags0.setMutatesThis();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newString("", 105, 16);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      Node.AncestorIterable node_AncestorIterable1 = node0.getAncestors();
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = Node.newNumber((-1010.63205));
      node2.isScript();
      node2.isAssignAdd();
      node1.putIntProp(49, 1571);
      Node node3 = node1.srcref(node2);
      Node node4 = new Node((-1393), node0, node0, node3, node3);
      node3.checkTreeEquals(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.valueOf();
      Node.extractLineno(29);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-245));
      Node node0 = Node.newString("", 38, (-1784));
      Node node1 = Node.newNumber(0.0);
      node0.putIntProp(2441, 524288);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString(2, "");
      node0.setSourceEncodedPosition(1);
      node2.useSourceInfoIfMissingFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(12);
      node_SideEffectFlags1.setAllFlags();
      InputId inputId0 = new InputId("!vddAJT8qM");
      node1.setInputId(inputId0);
      node0.isName();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      // Undeclared exception!
//      try { 
        templateTypeMapReplacer0.caseUnionType(unionType0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.Predicates", 2480, 637);
      node0.addSuppression("");
      node0.getAncestors();
      node0.isString();
      node0.getString();
      node0.removeProp(786);
      node0.toStringTree();
      node0.isGetterDef();
      node0.getInputId();
      Node node1 = Node.newString("");
      node0.isEquivalentTo(node1);
      node1.getQualifiedName();
      Node node2 = new Node(4, node0, 4095, 309);
      node1.isGetElem();
      node2.putBooleanProp(309, true);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isLabel();
      Node node3 = new Node(47, node2, 42, 43);
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node2, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 46);
      node0.addSuppression("d11]");
      node0.isEquivalentToShallow(node1);
      node0.getQualifiedName();
      node0.isObjectLit();
      node1.checkTreeEquals(node0);
      InputId inputId0 = new InputId("SSUi>^h6[Hw_75F");
      node1.setInputId(inputId0);
//      try { 
        node1.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 46.0 [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000008] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      node2.isString();
      node0.isOr();
      HashSet<String> hashSet0 = new HashSet<String>();
      Node node3 = Node.newString(38, "com.google.javascript.rhino.Node$IntPropListItem");
      node0.isName();
      node1.isInc();
      node3.isCatch();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = new Node(6);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(16, node0, node0, node0);
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      node2.isRegExp();
      node0.hasOneChild();
      node2.isEquivalentTo(node1);
      node0.getQualifiedName();
      node1.isReturn();
      Node.extractLineno(12);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node1.isDelProp();
      node0.addSuppression("d11]");
      Node node2 = new Node(38, node0, node0, node0);
      Node node3 = new Node(55, node2, 1073741823, 1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      node_SideEffectFlags0.setThrows();
      Node.newString(48, "Sv91p[T8unG");
      Node.newString(49, "<invalid>");
      // Undeclared exception!
//      try { 
        node2.isUnscopedQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = new Node(6);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(16, node0, node0, node0);
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      node2.isRegExp();
      node0.hasOneChild();
      node2.isEquivalentTo(node1);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isLabel();
      Node node3 = new Node((-1057), node1, 1194, 57);
      node3.srcrefTree(node1);
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 6
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      Node node3 = Node.newString(53, "");
      node2.setSourceEncodedPosition(1);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node_SideEffectFlags0.setAllFlags();
      node0.isName();
      node0.isCatch();
      Node node5 = new Node(8, node4);
      node5.checkTreeTypeAwareEqualsImpl(node2);
      node3.cloneTree();
      node0.isFunction();
      node3.setString("");
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      node2.wasEmptyNode();
      node0.isBlock();
      node1.checkTreeEqualsImpl(node0);
      Node node3 = new Node(46, node2, node2, node1);
      Node node4 = new Node(15);
      Node node5 = node1.useSourceInfoFromForTree(node4);
      node5.isEquivalentTo(node2);
      node3.isNE();
      node5.isAnd();
      node3.getParent();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString("", 105, 16);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = Node.newNumber((-1700.42734352514));
      node1.isScript();
      node3.isAssignAdd();
      node0.putIntProp(38, 26);
      Node node4 = node0.srcref(node1);
      Node node5 = new Node(47, node2, node1, node2, node4);
      node1.checkTreeEquals(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      Node.extractLineno(38);
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      Node.newString(53, "");
      node2.setSourceEncodedPosition(1);
      Node node3 = Node.newNumber(1088.2366053);
      node3.isCase();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node4 = new Node(63, node1, (-6213), 5244);
      Node node5 = new Node(2, node0, node3, 101, 38);
      node4.clonePropsFrom(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node_SideEffectFlags0.setThrows();
      Node.newString(1726, "Object#Key");
      node0.isUnscopedQualifiedName();
      Node node6 = Node.newString(4095, "6t}E\"%", 42, 51);
      node6.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(29, 16, 29);
      Node node2 = Node.newNumber(0.0, 4095, 69);
      node2.setVarArgs(false);
      node1.toString();
      node1.isArrayLit();
      node1.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      int int0 = 11;
      Node node3 = null;
//      try {
        node3 = new Node(54, node0, (Node) null, node1, node1, 54, 621);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      Node node1 = Node.newNumber((-1698.6));
      node0.addSuppression("<invalid>");
      node0.isContinue();
      node0.isLabel();
      node0.isNull();
      node1.isUnscopedQualifiedName();
      node0.getChildCount();
      node0.isDec();
      node1.isNoSideEffectsCall();
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString("J~#=R8)imZ\"+:&#2", 597, 597);
      node0.isOnlyModifiesArgumentsCall();
      node0.mayMutateArguments();
      Node node1 = new Node(39, node0, node0, node0);
      Node node2 = new Node(37, node1, 12, 38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.isEmpty();
      Node node3 = Node.newString(42, "J~#=R8)imZ\"+:&#2");
      node3.getQualifiedName();
      node2.isOnlyModifiesArgumentsCall();
      node3.isContinue();
      node0.isRegExp();
      node1.isInstanceOf();
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node0, node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node1.toStringTree();
      node_AncestorIterable0.forEach(consumer1);
      node_AncestorIterable0.spliterator();
      Node node2 = node1.clonePropsFrom(node0);
      Node node3 = new Node(43, node0, node0, node1, node0, 55, 49);
      node1.toString();
      node3.isThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(38);
      node2.isName();
      // Undeclared exception!
//      try { 
        node3.replaceChildAfter(node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.Predicates", 2480, 637);
      Node node1 = Node.newString(1, "'=YTP'-4");
      node0.setSourceEncodedPosition(37);
      node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.newNumber(0.0);
      HashSet<String> hashSet0 = new HashSet<String>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      // Undeclared exception!
//      try { 
        node1.setDouble(0.0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node2 = jSTypeRegistry1.createParameters((List<JSType>) linkedList0);
      node2.isCase();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = Node.newString("Object#Key");
      Node node4 = node1.clonePropsFrom(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setThrows();
      Node.newString(50, "_({h:");
      node4.isUnscopedQualifiedName();
      Node node5 = Node.newString(36, "Object#Element", 36, (-1228));
      node5.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isString();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getString();
      node0.removeProp(786);
      node1.toStringTree();
      node1.isGetterDef();
      node0.getInputId();
      node0.isEquivalentTo(node1);
      node0.setInputId((InputId) null);
      node1.getQualifiedName();
      Node node2 = new Node(43, node1, 31, 2);
      node1.isGetElem();
      node1.isGetProp();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node2.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = new Node((-1371), 24, 24);
      Node node1 = new Node(2583, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = node1.getAncestor(0);
      Node.newString("String node not created with Node.newString");
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node3.getJSDocInfo();
      node0.isNew();
      node0.children();
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 37);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Node node2 = new Node(32, node1, node1, node1);
      Node node3 = new Node((-619), node2, 47, 53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.newString(4095, "");
      Node node4 = Node.newNumber((double) 1, (-4096), 3486);
      node4.isName();
      node4.isInc();
      node2.isCatch();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node5 = new Node(49);
      node5.cloneTree();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      Node node3 = Node.newString(53, "");
      node2.setSourceEncodedPosition(1);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(135322);
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node node5 = new Node(9, 4095, 126);
      Node node6 = new Node(28, node5, node4, node4);
      node1.isNot();
      node1.isNull();
      node6.isContinue();
      node6.getLastChild();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node1.isBreak();
      node0.addSuppression("d11]");
      node1.isArrayLit();
      node1.isString();
      Node node2 = new Node(38, node0);
      node1.getInputId();
      node0.isEquivalentTo(node0);
      Node node3 = Node.newString(16, "d11]");
      node3.isEquivalentTo(node1, false, true, true);
      node3.getQualifiedName();
      Node.newNumber((double) 1);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(29);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      HashSet<JSType> hashSet0 = new HashSet<JSType>();
      Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable", 177, 637);
      Node node0 = Node.newString((-2117), "com.google.javascript.rhino.Node$SiblingNodeIterable");
      node0.setSourceEncodedPosition(300);
      Node node1 = new Node(49, node0, 49, 300);
      Node node2 = Node.newString(55, "");
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node4 = Node.newNumber((double) 39);
      HashSet<String> hashSet1 = new HashSet<String>();
      node3.isGetProp();
      node4.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node5 = null;
//      try {
        node5 = new Node(44, node2, node4, node0, node4, 1147, 4095);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isString();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getString();
      node0.removeProp(786);
      node1.toStringTree();
      node1.isGetterDef();
      node0.getInputId();
      node0.isEquivalentTo(node1);
      node0.setInputId((InputId) null);
      node1.getQualifiedName();
      Node node2 = new Node(43, node1, 31, 2);
//      try { 
        node0.setDouble(43);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 37);
      node0.isFor();
      int int0 = Node.DECR_FLAG;
      node0.getCharno();
      node1.isEquivalentToTyped(node0);
      node1.isQuotedString();
      node1.isAnd();
      Node node2 = Node.newString(2537, "", 43, 0);
      node2.setLineno(2398);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isEmpty();
      Node node3 = new Node(38, node0, node0, node2, node1);
      node2.isGetElem();
      node3.isGetProp();
      node0.isNew();
      node1.children();
      node3.removeChildAfter(node0);
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isFor();
      int int0 = Node.DECR_FLAG;
      node0.getCharno();
      node0.isEquivalentToTyped(node0);
      node0.isQuotedString();
      node0.isAnd();
      Node node1 = new Node(16);
      node1.addChildToBack(node0);
      node0.getString();
      node1.removeProp(21);
      node1.toStringTree();
      node0.isGetterDef();
      node1.isEquivalentTo(node0, false, true, true);
      node1.getParent();
      node1.hasChildren();
      node0.siblings();
      node0.removeProp(12);
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(1727, "s#/{NYdR[B<j}", 52, 48);
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.copyInformationFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node(108, 125, 111);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("?U5@x");
      treeSet0.floor("SFJ7'b^J|:tp0-[2K3M");
      treeSet0.add("");
      node0.setDirectives(treeSet0);
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // IF 125 [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000002] is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = Node.newString(153, "Y\"C");
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isTypeOf();
      int int0 = Node.COLUMN_MASK;
      node0.isAssignAdd();
      node0.getInputId();
      node0.getInputId();
      Node node1 = new Node(153, 102, 1);
      node0.isEquivalentTo(node1);
      Node node2 = new Node(48, node1, 42, 124);
      node2.isGetElem();
      node2.putBooleanProp(122, true);
      int int1 = Node.SIDE_EFFECT_FLAGS;
      node1.isGetProp();
      Node node3 = null;
//      try {
        node3 = new Node((-124), node1, 882, 46);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 37);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Node node2 = new Node(32, node1, node1, node1);
      Node node3 = new Node((-619), node2, 47, 53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node_SideEffectFlags0.setThrows();
      Node.newString(45, "r+f]@X4RO#00>kF}");
      Node node4 = Node.newString(38, "com.google.common.collect.UnmodifiableIterator");
      node4.isUnscopedQualifiedName();
      Node node5 = Node.newString(38, "", 56, 31);
      node5.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node0.isSyntheticBlock();
      Node node2 = node1.copyInformationFrom(node0);
      node1.isBlock();
      node2.checkTreeEqualsImpl(node1);
      Node node3 = new Node(53);
      node3.addChildToBack(node2);
//      try { 
        node2.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // EMPTY 124 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = new Node((-1371), 24, 24);
      Node node1 = new Node(2583, node0, node0, node0);
      node1.getIntProp((-2443));
      node1.isOnlyModifiesThisCall();
      node1.setVarArgs(false);
      node0.isAdd();
      node0.isFalse();
      node1.isNot();
      node0.isNull();
      node0.isDefaultCase();
      node0.isContinue();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(29, 16, 29);
      Node node2 = Node.newNumber(0.0, 4095, 42);
      node2.setVarArgs(true);
      node1.isAdd();
      node1.mayMutateGlobalStateOrThrow();
      node1.getInputId();
      node0.isHook();
      Node node3 = Node.newNumber(1753.4948205366352);
      node3.isEquivalentToShallow(node2);
      node0.setInputId((InputId) null);
      node0.getQualifiedName();
      node2.isThis();
      Node node4 = new Node(30, node2, node0, 3098, (-1210));
      node4.isStringKey();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = new Node(24);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      node0.isArrayLit();
      node0.isString();
      Node node1 = new Node(602, node0);
      node0.getInputId();
      node1.isHook();
      node1.isEquivalentTo(node0);
      Node node2 = Node.newString(602, "^r,9*ym3N");
      node1.isEquivalentTo(node0, false, false, false);
      node2.getQualifiedName();
      node0.hasOneChild();
      node0.isContinue();
      node1.isExprResult();
      node0.getSourcePosition();
      node2.getString();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = Node.newNumber(729.882);
      Node node1 = Node.newNumber((double) 16);
      Node node2 = node0.cloneTree();
      node1.setLength(27);
      node2.getStaticSourceFile();
      Node node3 = Node.newString(12, "", 39, 29);
      node0.setLineno(32);
      node2.isEmpty();
      Node node4 = new Node(2, node3, node1, node2, 39, 524);
      node1.checkTreeEqualsImpl(node3);
      node4.setSourceFileForTesting("Unknown class name");
      node2.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node5 = new Node(1714);
      // Undeclared exception!
//      try { 
        node3.addChildrenAfter(node1, (Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(29, 16, 29);
      Node node2 = Node.newNumber(0.0, 4095, 42);
      node2.setVarArgs(true);
      node1.isAdd();
      node1.mayMutateGlobalStateOrThrow();
      node2.isFalse();
      node2.isNot();
      node1.isNull();
      node0.isDefaultCase();
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      String string0 = "8qODYyP$T7N8p.p*+";
      Node node0 = Node.newString("8qODYyP$T7N8p.p*+");
      Node node1 = Node.newNumber(1.2);
      node1.addChildToBack(node0);
      Node node2 = node1.cloneTree();
      node2.isStringKey();
      Node node3 = new Node(30, (-389), 12);
      node1.isStringKey();
      Node node4 = new Node(0, 57, 306);
      node0.getInputId();
      node1.setInputId((InputId) null);
      node1.isHook();
      Node.newString("<.ms.g`]jT=C");
      node2.addChildToFront(node3);
      node0.isEquivalentTo(node1);
      node4.setInputId((InputId) null);
      Node node5 = null;
//      try {
        node5 = new Node(46, node0, (Node) null, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(2131.13717629577);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node1.getDouble();
      Node node2 = Node.newNumber(4009.19466, 8192, 39);
      node2.isOnlyModifiesArgumentsCall();
      node0.mayMutateArguments();
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      nodeArray0[2] = node2;
      nodeArray0[3] = node0;
      nodeArray0[4] = node2;
      nodeArray0[5] = node0;
      nodeArray0[6] = node2;
      Node node3 = null;
//      try {
        node3 = new Node(118, nodeArray0, 48, 36);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 37);
      node0.isFor();
      int int0 = Node.DECR_FLAG;
      node0.getCharno();
      node1.copyInformationFrom(node0);
      Node node2 = Node.newString(4, "com.google.common.base.CharMatcher$3");
      node1.setSourceEncodedPosition((-172));
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = Node.newNumber((double) 40);
      node2.isScript();
      node3.isAssignAdd();
      node1.putIntProp(44, 56);
      node2.srcref(node0);
      node3.checkTreeEquals(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      Node.extractLineno(39);
      node4.getLastSibling();
      node4.getLastChild();
      node4.getAncestors();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      int int0 = 47;
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(47, nodeArray0);
      node0.isVarArgs();
      // Undeclared exception!
//      try { 
        node0.checkTreeEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 46);
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      Node node2 = new Node(32, node0, node1, 55, 49);
      Node node3 = Node.newString(37, "");
      node1.toStringTree();
      Node node4 = Node.newString(0, "NUMBER 46.0\n", 52, 51);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>(arrayList0);
      Node node5 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node5.isScript();
      HashSet<String> hashSet0 = new HashSet<String>();
      simpleErrorReporter0.warning("", "d11]", 124, 16);
      Node node6 = Node.newString(256, "Object#Key");
      node4.isName();
      node6.isAssign();
      node3.isCall();
      Node node7 = null;
//      try {
        node7 = new Node((-615), node4, node2, node0, node3, 729, 0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node1.isDelProp();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isAnd();
      Node node2 = Node.newString(120, "");
      node0.toStringTree();
      Node node3 = Node.newNumber((double) 57);
      node1.isScript();
      HashSet<String> hashSet0 = new HashSet<String>();
      Node node4 = Node.newString(103, "1&2Z>\"h~$h6Zi&}OR,<");
      node0.isName();
      node4.isAssign();
      node0.isCall();
      node4.hasChild(node3);
      node0.isSyntheticBlock();
      node0.isThis();
      node2.isVar();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.addSuppression("Y\"C");
      node0.isContinue();
      Node node1 = new Node(4095, 12288, 56);
      node1.clonePropsFrom(node0);
      node1.isNull();
      Node node2 = new Node(21, node0);
      node0.isFromExterns();
      Node node3 = new Node(47, 4095, 0);
      Node node4 = node3.useSourceInfoFrom(node0);
      node2.addChildrenToFront(node4);
      node3.setSourceFileForTesting("Y\"C");
      Node node5 = Node.newString("8", 2156, 55);
      node5.detachChildren();
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      Node node3 = Node.newString(53, "");
      node2.setSourceEncodedPosition(1);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      Node node5 = Node.newNumber((-1744.0));
      node4.isScript();
      node5.isAssignAdd();
      node4.putIntProp(32, 54);
      node2.srcref(node5);
      node4.checkTreeEquals(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      Node.extractLineno(30);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 46);
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      Node node2 = new Node(32, node0, node1, 55, 49);
      node0.setSourceEncodedPosition(53);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node1.isNot();
      Node node4 = Node.newNumber((-1.0));
      node2.isScript();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.isName();
      node2.isStringKey();
      node0.isCatch();
      node1.getSourceOffset();
      node4.checkTreeTypeAwareEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
//      try { 
        node3.setSideEffectFlags(node_SideEffectFlags1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got TYPEOF
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newNumber((double) 866);
      Node node1 = new Node(119, node0, node0, 31, 2147483645);
      node1.isSyntheticBlock();
      Node node2 = node1.copyInformationFrom(node0);
      node1.isBlock();
      node2.checkTreeEqualsImpl(node1);
      Node node3 = new Node((-3956));
      // Undeclared exception!
//      try { 
        node2.addChildToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 37);
      node0.isFor();
      int int0 = Node.DECR_FLAG;
      node0.getCharno();
      node1.isEquivalentToTyped(node0);
      node1.isQuotedString();
      node1.isAnd();
      Node node2 = Node.newString(2537, "", 43, 0);
      node2.setLineno(2398);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isEmpty();
      Node node3 = new Node(38, node0, node0, node2, node1);
//      try { 
        node3.setDouble(46);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      node0.setLength(101);
      node0.getStaticSourceFile();
      node0.isExprResult();
      node0.isArrayLit();
      Node node1 = Node.newString(40, "l4{qm!?");
      Node node2 = Node.newString(48, "");
      node0.setSourceEncodedPosition(43);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node3 = new Node(31, nodeArray0, 1, 222);
      node3.isQualifiedName();
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      Node node5 = Node.newNumber((double) 49);
      node0.isScript();
      node0.isAssignAdd();
      Node node6 = node2.srcref(node5);
      node3.checkTreeEquals(node4);
      Node node7 = new Node(57, node3, node4, node1);
      node3.isEquivalentTo(node4, false, false, true);
      Node node8 = node1.getParent();
      node6.isInc();
      node0.checkTreeEqualsImpl(node5);
      node8.getParent();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node(2596, 2596, 2596);
      Node.newString(2, "And(");
      Node node1 = new Node(4116, 2, 1447);
      Node node2 = node0.srcrefTree(node1);
      node2.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      String string0 = "Y\"C";
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      node0.getAncestors();
      // Undeclared exception!
//      try { 
        node0.srcrefTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = new Node((-1932), 657, 124);
      Node node1 = new Node(122, node0, 15, 54);
      node1.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node1.isBreak();
      node0.addSuppression("d11]");
      node1.isArrayLit();
      node1.isString();
      Node node2 = new Node(38, node0);
      node1.getInputId();
      node1.isHook();
      node0.isEquivalentTo(node0);
      Node node3 = Node.newString(16, "^r,9*ym3N");
      node3.isEquivalentTo(node1, false, true, true);
      node3.getQualifiedName();
      node2.hasOneChild();
      node3.isContinue();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      Node.newNumber(0.7);
      Node node2 = new Node(719, node1, 56, 49);
      node1.isFor();
      node1.isEquivalentToTyped(node2);
      node2.isQuotedString();
      Node node3 = Node.newString(52, "", 53, 16);
      node0.setQuotedString();
      Node node4 = new Node(719);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(1073741824);
      node3.isName();
      node3.isDec();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isQualifiedName();
      String string0 = "d11]";
      node0.addSuppression("d11]");
      node1.getAncestors();
      node0.addSuppression("NAME");
      node1.isContinue();
      Node node2 = Node.newString("d11]", 4194304, 117);
      node2.isLabel();
      node1.isNull();
      Node node3 = null;
//      try {
        node3 = new Node(304, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node((-1371), 24, 24);
      Node node1 = new Node(2583, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = node1.getAncestor(0);
      Node.newString("String node not created with Node.newString");
      node2.setDirectives((Set<String>) null);
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node3.getJSDocInfo();
      node3.copyInformationFrom(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("String node not created with Node.newString", node1, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      Node.newNumber((-1698.6));
      node0.addSuppression("<invalid>");
      node0.isContinue();
      node0.isLabel();
      node0.isNull();
      Node node1 = new Node(93);
      Node node2 = new Node(39, node0, 152, (-1448));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1448));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node0);
      Node node3 = Node.newString(53, "");
      node2.setSourceEncodedPosition(1);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      Node node5 = Node.newNumber((-1744.0));
      node4.isScript();
      node5.isAssignAdd();
      node2.srcref(node5);
      node4.checkTreeEquals(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      Node.extractLineno(30);
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.spliterator();
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.iterator();
      node0.isLabel();
      node0.isNull();
      Node node1 = new Node((-2952), node0);
      Node node2 = new Node((-67), node1, node1, node1);
      Node node3 = node2.useSourceInfoFrom(node0);
      node3.addChildrenToFront(node2);
      node3.setSourceFileForTesting("8");
      Node node4 = Node.newString("Y\"C", 43, (-2757));
      node3.detachChildren();
      Node node5 = Node.newString("8", 124, 53);
      Node node6 = new Node(57, node5, node5, node4, node2);
      node6.getChildBefore(node5);
      node4.isThrow();
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      Node node1 = Node.newNumber((-1698.6));
      node0.addSuppression("<invalid>");
      node0.isContinue();
      node0.isLabel();
      node0.isNull();
      Node node2 = new Node(32, node1);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.addChildrenToFront(node3);
      node3.setSourceFileForTesting("com.google.javascript.rhino.Node$StringNode");
      Node node4 = Node.newString("d11]", 903, (-278));
      node0.detachChildren();
      Node node5 = null;
//      try {
        node5 = new Node(4, node0, node1, node4, node1, (-931), 2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newString(0, "zVV3s.BoO'u_VcO", (-2624), 1610612736);
      node0.isGetProp();
      node0.setOptionalArg(false);
      Node node1 = Node.newString("]yE/_+emk^p", 0, 32);
      Node node2 = Node.newString(1, "]yE/_+emk^p", (-3039), (-1422));
      node2.setVarArgs(true);
      node1.isFalse();
      node0.isRegExp();
      node0.setType(308);
      node1.isHook();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zVV3s.BoO'u_VcO");
      node0.isEquivalentTo(node1);
      node0.getQualifiedName();
      node1.isReturn();
      Node.extractLineno((-526));
      node2.isHook();
      Node.newString(105, "zVV3s.BoO'u_VcO");
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = new Node((-1371), 24, 24);
      Node node1 = new Node(2, 38, 49);
      node1.isOnlyModifiesThisCall();
      Node node2 = node1.getAncestor(0);
      Node.newString("String node not created with Node.newString");
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node3.getJSDocInfo();
      // Undeclared exception!
//      try { 
        node2.removeChild(node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isFor();
      node0.getLineno();
      node0.getCharno();
      node0.isEquivalentToTyped(node0);
      node0.isQuotedString();
      Node node1 = Node.newString((-1743), "Y\"C", 38, 155649);
      node0.setQuotedString();
      Node node2 = new Node(1128);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentTo(node0);
      node0.getQualifiedName();
      node1.isReturn();
      Node.extractLineno(46);
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newNumber(0.7, (-26), (-26));
      node0.isFalse();
      node0.wasEmptyNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node1 = new Node(30, node0, node0, node0);
      node1.getJsDocBuilderForNode();
      node0.isSetterDef();
      node1.getIndexOfChild(node0);
      Node node2 = Node.newString(1679, "Mve?8 d5AO");
      node2.getQualifiedName();
      node0.hasOneChild();
      node0.isContinue();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      node0.copyInformationFrom(node0);
      node0.isBlock();
      node1.checkTreeEqualsImpl(node0);
      Node node2 = new Node(1612);
      // Undeclared exception!
//      try { 
        node2.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1612
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = new Node(24);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(16, node0, node0, node0);
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node0.getProp(4096);
      node2.isFalse();
      Node node3 = node1.getChildAtIndex((-2467));
      node3.mayMutateGlobalStateOrThrow();
      Node node4 = node2.copyInformationFromForTree(node3);
      node3.hasChild(node4);
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = new Node(24);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(16, node0, node0, node0);
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node1.mayMutateGlobalStateOrThrow();
      node0.isCall();
      Node node3 = Node.newString("e^lQ");
      node1.hasChild(node3);
      Node node4 = Node.newNumber((double) 48);
      node1.useSourceInfoFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.isFalse();
      node0.wasEmptyNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node0.isEquivalentTo(node0, false, false, false);
      node0.isNE();
      Node node1 = Node.newString(2, "");
      node0.isNull();
      node1.isTypeOf();
      node0.getChildCount();
      node1.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node((-245), (-449), (-942));
      node0.mayMutateGlobalStateOrThrow();
      node0.getLength();
      node0.isOnlyModifiesArgumentsCall();
      node0.mayMutateArguments();
      node0.getBooleanProp(8199);
      node0.isIn();
      node0.getSourceOffset();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = Node.newNumber((double) 864);
      Node node1 = new Node(2726);
      Node node2 = new Node(31, node0, 4, (-449));
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags6.areAllFlagsSet();
      node2.toString();
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString(0, "zVV3s.BoO'u_VcO", (-2651), 1610612736);
      node0.isGetProp();
      node0.setOptionalArg(false);
      Node node1 = Node.newString("]yE/_+emk^p", 0, 32);
      Node node2 = Node.newString(1, "]yE/_+emk^p", (-3039), (-1422));
      node2.setVarArgs(false);
      node1.isFalse();
      node0.isRegExp();
      node1.isHook();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zVV3s.BoO'u_VcO");
      node0.isEquivalentTo(node1);
      node0.getQualifiedName();
      node1.isReturn();
      Node.extractLineno((-526));
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      node0.setLength(101);
      node0.getStaticSourceFile();
      node0.isExprResult();
      node0.isArrayLit();
      Node.newString(40, "l4{qm!?");
      Node node1 = Node.newString(48, "");
      node0.setSourceEncodedPosition(43);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(31, nodeArray0, 1, 222);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = Node.newNumber((double) 49);
      node0.isScript();
      node0.isAssignAdd();
      Node node5 = node1.srcref(node4);
      node2.checkTreeEquals(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isEquivalentTo(node5, true, false, false);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = new Node(6);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(16, node0, node0, node0);
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      node2.isRegExp();
      node0.isHook();
      node2.isEquivalentTo(node1);
      node0.getQualifiedName();
      node1.isReturn();
      Node.extractLineno(12);
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isString();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getString();
      node0.removeProp(786);
      node1.toStringTree();
      node1.isGetterDef();
      node0.getInputId();
      node0.isEquivalentTo(node1);
      node0.setInputId((InputId) null);
      node1.getQualifiedName();
      node0.mayMutateGlobalStateOrThrow();
      node1.copyInformationFromForTree(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node0.hasChild((Node) null);
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString("56w", 477, 49);
      Node node1 = Node.newString((-862048943), "}", 477, 113);
      node0.addChildToFront(node1);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(1, nodeArray0);
      node2.isEquivalentToTyped(node0);
      Node node3 = new Node(560, nodeArray0, 2615, 64);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node1);
      Node.newNumber((-854.7));
      node2.isScript();
      node2.isAssignAdd();
      node2.srcref(node0);
      node3.checkTreeEquals(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node.newNumber(0.0);
      node4.isEmpty();
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isString();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getString();
      node0.removeProp(786);
      node1.toStringTree();
      node1.isGetterDef();
      node0.getInputId();
      node0.isEquivalentTo(node1);
      node0.setInputId((InputId) null);
      node1.getQualifiedName();
      Node node2 = new Node(43, node1, 31, 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.isFalse();
      node0.wasEmptyNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node0.isEquivalentTo(node0, false, false, false);
      node0.isNE();
      Node node1 = Node.newString(2, "");
      node0.isNull();
      node1.isAnd();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(79, 79, (-60));
      node0.isStringKey();
      Node node1 = new Node(53, 13, 31);
      node1.getIndexOfChild(node0);
      Node node2 = Node.newString("hS&;SzX-R!';eJi%mV", 4095, 40);
      node0.isGetElem();
      node1.isGetProp();
      node0.isNew();
      node1.copyInformationFromForTree(node2);
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newString("", 739, 8192);
      Node node1 = new Node(57, node0, node0, node0, 15, 48);
      node0.getType();
      node1.putIntProp(39, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setLineno((-1564));
      node0.isFalse();
      node1.wasEmptyNode();
      Node node2 = null;
//      try {
        node2 = new Node((-983), node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newString(739, "", 8192, 739);
      Node node1 = Node.newNumber((double) 15);
      node1.getType();
      node0.putIntProp(49, 139);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setLineno(55);
      node0.isFalse();
      node0.wasEmptyNode();
      node0.isIf();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      Vector<JSType> vector0 = new Vector<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      Node node2 = new Node(32, node0, node1, 55, 49);
      node0.setSourceEncodedPosition(53);
      node2.useSourceInfoIfMissingFromForTree(node0);
      Node.newNumber((-1.0));
      node2.isScript();
      HashSet<String> hashSet0 = new HashSet<String>();
      Node node3 = Node.newString(113, "");
      node0.isName();
      node2.isStringKey();
      node0.isCatch();
      node1.getSourceOffset();
      node3.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      node0.setLength(101);
      node0.getStaticSourceFile();
      node0.isExprResult();
      node0.isArrayLit();
      Node node1 = Node.newString(40, "l4{qm!?");
      Node node2 = Node.newString(48, "");
      node0.setSourceEncodedPosition(43);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node3 = new Node(31, nodeArray0, 1, 222);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      Node node5 = Node.newNumber((double) 49);
      node0.isScript();
      node0.isAssignAdd();
      Node node6 = node2.srcref(node5);
      node3.checkTreeEquals(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node.newNumber((double) 4095);
      node6.isEmpty();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node1 = Node.newNumber((-3979.465));
      node0.addChildToBack(node1);
      node0.removeChildren();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[1] = node0;
      Node node2 = null;
//      try {
        node2 = new Node(16, nodeArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = new Node(1438);
      Node node1 = node0.cloneTree();
      node1.isStringKey();
      Node node2 = new Node(47, 127, 2506);
      node1.getAncestors();
      node0.isStringKey();
      Node node3 = new Node(29, (-1673), 2724);
      node3.getInputId();
      node2.setInputId((InputId) null);
      node0.isHook();
      Node node4 = Node.newString("com.google.common.base.Joiner$MapJoiner");
      node1.isEquivalentTo(node3);
      node4.setInputId((InputId) null);
      Node node5 = new Node(573, node4, node3, node4);
      node0.getQualifiedName();
      node1.isDefaultCase();
      node3.isContinue();
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = Node.newNumber(0.7, 24, 24);
      node0.isFalse();
      node0.wasEmptyNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = new Node(30, node0, node0, node0);
      node0.isEquivalentTo(node1, false, false, false);
      node1.isNE();
      node1.isNot();
      node1.isAnd();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node1.isDelProp();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      Node node2 = Node.newString(120, "");
      node2.isGetterDef();
      node0.isHook();
      node0.isEquivalentTo(node1);
      node1.getQualifiedName();
      node1.isDebugger();
      node1.isReturn();
      Node.extractLineno((-1409));
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newString("D\">1#.");
      Node node1 = new Node(55, node0, node0, node0, node0);
      Node node2 = new Node((-1480), node1, (-2351), 56);
      node2.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.isFalse();
      node0.wasEmptyNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node0.isEquivalentTo(node0, false, false, false);
      node0.isNE();
      node0.isNot();
      node0.isNull();
      node0.isAnd();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.setLineno(2);
      node0.isFalse();
      node0.wasEmptyNode();
      node0.isIf();
      Node node1 = new Node(22);
      node0.getSideEffectFlags();
      Node node2 = new Node(12, node0, node0, 409, (-1));
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(77, node0);
      Node node2 = null;
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      Node node3 = null;
      // Undeclared exception!
//      try { 
        node1.clonePropsFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isFor();
      node0.getLineno();
      node0.getCharno();
      node0.isEquivalentToTyped(node0);
      node0.isQuotedString();
      node0.isAnd();
      Node node1 = Node.newString(51, "", (-3913), 54);
      node1.setLineno(55);
      node0.isEmpty();
      node0.isEquivalentTo(node0, false, false, false);
      node1.getParent();
      node0.wasEmptyNode();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setLineno(29);
      node1.isFalse();
      node1.wasEmptyNode();
      node1.isIf();
      node0.isGetterDef();
      Node node2 = new Node(32);
      node1.getSideEffectFlags();
      Node node3 = new Node(1774, node0, node2, 308, 49);
      node3.addChildrenAfter(node1, node2);
      node0.isQuotedString();
      node3.cloneTree();
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-245));
      Node node0 = Node.newString("", 38, (-1784));
      Node node1 = Node.newNumber(0.0);
      node0.putIntProp(2441, 55);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      node0.setLineno((-2528));
      Node node2 = new Node(42, node0, node0, node1);
      Node node3 = Node.newString(5523, "");
      node2.cloneTree();
      node1.setDouble(50);
      node3.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = node0.clonePropsFrom(node0);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.getQualifiedName();
      node1.getProp(0);
      node1.isStringKey();
      node0.getChildCount();
      Node node2 = new Node(29, 38, 102);
      node1.getIndexOfChild(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node2.putBooleanProp(34, true);
      Node node3 = new Node(1589);
      node3.getChangeTime();
      Node node4 = Node.newString(4, "n&qTR4t%", 50, 29);
      Node node5 = new Node(13, node4, node2, 126, 12);
      node5.useSourceInfoIfMissingFromForTree(node1);
      node4.isDelProp();
      Node.newNumber((-302.1117));
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(50, node0, node0, node0);
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(29, 16, 29);
      Node node3 = Node.newNumber(0.0, 4095, 48);
      node3.setVarArgs(false);
      node3.isFalse();
      node2.mayMutateGlobalStateOrThrow();
      node0.isEquivalentTo(node2, false, true, false);
      node3.getParent();
      node3.wasEmptyNode();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("*F");
      Node node1 = Node.newNumber((double) 16, 57, 50);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isEquivalentToShallow(node1);
      node1.getQualifiedName();
      node0.isObjectLit();
      node2.setLength(52);
      node1.getStaticSourceFile();
      node2.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.isArrayLit();
      Node.newString(46, "node is not a child");
      node3.isObjectLit();
      node3.getSourceFileName();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.newString(53, "*F", 50, 52);
      node2.setLineno((-536870912));
      node0.isEmpty();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node4 = jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      Node node5 = new Node(2, node4, node0, node0, node4);
      node0.isNumber();
      node0.isDo();
      node5.isDebugger();
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.spliterator();
      node_AncestorIterable1.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node1 = new Node(1);
      Node node2 = node0.clonePropsFrom(node1);
      node2.toString();
      node2.isArrayLit();
      node1.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(126);
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(2604);
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      Node node3 = new Node(46, 55, 1503);
      Node.newNumber(0.0, 52, 205);
      node0.isVoid();
      Node node4 = new Node(4095, node2, node1, node1, 16, (-1924));
      node3.isFunction();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(32);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.setLineno(37);
      node0.isBlock();
      Node node1 = Node.newString((-536870912), "BREAK");
      Node node2 = new Node(57);
      node1.getLength();
      Node node3 = Node.newString("Object#Key", (-750), 54);
      node3.getSideEffectFlags();
      Node node4 = new Node(32, node3, node1, 528, 49);
      node4.addChildrenAfter(node0, node3);
      Node node5 = null;
//      try {
        node5 = new Node((-2952), node3, node2, node1, 30, 0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 37);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setLineno(29);
      node1.isFalse();
      node1.wasEmptyNode();
      node0.isGetterDef();
      Node node2 = new Node(32);
      node1.getSideEffectFlags();
      Node node3 = new Node(30, node0, node2, 308, 49);
      node3.addChildrenAfter(node1, node2);
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node.extractLineno(110);
      Node node0 = null;
//      try {
        node0 = new Node(110, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      Node node2 = node1.clonePropsFrom(node0);
      Node node3 = new Node(43, node0, node0, node1, node0, 55, 49);
      node1.toString();
      node3.isThrow();
      node2.isEquivalentTo(node0, false, true, false);
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newNumber(2071.43396072106);
      Node node1 = new Node(30, node0, 55, 31);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(973);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node2 = Node.newNumber(0.0);
      node1.isInc();
      node1.isDefaultCase();
      node1.isLabelName();
      node2.isVar();
      node0.setCharno(2);
      node2.getChildCount();
      node1.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(2480, "com.google.javascript.rhino.jstype.JSType");
      node0.getProp(2480);
      Node node1 = Node.newString(":7U}AMfo");
      node0.addChildToBack(node1);
      Node node2 = node0.clonePropsFrom(node1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)44;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isOnlyModifiesArgumentsCall();
      node2.children();
      node0.getChildCount();
      Node node3 = node0.srcrefTree(node2);
      node0.isOnlyModifiesThisCall();
      node3.setSourceEncodedPositionForTree((-394));
      Node node4 = Node.newNumber((double) 46);
      node4.isBlock();
      // Undeclared exception!
//      try { 
        node0.getChildAtIndex(57);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = new Node(24);
      Node node1 = new Node(16, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      node2.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node3 = new Node(57, node2);
      node1.detachChildren();
      node3.hasMoreThanOneChild();
      node2.isInc();
      Node.mergeLineCharNo((-2056), 49);
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newString("(u+B~(");
      node0.getProp(37);
      Node node1 = new Node(1019, 40, 55);
      node0.children();
      node1.isArrayLit();
      Node node2 = Node.newString(1058, "");
      Node node3 = Node.newString((-1336), "");
      node3.setSourceEncodedPosition(1048576);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      Node node5 = Node.newNumber((double) 40);
      node2.isScript();
      node2.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node6 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node7 = node6.copyInformationFrom(node0);
      node7.srcref(node5);
      node3.checkTreeEquals(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node.newNumber((double) 4095);
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("", (-2165), 15);
      Node node2 = node0.clonePropsFrom(node1);
      node2.getQualifiedName();
      node2.isObjectLit();
      node1.getQualifiedName();
      node1.getProp(35);
      node1.isStringKey();
      node0.getChildCount();
      Node node3 = new Node(30, 15, 31);
      node0.getIndexOfChild(node3);
      Node node4 = Node.newString("o@^ ", 51, 2347);
      node3.isGetElem();
      node4.isGetProp();
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-245));
      Node node0 = Node.newString("", 38, (-1784));
      Node node1 = Node.newNumber(0.0);
      node0.getType();
      node0.putIntProp(2441, 524288);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      node0.setLineno((-2528));
      Node node2 = new Node(42, node0, node0, node1);
      node2.isFalse();
      node2.wasEmptyNode();
      node0.isIf();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      Vector<JSType> vector0 = new Vector<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isComma();
      node1.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
//      try { 
        node2.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 2441
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      Node node1 = new Node(30, node0, 51, 57);
      Node node2 = new Node(2004, node1, 2783, 30);
      String string0 = null;
      node2.addSuppression((String) null);
      node2.isOnlyModifiesArgumentsCall();
      Node node3 = node0.cloneNode();
      node3.isSyntheticBlock();
      node1.copyInformationFrom(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node3.checkTreeEqualsImpl(node0);
      node2.getSourceOffset();
      // Undeclared exception!
//      try { 
        node3.getExistingIntProp(2131);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 2131
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = Node.newNumber((-1268.6660644931));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.setReturnsTainted();
      node0.putBooleanProp(83, false);
      node0.getChangeTime();
      node0.isLabel();
      node0.toStringTree();
      Node.newString(4189, "KGAm^Tf");
      node0.getDouble();
      Node node1 = Node.newString(0, "NUMBER -1268.6660644931\n");
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = node0.clonePropsFrom(node0);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.getQualifiedName();
      node1.getProp(0);
      node1.isStringKey();
      node0.getChildCount();
      Node node2 = new Node((-909));
      node2.isGetterDef();
      Node node3 = new Node(1924);
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.getAncestors();
      Node node1 = new Node(120, node0, node0, node0, node0);
      node1.isArrayLit();
      node1.isString();
      Node node2 = null;
//      try {
        node2 = new Node(31, node1, node0, node1, 51, 48);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      Node node0 = Node.newNumber((double) 864);
      Node node1 = new Node(2726);
      node1.getSideEffectFlags();
      Node node2 = new Node(0, node0, node1, 1, 42);
      node0.isLocalResultCall();
      Node node3 = node2.removeChildAfter(node0);
      node2.addChildrenToFront(node3);
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = Node.newNumber(729.882);
      Node node1 = Node.newNumber((double) 16);
      node1.addChildToBack(node0);
      Node node2 = node0.cloneTree();
      node1.setLength(27);
      node2.getStaticSourceFile();
      node1.isExprResult();
      node1.isArrayLit();
      Node.newString(30, "");
      Node.newString(50, "");
      node0.setSourceEncodedPosition(30);
      node1.useSourceInfoIfMissingFromForTree(node2);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(49);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = new Node(864, 864, 0);
      Node node1 = new Node(2726);
      Node.newString("3?E", 57, (-105));
      node0.isGetElem();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(24);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags6.clearSideEffectFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      boolean boolean0 = true;
      boolean boolean1 = true;
      int int0 = 93;
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node((-1218), (Node) null, (Node) null, (Node) null, 24, 24);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = Node.newString("56w", 477, 49);
      Node node1 = new Node(8, node0, node0, node0, node0);
      node0.getAncestors();
      node0.isArrayLit();
      node0.isString();
      node0.isQualifiedName();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType.toMaybeFunctionType((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      Node node2 = Node.newString(120, "");
      node0.setSourceEncodedPosition(53);
      node2.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newNumber((-1.0));
      node2.isScript();
      HashSet<String> hashSet0 = new HashSet<String>();
      Node node4 = null;
      Node node5 = null;
//      try {
        node5 = new Node(53, node3, node1, (Node) null, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newString(0, "zVV3s.BoO'u_VcO", (-2651), 1610612736);
      node0.isGetProp();
      String string0 = "]yE/_+emk^p";
      node0.setOptionalArg(false);
      Node.newString("]yE/_+emk^p", 0, 32);
      Node node1 = new Node(12, node0, node0, node0, 53, 47);
      Node.newString("zVV3s.BoO'u_VcO", 145, 0);
      // Undeclared exception!
//      try { 
        node1.getAncestor((-26));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = new Node(864, 864, 0);
      Node node1 = new Node(37);
      node1.getSideEffectFlags();
      node1.isFunction();
      Node node2 = new Node(62, (-938), (-591));
      // Undeclared exception!
//      try { 
        node2.addChildrenAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = Node.newString("(u+B~(");
      node0.getProp(37);
      Node node1 = new Node(1019, 40, 55);
      node0.children();
      node1.isStringKey();
      node1.getChildCount();
      Node node2 = new Node(57, node0, node1, node1, 55, 12);
      node0.getIndexOfChild(node2);
      node0.wasEmptyNode();
      Node node3 = Node.newString("]t&MQTl", 115, (-1013));
      node3.isGetElem();
      Node.newNumber(729.3170585);
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = node0.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.getQualifiedName();
      // Undeclared exception!
//      try { 
        node1.setString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      Node node0 = new Node(864);
      int int0 = Node.LAST_PROP;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = new Node(24);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(16, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      node1.mayMutateGlobalStateOrThrow();
      node0.setSourceFileForTesting("The new child node already has a parent.");
//      try { 
        node0.setString("The new child node already has a parent.");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // DIV [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.setVarArgs(false);
      node0.isFalse();
      node0.isVoid();
      node0.isNE();
      node0.isNE();
      node0.isNew();
      node0.isNull();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.setSourceEncodedPosition(2052);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      Node node2 = Node.newString(120, "");
      node0.setSourceEncodedPosition(53);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = Node.newNumber((-1.0));
      node2.isScript();
      HashSet<String> hashSet0 = new HashSet<String>();
      Node.newString(113, "");
      node0.isName();
      node3.isAssign();
      node4.removeFirstChild();
      node3.isCall();
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      Node node1 = Node.newNumber(3649.548274);
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      Node node2 = null;
//      try {
        node2 = new Node(48, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.setVarArgs(false);
      node0.isFalse();
      node0.isVoid();
      node0.isNE();
      node0.isNE();
      node0.isFalse();
      node0.isNull();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, false, jSTypeArray0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      jSTypeArray0[1] = (JSType) functionType1;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = new Node(102, node1, node0, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setReturnsTainted();
      Node node3 = new Node(473, 12, 0);
      node2.isVoid();
      Node node4 = null;
//      try {
        node4 = new Node((-830), node3, node3, node0, 37, 48);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      Node node2 = Node.newString(120, "");
      node0.setSourceEncodedPosition(53);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = Node.newNumber((-1.0));
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.isGetProp();
      node3.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node3.isTypeOf();
      node4.getChildCount();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = new Node(24);
      Node node1 = new Node(16, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      node2.wasEmptyNode();
      // Undeclared exception!
//      try { 
        node2.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 4095
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newString(155649, "<~cBg()H^+wmki^%yzW");
      Node node1 = new Node(113, node0);
      Node node2 = node1.getFirstChild();
      node2.detachFromParent();
      node2.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.setWasEmptyNode(true);
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node2, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node1.isCase();
      Node node2 = node0.clonePropsFrom(node1);
      node0.addSuppression("");
      node2.isDo();
      Node node3 = new Node(56, node1, node1, 43, 130);
      node2.isNew();
      Node node4 = new Node(1, node2, 55, 31);
      Node node5 = Node.newNumber((double) 32);
      node4.srcrefTree(node5);
      node1.removeProp(33);
      node5.isTry();
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = node0.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.getQualifiedName();
      node1.getProp(0);
      Node node2 = new Node(46, 4095, 1);
      node0.children();
      node1.isStringKey();
      node0.getChildCount();
      Node node3 = new Node(29, 38, 102);
      node2.getIndexOfChild(node0);
      node3.wasEmptyNode();
      Node.newString("", (-3305), 23);
      node1.isGetElem();
      Node.newNumber((double) 52);
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("*F");
      Node node1 = Node.newNumber((double) 16, 57, 50);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isEquivalentToShallow(node1);
      node1.getQualifiedName();
      node0.isObjectLit();
      node2.setLength(52);
      node1.getStaticSourceFile();
      node2.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.isArrayLit();
      Node node4 = Node.newString(46, "node is not a child");
      node4.isCast();
      node1.getSourceFileName();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node0.putBooleanProp(57, false);
      node4.getChangeTime();
      Node.newString(15, "*F", 621, 16);
      node_SideEffectFlags0.valueOf();
      Node node5 = Node.newNumber(0.0);
      node4.isEmpty();
      node5.isReturn();
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      Node node2 = Node.newString(120, "");
      node0.setSourceEncodedPosition(53);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node.newNumber((-1.0));
      node2.isScript();
      HashSet<String> hashSet0 = new HashSet<String>();
      Node node4 = Node.newString(113, "");
      node0.isName();
      node0.toStringTree();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node4, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      Node node2 = new Node(36);
      node0.getInputId();
      Node node3 = new Node((-408), node2);
      node2.useSourceInfoFrom(node3);
      node2.addChildrenToFront(node3);
      node3.setSourceFileForTesting("");
      Node.newString("8", 102, 2944);
      node2.detachChildren();
      // Undeclared exception!
//      try { 
        node3.getChildBefore(node1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.setVarArgs(false);
      node0.isFalse();
      node0.isVoid();
      node0.isNE();
      node0.isNE();
      node0.isNew();
      node0.isNull();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, false, jSTypeArray0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      jSTypeArray0[1] = (JSType) functionType1;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = new Node(102, node1, node0, node1);
      node2.isLabel();
      node2.toStringTree();
      Node node3 = Node.newString(49, "new child has existing sibling");
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".<E<`PJqdR");
      Node node0 = new Node((-3444));
      node0.removeProp((-1418));
      node0.getChangeTime();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(".<E<`PJqdR");
      node_FileLevelJsDocBuilder0.append(".<E<`PJqdR");
      node_FileLevelJsDocBuilder0.append("%fVr0<8.%?? s`65<dd");
      node_FileLevelJsDocBuilder0.append(".<E<`PJqdR");
      node0.isThrow();
      node0.getJSDocInfo();
      node0.isNE();
      node0.isNew();
      node0.isAnd();
      node0.isVarArgs();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = Node.newString(43, "NEW", (-833), (-464));
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("=dUJep`>+/'2$7yiHZ");
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      node0.getAncestors();
      node0.isDo();
      node0.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(37);
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node node1 = Node.newString(4761, "com.google.common.base.Predicates", 98, 51);
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Y\"C");
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(118, 118, 621);
      Node node1 = new Node(118, node0, node0);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.copyInformationFromForTree(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);
      simpleSourceFile0.getLineOffset(39);
      node3.setStaticSourceFile(simpleSourceFile0);
      node0.isNoSideEffectsCall();
      node1.isFromExterns();
      // Undeclared exception!
//      try { 
        node0.replaceChild(node2, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = new Node(24);
      Node node1 = new Node(16, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      node1.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("The new child node already has a parent.", "", 1, 83);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isEquivalentTo(node0, true, true, true);
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      Node node1 = new Node(2004, node0, node0, node0, node0);
      Node node2 = new Node(2004, node1, 2783, 30);
      node2.addSuppression((String) null);
      node2.isOnlyModifiesArgumentsCall();
      Node node3 = node0.cloneNode();
      node3.isSyntheticBlock();
      node1.copyInformationFrom(node0);
      node0.isBlock();
      node3.checkTreeEqualsImpl(node0);
      Node node4 = new Node(1612);
      // Undeclared exception!
//      try { 
        node4.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1612
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      Node node2 = new Node(36);
      node0.getInputId();
      node2.setInputId((InputId) null);
      // Undeclared exception!
//      try { 
        node2.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 36
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      Node node1 = new Node(2004, node0, node0, node0, node0);
      Node node2 = new Node(2004, node1, 2783, 1443);
      String string0 = null;
      node2.addSuppression((String) null);
      node2.isOnlyModifiesArgumentsCall();
      Node node3 = node0.cloneNode();
      node3.isSyntheticBlock();
      node1.copyInformationFrom(node0);
      node3.getLength();
      node0.isBlock();
      node3.checkTreeEqualsImpl(node0);
      node2.getSourceOffset();
      // Undeclared exception!
//      try { 
        node3.getExistingIntProp(2128);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 2128
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(15, "", 2, 57);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      node0.isQualifiedName();
      node1.putProp(36, "");
      node0.isSwitch();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Node node2 = node1.srcrefTree(node0);
      node1.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node3 = new Node(77, node0);
      node2.hasMoreThanOneChild();
      Node node4 = null;
//      try {
        node4 = new Node(12, node1, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      String string0 = "56w";
      Node node0 = Node.newString("56w", 477, 49);
      Node.newString(32, "}");
      // Undeclared exception!
//      try { 
        node0.addChildToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(38, node0, 85, 50);
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-108);
      byteArray0[1] = (byte) (-23);
      Node node0 = Node.newString("com.google.common.base.Predicates", 2480, 637);
      nodeArray0[0] = node0;
      node0.removeChildren();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = node1.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1745);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.newString(1608, "is_constant_name");
      Node node3 = new Node(31, 12, 49);
      node3.isName();
      node3.isAssign();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-108);
      byteArray0[1] = (byte) (-23);
      Node node0 = Node.newString("com.google.common.base.Predicates", 2480, 637);
      nodeArray0[0] = node0;
      node0.removeChildren();
      Node node1 = new Node(2480, nodeArray0);
      String string0 = null;
      // Undeclared exception!
//      try { 
        Node.newString(4, (String) null, 2825, 0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newString("A");
      Node node1 = Node.newNumber(0.0);
      node0.addSuppression("d11]");
      node0.isContinue();
      node0.isLabel();
      node0.isNull();
      Node node2 = new Node(29, node1);
      Node node3 = Node.newString("A");
      node0.addChildrenToFront(node2);
      node3.setSourceFileForTesting((String) null);
      Node.newString("8", 39, 8);
      node2.detachChildren();
      // Undeclared exception!
//      try { 
        node3.getChildBefore(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = new Node(864, 864, 0);
      Node node1 = new Node(2726);
      node1.getSideEffectFlags();
      node1.isFunction();
      node1.siblings();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node3 = Node.newString(42, "is_constant_name");
      node1.isName();
      node3.isAssign();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      Node node2 = Node.newString(120, "");
      node0.setSourceEncodedPosition(53);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node.newNumber((-1.0));
      node2.isScript();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.isGetProp();
      Node.newString(113, "");
      node0.isName();
      node3.isAssign();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = new Node(24);
      Node node1 = new Node(16, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      node2.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = new Node(57, node2);
      node1.detachChildren();
      node3.hasMoreThanOneChild();
      node3.isInc();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("*F");
      Node node1 = node0.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node1.setLength(52);
      node0.getStaticSourceFile();
      node1.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isArrayLit();
      node0.getDirectives();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.isCast();
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node1.isLocalResultCall();
      Node node3 = Node.newNumber(49.0);
      node3.addChildToBack(node1);
      node1.addChildrenToBack(node3);
      node1.putBooleanProp((-1), false);
      node0.siblings();
      node1.getChangeTime();
      node2.isLabel();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      node2.toString();
      node1.isDebugger();
      Node.mergeLineCharNo(29, (-1787));
      node2.isLocalResultCall();
      node2.isBreak();
      node1.addChildrenToBack(node0);
      node0.putBooleanProp(12, false);
      node0.getChangeTime();
      node0.isLabel();
      node2.toStringTree();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("*F");
      Node node1 = node0.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node1.setLength(52);
      node0.getStaticSourceFile();
      node1.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isArrayLit();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.isCast();
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node1.isLocalResultCall();
      Node node3 = Node.newNumber(49.0);
      node1.addChildrenToBack(node3);
      node1.putBooleanProp((-1), false);
      node1.getChangeTime();
      node2.isLabel();
      node1.addChildBefore(node0, node3);
      node2.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isFor();
      node0.getLineno();
      node0.getCharno();
      node0.isEquivalentToTyped(node0);
      node0.isQuotedString();
      Node.newString((-1743), "URIError", 38, 155649);
      node0.setQuotedString();
      Node node1 = new Node(1128);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node2 = Node.newString(2, "");
      node0.isVarArgs();
      node2.isDelProp();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.setVarArgs(false);
      node0.isFalse();
      node0.wasEmptyNode();
      node0.isVoid();
      node0.isNE();
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.CanCastToVisitor");
      node1.getDirectives();
      // Undeclared exception!
//      try { 
        node1.isEquivalentToTyped((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      String string0 = "J~#=R8)imZ\"+:&#2";
      Node node0 = Node.newString("J~#=R8)imZ\"+:&#2", 578, 578);
      node0.getIntProp(46);
      Node node1 = new Node(53, node0, node0, (-6944), 18);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J~#=R8)imZ\"+:&#2");
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.iterator();
      node0.isWhile();
      Node node1 = Node.newNumber((double) 51);
      Node node2 = node0.clonePropsFrom(node1);
      node2.toString();
      node0.isThrow();
      node1.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.newString(4, "");
      node1.isGetterDef();
      node0.hasMoreThanOneChild();
      Node.newString(46, "", 2367, 103);
      Node node3 = Node.newString(51, "o&!$", 15, 56);
      node3.isNot();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-245));
      Node node0 = Node.newString("", 38, (-1784));
      Node node1 = Node.newNumber(0.0);
      node0.getType();
      node0.putIntProp(2441, 524288);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      node0.setLineno((-2528));
      Node node2 = new Node(42, node0, node0, node1);
      node2.isFalse();
      node2.wasEmptyNode();
      node0.isIf();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      node3.getSideEffectFlags();
      node2.isComma();
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isIf();
      node0.getString();
      Node.extractCharno(51);
      node0.isGetElem();
      MockFileOutputStream mockFileOutputStream0 = null;
//      try {
        mockFileOutputStream0 = new MockFileOutputStream("");
//        fail("Expecting exception: FileNotFoundException");
      
//      } catch(Throwable e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node node0 = Node.newNumber((double) 3719);
      Node node1 = new Node(0, node0, node0, node0);
      node1.isNoSideEffectsCall();
      node1.getSourceOffset();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = node0.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.setLength(0);
      node1.getStaticSourceFile();
      Node node2 = new Node(628, 56, 51);
      node1.isStringKey();
      node1.getChildCount();
      Node node3 = new Node(4095, 53, 0);
      node1.isSetterDef();
      node0.getInputId();
      InputId inputId0 = new InputId("@");
      node0.setInputId(inputId0);
      node2.isHook();
      node0.isEquivalentTo(node2);
      node3.setInputId(inputId0);
      node1.getQualifiedName();
      Node.newNumber(1703.22476);
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(126);
      Node.newNumber((-1698.6));
      Node node1 = new Node(1884, node0);
      node1.isString();
      node1.getInputId();
      node1.setInputId((InputId) null);
//      try { 
        node0.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // LABEL is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = new Node(32, node1, node1, node1);
      // Undeclared exception!
//      try { 
        node1.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node1.isDelProp();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      Node node2 = Node.newString(120, "");
      Node node3 = new Node(38, node0);
      node3.removeProp(38);
      node1.toStringTree();
      node1.isGetterDef();
      node2.getInputId();
      node3.isHook();
      node1.isEquivalentTo(node2);
      node0.setInputId((InputId) null);
      // Undeclared exception!
//      try { 
        node3.getQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node.AncestorIterable node_AncestorIterable1 = node0.getAncestors();
      node_AncestorIterable1.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable1.iterator();
      node0.isWhile();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(52, nodeArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.clonePropsFrom(node2);
      node1.getInputId();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node3.setInputId((InputId) null);
//      try { 
        node2.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // PARAM_LIST is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      node2.toString();
      Node node3 = new Node(1578, node1, node1);
      node3.isSwitch();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node3.setDirectives(set0);
      Node.newString("STRING ", 63, 57);
      node2.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = node0.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.setLength(0);
      node1.getStaticSourceFile();
      node0.isExprResult();
      node0.isArrayLit();
      Node.newString(819, "n&qTR4t%");
      node1.isCast();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newString(54, "n&qTR4t%", 1, 36);
      node3.putProp(8, (Object) null);
      node0.isSwitch();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = new Locale(".Sb^(3`g\"=t%aj");
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node3.setDirectives(set0);
      Node node4 = Node.newString("O", (-2592), 8);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node4.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isFor();
      node0.getLineno();
      node0.getCharno();
      node0.isEquivalentToTyped(node0);
      node0.isQuotedString();
      node0.isAnd();
      Node node1 = Node.newString(51, "", (-3913), 54);
      node1.setLineno(55);
      node0.isEmpty();
      Node node2 = new Node(36, node0, node1, node0, node0);
      node0.isNumber();
      node0.isDo();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      node2.toString();
      node1.isDebugger();
      Node.mergeLineCharNo(29, (-1787));
      node2.isLocalResultCall();
      node2.isBreak();
      node1.addChildrenToBack(node0);
      Node.newString((-1257), "");
      node0.isVarArgs();
      node1.isDelProp();
      node2.getChildCount();
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      Node node2 = Node.newString(120, "");
      node0.setSourceEncodedPosition(53);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node.newNumber((-1.0));
      node2.isScript();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.isGetProp();
      node3.isAssignAdd();
      Node node4 = new Node(1, node0, node2, node3, node1, 15, 1);
      node4.srcref(node0);
      Node node5 = null;
//      try {
        node5 = new Node(46, (Node[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isString();
      node0.getChildAtIndex((-2414));
      node0.mayMutateGlobalStateOrThrow();
      node1.copyInformationFromForTree(node0);
      node0.hasChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(2480, "com.google.javascript.rhino.jstype.JSType");
      node0.getProp(2480);
      Node node1 = Node.newString(":7U}AMfo");
      node0.addChildToBack(node1);
      Node node2 = node0.clonePropsFrom(node1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)44;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isOnlyModifiesArgumentsCall();
      node0.getChildCount();
      Node node3 = node0.srcrefTree(node2);
      node0.isOnlyModifiesThisCall();
      node3.setSourceEncodedPositionForTree((-394));
      Node node4 = Node.newNumber((double) 46);
      node4.isBlock();
      // Undeclared exception!
//      try { 
        node0.getChildAtIndex(57);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      node0.getInputId();
      node2.setInputId((InputId) null);
      node2.getString();
      node1.removeProp(36);
      node1.toStringTree();
      node2.isGetterDef();
      Node node3 = Node.newString(528, "FALSE\n    STRING \n");
      Node node4 = Node.newString("com.google.common.base.CharMatcher$NegatedMatcher", 29, 46);
      node2.isGetElem();
      node3.setString("");
      node4.setString("FALSE\n    STRING \n");
      // Undeclared exception!
//      try { 
        node4.getChildAtIndex(2480);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newNumber(0.0);
      node1.addChildToBack(node0);
      node1.cloneTree();
      Node node2 = Node.newNumber((double) 12);
      node0.isStringKey();
      node0.getChildCount();
      Node node3 = new Node(52, 64, 274);
      node2.isStringKey();
      node1.getChildCount();
      Node node4 = new Node(0, (-2107), 39);
      node3.isSetterDef();
      node1.getInputId();
      node0.setInputId((InputId) null);
      node3.isHook();
      // Undeclared exception!
//      try { 
        node4.isEquivalentTo((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newNumber(729.882);
      Node node1 = Node.newNumber((double) 16);
      node1.addChildToBack(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setAllFlags();
      Node node2 = Node.newNumber(700.2);
      node0.isDefaultCase();
      node2.isCatch();
      node0.isVar();
      int int0 = 57;
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = node0.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.getQualifiedName();
      node1.getProp(0);
      Node node2 = new Node(46, 4095, 1);
      node1.isStringKey();
      node0.getChildCount();
      Node node3 = new Node(29, 38, 102);
      node1.isSetterDef();
      node2.getIndexOfChild(node0);
      Node.newString(32, "n&qTR4t%");
      Node node4 = Node.newString("", (-3305), 23);
      node1.isGetElem();
      node4.setString("");
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.createTemplateTypeMap((ImmutableList<TemplateType>) null, (ImmutableList<JSType>) null);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isLabel();
      node0.isNull();
      Node.mergeLineCharNo(49, 37);
      Node node1 = new Node((-2072), node0);
      node1.useSourceInfoFrom(node0);
      node0.addChildrenToFront(node1);
      node0.setSourceFileForTesting("Object#Element");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      Node node2 = Node.newString((-2139), "YLBTnbsRmLnI&$p");
      // Undeclared exception!
//      try { 
        node2.useSourceInfoIfMissingFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newNumber(0.0);
      node1.addChildToBack(node0);
      Node node2 = node1.cloneTree();
      node1.getType();
      node1.putIntProp((-2425), (-1079));
      node1.isLocalResultCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node2.setLineno(43);
      node1.setVarArgs(false);
      node2.isFalse();
      Node node3 = null;
//      try {
        node3 = new Node(57, node1, node2, node0, node2, 0, 1219);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newNumber(0.0);
      node1.addChildToBack(node0);
      Node node2 = node1.cloneTree();
      Node node3 = Node.newNumber((double) 12);
      node3.checkTreeEqualsImpl(node2);
      node0.isStringKey();
      node0.getChildCount();
      Node node4 = new Node((-266), 28, (-111));
      node0.isSetterDef();
      Node node5 = Node.newString("STRING_TYPE");
      node2.getIndexOfChild(node5);
      // Undeclared exception!
//      try { 
        Node.newString(51, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = Node.newString("56w", 477, 49);
      Node node1 = Node.newString((-862048943), "}", 477, 99);
      node0.addChildToFront(node1);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(1, nodeArray0);
      node2.isEquivalentToTyped(node0);
      node1.addSuppression("56w");
      Node node3 = new Node(53, node0);
      Node node4 = node3.useSourceInfoFromForTree(node0);
      Node node5 = new Node(31, node2, 1, 12);
      node0.hasChild(node1);
      node4.addSuppression("}");
      node0.isDo();
      Node node6 = new Node(40, node5, node3, 40, 51);
      node6.isNew();
      Node node7 = null;
//      try {
        node7 = new Node(8, node2, 17, 85);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(16, node0, node0, 53, 1346);
      node1.mayMutateArguments();
      Node node2 = Node.newNumber((double) 49, 38, 1);
      node0.getSourceOffset();
      String string0 = "(u+B~(";
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node node3 = new Node(57, node2, node1);
      // Undeclared exception!
//      try { 
        node3.setString("");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 57
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = new Node(24);
      Node node1 = new Node(16, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      node1.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-108);
      byteArray0[1] = (byte) (-23);
      byteArray0[3] = (byte) (-108);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("com.google.common.base.Predicates", 2480, 637);
      nodeArray0[0] = node0;
      node0.removeChildren();
      Node node1 = new Node(2480, nodeArray0);
      node0.isAnd();
      Node node2 = Node.newString(33, "com.google.common.base.Predicates", (-124), 4);
      node0.setLineno(52);
      node1.cloneNode();
      node0.isEmpty();
      Node node3 = Node.newString("com.google.common.base.Predicates");
      Node node4 = null;
//      try {
        node4 = new Node((-1626), node2, node1, node3, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = Node.newString("", 739, (-1858));
      Node node1 = new Node((-301), node0, node0, node0, (-4112), 2058);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node_AncestorIterable1.spliterator();
      Node.AncestorIterable node_AncestorIterable2 = new Node.AncestorIterable(node0);
      node_AncestorIterable1.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = Node.newNumber((double) 4095);
      Node node3 = node2.clonePropsFrom(node1);
      Node node4 = Node.newString("");
      node4.toString();
      node1.isThrow();
      node4.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1023);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node4.isVoid();
      Node node5 = new Node(0, node3);
      node2.isComma();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node1 = Node.newNumber((double) 38);
      Node node2 = new Node(52);
      node1.getSideEffectFlags();
      Node node3 = new Node(0, node0, node2, 3200, 0);
      node3.removeChildAfter(node0);
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isFor();
      node0.getLineno();
      node0.getCharno();
      node0.isEquivalentToTyped(node0);
      node0.isQuotedString();
      Node node1 = Node.newString((-1743), "URIError", 38, 155649);
      node0.setQuotedString();
      Node node2 = new Node(1128);
      node2.addChildToBack(node1);
      Node.newString(1, "");
      node0.isEquivalentTo(node0);
      Node node3 = null;
//      try {
        node3 = new Node(31, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = Node.newNumber((-1268.6660644931));
      node0.hasChildren();
      Node node1 = Node.newString("SCRIPT");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      // Undeclared exception!
//      try { 
        node2.addChildrenAfter(node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)85;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.extractCharno((-800));
      Node node0 = Node.newNumber((double) 3296, 3296, (-800));
      node0.isThrow();
      node0.isDefaultCase();
      Node.newNumber((double) 48);
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newString(1769, ",w^om+5nH|P=c\"/~_^G");
      Node node1 = new Node(1769, node0, node0, 50, 11);
      node0.checkTreeEqualsImpl(node1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node2 = node1.cloneTree();
      node0.getIntProp(1766);
      node1.copyInformationFrom(node2);
      node1.getAncestor(615);
      node1.setOptionalArg(false);
      // Undeclared exception!
//      try { 
        node0.removeChild(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node1.setSourceEncodedPosition(4095);
      node1.isCast();
      node0.getSourceFileName();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node1.getAncestor(63);
      node0.putBooleanProp(113, false);
      node0.getChangeTime();
      node1.isLabel();
      node1.toStringTree();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node_SideEffectFlags0.setThrows();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-1481.79098208), 7272, 49);
      node0.isSyntheticBlock();
      node0.isQualifiedName();
      String string0 = "d11]";
      node0.addSuppression("d11]");
      node0.isLabel();
      node0.isNull();
      Node node1 = new Node((-1027), node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      // Undeclared exception!
//      try { 
        node0.addChildrenToFront(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = Node.newString("3(4\"", 42, 42);
      Node node1 = new Node(16, node0, node0, node0);
      node0.addChildToFront(node1);
      node0.getJsDocBuilderForNode();
      node0.siblings();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node1.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      node0.toString();
      node0.isThrow();
      node2.isQualifiedName();
      node1.getBooleanProp(51);
      node0.isTrue();
      node1.getLength();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node3 = null;
//      try {
        node3 = new Node(37, node2, node2, node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newNumber(0.0);
      node1.addChildToBack(node0);
      Node node2 = node1.cloneTree();
      Node node3 = Node.newNumber((double) 12);
      node1.isSwitch();
      node0.getChildCount();
      Node node4 = new Node(52, 64, 274);
      node3.isStringKey();
      int int0 = Node.POST_FLAG;
      node1.removeFirstChild();
      Node node5 = new Node(0, (-2107), 39);
      node4.isSetterDef();
      int int1 = Node.IS_NAMESPACE;
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = Node.newString(0, "zVV3s.BoO'u_VcO", (-2651), 1610612736);
      node0.isGetProp();
      node0.setOptionalArg(false);
      Node node1 = Node.newString("]yE/_+emk^p", 0, 32);
      Node node2 = Node.newString(1, "]yE/_+emk^p", (-3039), (-1422));
      Node node3 = Node.newString("@n1\u0006W)x]=d3j", 145, 0);
      Node node4 = node2.getAncestor(0);
      node2.getStaticSourceFile();
      node1.setString("]yE/_+emk^p");
      Node.newNumber(0.0, 27, (-1047));
      node0.isEquivalentTo(node2, false, false, false);
      node0.addChildrenToFront(node1);
      node1.addChildToBack(node0);
      node0.isInc();
      node1.isDefaultCase();
      node2.isCatch();
      node0.isGetterDef();
      node2.isVar();
      node4.setCharno(53);
      node3.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node3 = new Node(16, node1);
      node2.hasMoreThanOneChild();
      node2.isInc();
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = Node.newNumber(729.882);
      Node node1 = node0.cloneTree();
      node0.setLength(27);
      node1.getStaticSourceFile();
      node0.isExprResult();
      node0.isArrayLit();
      Node node2 = Node.newString(30, "");
      Node node3 = node1.useSourceInfoFrom(node0);
      node0.addChildrenToFront(node2);
      node0.setSourceFileForTesting("comparator");
      Node.newString("3yg.P", 15, 39);
      node0.detachChildren();
      node3.getIndexOfChild(node1);
      Node node4 = new Node(42, node0, node0, node2);
      node4.getChildBefore(node0);
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.createTemplateTypeMap((ImmutableList<TemplateType>) null, (ImmutableList<JSType>) null);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isLabel();
      node0.isNull();
      Node.mergeLineCharNo(49, 37);
      Node node1 = new Node((-2072), node0);
      Node node2 = new Node(4095, node1, node1);
      node1.setSourceEncodedPosition(132);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node4 = Node.newNumber((double) 57);
      node2.isScript();
      node0.getDirectives();
      node1.isGetProp();
      node4.isAssignAdd();
      node2.copyInformationFrom(node4);
      node3.srcref(node0);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node2);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2072
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 153, 153);
      node0.isSyntheticBlock();
      node0.isQualifiedName();
      node0.addSuppression("missing prop: ");
      Node node1 = new Node(49, node0, node0, node0, node0);
      node1.getAncestors();
      node1.isThis();
      node0.isString();
      node0.isQualifiedName();
      InputId inputId0 = new InputId("7");
      inputId0.toString();
      node1.putProp(1, inputId0);
      Node node2 = null;
//      try {
        node2 = new Node(56, node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isDo();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isFor();
      node0.getLineno();
      node0.getCharno();
      node0.isEquivalentToTyped(node0);
      node0.isQuotedString();
      Node node1 = Node.newString((-1743), "URIError", 38, 155649);
      Node node2 = Node.newNumber((double) 47);
      node1.isScript();
      node0.getDirectives();
      node0.isGetProp();
      node1.isAssignAdd();
      Node node3 = node0.copyInformationFrom(node2);
      node3.srcref(node0);
      node0.checkTreeEquals(node0);
      node3.setQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node.newNumber((double) 32);
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = Node.newString(4150, "T}jY*?ci$3/4b", 4150, 4150);
      node0.getString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      TemplateType[] templateTypeArray0 = new TemplateType[8];
      String string0 = "fQ}F";
      JSType jSType0 = null;
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
//      try { 
        ImmutableList.of((TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(16, node0, node0, 37, 1346);
      node1.mayMutateArguments();
      Node node2 = Node.newNumber((double) 49, 38, 1);
      node2.getJsDocBuilderForNode();
      node0.getSourceOffset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node3 = new Node(57, node2, node1);
      node0.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node4 = null;
//      try {
        node4 = new Node((-127), node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.createTemplateTypeMap((ImmutableList<TemplateType>) null, (ImmutableList<JSType>) null);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isLabel();
      node0.isNull();
      Node.mergeLineCharNo(49, 37);
      Node node1 = new Node((-2072), node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.addChildrenToFront(node1);
      node0.setSourceFileForTesting("Object#Element");
      Node node3 = Node.newString("&", (-411), 57);
      node3.detachChildren();
      node3.copyInformationFromForTree(node2);
      node2.getIndexOfChild(node3);
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node3);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-1393), nodeArray0, 24, 154);
      node0.isFalse();
      node0.wasEmptyNode();
      node0.mayMutateArguments();
      node0.isNE();
      node0.isNot();
      node0.isNull();
      node0.isAnd();
      Node node1 = Node.newString(995, "", 108, 26);
      node1.setLineno(31);
      node0.isEmpty();
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isFor();
      node0.getLineno();
      node0.getCharno();
      node0.isEquivalentToTyped(node0);
      node0.isQuotedString();
      Node node1 = Node.newString((-1743), "URIError", 38, 155649);
      node0.setQuotedString();
      Node node2 = new Node(1128);
      node2.addChildToBack(node1);
      Node.newString(1, "");
      node0.isEquivalentTo(node0);
      Node node3 = null;
//      try {
        node3 = new Node(2233, (Node) null, 57, (-2002));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = Node.newString("56w", 477, 49);
      Node node1 = Node.newString((-862048943), "}", 477, 113);
      node0.addChildToFront(node1);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(1, nodeArray0);
      node2.isEquivalentToTyped(node0);
      node1.addSuppression("56w");
      Node node3 = Node.newNumber((double) 2, 63, 10);
      Node node4 = node3.useSourceInfoFromForTree(node0);
      Node node5 = new Node(31, node2, 1, 12);
      node0.hasChild(node1);
      node4.addSuppression("}");
      Node node6 = Node.newNumber(698.218, 29, 29);
      node6.isDo();
      Node node7 = new Node(40, node5, node3, 40, 51);
      node7.isNew();
      Node node8 = new Node(8, node6, 17, 85);
      node7.srcrefTree(node8);
      node7.isEquivalentToTyped(node3);
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = new Node(10);
      Node node1 = new Node(16, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node_AncestorIterable0.iterator();
      Node.AncestorIterable node_AncestorIterable1 = node1.getAncestors();
      node_AncestorIterable1.iterator();
      node0.isWhile();
      Node node3 = node2.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(154);
      node_SideEffectFlags0.setThrows();
      Node.newString(37, "is_constant_name");
      node3.isName();
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setChangeTime(29);
      node0.isIf();
      node0.getString();
      Node.extractCharno(55);
      node0.isGetElem();
      MockFileOutputStream mockFileOutputStream0 = null;
//      try {
        mockFileOutputStream0 = new MockFileOutputStream("");
//        fail("Expecting exception: FileNotFoundException");
      
//      } catch(Throwable e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      int int0 = 56;
      Node node0 = Node.newString(56, "G|(b#2msm[", 56, (-1748));
      Node node1 = new Node(8, node0, node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      Object object0 = new Object();
      node2.putProp(16, object0);
      Node node3 = Node.newString("G|(b#2msm[", 31, 3582);
      node3.getBooleanProp(56);
      // Undeclared exception!
//      try { 
        node1.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 8
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = Node.newNumber(729.882);
      Node node1 = Node.newNumber((double) 16);
      node1.addChildToBack(node0);
      node0.cloneTree();
      node0.getQualifiedName();
      Node node2 = Node.newNumber(1739.895844134);
      node0.isStringKey();
      node0.getChildCount();
      Node node3 = new Node(1, 42, 55);
      node2.isGetElem();
//      try { 
        node0.setString((String) null);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 729.882 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = Node.newString(":m");
      node0.addSuppression(":m");
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node0.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node1);
      node0.getLength();
      node1.isBlock();
      node1.checkTreeEqualsImpl(node2);
      node2.getSourceOffset();
      int int0 = Node.IS_DISPATCHER;
      Node node3 = Node.newString(":m");
      node3.getDirectives();
      Node node4 = null;
      node1.isEquivalentToTyped(node3);
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = new Node(24);
      Node node1 = new Node(16, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = null;
//      try {
        node2 = new Node(47, node0, node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node1 = new Node(46, node0, node0, 47, 57);
      Node node2 = null;
//      try {
        node2 = new Node((-148), node0, node0, node1, node0, 417, 2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(16, 85, 8);
      node1.setVarArgs(false);
      Node node3 = null;
//      try {
        node3 = new Node(15, node1, node0, (Node) null, node1, 46, 4095);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = Node.newString("56w", 477, 49);
      Node node1 = Node.newString((-862048943), "}", 477, 113);
      node0.addChildToFront(node1);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(1, nodeArray0);
      node2.isEquivalentToTyped(node0);
      node1.addSuppression("56w");
      Node node3 = Node.newNumber((double) 2, 63, 2);
      Node node4 = node3.useSourceInfoFromForTree(node0);
      Node node5 = new Node(31, node2, 1, 12);
      node0.hasChild(node1);
      node4.addSuppression("}");
      Node.newString(4095, "(;_O#bv)[29_to^X}");
      Node node6 = null;
//      try {
        node6 = new Node(40, node3, node1, (Node) null, (Node) null, 103, 2060);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newNumber((double) 864);
      Node node1 = new Node(57);
      node0.getSideEffectFlags();
      Node node2 = new Node((-3673), node0, node0, 944, 57);
      Node node3 = null;
//      try {
        node3 = new Node(32, node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = Node.newNumber(729.882);
      Node node1 = Node.newNumber((double) 16);
      node1.addChildToBack(node0);
      Node node2 = node0.cloneTree();
      node1.setLength(27);
      node2.getStaticSourceFile();
      node1.isExprResult();
      node1.isArrayLit();
      Node.newString(30, "");
      Node node3 = Node.newNumber(0.0, 52, 145);
      Node node4 = Node.newString(50, "");
      node0.setSourceEncodedPosition(30);
      Node node5 = node1.useSourceInfoIfMissingFromForTree(node2);
      Node node6 = Node.newNumber((double) 4095);
      node6.isScript();
      node5.getDirectives();
      node3.isGetProp();
      node3.isAssignAdd();
      node2.addChildrenToBack(node4);
      Node node7 = node0.copyInformationFrom(node2);
      node7.srcref(node6);
      node1.checkTreeEquals(node3);
      // Undeclared exception!
//      try { 
        node5.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.isFalse();
      node0.wasEmptyNode();
      node0.mayMutateArguments();
      node0.isNE();
      node0.isNot();
      node0.isNull();
      node0.isAnd();
      Node node1 = Node.newString(40, "", 36, 16);
      node1.setLineno((-2099));
      node0.isEmpty();
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.setSourceEncodedPosition(4095);
      Node node1 = Node.newNumber(1215.30468, (-1649), 308);
      node1.isAssignAdd();
      node1.copyInformationFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = Node.SIDE_EFFECTS_ALL;
      Node.newNumber(0.0);
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = node0.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.setLength(0);
      node1.getStaticSourceFile();
      node0.isExprResult();
      node0.isArrayLit();
      Node node2 = Node.newString(819, "n&qTR4t%");
      node1.isCast();
      node0.getSourceFileName();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node2.putBooleanProp(57, false);
      node1.getChangeTime();
      node2.isLabel();
      node1.toStringTree();
      // Undeclared exception!
//      try { 
        Node.newString(15, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = Node.newNumber((double) 4095);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node1);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.setLength((-11));
      node0.getStaticSourceFile();
      node0.isExprResult();
      node1.isArrayLit();
      Node node3 = Node.newString(819, "n&qTR4t%");
      node2.isQualifiedName();
      node3.getBooleanProp(282);
      node1.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      int int0 = 194;
      Node node0 = new Node(116, 147, 194);
      Node node1 = new Node(147, node0, node0, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(194, node1, node0, 2, 40);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2822);
      Node node1 = new Node(30);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(2822, node0, node0, node0, node0);
      node3.isSetterDef();
      node1.addSuppression("1x suv+k{");
      node3.setSourceEncodedPosition(57);
      Node node4 = node0.cloneNode();
      Node node5 = node3.useSourceInfoIfMissingFromForTree(node1);
      node0.detachFromParent();
      node2.getBooleanProp(54);
      node3.isTrue();
      node3.getLength();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node4.isObjectLit();
      node5.isVoid();
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = Node.newString("3(4\"", 42, 42);
      Node node1 = new Node(16, node0, node0, node0);
      node0.addChildToFront(node1);
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2816);
      Node node1 = new Node(30);
      Node node2 = new Node(50, node1, node0);
      Node node3 = null;
//      try {
        node3 = new Node(4095, node2, node0, node1, 4095, 1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = new Node(3853, 3853, 49);
      node0.setVarArgs(false);
      node0.isFalse();
      node0.wasEmptyNode();
      node0.isVoid();
      node0.isNE();
      node0.isNE();
      node0.isNew();
      node0.isNull();
      node0.isAnd();
      Node node1 = Node.newString(40, "", 36, 16);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Q~Zh%nw.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(2259.391311899203);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
//      try { 
        node0.addChildBefore((Node) null, (Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isFor();
      node0.getLineno();
      node0.getCharno();
      node0.isEquivalentToTyped(node0);
      node0.isQuotedString();
      Node node1 = Node.newString((-1743), "URIError", 38, 155649);
      node0.setQuotedString();
      Node node2 = new Node(1128);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node2.putBooleanProp(53, false);
      node0.getChangeTime();
      node1.isLabel();
      node0.toStringTree();
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node1.setSourceEncodedPosition(4095);
      node1.isCast();
      node0.getSourceFileName();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node0.putBooleanProp(113, false);
      node0.getChangeTime();
      node1.isLabel();
      node1.toStringTree();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getIntProp(4084);
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node1.isOnlyModifiesArgumentsCall();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node1.isCase();
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setThrows();
      Node node3 = Node.newString(42, "is_constant5name");
      node3.getLength();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = node2.setJSDocInfo(jSDocInfo0);
      node4.getNext();
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node node0 = Node.newNumber((double) 864);
      Node node1 = new Node(2726);
      node1.getSideEffectFlags();
      Node node2 = new Node(0, node0, node1, 1, 42);
      // Undeclared exception!
//      try { 
        node2.addChildrenAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.Predicates", 2480, 637);
      node0.getChangeTime();
      Node node1 = new Node(637);
      node1.getSourceOffset();
      node0.setSourceEncodedPosition((-1825));
      node0.detachChildren();
      HashSet<Node> hashSet0 = new HashSet<Node>(1853);
      node1.isParamList();
      node1.isVarArgs();
      node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
//      try { 
        node1.toString(false, false, false);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 637
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = new Node(26, 26, 26);
      node0.isWhile();
      node0.isQualifiedName();
      node0.isNot();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(16, node0, node0, 37, 1346);
      node1.mayMutateArguments();
      Node node2 = Node.newNumber((double) 49, 38, 1);
      node2.getJsDocBuilderForNode();
      node0.getSourceOffset();
      Node node3 = Node.newString("(u+B~(");
      node3.setString("(u+B~(");
      node3.getChangeTime();
      node1.getSourceOffset();
      node0.setSourceEncodedPosition(4095);
      node0.detachChildren();
      HashSet<Node> hashSet0 = new HashSet<Node>(46);
      node1.isParamList();
      node1.isGetProp();
      Node node4 = node0.useSourceInfoFromForTree(node2);
      node4.toString(true, true, false);
      node0.isIf();
      node1.isGetterDef();
      node4.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node0.addChildrenToBack(node1);
      Node.newString(16, "(u+B~(");
      node0.isGetterDef();
      node4.hasMoreThanOneChild();
      node4.isNot();
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node1.isCase();
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setThrows();
      Node node3 = Node.newString(55, "$[S");
      node2.isGetterDef();
      node3.hasMoreThanOneChild();
      node3.isNot();
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = new Node(24);
      Node node1 = new Node(16, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, 40, 40);
      node0.setVarArgs(false);
      node2.isFalse();
      node2.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = new Node(57, node2);
      node3.hasMoreThanOneChild();
      node3.isInc();
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = Node.newString("56w", 477, 49);
      Node node1 = Node.newString((-862048943), "}", 477, 113);
      node0.addChildToFront(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node1.isCase();
      Node node2 = node1.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(114);
      node_SideEffectFlags0.setThrows();
      Node.newString(1, "is_constant5name");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      Node node3 = null;
//      try {
        node3 = new Node(934, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4743, 108);
      node0.getAncestors();
      node0.isDo();
      Node node1 = Node.newNumber((double) 4);
      Node node2 = new Node(113, node1, 16, 4095);
      Node node3 = Node.newString("Y\"C", 1970, 705);
      node2.checkTreeTypeAwareEqualsImpl(node3);
      node2.isFor();
      node1.getLineno();
      node1.getCharno();
      node0.isEquivalentToTyped(node2);
      node2.isQuotedString();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node3;
      nodeArray0[2] = node1;
      nodeArray0[3] = node3;
      nodeArray0[4] = node0;
      nodeArray0[5] = node2;
      nodeArray0[6] = node0;
      Node node4 = Node.newString(48, "URIError");
      nodeArray0[7] = node4;
      Node node5 = new Node(49, 30, 1253);
      nodeArray0[8] = node5;
      Node node6 = null;
//      try {
        node6 = new Node(64, nodeArray0, (-4459), 352);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node.newString("");
      Node node0 = null;
//      try {
        node0 = new Node(36, (Node) null, (Node) null, 666, (-505));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      int int0 = 5260;
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString("7euIHW9Q.`r+r");
      Node node1 = new Node(89, node0, node0, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(5260, node1, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(0, node0, 36, 54);
      // Undeclared exception!
//      try { 
        node1.addChildToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(0, node0, 36, 54);
      node1.isQualifiedName();
      String string0 = "BTS?8|m9psf";
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(node_SideEffectFlags1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node node0 = Node.newNumber(729.882);
      Node node1 = Node.newNumber((double) 16);
      node1.addChildToBack(node0);
      Node node2 = node0.cloneTree();
      Node node3 = new Node(50, node2, node2, node1, node1, 46, 57);
      node0.isStringKey();
      node0.getChildCount();
      node2.isEquivalentToTyped(node3);
      Node node4 = new Node(1, 42, 55);
      node1.isSetterDef();
      node1.getIndexOfChild(node0);
      Node node5 = Node.newString(2, "=)5*ZS%&@k^IK~icU");
      // Undeclared exception!
//      try { 
        node5.replaceChild(node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newNumber(0.0);
      node1.addChildToBack(node0);
      Node node2 = node1.cloneTree();
      Node.newNumber((double) 12);
      node0.isStringKey();
      node0.getChildCount();
      Node node3 = new Node((-266), 28, (-111));
      node0.isSetterDef();
      Node node4 = Node.newString("STRING_TYPE");
      node2.getIndexOfChild(node4);
      // Undeclared exception!
//      try { 
        Node.newString(51, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = Node.newString("", 739, (-1858));
      node0.getType();
      node0.putIntProp(0, 4095);
      node0.isLocalResultCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.setLineno((-1858));
      JSType[] jSTypeArray0 = new JSType[2];
      JSType jSType0 = null;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(0, node0, 36, 54);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("(X", node1, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getDisplayName();
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = (JSType) enumElementType0;
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.checkTreeEqualsImpl(node1);
      node1.detachChildren();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry1.getObjectElementKey();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0, templateType0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createInterfaceType("Not declared as a constructor", node2, immutableList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = node0.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.setLength(0);
      node1.getStaticSourceFile();
      node0.isExprResult();
      node0.isArrayLit();
      Node node2 = Node.newString(819, "n&qTR4t%");
      Node.newNumber((double) 15, 1, 108);
      Node.newString(51, "");
      node0.setSourceEncodedPosition(54);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node1.isScript();
      node1.getDirectives();
      node0.isGetProp();
      node2.isAssignAdd();
      node0.addChildrenToBack(node2);
      node2.copyInformationFrom(node0);
      node3.setQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.isGetterDef();
      node_SideEffectFlags0.valueOf();
      Node.newNumber(0.0);
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = Node.newString((-1858), "", (-1858), 739);
      node0.getType();
      node0.putIntProp(0, 4095);
      node0.isLocalResultCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.setLineno((-1858));
      JSType[] jSTypeArray0 = new JSType[2];
      JSType jSType0 = null;
      jSTypeRegistry0.unregisterPropertyOnType("", (JSType) null);
      node0.getFirstChild();
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = Node.newNumber(729.882);
      Node node1 = Node.newNumber((double) 16);
      node1.addChildToBack(node0);
      node0.cloneTree();
      Node node2 = Node.newNumber(1739.895844134);
      node0.isStringKey();
      node0.getChildCount();
      Node node3 = null;
//      try {
        node3 = new Node(55, node2, node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.EmptyImmutableSet", (-31), (-244));
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node0.putIntProp(2488, 2488);
      Node node1 = new Node(31, node0, node0);
      node1.isDelProp();
      node0.setChangeTime(716);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      // Undeclared exception!
//      try { 
        SimpleErrorReporter.getMessage1("7t99L1f5", "com.google.common.collect.EmptyImmutableSet");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // no message resource found for message property 7t99L1f5
//         //
//         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 153, 153);
      node0.isSyntheticBlock();
      node0.isQualifiedName();
      node0.addSuppression("missing prop: ");
      Node node1 = new Node(49, node0, node0, node0, node0);
      node1.getAncestors();
      node1.isArrayLit();
      node0.isString();
      node0.isQualifiedName();
      InputId inputId0 = new InputId("");
      node1.putProp(1, inputId0);
      node1.isArrayLit();
      Node.mergeLineCharNo(43, 38);
      node1.isLocalResultCall();
      node0.isBreak();
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(4, "");
      node0.isVarArgs();
      node1.isDelProp();
      node2.getChildCount();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node1.isCase();
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setThrows();
      Node node3 = Node.newString(42, "is_constant5name");
      node2.isVarArgs();
      node1.isDelProp();
      node3.getChildCount();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node1.isDelProp();
      node0.addSuppression("d11]");
      node1.getAncestors();
      node1.isArrayLit();
      node1.isAnd();
      Node node2 = Node.newString(120, "");
      node0.toStringTree();
      Node.newNumber((double) 57);
      node1.isScript();
      HashSet<String> hashSet0 = new HashSet<String>();
      Node.newString(103, "1&2Z>\"h~$h6Zi&}OR,<");
      node0.isName();
      node1.hasChild(node2);
      node2.isAnd();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.createTemplateTypeMap((ImmutableList<TemplateType>) null, (ImmutableList<JSType>) null);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isContinue();
      node0.isLabel();
      node0.isNull();
      Node.mergeLineCharNo(49, 37);
      Node node1 = new Node((-2072), node0);
      node1.useSourceInfoFrom(node0);
      node0.addChildrenToFront(node1);
      node0.setSourceFileForTesting("Object#Element");
      Node node2 = Node.newString("&", (-411), 57);
      node2.detachChildren();
      // Undeclared exception!
//      try { 
        node2.replaceChild(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(101);
      node_SideEffectFlags0.setThrows();
      Node.newString((-126), "is_constant_name");
      Node node3 = new Node((-1820), node1, node2, node0, 672, 65535);
      node3.isName();
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node1.setLength(54);
      node_AncestorIterable0.iterator();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node1.hasChild(node1);
      // Undeclared exception!
//      try { 
        node1.clonePropsFrom(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Node has existing properties.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = Node.newNumber(729.882);
      Node node1 = Node.newNumber((double) 16);
      node1.addChildToBack(node0);
      Node node2 = node0.cloneTree();
      node1.setLength(27);
      node2.getStaticSourceFile();
      node1.isExprResult();
      node1.isArrayLit();
      Node.newString(30, "");
      Node node3 = Node.newString(50, "");
      node0.setSourceEncodedPosition(30);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node2);
      // Undeclared exception!
//      try { 
        node4.clonePropsFrom(node3);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Node has existing properties.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      node0.getInputId();
      node2.setInputId((InputId) null);
      node2.getString();
      node1.removeProp(36);
      node1.toStringTree();
      node2.isGetterDef();
      node1.getInputId();
      node0.setInputId((InputId) null);
      node0.isHook();
      node0.isEquivalentTo(node2);
      node0.setInputId((InputId) null);
      node1.getQualifiedName();
      Node node3 = new Node(0, 43, 49);
      Node node4 = node3.srcref(node0);
      node0.cloneTree();
      node4.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = node0.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.setLength(0);
      node1.getStaticSourceFile();
      node0.isExprResult();
      node0.isArrayLit();
      Node node2 = Node.newString(819, "n&qTR4t%");
      Node.newNumber((double) 15, 1, 108);
      Node.newString(51, "");
      node0.setSourceEncodedPosition(54);
      node2.useSourceInfoIfMissingFromForTree(node0);
      node1.isScript();
      node1.getDirectives();
      node0.isGetProp();
      node2.isAssignAdd();
      node0.addChildrenToBack(node2);
      node2.copyInformationFrom(node0);
      Node node3 = node1.srcref(node0);
      // Undeclared exception!
//      try { 
        node3.checkTreeEquals(node2);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 819
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      String string0 = "?";
      Node node0 = Node.newString("?");
      node0.addSuppression("?");
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(4095, node0);
      node0.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node1);
      node0.getLength();
      node1.isBlock();
      node1.checkTreeEqualsImpl(node2);
      node2.getSourceOffset();
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp(46);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 46
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.createTemplateTypeMap((ImmutableList<TemplateType>) null, (ImmutableList<JSType>) null);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isContinue();
      node0.isLabel();
      node0.isNull();
      Node.mergeLineCharNo(49, 37);
      Node node1 = new Node((-2072), node0);
      node1.useSourceInfoFrom(node0);
      node0.addChildrenToFront(node1);
      node0.setSourceFileForTesting("Object#Element");
      Node node2 = Node.newString("&", (-411), 57);
      node2.detachChildren();
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = new Node((-1371), 24, 24);
      node0.setCharno(122);
      Node node1 = new Node(2583, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = node1.getAncestor(0);
      Node node3 = Node.newString("String node not created with Node.newString");
      node3.isQualifiedName();
      Node node4 = node0.useSourceInfoIfMissingFrom(node1);
      node4.getJSDocInfo();
      node2.removeChild(node4);
      node1.isScript();
      // Undeclared exception!
//      try { 
        node0.removeChild(node4);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(16, node0, node0, 37, 1346);
      node1.mayMutateArguments();
      Node node2 = Node.newNumber((double) 49, 38, 1);
      node2.getJsDocBuilderForNode();
      node0.getSourceOffset();
      Node node3 = Node.newString("(u+B~(");
      node3.setString("(u+B~(");
      node3.getChangeTime();
      node1.getSourceOffset();
      node0.setSourceEncodedPosition(4095);
      node0.detachChildren();
      HashSet<Node> hashSet0 = new HashSet<Node>(46);
      node1.isParamList();
      node1.isGetProp();
      Node node4 = node0.useSourceInfoFromForTree(node2);
      node4.toString(true, true, false);
      node0.isIf();
      node1.isGetterDef();
      node4.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.valueOf();
      Node.newNumber(0.0);
      node1.getJSDocInfo();
      node4.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 131072, 131072);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = new Node(3853);
      node0.isDo();
      node0.isFor();
      node0.getLineno();
      node0.getCharno();
      String string0 = "]$qG]R6|u";
      node0.isEquivalentToTyped(node0);
      node0.isQuotedString();
      Node.newString(47, "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet", (-1191), 2269);
      // Undeclared exception!
//      try { 
        node0.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node.newString("Y\"C", 128, 4095);
      Node node1 = null;
//      try {
        node1 = new Node(104, nodeArray0, 46, 32);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = Node.newString("3(4\"", 42, 42);
      Node node1 = new Node(16, node0, node0, node0);
      node0.addChildToFront(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.siblings();
      node1.isCast();
      node1.getSourceFileName();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node1.putBooleanProp(42, false);
      node1.getChangeTime();
      node0.isLabel();
      // Undeclared exception!
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      int int0 = 54;
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString("", 54, 54);
      Node node1 = new Node(54, node0, node0);
      nodeArray0[0] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      node1.getJSType();
      jSTypeArray0[0] = null;
      JSType.toMaybeTemplateType((JSType) null);
      jSTypeArray0[1] = (JSType) null;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry1.getObjectIndexKey();
      jSTypeArray0[2] = (JSType) templateType0;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      nodeArray0[1] = node2;
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter1);
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) templateType0, (JSType) null, (JSType) null, (JSType) null, (JSType) null, jSTypeArray0[2], (JSType) null, (JSType) templateType0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 1
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = Node.newNumber(2648.80891997941, 49, 49);
      node0.setVarArgs(false);
      node0.isFalse();
      node0.wasEmptyNode();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = Node.newString("", 105, 16);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.spliterator();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node_AncestorIterable1.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node1 = Node.newNumber((-1694.720125611391));
      node1.clonePropsFrom(node0);
      node1.isArrayLit();
      node1.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      Node node2 = null;
//      try {
        node2 = new Node(4, node0, node1, (Node) null, (Node) null, 180, 31);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = Node.newNumber((double) 49, 3853, 49);
      node0.setVarArgs(false);
      node0.isFalse();
      node0.wasEmptyNode();
      node0.isVoid();
      node0.isNE();
      node0.isNE();
      node0.isNew();
      node0.isNull();
      node0.isAnd();
      Node node1 = Node.newString(40, "", 36, 16);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.iterator();
      node_AncestorIterable1.iterator();
      node0.isWhile();
      Node node1 = Node.newNumber((double) 51);
      Node node2 = node0.clonePropsFrom(node1);
      node2.toString();
      node0.isThrow();
      node1.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node1.isVoid();
      Node node3 = new Node(40, node1);
      // Undeclared exception!
//      try { 
        node2.addChildrenAfter(node1, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = Node.newString("56w", 477, 49);
      Node node1 = Node.newString((-862048943), "}", 477, 113);
      node0.addChildToFront(node1);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(1, nodeArray0);
      node2.isEquivalentToTyped(node0);
      node1.addSuppression("56w");
      Node node3 = Node.newNumber(0.5, 342, 54);
      Node node4 = node3.useSourceInfoFromForTree(node1);
      Node node5 = new Node(1, node3, 2133, 4373);
      node4.hasChild(node1);
      node5.addSuppression("G");
      Node node6 = Node.newNumber((double) 32, 53, 40);
      node6.isDo();
      node4.isNew();
      node1.srcrefTree(node2);
      node4.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newString((-1858), "", (-1858), 739);
      node0.getType();
      node0.putIntProp(0, (-3316));
      node0.isLocalResultCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.setLineno((-1858));
      JSType[] jSTypeArray0 = new JSType[2];
      JSType jSType0 = null;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = Node.newNumber(729.882);
      Node node1 = Node.newNumber((double) 16);
      node1.addChildToBack(node0);
      Node node2 = node0.cloneTree();
      Node.newNumber(1739.895844134);
      node0.isStringKey();
      node0.getChildCount();
      Node node3 = new Node(1, 42, 55);
      node1.isSetterDef();
      node1.getIndexOfChild(node0);
      Node node4 = Node.newString(2, "=)5*ZS%&@k^IK~icU");
      // Undeclared exception!
//      try { 
        node4.replaceChild(node1, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      int int0 = 3853;
      Node node0 = Node.newString("+[.n|nY_NfdO+=4]", 3853, 3853);
      Node[] nodeArray0 = null;
      int int1 = 114;
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = Node.newString("", 3853, 3853);
      String string0 = "7rj";
      node0.getSourceFileName();
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      String string0 = ":m";
      Node node0 = Node.newString(":m");
      node0.addSuppression(":m");
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.cloneNode();
      node0.isSyntheticBlock();
      Node node2 = node0.copyInformationFrom(node1);
      node0.getLength();
      node1.isBlock();
      node1.checkTreeEqualsImpl(node2);
      node2.getSourceOffset();
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp(46);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 46
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isDo();
      node0.isFor();
      node0.getLineno();
      node0.getCharno();
      node0.isEquivalentToTyped(node0);
      node0.isQuotedString();
      Node node1 = Node.newString((-1743), "URIError", 38, 155649);
      node0.setQuotedString();
      Node node2 = new Node(1128);
      node2.addChildToBack(node1);
      Node.newString(1, "");
      node0.isEquivalentTo(node0);
      node2.isComma();
      node0.addChildToBack(node0);
      node0.toString(false, false, false);
      node1.getInputId();
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = node0.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.setLength(0);
      node1.getStaticSourceFile();
      node0.isExprResult();
      node0.isArrayLit();
      Node node2 = new Node((-2057), node1, node0, (-4150), (-1522));
      node2.isWhile();
      Node node3 = node0.clonePropsFrom(node2);
      node1.getInputId();
      node0.setInputId((InputId) null);
      node1.getString();
      node3.removeProp(43);
      node1.toStringTree();
      Node node4 = null;
//      try {
        node4 = new Node(644, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.removeChildren();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = node0;
      nodeArray0[3] = null;
      nodeArray0[4] = null;
      nodeArray0[5] = null;
      nodeArray0[6] = node0;
      Node node1 = null;
//      try {
        node1 = new Node(50, nodeArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(16, node0, node0, 37, 1346);
      node1.mayMutateArguments();
      Node node2 = Node.newNumber((double) 49, 38, 1);
      node2.getJsDocBuilderForNode();
      node0.getSourceOffset();
      Node node3 = Node.newString("(u+B~(");
      node3.setString("(u+B~(");
      node3.getChangeTime();
      node1.getSourceOffset();
      node0.setSourceEncodedPosition(4095);
      node0.detachChildren();
      Iterable<Node> iterable0 = new HashSet<Node>(46);
      node1.isParamList();
      node1.isGetProp();
      Node node4 = node0.useSourceInfoFromForTree(node2);
      node4.toString(true, true, false);
      node0.isIf();
      node1.isGetterDef();
      node4.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.valueOf();
      Node.newNumber(0.0);
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = Node.newString("+[.n|nY_NfdO+=4]", 3853, 3853);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.putBooleanProp((-1159), false);
      Node node1 = Node.newString(39, "");
      node1.getChangeTime();
      node0.isLabel();
      Node node2 = new Node(459, node0, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node2.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 459
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setAllFlags();
      Node node0 = Node.newString(83, "is_constant_name");
      node0.isName();
      node0.isOptionalArg();
      Node node1 = Node.newString(1425, "t?{Sf", 477, 2);
      node0.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1726));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setAllFlags();
      Node.extractCharno(1721);
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2816);
      Node node1 = new Node(30);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(2816, node0, node0, node0, node0);
      node3.isSetterDef();
      node1.addSuppression("1x suv+k{");
      node3.setSourceEncodedPosition(57);
      node0.cloneNode();
      node3.useSourceInfoIfMissingFromForTree(node1);
      node2.getBooleanProp(54);
      node3.isTrue();
      node3.getLength();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      int int0 = 3853;
      Node.newString("+[.n|nY_NfdO+=4]", 3853, 3853);
      Node node0 = null;
//      try {
        node0 = new Node(1, (Node[]) null, 16, 114);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = Node.newString("56w", 477, 49);
      Node node1 = Node.newString((-862048943), "}", 477, 113);
      node1.isDo();
      node1.isIf();
      node0.getLineno();
      node0.getCharno();
      node1.isEquivalentToTyped(node0);
      node0.isQuotedString();
      Node node2 = Node.newString(0, " [", 46, 8);
      node2.setQuotedString();
      Node.newString(148, "56w");
      node2.isEquivalentTo(node1);
      Node node3 = Node.newNumber(0.0, 873, 56);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node3.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = Node.newString("+[.n|nY_NfdO+=4]", 3853, 3853);
      node0.setSourceFileForTesting("");
      node0.isTrue();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = Node.newNumber(213.606);
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString("", 47, 52);
      Node node3 = new Node(49, node2, node1, node0, 48, 57);
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2816);
      Node node1 = new Node(30);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isEquivalentToShallow(node1);
      Node node2 = new Node(2816, node0, node0, node0, node0);
      node2.isSetterDef();
      node1.addSuppression("1x suv+k{");
      node2.setSourceEncodedPosition(57);
      node0.cloneNode();
      node2.useSourceInfoIfMissingFromForTree(node1);
      node2.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1726));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = Node.newString("n&qTR4t%");
      Node node1 = Node.newNumber((double) 4095);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node1);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.setLength(0);
      node2.getStaticSourceFile();
      node0.isExprResult();
      node1.isArrayLit();
      Node node3 = Node.newString(819, "n&qTR4t%");
      Node.newNumber((double) 15, 1, 108);
      Node.newString(51, "");
      node0.setSourceEncodedPosition(54);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      node2.isScript();
      node2.getDirectives();
      node1.isGetProp();
      node3.isAssignAdd();
      node0.addChildrenToBack(node3);
      node3.copyInformationFrom(node1);
      node2.srcref(node1);
      node4.setQuotedString();
      node3.isBlock();
      node1.getBooleanProp(12);
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-108);
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)113;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("com.google.common.base.Predicates", 2480, 637);
      nodeArray0[0] = node0;
      node0.removeChildren();
      Node node1 = new Node(2480, nodeArray0);
      node0.isAnd();
      Node node2 = Node.newString(33, "com.google.common.base.Predicates", (-124), 4);
      node0.setLineno(52);
      node0.isEmpty();
      Node node3 = Node.newString("com.google.common.base.Predicates");
      Node node4 = null;
//      try {
        node4 = new Node((-1626), node2, node1, node3, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("com.google.common.base.Predicates", 2480, 637);
      nodeArray0[0] = node0;
      Node node1 = new Node(36, node0, node0, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(2480, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString");
      node0.cloneNode();
      node0.toString(true, false, false);
      node0.getStaticSourceFile();
      Node node1 = node0.cloneTree();
      // Undeclared exception!
//      try { 
        node1.copyInformationFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = new Node((-1371), 24, 24);
      node0.setCharno(122);
      Node node1 = new Node(2583, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = node1.getAncestor(0);
      Node.newString("String node not created with Node.newString");
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node3.getJSDocInfo();
      node2.removeChild(node3);
      // Undeclared exception!
//      try { 
        node0.removeChild(node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(0, node0, 36, 54);
      // Undeclared exception!
//      try { 
        node1.setString("BTS?8|m9psf");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node node0 = Node.newNumber((-2230.4569));
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0, node0, node0, 8, 1104);
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      int int0 = 108;
      Node node0 = Node.newString(108, "Y\"C", 4761, 108);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node1 = null;
//      try {
        node1 = new Node(1944, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      String string0 = "CharMatcher.ASCII";
      Node node0 = Node.newString((-630), "CharMatcher.ASCII");
      node0.addSuppression("CharMatcher.ASCII");
      Node node1 = new Node((-2277), node0, 44, 1);
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      int int0 = (-1349);
      Node node0 = new Node(126);
      node0.isOptionalArg();
      Node node1 = new Node((-1349), node0, node0, (-1894), 1);
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no next sibling.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      int int0 = 9;
      Node node0 = Node.newString(9, "MMIC");
      node0.setLength(0);
      Node node1 = Node.newNumber(0.0, 30, 1636);
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = Node.newString("", 8192, 8192);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(1733);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 1733
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      int int0 = (-1535);
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node((-1535), (Node) null, 0, (-1535));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      // Undeclared exception!
//      try { 
        node0.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setThrows();
      Node node0 = Node.newString(83, "is_constant_name");
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = new Node(0, 0, 1245);
      String string0 = "N%lqxPZC z?6rvKA8TM";
      Node node1 = Node.newString(43, "N%lqxPZC z?6rvKA8TM", 51, 29);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      int int0 = 704;
      Node node0 = Node.newString(1721, "e-/OgF@r-/", 704, (-74));
      Node node1 = new Node(704, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1721
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = Node.newString("+[.n|nY_NfdO+=4]", 3853, 3853);
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      ImmutableList<JSType> immutableList1 = null;
      jSTypeRegistry0.createTemplateTypeMap((ImmutableList<TemplateType>) null, (ImmutableList<JSType>) null);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isContinue();
      node0.isLabel();
      node0.isNull();
      Node.mergeLineCharNo(49, 37);
      Node node1 = new Node((-2072), node0);
      node0.addChildrenToFront(node1);
      node0.setSourceFileForTesting("Object#Element");
      Node node2 = Node.newString("&", (-411), 57);
      node2.detachChildren();
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      String string0 = "r)`";
      Node node0 = Node.newString(1214, "r)`", 0, 1214);
      node0.isDefaultCase();
      // Undeclared exception!
//      try { 
        node0.removeChildAfter((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node node0 = Node.newNumber(2556.58);
      node0.cloneTree();
      Node.newString("", 47, 52);
      node0.cloneTree();
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      int int0 = 16;
      Node[] nodeArray0 = new Node[6];
      Node node0 = Node.newNumber(0.0);
      nodeArray0[0] = node0;
      Node node1 = new Node(57, node0, node0, node0, node0, 56, 998);
      nodeArray0[1] = node1;
      Node node2 = new Node(1, node1, node1, (-98), 2483);
      nodeArray0[2] = node2;
      Node node3 = null;
//      try {
        node3 = new Node(1740, node0, (-3693), 55);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(98, (Node) null, (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = Node.newString(0, "zVV3s.BoO'u_VcO", (-2651), 1610612736);
      node0.isGetProp();
      node0.setOptionalArg(false);
      Node node1 = Node.newString("]yE/_+emk^p", 0, 32);
      node0.addSuppression("]yE/_+emk^p");
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node3 = node2.copyInformationFrom(node1);
      node2.isBlock();
      node2.checkTreeEqualsImpl(node3);
      Node node4 = new Node((-789));
      node3.getString();
      Object object0 = new Object();
      node2.putProp(29, object0);
      node3.removeProp((-1));
      // Undeclared exception!
//      try { 
        node4.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -789
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2816);
      Node node1 = new Node(30);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(2816, node0, node0, node0, node0);
      node3.isSetterDef();
      String string0 = "1x suv+k{";
      node1.addSuppression("1x suv+k{");
      node3.setSourceEncodedPosition(57);
      node0.cloneNode();
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node1);
      node3.removeProp(1317);
      node4.isArrayLit();
      Node.mergeLineCharNo(37, 2);
      node4.isBreak();
      // Undeclared exception!
//      try { 
        node3.addChildrenToBack(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      int int0 = 32;
      Node node0 = null;
      int int1 = 2695;
      String string0 = null;
      // Undeclared exception!
//      try { 
        Node.newString(2695, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(16, node0, node0, 37, 1346);
      node1.mayMutateArguments();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.getJsDocBuilderForNode();
      node0.getSourceOffset();
      Node node3 = Node.newString("(u+B~(");
      node3.setString("(u+B~(");
      node3.getChangeTime();
      node1.getSourceOffset();
      node0.setSourceEncodedPosition(4095);
      node0.detachChildren();
      node2.siblings();
      node1.isParamList();
      node1.isGetProp();
      Node node4 = node0.useSourceInfoFromForTree(node2);
      node4.toString(true, true, false);
      node0.isIf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(13);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node0.toStringTree();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setReturnsTainted();
      node0.isHook();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      Node node0 = Node.newNumber((-1481.79098208), 7272, 49);
      node0.isSyntheticBlock();
      node0.isQualifiedName();
      node0.addSuppression("d11]");
      node0.getAncestors();
      node0.isArrayLit();
      node0.isString();
      node0.isQualifiedName();
      node0.putProp(49, ")Pm7cQ9cHR#n:5`Mz");
      node0.isSwitch();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = Node.newString("+vmH&dG`pa.{*F\u0003", 126, 57);
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = Node.newString("3(4\"", 42, 42);
      Node node1 = new Node(16, node0, node0, node0);
      node0.addChildToFront(node1);
      node0.getJsDocBuilderForNode();
      node0.siblings();
      node0.setSourceEncodedPosition(42);
      node1.isCast();
      node1.getSourceFileName();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node1.putBooleanProp(0, false);
      node1.getChangeTime();
      node0.isLabel();
      // Undeclared exception!
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node node0 = Node.newString(0, "zVV3s.BoO'u_VcO", (-2651), 1610612736);
      node0.isGetProp();
      node0.setOptionalArg(false);
      Node node1 = Node.newString("]yE/_+emk^p", 0, 32);
      Node node2 = Node.newString(1, "]yE/_+emk^p", (-3039), (-1422));
      Node.newString("@n1\u0006W)x]=d3j", 145, 0);
      Node node3 = node2.getAncestor(0);
      node2.getStaticSourceFile();
      node1.setString("]yE/_+emk^p");
      Node.newNumber(0.0, 27, (-1047));
      node0.isEquivalentTo(node2, false, true, false);
      node0.addChildrenToFront(node1);
      node1.addChildToBack(node0);
      node0.isInc();
      node1.isDefaultCase();
      node2.isCatch();
      node0.isGetterDef();
      node2.isVar();
      node3.setCharno(53);
      node1.getChildCount();
      node1.setStaticSourceFile((StaticSourceFile) null);
      assertEquals(1, node1.getChildCount());
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = Node.newString((-799), "n&qTR4t%");
      Node node1 = Node.newNumber((double) 4095);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isEquivalentToShallow(node1);
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.setLength(0);
      node2.getStaticSourceFile();
      node0.isExprResult();
      node1.isArrayLit();
      Node node3 = Node.newString(2575, "n&qTR4t%");
      Node.newNumber((double) 15, 1, 108);
      Node.newString(51, "");
      node0.setSourceEncodedPosition(54);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      node2.isScript();
      node2.getDirectives();
      node1.isGetProp();
      node3.isAssignAdd();
      node0.addChildrenToBack(node3);
      node3.copyInformationFrom(node1);
      node2.srcref(node1);
      node4.setQuotedString();
      assertEquals(54, node0.getSourcePosition());
      
      node3.isBlock();
      node1.getBooleanProp(12);
      assertFalse(node1.isRegExp());
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      String string0 = "3(4\"";
      Node node0 = Node.newString("3(4\"", 42, 42);
      Node node1 = new Node(16, node0, node0, node0);
      node0.addChildToFront(node1);
      node0.getJsDocBuilderForNode();
      node0.siblings();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node1.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      node0.toString();
      node0.isThrow();
      node0.removeProp(4194304);
      node2.isArrayLit();
      Node.mergeLineCharNo(49, 1037);
      node2.isBreak();
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isWhile();
      Node node2 = node0.clonePropsFrom(node1);
      node2.toString();
      node1.isThrow();
      node1.removeProp((-1257));
      node1.isArrayLit();
      Node.mergeLineCharNo(29, (-1787));
      node2.isBreak();
      node1.addChildrenToBack(node0);
      // Undeclared exception!
//      try { 
        Node.newString(49, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2816);
      Node node1 = new Node(30);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isEquivalentToShallow(node1);
      Node node2 = new Node(2816, node0, node0, node0, node0);
      node2.isSetterDef();
      node1.addSuppression("1x suv+k{");
      node2.setSourceEncodedPosition(57);
      node0.cloneNode();
      node2.useSourceInfoIfMissingFromForTree(node1);
      node2.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1726));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      assertSame(node_SideEffectFlags1, node_SideEffectFlags6);
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      int int0 = 124;
      Node node0 = new Node(0, 124, 318);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE;
      jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      List<JSType> list0 = null;
      // Undeclared exception!
//      try { 
        SimpleErrorReporter.getMessage1("B`idm0Omrm;", simpleErrorReporter0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // no message resource found for message property B`idm0Omrm;
//         //
//         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      Node node0 = Node.newString("J~#=R8)imZ\"+:&#2", 578, 578);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING J~#=R8)imZ\"+:&#2 578 is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node node0 = Node.newString((-1858), "", (-1858), 739);
      node0.getType();
      node0.putIntProp(0, (-3316));
      node0.isLocalResultCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      JSType jSType0 = null;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      assertEquals(15, node_SideEffectFlags5.valueOf());
      
      Node node0 = Node.newNumber((-3486.20941), 864, 0);
      Node node1 = new Node(2726);
      node1.getSideEffectFlags();
      Node node2 = new Node(0, node0, node1, 1, 42);
      node2.removeChildAfter(node0);
      assertEquals(864, node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      String string0 = "56w";
      Node node0 = Node.newString("56w", 477, 49);
      Node node1 = Node.newString((-862048943), "}", 477, 113);
      node0.addChildToFront(node1);
      node1.isDo();
      node0.isFor();
      node0.getLineno();
      node0.getCharno();
      node1.isEquivalentToTyped(node0);
      node0.isQuotedString();
      Node node2 = Node.newString(0, " [", 46, 8);
      node2.setQuotedString();
      // Undeclared exception!
//      try { 
        node0.addChildToBack(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      Node node0 = Node.newNumber(729.881819945);
      Node node1 = Node.newNumber((double) 16);
      node1.setDouble(56);
      node1.addChildToBack(node0);
      node0.cloneTree();
      Node.newNumber(1739.895844134);
      node0.isStringKey();
      node0.getChildCount();
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no next sibling.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      List<JSType> list0 = null;
      // Undeclared exception!
//      try { 
        SimpleErrorReporter.getMessage0("Object#Key");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // no message resource found for message property Object#Key
//         //
//         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
//      }
  }
}
