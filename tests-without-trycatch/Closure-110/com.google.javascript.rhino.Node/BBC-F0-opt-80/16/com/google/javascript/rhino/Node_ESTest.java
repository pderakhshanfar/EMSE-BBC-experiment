/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 14:51:42 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.UnionType;
import com.google.javascript.rhino.jstype.UnknownType;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      Node node1 = new Node(15, node0, node0, node0);
      node0.srcref(node1);
      node0.isEquivalentTo(node0, true, true, true);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int int0 = 16;
      Node[] nodeArray0 = new Node[0];
      String string0 = "<invalid>";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<invalid>");
      Node node0 = new Node(16, nodeArray0);
      Node node1 = new Node(16, node0, node0, node0, node0, (-1286), 0);
      node1.isFromExterns();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K(bcO-m^+dp`/f`E;");
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.removeProp(57);
      node1.isDo();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<invalid>");
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node(116, 116, 115);
      node0.isBreak();
      Node node1 = new Node(4095, node0, node0, node0, node0, 2417, 4095);
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = new Node(746, 746, 746);
      Node node1 = new Node(4, node0);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = new Node(509);
      Node node1 = new Node(35, node0, 8, 808);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node2.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(52, node0, node0, node0, 4, 49);
      node1.checkTreeEquals(node1);
      node1.getSourceOffset();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = node0.cloneTree();
      node0.addChildToBack(node1);
      node1.isVoid();
      // Undeclared exception!
//      try { 
        node0.isEquivalentTo((Node) null, false, false, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(746);
      Node node1 = new Node(57, node0, node0, node0, 15, 2);
      node1.setType(51);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(844, node0, node0, node0, 124, 51);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = Node.CHANGE_TIME;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isTry();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString(38, "opt_arg");
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[9];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      jSTypeArray0[0] = jSType0;
      JSTypeNative jSTypeNative0 = JSTypeNative.NULL_VOID;
      jSType0.dereference();
      JSType jSType1 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[1] = jSType1;
      JSType.toMaybeFunctionType(jSTypeArray0[0]);
      jSTypeRegistry0.createObjectType((ObjectType) null);
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.toStringTree();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = Node.newString(12, "STRING <yR4W2\n", 50, 400);
      node0.clonePropsFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newString(122, "LO#oX u`H4N6Z");
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = Node.newString(38, "opt_arg");
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[9];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      jSTypeArray0[0] = jSType0;
      JSTypeNative jSTypeNative0 = JSTypeNative.NULL_VOID;
      JSType jSType1 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[1] = jSType1;
      JSType.toMaybeFunctionType(jSTypeArray0[0]);
      ObjectType objectType0 = jSTypeRegistry0.createObjectType((ObjectType) null);
      jSTypeArray0[2] = (JSType) objectType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, jSTypeArray0);
      jSTypeArray0[3] = (JSType) functionType0;
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      jSTypeArray0[4] = (JSType) templateType0;
      // Undeclared exception!
//      try { 
        modificationVisitor0.caseFunctionType(functionType0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(36, 101, (-3298));
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      Locale locale0 = Locale.forLanguageTag("com.google.common.collect.AbstractListMultimap");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      node0.setDirectives(set0);
      node1.getSourcePosition();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node((-2648), node0, (-1670), 148);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_4_^/mQyZ&b5lL!Rz");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = new Node(1020, 2990, 56);
      node3.isInc();
      node1.isHook();
      node2.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(26);
      Node node1 = node0.cloneTree();
      node0.addChildToBack(node1);
      node0.isVoid();
      node0.isEquivalentTo(node0, false, true, true);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.isInc();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isInc();
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = "G8-G`U'{Agqn";
      Node node0 = Node.newString("G8-G`U'{Agqn");
      Node node1 = Node.newNumber((double) 15);
      Node node2 = new Node(43, 43, 1263);
      node2.useSourceInfoIfMissingFrom(node0);
      Node node3 = new Node(39, node2, node1, 31, (-1462));
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node((-2132), 35, (-2132));
      Node node1 = Node.newString((-5227), "enum{", (-4508), 4666);
      Node node2 = new Node(35, node0, node0, node0, node1, 30, (-749));
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(52, node0, node0, node0, 4, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.checkTreeEquals(node1);
      node2.getIndexOfChild(node0);
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Node node0 = new Node(39, 39, 39);
      node0.isOptionalArg();
      node0.detachChildren();
      node0.getSideEffectFlags();
      node0.putIntProp(40, 88);
      node0.isCast();
      node0.isNoSideEffectsCall();
      node0.isLocalResultCall();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(0, node0, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("t)CAFr98'^0TO>B", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(85, 85, 85);
      node0.isOr();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = new Node(86);
      Node node1 = new Node(122, node0, node0, 4095, 2733);
      node0.hasChild(node1);
      node1.removeChildren();
      Node node2 = Node.newString(48, "WX,N(f )1");
      node2.isDelProp();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(114);
      node0.wasEmptyNode();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      node0.isUnscopedQualifiedName();
      node0.getBooleanProp(32);
      node0.isInc();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = new Node(117);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(32);
      Node node1 = node0.cloneTree();
      node0.addChildToBack(node1);
      Node node2 = new Node(4096, node0);
      node2.isVoid();
      boolean boolean0 = false;
      boolean boolean1 = false;
      boolean boolean2 = false;
      // Undeclared exception!
//      try { 
        node2.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 4096
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.setVarArgs(true);
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      simpleErrorReporter0.error("is_dispatcher", "is_dispatcher", 40, 53);
      node1.addChildrenToBack(node0);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = new Node(101);
      Node node1 = new Node(51, node0);
      node0.isEquivalentToTyped(node1);
      node0.setWasEmptyNode(true);
      node0.isCast();
      node0.toString();
      Object object0 = new Object();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(101);
      Node node1 = new Node(57, node0, 57, (-2803));
      node0.setJSDocInfo((JSDocInfo) null);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node(121, 121, 419);
      Node node1 = new Node(42, node0, node0, node0, 48, 43);
      Node node2 = Node.newString(51, ":");
      node1.isEquivalentToShallow(node2);
      node2.isSyntheticBlock();
      node1.addChildrenAfter(node2, node0);
      node2.isEquivalentTo(node0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(122);
      node0.isOr();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.isOr();
      node0.isIn();
      Node node1 = Node.newString("com.google.common.collect.ImmutableList$SubList");
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.isOr();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(52, node0, node0, node0, 4, 49);
      node0.isInstanceOf();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.checkTreeEquals(node1);
      node2.srcref(node0);
      node2.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(125);
      node0.toStringTree();
      node0.isLabel();
      node0.getQualifiedName();
      Node node1 = Node.newString("BLOCK\n", 37, 4);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node(118, 118, 118);
      Node node1 = new Node(30, node0);
      node0.cloneNode();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = Node.newString("\"DDWOMBZ5|C!<R");
      node0.getIntProp(2);
      node1.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(130, 130, 130);
      node0.isExprResult();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = Node.newString(101, "FUNCTION_INSTANCE_TYPE", 101, 101);
      node0.setCharno(15);
      Node node1 = new Node(43, node0, node0, node0, 57, 47);
      node0.isEquivalentToShallow(node1);
      Node node2 = node1.srcref(node0);
      node2.isEquivalentTo(node1, true, true, false);
      node0.setString("<$4+kM-']3+Fp?I");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(125);
      node0.setVarArgs(true);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isLocalResultCall();
      Node node1 = node0.getLastSibling();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(147, 147, 147);
      node0.putIntProp(2174, 2174);
      Node node1 = new Node(43, node0, node0, 56, 53);
      node1.isCast();
      node0.isNoSideEffectsCall();
      node0.isLocalResultCall();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      node0.isEquivalentTo(node0, true, true, true);
      Node node1 = Node.newString(32, "sxddp4o%L~!gzuvB1>", 46, 53);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = new Node(85);
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.hasOneChild();
      node0.isIn();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(92, 92, 92);
      Node node1 = new Node(15, node0, node0);
      node1.replaceChild(node0, node1);
      Node node2 = node1.getAncestor(52);
      node2.cloneNode();
      node1.addChildAfter(node0, node2);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(130, 130, 130);
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.hasOneChild();
      node0.isIn();
      node0.setLineno(39);
      node1.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("<yR4W2");
      Node node1 = new Node(100, node0, node0, node0, 12, (-1603));
      node1.isInstanceOf();
      node1.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 56, 57);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node(1110);
      Node node1 = new Node(43, node0, node0, node0, (-2009), 122);
      Node.newString(130, "no next sibling.");
      node0.addChildrenToBack(node1);
      node1.getChangeTime();
      node1.getStaticSourceFile();
      node0.getStaticSourceFile();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node0.getChangeTime();
      Node node2 = node1.detachFromParent();
      node2.isContinue();
      node2.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = new Node(101);
      Node node1 = Node.newString("qH[UA%aNH]Eo@nO");
      node0.useSourceInfoIfMissingFrom(node1);
      Node.newString(727, "", 60, 31);
      node0.putIntProp(101, 4111);
      node0.isReturn();
      node0.isCast();
      node0.isNoSideEffectsCall();
      node0.isLocalResultCall();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(147, 147, 147);
      node0.toStringTree();
      Node node1 = Node.newString(38, "<invalid>", 1, 53);
      node1.isOr();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(52, node0, node0, node0, 4, 49);
      node0.isInstanceOf();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.checkTreeEquals(node1);
      node2.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      Node node1 = new Node(153, (-1080), 55);
      node1.getSourceFileName();
      node0.copyInformationFrom(node1);
      node0.getSourceFileName();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(130, 130, 130);
      node0.isScript();
      node0.isTry();
      Node node1 = new Node(51, node0, 49, (-2763));
      node1.isFromExterns();
      node0.checkTreeEquals(node1);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(117);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = node0.getLastSibling();
      node1.cloneNode();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      Node node1 = node0.cloneTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = new Node(0, node1, node1, 31, 30);
      node1.isComma();
      // Undeclared exception!
//      try { 
        node2.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(30, node0);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.hasOneChild();
      node1.isInstanceOf();
      node0.useSourceInfoIfMissingFrom(node2);
      node2.checkTreeEquals(node1);
      node0.isInc();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(38, 38, 38);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(29, node0, 29, 3770);
      node1.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
//      try { 
        node0.isUnscopedQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME 38 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = Node.FLAG_NO_THROWS;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(120, "com.google.common.base.CharMatcher$5", 8, 8);
      node0.getQualifiedName();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      ImmutableList<JSType> immutableList1 = immutableList0.asList();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      Node node1 = new Node(102, node0, node0);
      node1.cloneTree();
      // Undeclared exception!
//      try { 
        node1.addChildToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(64);
      Node node1 = Node.newNumber((double) 4, 32, 50);
      node0.isOnlyModifiesThisCall();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), (-2339));
      Node node1 = Node.newNumber((double) 4095);
      node0.isComma();
      node0.detachChildren();
      node1.putIntProp(42, (-1640));
      node1.isVoid();
      node1.isCast();
      node1.isNoSideEffectsCall();
      node1.isLocalResultCall();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString(38, "LEAST_FUNCTION_TYPE");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = new Node(1, node1, node2, node1, node1, 40, 55);
      node3.removeChildAfter(node2);
      node3.siblings();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(101);
      node0.isVar();
      Node node1 = Node.newNumber((double) 2);
      node1.addChildToBack(node0);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newString(147, "<invalid>", 147, 147);
      node0.isFunction();
      Node node1 = new Node(37, node0, node0, node0);
      node0.isFromExterns();
      node1.isCall();
      node1.getQualifiedName();
      node0.isLocalResultCall();
      node0.setQuotedString();
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // GETTER_DEF <invalid> 147 [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      Node node1 = Node.newString("is_dispatcher", 1132, (-2086));
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isEquivalentTo(node0, true, true, true);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newString(3000, "Zot(");
      node0.setOptionalArg(false);
      Node node1 = new Node(32, node0);
      Node node2 = node1.copyInformationFrom(node0);
      Node.newNumber(1.0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node3 = node1.copyInformationFromForTree(node0);
      // Undeclared exception!
//      try { 
        node3.getChildBefore(node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      Node node1 = new Node(52, node0, node0, node0, 4, 49);
      node1.isIn();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(737);
      Node node1 = Node.newString(39, "\"DDWOMBZ5|C!<R");
      Node node2 = new Node(113, node1, node0, node0, 405, 2);
      node2.isOnlyModifiesArgumentsCall();
      node1.isUnscopedQualifiedName();
      node2.isWhile();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(38);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = new Node(148);
      node0.isOnlyModifiesArgumentsCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isGetterDef();
      node0.getIntProp(148);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.useSourceInfoFrom(node0);
      node1.removeChild(node0);
      node1.getChildCount();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(118, (-665), (-665));
      node0.mayMutateGlobalStateOrThrow();
      node0.toStringTree();
      Node node1 = new Node(2, 87855567, 36);
      Node node2 = new Node(118, node0, 57, 38);
      node2.isComma();
      node2.clonePropsFrom(node1);
      node1.isAssignAdd();
      node2.getSideEffectFlags();
      node2.isAssign();
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(93, 92, 92);
      node0.setVarArgs(false);
      node0.toStringTree();
      node0.isLabel();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node(147, 147, 147);
      node0.cloneTree();
      Node node1 = Node.newString(40, "AWm\u0005U ^?=");
      node1.addChildrenToBack(node0);
      // Undeclared exception!
//      try { 
        node1.addChildrenToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = new Node(132, (-2478), (-2478));
      Node node1 = new Node(36, node0, node0, node0, 249, (-3790));
      Node node2 = new Node(848, node1, 0, 56);
      Node node3 = node2.useSourceInfoFrom(node0);
      InputId inputId0 = new InputId("{~xA`1oSU,rVOAM");
      node2.isEquivalentToShallow(node0);
      inputId0.toString();
      node3.setInputId(inputId0);
      Node node4 = node3.removeFirstChild();
      node4.putProp(1, node2);
      node3.copyInformationFromForTree(node0);
      node3.getStaticSourceFile();
      node1.getLastChild();
      Node.extractLineno(22);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newString("X^{$U#b/,al=:3`}^L^", 32, 32);
      Node node1 = new Node(32, node0, node0, 109, (-1316));
      node1.isVoid();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newString(147, "<invalid>");
      node0.toStringTree();
      Node node1 = node0.cloneNode();
      node0.isComma();
      node0.getString();
      node0.getBooleanProp((-1138));
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(node_SideEffectFlags4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got GETTER_DEF
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      node0.setOptionalArg(true);
      node0.getProp(13);
      node0.isNE();
      Node.newString(55, "The existing child node of the parent should not be null.", 48, 48);
      node0.isQualifiedName();
      Node node1 = Node.newNumber((-1.0));
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newNumber(1107.437378061993);
      Node node1 = new Node(100, node0, node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isAssign();
      node0.addChildToBack(node1);
      node1.getSourceFileName();
      node0.isOr();
//      try { 
        node2.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // OR is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.extractLineno((-135));
      int int0 = (-718);
      Node node0 = new Node(2150);
      Node node1 = new Node(44, node0, 4095, 4095);
      Node node2 = new Node(36, node1, node1, node1, node1);
      node2.addSuppression("is_dispatcher");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isEquivalentTo(node2, false, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "is_dispatcher");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node1.copyInformationFrom(node2);
//      try { 
        node1.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // TRUE is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = new Node(92);
      node0.isFalse();
      Node node1 = new Node(2, node0, node0, node0, 4, 55);
      node1.replaceChild(node0, node1);
      node1.getAncestor(52);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = Node.newNumber((double) 50);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.setSourceFileForTesting("5liiR^+3=,P*25D{3V");
//      try { 
        node0.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // WITH [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(26);
      Node node1 = node0.cloneTree();
      node0.addChildToBack(node1);
      node0.type = 37;
      node0.isVoid();
      node0.isEquivalentTo(node0, false, true, true);
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = 101;
      Node node0 = Node.newString(101, "FUNCTION_INSTANCE_TYPE", 101, 101);
      node0.putProp(37, "FUNCTION_INSTANCE_TYPE");
      // Undeclared exception!
//      try { 
        node0.isOptionalArg();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "P)^w{[]}j'UI@i");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mE||I(ACFRdoBe h");
      Node node0 = Node.newString(38, "P)^w{[]}j'UI@i");
      Node node1 = new Node(38, node0, (-3841), 3268);
      node1.detachChildren();
      Node node2 = node1.getLastSibling();
      node2.isDebugger();
      node2.useSourceInfoIfMissingFrom(node0);
      node1.toString();
      node2.setSourceEncodedPosition(51);
      node0.isNE();
      Node.extractLineno(52);
      node2.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.getSourceFileName();
      Node node1 = Node.newString("b<-OEu, a{OB");
      node0.copyInformationFrom(node1);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(124);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 124
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isFalse();
      node0.cloneTree();
      Node node1 = new Node(2779, node0, node0, node0, 36, 2);
      // Undeclared exception!
//      try { 
        node0.replaceChild(node1, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("5liiR^+3=,P*25D{3V");
      node0.isLocalResultCall();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.BooleanType");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(4, node0, node0);
      node0.getDirectives();
      node0.toString(false, true, false);
      Node node2 = node1.copyInformationFromForTree(node0);
//      try { 
        node2.setString("5liiR^+3=,P*25D{3V");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // RETURN is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newString(33, "YjeSOGZG*T8'}Aomrwp", 33, 33);
      Node.newString(38, "YjeSOGZG*T8'}Aomrwp", 12, 39);
      // Undeclared exception!
//      try { 
        node0.isQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString(38, "opt_arg");
      node0.toStringTree();
      node0.mayMutateGlobalStateOrThrow();
      node0.isAssign();
      Node node1 = new Node(111, 111, 1);
      node1.isInstanceOf();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-746), nodeArray0, 279, (-1367));
      Node node1 = new Node(124, node0, node0, node0);
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = Node.newString("G?px >pu2", 116, 16);
      node0.srcref(node1);
      node0.setVarArgs(true);
      node0.getAncestors();
      node0.toStringTree();
      node0.isLabel();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = new Node(115);
      node0.isNew();
      node0.isSetterDef();
      Node node1 = new Node(85);
      node0.isEquivalentTo(node1, true, false, false);
      Node node2 = new Node(26, (-2796), 12);
      node2.isIf();
      Node node3 = node1.copyInformationFromForTree(node2);
      // Undeclared exception!
//      try { 
        node3.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("<yR4W2");
      node0.mayMutateGlobalStateOrThrow();
      node0.toStringTree();
      Node node1 = new Node(4095, 54, 49);
      Node node2 = new Node(37, node1, node1, node0, 37, 50);
      node1.hasChild(node0);
      node2.getChildBefore(node0);
      node2.isTrue();
      node0.isVoid();
      node1.isCast();
      Node node3 = node2.clonePropsFrom(node1);
      node0.isNumber();
      node0.isTrue();
      Node.mergeLineCharNo(2, 15);
      node3.copyInformationFromForTree(node0);
      Node.newString("STRING <yR4W2\n", 2097152, 1);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node(125);
      node0.cloneNode();
      node0.setVarArgs(true);
      node0.toStringTree();
      node0.isLabel();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(115);
      node0.setOptionalArg(true);
      Node node1 = new Node(56, node0);
      node1.getChangeTime();
      node1.setSourceEncodedPositionForTree(29);
      node1.isQualifiedName();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(140, 140, 140);
      Node node1 = new Node(12, node0, node0, 2, 31);
      Node node2 = new Node(52, 38, 42);
      node2.srcrefTree(node1);
      Node node3 = new Node(31, node1, node2, node2, 38, 2);
      node1.addChildBefore(node3, node0);
      node0.isTry();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node((-1999));
      node0.children();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(93, node0, node0, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-73);
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte) (-60);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.setInputId((InputId) null);
      // Undeclared exception!
//      try { 
        node2.addChildrenToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R");
      Node node1 = new Node(103, node0, node0);
      Node node2 = node1.cloneTree();
      Node node3 = node2.srcrefTree(node0);
      Node node4 = Node.newString(61, "_im\"-t#");
      node3.isFor();
      node0.toStringTree();
      node4.isLabel();
      node3.wasEmptyNode();
      node0.isInstanceOf();
      InputId inputId0 = new InputId("_im\"-t#");
      node4.isArrayLit();
      node0.isGetterDef();
      Node node5 = new Node(43, node3, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      simpleErrorReporter0.error("\"DDWOMBZ5|C!<R", "ib,)I=w#", (-2620), 124);
      Node node6 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node6.hasOneChild();
      node4.isInstanceOf();
      node6.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(52, node0, node0, node0, 4, 49);
      node1.isFromExterns();
      node1.isIn();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(118);
      node0.setSourceEncodedPosition(8);
      Node node1 = new Node(30, node0);
      node0.isTrue();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.hasOneChild();
      node1.isInstanceOf();
      node0.useSourceInfoIfMissingFrom(node2);
      node2.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newString(111, "com.google.common.collect.Sets");
      node0.isReturn();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(115);
      node0.isFalse();
      Node node1 = new Node(40, node0, node0, node0, 50, 1891);
      node1.removeFirstChild();
      // Undeclared exception!
//      try { 
        node1.replaceChild(node0, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newString("Object#Key");
      Node node1 = new Node(38, node0, node0);
      node0.addChildToFront(node1);
      Node node2 = node0.removeFirstChild();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = new Node(94, 1274, 1274);
      node0.isScript();
      node0.mayMutateGlobalStateOrThrow();
      node0.isCase();
      Node node1 = new Node(4, node0, node0, 1, 4095);
      node1.children();
      node0.checkTreeEqualsImpl(node1);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = Node.newString("]!pES{/?$,c");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseAllType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("6EH}\"RF]&hUR", node0, jSType0);
      enumType0.getElementsType();
      Node node1 = new Node(4, node0);
      Node node2 = node1.cloneTree();
      Node node3 = Node.newString(42, "com.google.common.collect.Collections2");
      node2.getJSDocInfo();
      node0.addChildrenToBack(node2);
      // Undeclared exception!
//      try { 
        node3.addChildrenToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.common.collect.ImmutableBiMap");
      Node node0 = Node.newString(41, "is_dispatcher", 41, 63);
      node0.setSourceEncodedPositionForTree(41);
      node0.isCast();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      node0.setJSType(templateType0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);
      simpleSourceFile0.getLineOffset(1);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isExprResult();
      node0.isBreak();
      node0.getProp(63);
      node0.getQualifiedName();
      node0.isCatch();
      // Undeclared exception!
//      try { 
        node0.getSourceOffset();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Should not call getLineOffset with line number 0
//         //
//         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2864));
      node1.isAssignAdd();
      node0.setWasEmptyNode(false);
      node1.setSourceEncodedPositionForTree(43);
      node1.isComma();
      node0.setString("\"DDWOMBZ5|C!<R");
      node0.isDelProp();
      Node[] nodeArray0 = new Node[2];
      Node node2 = Node.newNumber((double) 50, 117, 57);
      nodeArray0[0] = node2;
      Node node3 = Node.newNumber((double) 2, 0, (-800));
      node3.setCharno(57);
      nodeArray0[1] = node1;
      Node node4 = new Node(113, nodeArray0);
      node2.toString(false, true, false);
      node4.isCase();
      Node node5 = node4.useSourceInfoFromForTree(node2);
      node5.srcrefTree(node3);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = new Node(130, 116, 130);
      node0.isScript();
      node0.mayMutateGlobalStateOrThrow();
      node0.isCase();
      Node node1 = Node.newString(31, "|Lx-'RUw6Nl1FjR", 112, 36);
      Node.newString("|Lx-'RUw6Nl1FjR");
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString(52, "Not(", (-4538), 16);
      node2.addChildToBack(node1);
      node0.isVoid();
      node2.isEquivalentTo(node1, true, false, false);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(1, node0);
      node0.addChildToBack(node1);
      node0.isVoid();
      node0.isCast();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      node0.isDelProp();
      Node node1 = Node.newNumber((double) 31, 12, 50);
      node1.setCharno((-879));
      node1.getIntProp(471);
      Node node2 = Node.newNumber((double) 55);
      node2.isEquivalentToShallow(node0);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = new Node(103);
      node0.hasChild(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, false, true, true);
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(30, node0);
      Node node2 = node0.srcref(node1);
      node0.isEquivalentTo(node1);
      Node node3 = new Node(49, node1, node1);
      node3.isSwitch();
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node1, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 48, 48);
      Node node1 = new Node(32, node0, node0, (-1491), 4095);
      node0.setWasEmptyNode(false);
      node1.useSourceInfoFrom(node0);
      Node node2 = null;
//      try {
        node2 = new Node(48, node0, node0, node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)33;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("2c,P|?hr#Bvz=HFY");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toString(false, false, true);
      node0.isSyntheticBlock();
      node0.putProp(530, "2c,P|?hr#Bvz=HFY");
      Node node1 = new Node(3321, 8, Integer.MAX_VALUE);
      node1.setSourceEncodedPosition(42);
      node1.setType(63);
      node1.getSideEffectFlags();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.addChildToBack(node1);
//      try { 
        node2.setDouble(0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // ARRAYLIT is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(105);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, false, false, false);
      node0.isVar();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("<yR4W2");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("QMARK", 8, (-2096));
      Node node2 = new Node(31, node0, node0, node0, 38, 56);
      Node node3 = new Node(12, node1, node1, node2, 43, 48);
      node3.copyInformationFromForTree(node2);
      Node.newString(54, "QMARK");
      node3.isTrue();
      Node.newNumber(154.0, 656, 29);
      Node.extractCharno(2);
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(92);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isFalse();
      Node node1 = new Node(95, 39, 32);
      node1.isHook();
      node0.toStringTree();
      node1.hasOneChild();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(31, nodeArray0);
      node2.isInstanceOf();
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node3.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node(103);
      node0.setSourceEncodedPosition(8);
      Node node1 = new Node(30, node0);
      node0.isTrue();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = node1.getLastSibling();
      node3.getInputId();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getChangeTime();
      node2.getDirectives();
      node3.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(124);
      Node node1 = Node.newString(307, ": ", 147, 21);
      node0.clonePropsFrom(node1);
      Node node2 = new Node(48);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = new Node(132);
      Node node1 = Node.newNumber((double) 4095, (-1368), (-1));
      Node node2 = new Node((-1330), node1, node1);
      node0.clonePropsFrom(node2);
      node0.isExprResult();
      node0.isGetterDef();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(117, node0, node0, node0, node0, 1, 115);
      node0.hasChild(node1);
      Node node2 = Node.newString((-1836), "com.google.common.collect.ImmutableBiMap");
      node2.setLength(4095);
      node2.isDelProp();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = new Node(39);
      Node.newString(1167, "=62");
      node0.isReturn();
      node0.cloneNode();
      node0.isCall();
      node0.isBlock();
      // Undeclared exception!
//      try { 
        node0.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      Node node1 = node0.cloneTree();
      node1.addChildToBack(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("6C.u.~8&r", node1, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(119);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.useSourceInfoIfMissingFrom(node0);
      Node node1 = new Node(4095, nodeArray0, 102, 54);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = Node.newString(33, "?X=+='SqEKh", 3812, 105);
      node1.isGetProp();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
//      try { 
        node1.getQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = new Node(98);
      node0.setSourceEncodedPosition(8);
      Node node1 = new Node(30, node0);
      node0.isTrue();
      node0.setSourceEncodedPosition(2);
      node1.isSetterDef();
      node1.isAssignAdd();
      node0.isInc();
      node0.getJSType();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = Node.newString(38, "|Lx-'RUw6Nl1FjR");
      node1.toStringTree();
      Node node2 = node0.getLastSibling();
      node2.getInputId();
      node0.getDirectives();
      node0.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(103);
      node0.mayMutateGlobalStateOrThrow();
      node0.setSourceEncodedPosition(12);
      node0.isSetterDef();
      node0.type = 103;
      node0.isAssignAdd();
      node0.isInc();
      node0.isVarArgs();
      Node node1 = new Node(16, node0, node0, node0, node0, 2, 42);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(132);
      node0.cloneTree();
      // Undeclared exception!
//      try { 
        Node.newString(1, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newString(93, "jsdoc_info", (-1406), (-1406));
      Node node1 = new Node(100, node0, node0, 30, 46);
      node1.isOnlyModifiesArgumentsCall();
      node1.getType();
      node1.getCharno();
      node1.isDo();
      node1.copyInformationFrom(node0);
      Node.mergeLineCharNo(4, 51);
      Node.mergeLineCharNo(29, 1335);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(132, 132, 132);
      Node node1 = Node.newNumber((-1.0), 36, (-2972));
      node0.copyInformationFrom(node1);
      // Undeclared exception!
//      try { 
        node0.removeChild(node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = new Node(160, 160, 160);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node1 = new Node(12, node0, node0, 2, 31);
      Node node2 = new Node(52, 38, 42);
      node2.cloneNode();
      Node node3 = new Node(15, node1, node1, node1);
      node1.detachFromParent();
      node1.addChildBefore(node3, node0);
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-46);
      byteArray0[5] = (byte)23;
      byteArray0[6] = (byte)13;
      byteArray0[7] = (byte) (-84);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(64);
      node0.isArrayLit();
      Node node1 = new Node(30, node0, node0, node0);
      Object object0 = new Object();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node(86);
      Node node1 = node0.cloneNode();
      node0.isBreak();
      node0.isFalse();
      node1.isThrow();
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = new Node(43);
      node0.setSourceEncodedPosition((-1105));
      Node node1 = new Node(54, node0);
      node1.isTrue();
      Node node2 = node0.setJSDocInfo((JSDocInfo) null);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.hasOneChild();
      Node node3 = Node.newNumber((double) 8, 4095, 46);
      node3.isInstanceOf();
      node1.useSourceInfoIfMissingFrom(node2);
      node0.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = node0.cloneNode();
      node1.isBreak();
      Node node2 = new Node(4393, node1, node0, node1);
      node2.isNoSideEffectsCall();
      node0.isThrow();
      node2.isVar();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      Node node0 = Node.newNumber(1165.3973);
      Node node1 = new Node(7, 32, 29);
      Node node2 = new Node(57, node0, node1, 46, 307);
      node2.useSourceInfoFromForTree(node0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createDefaultObjectUnion((JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = node0.cloneNode();
      node0.isBreak();
      node0.isNoSideEffectsCall();
      node0.isThrow();
      node0.isVar();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node(64);
      node0.isArrayLit();
      Node node1 = new Node(30, node0, node0, node0);
      node1.copyInformationFrom(node0);
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      node0.isDelProp();
      Node node1 = new Node(43, 2, 119);
      Node node2 = node1.cloneNode();
      node0.setCharno(8);
      node2.getIntProp(44);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[7];
      ObjectType objectType0 = null;
      HashMap<TemplateType, JSType> hashMap0 = null;
//      try {
        hashMap0 = new HashMap<TemplateType, JSType>((-843));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal initial capacity: -843
//         //
//         verifyException("java.util.HashMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = Node.newString((-885), "5liiR^+3=,P*25D{3V", 1, (-2490));
      node1.getStaticSourceFile();
      Node node2 = new Node(38, node1, node1);
      node2.useSourceInfoFromForTree(node1);
      node1.isGetProp();
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node node1 = node0.cloneTree();
      node0.addChildToBack(node1);
      Node node2 = new Node(30, 51, 50);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.hasOneChild();
      node2.isInstanceOf();
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      node2.checkTreeEquals(node3);
      node3.putIntProp(8232, 1);
      Node node4 = null;
//      try {
        node4 = new Node((-1), node3, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node(105);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      Node node1 = new Node(52);
      nodeArray0[1] = node1;
      node0.useSourceInfoFrom(node1);
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node2 = null;
//      try {
        node2 = new Node(113, nodeArray0, 12, 8);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node[] nodeArray0 = new Node[5];
      Node node0 = new Node(52, 247, 247);
      Node node1 = new Node((-2339), node0, node0, node0, 2, (-625));
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(148);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(8, node0, 40, 52);
      node1.setIsSyntheticBlock(true);
      node1.setSourceEncodedPosition((-925));
      node0.isSetterDef();
      Node node2 = new Node(2);
      node2.getProp(42);
      node2.isAssignAdd();
      node2.isInc();
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String string0 = "com.google.common.collect.Sets$3";
      Node node0 = Node.newString(1321, "com.google.common.collect.Sets$3", 662, 1526);
      node0.putIntProp(662, 105);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte) (-40);
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte)41;
      byteArray0[5] = (byte) (-18);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = Node.newString("com.google.common.collect.Sets$3", 1526, 1957);
      node0.isOnlyModifiesThisCall();
      Node node2 = node0.copyInformationFrom(node1);
      node2.putIntProp(51, 2);
      node2.getChangeTime();
      // Undeclared exception!
//      try { 
        node1.useSourceInfoFrom(node2);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newString("<yR4W2");
      node0.toStringTree();
      Node node1 = new Node(4095, 54, 49);
      Node node2 = new Node(37, node1, node1, node0, 37, 50);
      Node.newString("STRING <yR4W2\n");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node3 = node2.getChildBefore((Node) null);
      node3.isCase();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node node1 = node0.cloneTree();
      node0.addChildToBack(node1);
      node1.isVoid();
      node0.isCast();
      node0.isEquivalentTo(node0, false, true, true);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(303);
      node0.setVarArgs(false);
      Node node1 = new Node(50, node0, node0, node0);
      node1.putProp(49, (Object) null);
      node1.isCall();
      Node node2 = node0.detachFromParent();
      node1.isScript();
      node2.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(node_SideEffectFlags3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got EOC
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(30, node0);
      node1.setSideEffectFlags(4095);
      node0.getChangeTime();
      node0.isDebugger();
      Node.extractLineno(52);
      Node node2 = node1.getFirstChild();
      node2.setLineno((-1758));
      node1.isUnscopedQualifiedName();
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.hasChild(node1);
      Node node2 = Node.newString(52, "com.google.common.collect.ImmutableBiMap");
      node1.isTrue();
      node0.setJSDocInfo((JSDocInfo) null);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.isVoid();
      node1.srcrefTree(node0);
      node1.isQuotedString();
      node0.isCast();
      node1.detachChildren();
      node0.putIntProp(2, 15);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(16, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(93, 46, (-3703));
      node2.isHook();
      node0.toStringTree();
      node2.getLastSibling();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newString((-212), "\"DDWOMBZ5|C!<R", (-212), (-212));
      node0.isFalse();
      Node node1 = new Node(31, node0);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      nodeArray0[2] = node1;
      node1.useSourceInfoIfMissingFrom(node1);
      node2.isComma();
      Node node3 = null;
//      try {
        node3 = new Node((-2576), nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(52, node0, node0, node0, 4, 49);
      node1.isIn();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString(47, "com.google.javascript.rhino.jstype.NoResolvedType");
      Node node3 = new Node(30);
      node3.addChildToBack(node2);
      node0.isVoid();
      node0.isCast();
      node2.isThrow();
      node1.isQualifiedName();
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = new Node(148);
      UnknownType unknownType0 = mock(UnknownType.class, new ViolatedAssumptionAnswer());
      UnknownType[] unknownTypeArray0 = new UnknownType[7];
      unknownTypeArray0[0] = unknownType0;
      unknownTypeArray0[1] = unknownType0;
      Node node1 = Node.newString(1, "`nv>BWND5M`cQxf$%x");
      node0.srcrefTree(node1);
      unknownTypeArray0[2] = unknownType0;
      unknownTypeArray0[3] = unknownType0;
      unknownTypeArray0[4] = unknownType0;
      unknownTypeArray0[5] = unknownType0;
      unknownTypeArray0[6] = unknownType0;
      ImmutableList<UnknownType> immutableList0 = ImmutableList.of(unknownType0, unknownType0, unknownType0, unknownType0, unknownType0, unknownType0, unknownType0, unknownType0, unknownType0, unknownType0, unknownType0, unknownType0, unknownTypeArray0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      ImmutableList<JSType> immutableList2 = immutableList1.reverse();
      ImmutableList<JSType> immutableList3 = immutableList2.reverse();
      immutableList0.containsAll(immutableList3);
      ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      node0.isAssign();
      node0.getQualifiedName();
//      try { 
        node0.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // SETTER_DEF is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(160, 160, 160);
      Node node1 = new Node(12, node0, node0, 2, 31);
      Node node2 = new Node(52, 38, 42);
      Node node3 = new Node(15, node1, node1, node1);
      node1.addChildBefore(node3, node0);
      // Undeclared exception!
      node2.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = new Node(105);
      node0.setSourceEncodedPosition((-888));
      node0.isUnscopedQualifiedName();
      node0.isAssignAdd();
      node0.cloneNode();
      node0.mayMutateGlobalStateOrThrow();
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newString(62, "j&RH");
      Node node1 = new Node(4, node0, 85, 85);
      node0.isInstanceOf();
      node1.isStringKey();
      node1.isUnscopedQualifiedName();
      node1.isDelProp();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(130, 135, 130);
      node0.isScript();
      node0.isStringKey();
      node0.isEquivalentToTyped(node0);
      node0.setSourceEncodedPositionForTree(130);
      node0.getQualifiedName();
      node0.isQualifiedName();
      Node node1 = new Node(41, node0, node0, node0, node0);
      node1.isVar();
      node1.isSyntheticBlock();
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(130, 112, 130);
      node0.isScript();
      node0.isDo();
      node0.isUnscopedQualifiedName();
      node0.isAssignAdd();
      Node node1 = new Node((-3091), node0, node0, node0);
      Node node2 = node0.copyInformationFrom(node1);
      node2.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(115);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(0, node0, node0, node0, node0);
      node0.isOnlyModifiesArgumentsCall();
      node1.copyInformationFrom(node0);
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), (-2339));
      node0.getLineno();
      Node node1 = new Node(124, node0, node0, node0, 15, 1);
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags((Node.SideEffectFlags) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = new Node(124);
      String string0 = "|Lx-'RUw6Nl1FjR";
      MockFileWriter mockFileWriter0 = new MockFileWriter("|Lx-'RUw6Nl1FjR");
      mockFileWriter0.close();
//      try { 
        node0.appendStringTree(mockFileWriter0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      node0.isEquivalentTo(node0);
      node0.isSwitch();
      Node node1 = new Node(31, node0, node0, node0, node0, 38, 49);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = Node.newString(38, "|Lx-'RUw6Nl1FjR");
      node1.getDirectives();
      node0.isOnlyModifiesArgumentsCall();
      node1.toStringTree();
      node1.isCall();
      node1.isIn();
      Node node2 = node0.srcrefTree(node1);
      node2.setOptionalArg(false);
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2107, 35, 2107);
      Node node1 = new Node(2107, node0, node0, node0);
      Node node2 = new Node(35, node1, node1, 4095, 47);
      node2.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber((-2385.507336));
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isQuotedString();
      node0.isSetterDef();
      Node node1 = new Node(52, node0);
      Node node2 = Node.newNumber(3512.5);
      node2.mayMutateArguments();
      node1.getLength();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node1.getDirectives();
      Node node3 = node1.useSourceInfoFrom(node0);
      node3.setLineno(15);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getDirectives();
      node0.isOptionalArg();
      node3.addChildToFront(node2);
      Node node4 = node1.useSourceInfoFrom(node3);
      node1.useSourceInfoFrom(node4);
      node4.putProp(8, node2);
      node4.setType(3583);
      Node.extractCharno(103);
      node3.isEquivalentToShallow(node2);
      node4.isGetterDef();
      node2.getProp((-1111));
      Node node5 = node4.useSourceInfoFrom(node2);
      // Undeclared exception!
//      try { 
        node5.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3583
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString(147, "<invalid>");
      node0.toStringTree();
      Node node1 = Node.newString(38, "<invalid>", 3615, 53);
      node1.isName();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(12, node0, node0);
      Node node2 = new Node(410, node1, (-456), 1);
      node2.isDelProp();
      node1.isOptionalArg();
      Node node3 = node0.cloneNode();
      node2.setCharno(0);
      node0.getIntProp(1);
      node2.isEquivalentToShallow(node0);
      // Undeclared exception!
//      try { 
        node3.addChildBefore(node2, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node(115);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.removeChild(node0);
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(154, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node2.setLength(39);
      node0.getSourceOffset();
      node0.getSourcePosition();
      node0.getAncestors();
      node0.isGetterDef();
      node0.isReturn();
      node1.setLineno(4);
      node2.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = new Node(127);
      node0.isCatch();
      node0.isQuotedString();
      node0.isCase();
      node0.getBooleanProp(127);
      Node node1 = new Node(177, node0, node0, node0, node0, 63, 0);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newString(91, "OJ");
      node0.setCharno(91);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isAdd();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node.NodeMismatch node_NodeMismatch1 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch1.equals(node_NodeMismatch0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newNumber((double) 39);
      Node node1 = new Node(116, node0, 116, 2963);
      node1.isDelProp();
      node1.checkTreeEquals(node0);
      node1.isOptionalArg();
      Node node2 = node1.cloneNode();
      node0.getIntProp(36);
      node2.isEquivalentToShallow(node0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(64);
      Node node1 = Node.newString(33, "com.google.javascript.rhino.Node$NodeMismatch");
      node0.isOnlyModifiesArgumentsCall();
      node0.isDo();
      // Undeclared exception!
//      try { 
        node1.isUnscopedQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = new Node(131, (-2373), (-2373));
      Node node1 = Node.newString(32, "(OS;", 46, 57);
      node0.isAssignAdd();
      Node node2 = new Node(29, node0, node1, node1, 4095, 0);
      node1.setChangeTime(48);
      Node node3 = Node.newString(4095, ".5Kg[O,]JE d?U\"w", 154, 39);
      Node node4 = node2.removeChildAfter(node0);
      node3.isCase();
      node1.getChangeTime();
      node4.isVar();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString(38, "LEAST_FUNCTION_TYPE");
      node1.setType(8);
      node2.addChildrenToBack(node1);
      node2.addChildrenToBack(node0);
      // Undeclared exception!
//      try { 
        node1.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 8
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(105);
      node0.isWhile();
      node0.setSourceEncodedPosition((-888));
      node0.toStringTree();
      Node node1 = new Node((-888), node0, node0, 2, 57);
      node1.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.isAssignAdd();
      node0.getChangeTime();
      node0.isFunction();
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isArrayLit();
      node0.setSourceEncodedPosition(2561);
      Node node1 = new Node((-4096), node0);
      node1.hasChild(node0);
      node0.isTrue();
      Node node2 = node0.setJSDocInfo((JSDocInfo) null);
      node1.setSourceEncodedPosition(29);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.hasOneChild();
      node2.isInstanceOf();
      node0.useSourceInfoIfMissingFrom(node1);
      node0.checkTreeEquals(node2);
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.setSourceEncodedPosition(1131);
      Node node1 = new Node(93, node0);
      node0.hasChild(node1);
      node1.isTrue();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      Node node3 = new Node(30, node1, 77, 42);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      Node node4 = null;
//      try {
        node4 = new Node(25, node2, 3189, 2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "";
      Node node0 = new Node(64);
      node0.isArrayLit();
      // Undeclared exception!
//      try { 
        node0.appendStringTree((Appendable) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`uV%;#-");
      Node node0 = Node.newNumber((double) 1496, 1496, 237);
      node0.isFromExterns();
      Node node1 = new Node(1496, node0, node0, node0, (-1), 42);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)65;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isOptionalArg();
      node1.setType(32);
      node1.isVarArgs();
      node1.getInputId();
      node1.getSourceOffset();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isEquivalentTo(node1, false, true, true);
      node1.hasChildren();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = Node.newString(38, "|Lx-'RUw6Nl1FjR");
      node1.isTrue();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.hasOneChild();
      node0.isInstanceOf();
      node0.useSourceInfoIfMissingFrom(node2);
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = new Node(85);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(53, node0);
      node0.hasChild(node1);
      Node.newString(126, "com.google.common.collect.ImmutableBiMap");
      node1.setLength(15);
      node1.getSideEffectFlags();
      node1.isDelProp();
      node1.wasEmptyNode();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString(3000, "Zot(");
      node0.setOptionalArg(false);
      Node node1 = new Node(32, node0);
      node1.copyInformationFrom(node0);
      node1.copyInformationFromForTree(node0);
      node0.setSourceEncodedPositionForTree(49);
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isArrayLit();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isFunction();
      node0.isIn();
      node0.setJSDocInfo(jSDocInfo0);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = new Node(0);
      node0.setSourceEncodedPosition(103);
      Node node1 = new Node((-1480), node0);
      node0.hasChild(node1);
      Node node2 = new Node(63);
      node0.isInstanceOf();
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node0.hasOneChild();
      Node node4 = new Node(57, node3, 43, 100);
      node4.isInstanceOf();
      node0.useSourceInfoIfMissingFrom(node4);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_STRING_BOOLEAN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
//      try { 
        jSTypeRegistry1.getNativeObjectType(jSTypeNative0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // com.google.javascript.rhino.jstype.UnionType cannot be cast to com.google.javascript.rhino.jstype.ObjectType
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newString("%@;K");
      node0.mayMutateGlobalStateOrThrow();
      node0.toStringTree();
      Node node1 = new Node(33, 56, 46);
      Node node2 = new Node(3378, node1, node1, node0, 38, 57);
      Node node3 = Node.newNumber((double) 38);
      node3.hasChild(node1);
      node2.getChildBefore(node0);
      node1.isEquivalentTo(node2, false, false, false);
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = Node.DIRECTIVES;
      int int1 = Node.DIRECTIVES;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = new Node(103);
      node0.setSourceEncodedPosition(2293);
      Node node1 = new Node(4, node0, node0, 39, 57);
      node0.hasChild(node1);
      node0.isTrue();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.hasOneChild();
      node1.isInstanceOf();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("<yR4W2");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("QMARK", 8, (-2096));
      Node node2 = new Node(4095);
      Node node3 = new Node(12, node1, node1, node2, 43, 48);
      node2.hasChild(node0);
      Node node4 = Node.newString(41, "QMARK");
      node4.srcref(node0);
      node3.isTrue();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node2.useSourceInfoFromForTree(node1);
      node3.useSourceInfoIfMissingFrom(node4);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = new Node(103);
      node0.setSourceEncodedPosition(2293);
      Node node1 = new Node(30, node0);
      node0.hasChild(node1);
      node0.isTrue();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.hasOneChild();
      node1.isInstanceOf();
      node0.useSourceInfoIfMissingFrom(node2);
      node2.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(155);
      node0.srcrefTree(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
//      try { 
        node0.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // CAST is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString("eksh5P=I`To");
      Node node1 = new Node(1172, node0, node0, node0);
      node0.isLocalResultCall();
      Node node2 = Node.newString("eksh5P=I`To", 0, (-2339));
      node2.isGetElem();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(39, nodeArray0, 3922, 40);
      node3.getJSDocInfo();
      node3.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newString((-212), "\"DDWOMBZ5|C!<R", (-212), (-212));
      node0.isFalse();
      Node node1 = new Node(31, node0);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      nodeArray0[2] = node1;
      Node node3 = null;
//      try {
        node3 = new Node((-2576), nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(119);
      node0.mayMutateGlobalStateOrThrow();
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isExprResult();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "WITH\n");
      Node node1 = new Node((-2147483637));
      node1.isCase();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = new Node(103);
      node0.setSourceEncodedPosition(2293);
      node0.getLineno();
      Node node1 = new Node(30, node0);
      node1.setSideEffectFlags(4095);
      node0.copyInformationFrom(node1);
//      try { 
        node1.setString("com.google.javascript.rhino.jstype.FunctionType$PropAccess");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NEW [side_effect_flags: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isTypeOf();
      Node node1 = Node.newNumber((double) 15);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isAdd();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node2 = new Node((-1429), node0, node1, node1, node1, 50, 85);
      Node.NodeMismatch node_NodeMismatch1 = new Node.NodeMismatch(node2, node2);
      node_NodeMismatch1.equals((Object) null);
      node1.isEmpty();
      node2.removeChild(node1);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node(115);
      node0.setWasEmptyNode(true);
      node0.isComma();
      node0.toString();
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2339), 34, 120);
      node0.isEquivalentToTyped(node0);
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isExprResult();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = new Node(111, (-2339), (-2339));
      node0.toStringTree();
      node0.cloneNode();
      Node node1 = new Node(52, node0, node0, node0, 286, 49);
      node1.hasChild(node0);
      node0.setChangeTime(46);
      Node node2 = Node.newString(1685, "Not(");
      node1.isThrow();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = new Node(119);
      node0.mayMutateGlobalStateOrThrow();
      node0.toStringTree();
      Node node1 = new Node((-2158), node0);
      node0.srcrefTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isExprResult();
      Node node2 = new Node((-2147483637));
      node0.isIn();
      node1.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = new Node(115);
      node0.setSourceEncodedPosition(48);
      node0.setCharno(2567);
      node0.setType(2567);
      Node node1 = new Node(47);
      node1.isReturn();
      node1.getLastSibling();
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(115);
      node0.setWasEmptyNode(true);
      node0.isComma();
      node0.toString();
      node0.getSideEffectFlags();
      node0.isDelProp();
      node0.wasEmptyNode();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString("Object#Key");
      Node node1 = new Node(28, node0, node0);
      node0.addChildToFront(node1);
      node0.isFunction();
      node1.isNot();
      Node node2 = new Node(47);
      node0.removeFirstChild();
      Node node3 = Node.newString(57, "O6cX)\"9", (-2760), 256);
      node2.useSourceInfoFromForTree(node3);
      Object object0 = new Object();
      node2.isString();
      node1.isIn();
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = node0.cloneTree();
      node0.srcrefTree(node1);
      Node node2 = Node.newString(38, "LEAST_FUNCTION_TYPE");
      node1.setType(8);
      node2.addChildrenToBack(node1);
      node2.addChildrenToBack(node0);
      // Undeclared exception!
//      try { 
        node1.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 8
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(12, node0, node0);
      Node node2 = Node.newString(38, "|Lx-'RUw6Nl1FjR");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.toStringTree();
      node0.addChildToBack(node2);
      node1.isEquivalentToTyped(node1);
      node2.isAssign();
      node0.isBlock();
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = node0.cloneTree();
      node0.srcrefTree(node1);
      Node node2 = Node.newString(38, "LEAST_FUNCTION_TYPE");
      node2.addChildrenToBack(node0);
      node1.toString();
      node0.addSuppression("STRING_KEY");
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node((-2308));
      node0.isGetElem();
      node0.isGetElem();
      Node node1 = new Node(48, node0, node0, node0, 47, 55);
      node1.isRegExp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isBreak();
      node1.isIf();
      Node node2 = new Node(16, node1, node1);
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node0, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = node0.cloneTree();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = Node.newString(4, "LEAST_FUNCTION_TYPE");
      node0.isFor();
      node3.toStringTree();
      node0.isTrue();
      Node node4 = node2.setJSDocInfo((JSDocInfo) null);
      Node node5 = Node.newString("): ");
      node5.srcrefTree(node2);
      node4.srcref(node5);
      node4.checkTreeTypeAwareEqualsImpl(node0);
      node1.hasChild(node2);
      node4.detachChildren();
      node4.removeChildren();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = new Node(103);
      node0.setSourceEncodedPosition(2293);
      node0.getLineno();
      Node node1 = new Node(30, node0);
      node0.hasChild(node1);
      Node node2 = Node.newString("com.google.common.collect.ImmutableBiMap");
      node0.isTrue();
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      Node.newString("com.google.common.collect.ImmutableBiMap");
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node3.hasChild(node0);
      node2.detachChildren();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(103);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(30, node0);
      Node node2 = Node.newString(2010, "5liiR^+3=,P*25D{3V");
      node0.isFor();
      node1.isLabel();
      Node.newString(56, "5liiR^+3=,P*25D{3V");
      node0.isLabel();
      node1.isNew();
      node2.isIn();
      node0.isDo();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = node0.cloneTree();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = new Node(913);
      Node node4 = new Node(8, node3, node2, node1);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      // Undeclared exception!
//      try { 
        node4.addChildBefore(node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.GREATEST_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, true, true, false);
      node0.isGetterDef();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString("Zot(", (-2339), 115);
      node0.isAdd();
      node0.setOptionalArg(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(32, node0);
      node1.srcrefTree(node0);
      node1.getQualifiedName();
      node1.isTypeOf();
      node1.isUnscopedQualifiedName();
      node0.children();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newString(100, "*DiOczsRK/8ovMs~");
      node0.mayMutateArguments();
      Node node1 = new Node(44, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      node1.useSourceInfoIfMissingFrom(node1);
      Node node2 = Node.newNumber((-1.0));
      nodeArray0[2] = node2;
      nodeArray0[3] = node0;
      Node node3 = null;
//      try {
        node3 = new Node(56, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("<yR4W2");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("QMARK", 8, (-2096));
      Node node2 = new Node(4095);
      Node node3 = new Node(12, node1, node1, node2, 43, 48);
      node2.hasChild(node0);
      Node.newString(41, "QMARK");
      node3.isTrue();
      // Undeclared exception!
//      try { 
        node3.removeChild(node0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = Node.newString("Zot(", (-2339), 115);
      node0.isAdd();
      node0.setOptionalArg(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(32, node0);
      node1.getQualifiedName();
      node1.isTypeOf();
      node1.isUnscopedQualifiedName();
      node0.children();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isNew();
      node0.isArrayLit();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.isFunction();
      node0.isNot();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isQuotedString();
      Node.newString("~Oapr");
      node0.isNE();
      node1.srcrefTree(node0);
      Node.newString(29, "k");
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      Node node1 = Node.newNumber((double) 0);
      node1.getDouble();
      node0.getQualifiedName();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      node0.isIn();
      node0.mayMutateGlobalStateOrThrow();
      node0.hasChildren();
      node0.setCharno(112);
      Node node1 = Node.newNumber((-1409.20697244));
      node0.useSourceInfoFrom(node1);
      node0.removeProp(79);
      node0.isDelProp();
      node0.isLocalResultCall();
      Node node2 = Node.newNumber((double) 30);
      node2.getChildAtIndex((-290));
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node(115);
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isNull();
      node0.toStringTree();
      node0.isHook();
      Node node1 = new Node(29, node0, node0, node0, node0);
      node1.getIntProp(4);
      node1.putProp(126, simpleErrorReporter0);
      Node node2 = Node.newString(56, "P)^w{[}j'UI@i");
      Node node3 = new Node(36, node2, 51, 64);
      node0.useSourceInfoIfMissingFrom(node3);
//      try { 
        node0.setDouble(179.010478);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FOR 51 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(115);
      node0.setSourceEncodedPosition(48);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.setWasEmptyNode(true);
      node0.isComma();
      node1.toString();
      node1.addSuppression("FNkQBs<_Rl$7tm&RB");
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(39);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node0, true, true, true);
      node1.isGetterDef();
      node0.hasChild(node1);
      node1.useSourceInfoFrom(node0);
      Node node2 = new Node(46, 1, 152);
      Node.newNumber((double) 49, 1, 0);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString("Zot(", (-2339), 115);
      node0.setIsSyntheticBlock(false);
      node0.isAdd();
      node0.setOptionalArg(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(32, node0);
      node0.addChildToBack(node1);
      node0.type = 306;
      node1.getQualifiedName();
      node1.isGetProp();
      node1.isUnscopedQualifiedName();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("<yR4W2");
      node0.mayMutateGlobalStateOrThrow();
      node0.toStringTree();
      Node node1 = new Node(4095, 54, 49);
      Node node2 = new Node(37, node1, node1, node0, 37, 50);
      node1.hasChild(node0);
      Node node3 = node2.getChildBefore(node0);
      node3.isFalse();
      node3.getDirectives();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isEquivalentTo(node2, true, false, false);
      node0.isAssignAdd();
      node2.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning(".6Kg[O,]JE d?U\"w", ".6Kg[O,]JE d?U\"w", (-2378), (-2378));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      simpleErrorReporter0.error("Object#Element", "opt_arg", (-2378), (-2378));
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      nodeArray0[0] = node0;
      Node node1 = new Node((-2378), nodeArray0);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(160);
      Node node1 = new Node(40, node0, node0, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
//      try { 
        node1.addChildrenToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isFalse();
      Node node1 = new Node(29, node0);
      node1.isQualifiedName();
      node1.isBreak();
      node1.replaceChild(node0, node1);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(160);
      Node node1 = new Node(40, node0, node0, node0, node0);
      Node node2 = new Node(82);
      node1.hasChild(node0);
      Node node3 = Node.newString(44, "M4P ~%een");
      node0.isTrue();
      node2.isVoid();
      node3.isCast();
      node1.isNumber();
      node3.isTrue();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node(110, 110, (-2308));
      node0.isGetElem();
      node0.isGetElem();
      Node node1 = new Node(48, node0, node0, node0, 47, 55);
      node1.isRegExp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isBreak();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(30, node0);
      node0.hasChild(node1);
      Node node2 = Node.newString(30, "com.google.common.collect.ImmutableBiMap");
      node0.setOptionalArg(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node3 = new Node(53, node2);
      node1.getQualifiedName();
      node0.isGetProp();
      Node node4 = new Node(12);
      node4.isUnscopedQualifiedName();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node(850);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = Node.DIRECTIVES;
      Node node1 = new Node(108, node0, 51, 51);
      node1.isComma();
      node1.isAssignAdd();
      int int1 = Node.DIRECTIVES;
      Node node2 = new Node((-727), node1, node1, node1);
      node2.isAssign();
      node2.isBlock();
      Node node3 = node2.removeChildren();
      Node node4 = new Node(29, node2);
      node3.clonePropsFrom(node4);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.setIsSyntheticBlock(false);
      node0.isEquivalentTo(node1, false, true, false);
      node1.isGetterDef();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      node0.mayMutateGlobalStateOrThrow();
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isExprResult();
      Node node1 = new Node(2147483645);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.siblings();
      node0.cloneNode();
      Node node2 = new Node(36, 56, 301);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isQuotedString();
      node0.isArrayLit();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.isWith();
      node0.isFunction();
      node0.isNot();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node.newNumber((double) 4095, 1, 38);
      node0.isFromExterns();
      node1.isContinue();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = new Node(54, 2835, 54);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = Node.newString("BFZKR");
      Node node2 = new Node(31, (-3669), 30);
      Node node3 = new Node(37, node2, node1, node2);
      Node node4 = new Node(32, node3, 0, 47);
      node3.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B~o3UWo+(");
      Node node0 = Node.newString(943, "String node not created with Node.newString");
      node0.isInc();
      node0.isGetProp();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getQualifiedName();
      node0.getBooleanProp(943);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B~o3UWo+(");
      node0.getJSType();
      node0.mayMutateArguments();
      Node node1 = Node.newString(93, "Not(");
      node1.getString();
      node1.setQuotedString();
//      try { 
        node1.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // ASSIGN_ADD Not( [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isFalse();
      Node node1 = new Node(31, node0);
      Node node2 = new Node(16, node1, node1);
      node2.getAncestor(57);
      node2.putIntProp(16, 85);
      node2.isEmpty();
      node2.removeChild(node1);
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node0.getJSDocInfo();
      node0.isWith();
      node0.isFromExterns();
      node0.isFalse();
      Node node1 = new Node(21, node0);
      node1.getDirectives();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node1.isDelProp();
      node2.isWith();
      Node node3 = new Node(2225, (-643), 2407);
      node3.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = new Node(112);
      node0.setLength((-400));
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.setVarArgs(true);
      node0.isIn();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isWhile();
      node0.setSourceEncodedPosition(12);
      node0.toStringTree();
      Node node1 = Node.newString(147, "<invalid>");
      node1.toStringTree();
      node1.isSetterDef();
      node1.isAssignAdd();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(36, node0, node0, node0);
      node0.isQuotedString();
      node1.isArrayLit();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.isWith();
      node0.isFunction();
      node0.isNot();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isQuotedString();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(160);
      Node node1 = new Node(40, node0, node0, node0, node0);
      Node node2 = new Node(82);
      Node node3 = new Node(15, node1, node1, node1);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.useSourceInfoIfMissingFrom(node3);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node1.cloneTree();
      node1.addChildBefore(node3, node0);
      node3.isIn();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = node0.cloneTree();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = Node.newString(38, "LEAST_FUNCTION_TYPE");
      Node.newNumber((double) 0);
      node0.isFor();
      node2.toStringTree();
      node0.isSetterDef();
      node1.useSourceInfoIfMissingFrom(node0);
      node3.isAssignAdd();
      node1.isInc();
      node3.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = new Node((-2352), (-2352), 19);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = Node.DIRECTIVES;
      Node node1 = new Node(120, node0, 63, (-3816));
      node1.isComma();
      node0.isAssignAdd();
      node1.useSourceInfoIfMissingFrom(node0);
      int int1 = Node.DIRECTIVES;
      node0.isAssign();
      node1.isBlock();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node(115);
      node0.isEquivalentToTyped(node0);
      node0.setSourceEncodedPosition(48);
      node0.setCharno(2567);
      node0.setLength(4095);
      node0.isWith();
      node0.isFromExterns();
      node0.isFalse();
      node0.getDirectives();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isDelProp();
      jSDocInfo0.setDescription(".6Kg[O,]JE d?U\"w");
      node0.isParamList();
      node0.isOr();
      node1.getParent();
      Node node2 = new Node(100, (-1110), 31);
      // Undeclared exception!
//      try { 
        node2.checkTreeEquals((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(86, 86, 86);
      node0.isDec();
      node0.isStringKey();
      Node node1 = new Node(37, node0, node0, 101, 2923);
      Node node2 = node0.copyInformationFrom(node1);
      node1.isAssignAdd();
      node0.setSourceEncodedPositionForTree(39);
      Node.newNumber((-1.0), 53, 4095);
      node1.isFromExterns();
      node2.isContinue();
      node1.getLastSibling();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(115, (-2275), (-2275));
      node0.setSourceEncodedPosition(4);
      node0.isDo();
      Node node1 = new Node(4095);
      node0.getProp(15);
      node1.useSourceInfoFromForTree(node0);
      node1.isStringKey();
      node1.isTrue();
      Node.extractLineno(125);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = node0.cloneTree();
      node0.srcrefTree(node1);
      Node node2 = Node.newString(38, "LEAST_FUNCTION_TYPE");
      node0.isFor();
      node0.getAncestor(4095);
      node0.setLength(15);
      node2.isQualifiedName();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node(119, (-2370), (-2370));
      node0.isDec();
      node0.isStringKey();
      Node node1 = new Node(40, node0, node0, 1611, 43);
      Node node2 = node0.copyInformationFrom(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "P)^w{[]}j'UI@i");
      node0.isAssignAdd();
      node0.setSourceEncodedPositionForTree(15);
      Node node3 = Node.newNumber((double) 48, 55, 31);
      node0.isFromExterns();
      node2.isContinue();
      node1.srcref(node3);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isQuotedString();
      node0.isArrayLit();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.declareThrows((JSTypeExpression) null);
      node0.isWith();
      node0.isFunction();
      node0.isNot();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isQuotedString();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isFunction();
      node1.isNot();
      Node node2 = new Node((-1009));
      node0.putBooleanProp((-2567), false);
      node0.isQualifiedName();
      Node.newString(21, "O6cX)\"9");
      node2.isNull();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isArrayLit();
      node0.getJSDocInfo();
      node0.isWith();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node((-5318), node0, node0, 32, 56);
      Node node2 = node1.copyInformationFrom(node0);
      node2.isAssignAdd();
      node2.setSourceEncodedPositionForTree(16);
      Node node3 = Node.newNumber((double) 57, 48, 53);
      node0.isFromExterns();
      node3.isContinue();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(105, "FZh");
      Node node1 = new Node(47, node0, node0, node0, node0, (-1), 53);
      node1.mayMutateArguments();
      node0.getQualifiedName();
      node0.isParamList();
      node0.isOr();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      Node node1 = new Node(4095);
      node0.useSourceInfoFromForTree(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isComma();
      node2.isGetterDef();
      node2.hasChild(node0);
      Node node3 = new Node(12, 286, (-2559));
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R");
      Node node1 = new Node(103, node0, node0);
      Node node2 = node1.cloneTree();
      Node node3 = node2.srcrefTree(node0);
      Node node4 = Node.newString(61, "_im\"-t#");
      node3.isFor();
      node0.toStringTree();
      node4.isLabel();
      node3.wasEmptyNode();
      node0.isInstanceOf();
      InputId inputId0 = new InputId("_im\"-t#");
      node4.isArrayLit();
      node0.isGetterDef();
      Node node5 = new Node(43, node3, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      Node node6 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node6.hasOneChild();
      node4.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString("Not", (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("?X=+='SqEKh", 2, 1);
      node0.isEquivalentTo(node0, true, true, true);
      Node node2 = new Node(38, node1);
      Node node3 = new Node(15, node2, node2);
      // Undeclared exception!
//      try { 
        node2.isQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = new Node((-2352), (-2352), 19);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = Node.DIRECTIVES;
      Node node1 = new Node(120, node0, 63, (-3816));
      node1.isComma();
      node0.isAssignAdd();
      int int1 = Node.DIRECTIVES;
      node0.isAssign();
      node1.isIn();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("<yR4W2");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("QMARK", 8, (-2096));
      Node node2 = new Node((-224));
      Node node3 = new Node(12, node1, node1, node2, 43, 48);
      node2.hasChild(node0);
      node0.isOr();
      node1.getParent();
      Node node4 = new Node(53, 1200, 149);
      node4.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = new Node(132);
      node0.getLength();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putProp((-106), fileSystemHandling0);
      node0.isUnscopedQualifiedName();
      node0.getQualifiedName();
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id -106
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(116, (-3855), 112);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isDefaultCase();
      node0.isSwitch();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      Node node1 = Node.newString(33, "YjeSOGZG*T8'}Aomrwp");
      node0.mayMutateArguments();
      // Undeclared exception!
//      try { 
        node1.getQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isDefaultCase();
      node0.setType(40);
      node0.isSwitch();
      node0.getLastSibling();
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(33);
      Node node1 = node0.cloneTree();
      node0.srcrefTree(node1);
      Node node2 = new Node(57, node1, 8, 29);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 12);
      PipedWriter pipedWriter1 = null;
//      try {
        pipedWriter1 = new PipedWriter(pipedReader0);
//        fail("Expecting exception: IOException");
      
//      } catch(Throwable e) {
//         //
//         // Already connected
//         //
//         verifyException("java.io.PipedWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = new Node(119, (-665), (-665));
      node0.mayMutateGlobalStateOrThrow();
      node0.toStringTree();
      Node node1 = new Node(2, 87855567, 36);
      Node node2 = new Node(119, node0, 57, 38);
      node2.isComma();
      node2.clonePropsFrom(node1);
      node1.isAssignAdd();
      node2.getSideEffectFlags();
      int int0 = Node.DIRECTIVES;
      node2.isAssign();
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-212), (-212));
      node0.setLength((-212));
      node0.addChildAfter(node0, (Node) null);
      node0.isTrue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString("Object#Key", 56, 0);
      Node node1 = Node.newNumber(0.0, 40, (-2339));
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = Node.newString(",x8", 8, 12);
      node2.isVar();
      Node node3 = Node.newNumber((double) 39);
      node1.isName();
      node3.isComma();
      node0.detachChildren();
      node1.putIntProp(51, 0);
      node3.isDec();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = new Node(44);
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString((-2678), "h");
      node0.isFor();
      node0.toStringTree();
      Node node3 = new Node(40);
      node0.addChildToBack(node1);
      node2.isEquivalentToTyped(node1);
      node1.isCall();
      node3.isNull();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isDefaultCase();
      node0.isSwitch();
      Node node1 = node0.getLastSibling();
      node1.isSyntheticBlock();
      node1.addChildrenToFront(node0);
      // Undeclared exception!
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.toStringTree();
      Node node1 = Node.newString(286, "FOR\n", 1, 996);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isEquivalentTo(node1);
      node2.isEquivalentTo(node0);
      Node node3 = new Node(1521, node0);
      Node.newString("", 38, 2);
      node3.getDirectives();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = new Node(119, (-2370), (-2370));
      node0.isDec();
      node0.isStringKey();
      Node node1 = new Node(40, node0, node0, 1611, 43);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isAssignAdd();
      node0.setSourceEncodedPositionForTree(15);
      Node.newNumber((double) 48, 55, 31);
      node0.isFromExterns();
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.isOnlyModifiesArgumentsCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getLineno();
      node0.toStringTree();
      node0.isFor();
      node0.isLabel();
      Node node1 = new Node(37, node0, 44, 0);
      Node node2 = node1.cloneTree();
      node2.isLabel();
      node1.addChildrenToFront(node2);
      node1.isNew();
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = new Node(119, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isStringKey();
      Node node1 = Node.newString(32, "(OS;", 154, 57);
      node0.isAssignAdd();
      node0.setWasEmptyNode(false);
      node1.setSourceEncodedPositionForTree(15);
      node1.setString("(OS;");
      node1.isStringKey();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      node0.isIn();
      node0.mayMutateGlobalStateOrThrow();
      node0.hasChildren();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isDefaultCase();
      node0.isSwitch();
      Node node1 = node0.getLastSibling();
      node1.isName();
      Node node2 = Node.newString("K(bcO-m^+dp`/f`E;");
      node0.clonePropsFrom(node2);
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(112);
      node0.isQuotedString();
      node0.isArrayLit();
      node0.getJSDocInfo();
      node0.isWith();
      node0.isFunction();
      node0.isNot();
      Node node1 = Node.newNumber(1.2, 10, 8199);
      node1.addChildrenAfter(node0, (Node) null);
      Node.newString(10, "OBJECT_NUMBER_STRING_BOOLEAN");
      node1.isQualifiedName();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      String string0 = "R&$jh}h`i'8I'>'vWF<";
      Node node0 = Node.newString((-1981), "R&$jh}h`i'8I'>'vWF<");
      node0.getStaticSourceFile();
      // Undeclared exception!
//      try { 
        node0.checkTreeEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString((-660), "1e2y.(TB");
      boolean boolean0 = false;
      node0.putBooleanProp(11, false);
      node0.isQualifiedName();
      node0.isObjectLit();
      boolean boolean1 = false;
      Node node1 = new Node(15, node0, node0, 57, 117);
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = new Node(115);
      node0.setSourceEncodedPosition(48);
      Node node1 = new Node(55, node0, node0);
      node0.srcref(node1);
      node0.setOptionalArg(true);
      node0.getQualifiedName();
//      try { 
        node0.setDouble(154.0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FOR [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(147);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node1.setCharno(30);
      node0.setType(49);
      Node node2 = Node.newString((-162), "com.google.common.collect.Sets");
      node2.isReturn();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(48, nodeArray0);
      node3.getLastSibling();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newString("<yR4W2");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("QMARK", 8, 40);
      Node node2 = new Node((-224));
      Node node3 = new Node(12, node1, node1, node2, 43, 48);
      node2.hasChild(node0);
      Node node4 = Node.newString(41, "QMARK");
      node3.isTrue();
      node2.getSourceFileName();
      node4.isNull();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node(115);
      node0.setSourceEncodedPosition(48);
      node0.setCharno(2567);
      node0.setType(2567);
      Node node1 = new Node(49, node0, node0);
      node1.isReturn();
      node1.getLastSibling();
      int int0 = Node.COLUMN_BITS;
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-212), (-212));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isFalse();
      Node node1 = new Node(31, node0);
      Node node2 = new Node(16, node1, node1);
      node1.putIntProp(1, (-1315));
      node1.isOnlyModifiesArgumentsCall();
      node2.hasChildren();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newNumber((-1466.6554897087415));
      // Undeclared exception!
//      try { 
        node0.addChildToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString(698, "jVQ`+");
      node0.mayMutateArguments();
      Node node2 = new Node(30, node0, node1, node0, node1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(38, nodeArray0);
      node1.isNull();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = node0.cloneTree();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = Node.newString(56, "thisType");
      node2.isFor();
      node2.toStringTree();
      node3.isLabel();
      node1.isInstanceOf();
      InputId inputId0 = new InputId("LEAST_FUNCTION_TYPE");
      node1.isArrayLit();
      node2.isGetterDef();
      Node node4 = new Node(38, node0, node3);
      node0.hasOneChild();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(101, 101, 1400);
      node0.setSourceEncodedPosition(101);
      node0.toStringTree();
      node0.isAnd();
      node0.isDo();
      Node node1 = new Node(63);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("AND 0\n", "O6cX)\"9", 4095, 16);
      node1.isSetterDef();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newString((-212), "\"DDWOMBZ5|C!<R", (-212), (-212));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isGetElem();
      Node node1 = new Node(31, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isOnlyModifiesArgumentsCall();
      node0.isSwitch();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = new Node(115, (-2855), 102);
      node0.mayMutateGlobalStateOrThrow();
      node0.setSourceEncodedPosition(102);
      node0.toStringTree();
      node0.isAnd();
      node0.isDo();
      Node node1 = new Node(15);
      node0.removeProp(57);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("RANGE_ERROR_TYPE", "Zot(", 39, 5760);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isSetterDef();
      node0.isCatch();
      node0.getChangeTime();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(32);
      int int0 = Node.CHANGE_TIME;
      node0.getLineno();
      node0.toStringTree();
      node0.isSetterDef();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = new Node(154);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isDo();
      Node node1 = new Node(42);
      node1.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(47);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got THIS
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(117);
      Node node1 = Node.newString(38, "CharMatcher.anyOf(\"", 110, 117);
      Node node2 = node0.copyInformationFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isBreak();
      // Undeclared exception!
//      try { 
        node2.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString("#{4-cg{#bZ<7q2asfs", 38, 42);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setLength(634);
      Node node2 = new Node(40, node1, node0, node0, 12, 42);
      node2.useSourceInfoFrom(node0);
      String string0 = "Not(";
      Node node3 = Node.newNumber((double) 32, 51, 37);
      node3.setSourceFileForTesting("#{4-cg{#bZ<7q2asfs");
//      try { 
        node3.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 32.0 51 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000008] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString("o", (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2855));
      node1.isAssignAdd();
      node0.setWasEmptyNode(false);
      node1.isComma();
      node0.setString("\"DDWOMBZ5|C!<R");
      Node[] nodeArray0 = new Node[2];
      Node node2 = Node.newNumber((double) 50, 117, 57);
      nodeArray0[0] = node2;
      Node node3 = Node.newNumber((double) 2, 0, (-800));
      node3.setCharno(57);
      nodeArray0[1] = node1;
      Node node4 = new Node(113, nodeArray0);
      node4.isCase();
      node2.toString();
      node4.addChildToFront(node3);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = node0.cloneTree();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = Node.newString(38, "LEAST_FUNCTION_TYPE");
      node2.isEquivalentToShallow(node0);
      node0.isFor();
      node3.toStringTree();
      node3.isLabel();
      node3.isInstanceOf();
      InputId inputId0 = new InputId("NAME LEAST_FUNCTION_TYPE\n");
      node1.isArrayLit();
      node3.isGetterDef();
      node2.getStaticSourceFile();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(57);
      Node node1 = new Node(30, node0);
      node0.hasChild(node1);
      Node node2 = node1.cloneNode();
      int int0 = Node.STATIC_SOURCE_FILE;
      int int1 = Node.QUOTED_PROP;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node2.setSideEffectFlags(node_SideEffectFlags1);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newString(103, "com.google.javascript.rhino.jstype.TemplateType");
      Node node1 = new Node(0, node0, node0, node0);
      node1.getJsDocBuilderForNode();
      node1.isNE();
      Node.newString("K(bcO-m^+dp`/f`E;");
      Node.newString(31, "com.google.javascript.rhino.jstype.TemplateType", 86, 1847);
      node1.isGetProp();
      node1.getLastSibling();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = new Node(119, (-2370), (-2370));
      node0.isScript();
      node0.isStringKey();
      node0.isAssignAdd();
      node0.setSourceEncodedPositionForTree(15);
      node0.isComma();
      node0.setLength(53);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType((JSDocInfo) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node0, objectType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      jSTypeArray0[0] = (JSType) enumElementType0;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.isDelProp();
      node0.isDefaultCase();
      node1.isCase();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = node0.cloneTree();
      node0.srcrefTree(node1);
      Node node2 = Node.newString(38, "LEAST_FUNCTION_TYPE");
      node0.isFor();
      node2.toStringTree();
      node2.isLabel();
      node2.isInstanceOf();
      InputId inputId0 = new InputId("NAME LEAST_FUNCTION_TYPE\n");
      node1.isArrayLit();
      node2.isGetterDef();
      Node node3 = new Node(50, node0, node0);
      node3.hasOneChild();
      node3.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node(119, 2048, 2048);
      node0.mayMutateGlobalStateOrThrow();
      node0.isStringKey();
      node0.isAssignAdd();
      node0.setSourceEncodedPositionForTree(15);
      node0.isComma();
      Node node1 = node0.cloneTree();
      node1.isAnd();
      node0.isEmpty();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", 103, 103);
      Node node1 = new Node(103, node0, node0);
      node1.getJsDocBuilderForNode();
      node1.isTrue();
      node1.setLength(2688);
      Node node2 = Node.newString(36, "com.google.javascript.rhino.jstype.TemplateType", 47, 36);
      node1.cloneTree();
      node1.useSourceInfoIfMissingFrom(node0);
      node1.isAnd();
      node2.isEmpty();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = new Node(131, (-2339), (-2339));
      node0.isLocalResultCall();
      Node node1 = Node.newString(32, "(OS;", 46, 57);
      node0.isAssignAdd();
      Node node2 = new Node(29, node0, node1, node1, 4095, 0);
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      node0.putProp(103, locale_FilteringMode0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      Node node2 = new Node((-3907), node0, node0, node1, 42, (-717));
      node2.isVoid();
      node1.getSideEffectFlags();
      node0.isEmpty();
      Node node3 = new Node(42);
      Node node4 = Node.newString(131, ":fl", 8, 46);
      node4.isInstanceOf();
      InputId inputId0 = new InputId((String) null);
      node3.isArrayLit();
      node0.isGetterDef();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", 103, 103);
      Node node1 = new Node(103, node0, node0);
      node1.isTrue();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getQualifiedName();
      node1.isIf();
      node1.clonePropsFrom(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.setOptionalArg(false);
      node0.getQualifiedName();
//      try { 
        node0.setDouble(3606.2209);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING com.google.javascript.rhino.jstype.TemplateType 103 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(2293);
      node0.getLineno();
      Node node1 = new Node(30, node0);
      node0.hasChild(node1);
      node0.isArrayLit();
      node1.setSideEffectFlags(4095);
//      try { 
        node1.setString("com.google.javascript.rhino.jstype.FunctionType$PropAccess");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NEW [side_effect_flags: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(147);
      Node node1 = new Node(40, node0, node0, node0, node0);
      Node node2 = new Node(117);
      Node node3 = new Node(40, 2, 16);
      node1.getIntProp(16);
      node3.isEquivalentToShallow(node1);
      Node node4 = new Node(460, node1, 32, 35);
      node4.isOnlyModifiesArgumentsCall();
      Node.newString("5h", 57, (-752));
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-1.0), 91, 555);
      node0.getDouble();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      List<JSType> list0 = null;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(43, "");
      Node.newNumber(1260.198563558452, 31, 38);
      node0.addSuppression("");
      node0.isTrue();
      Node.extractLineno((-5122));
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = new Node(131, (-2339), (-2339));
      node0.isLocalResultCall();
      Node node1 = Node.newString(32, "(OS;", 46, 57);
      node0.isAssignAdd();
      Node node2 = new Node(29, node0, node1, node1, 4095, 0);
      node2.setWasEmptyNode(true);
      Node node3 = node2.cloneNode();
      Node node4 = node3.cloneTree();
      Node.newNumber(1.0);
      node2.getDirectives();
      // Undeclared exception!
//      try { 
        node1.replaceChild(node4, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = Node.newNumber(51.0, 115, 152);
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString("\"DDWOMBZ5|C!<R", 47, 40);
      node0.getLength();
      Node node2 = Node.newNumber((double) 43);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.setLength(4095);
      Node node3 = new Node(42);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node1.useSourceInfoFrom(node2);
      node3.clonePropsFrom(node0);
      Node node4 = Node.newString("\"DDWOMBZ5|C!<R", 31, 98);
      node3.wasEmptyNode();
      Node node5 = Node.newString(50, "", 112, 408);
      node5.isLabelName();
      Node node6 = new Node(37, node4, node2, 44, 50);
      node4.isNot();
      node4.isInc();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = new Node(131, (-2339), (-2339));
      node0.isLocalResultCall();
      Node node1 = Node.newString(32, "(OS;", 46, 57);
      node0.isAssignAdd();
      Node node2 = new Node(29, node0, node1, node1, 4095, 0);
      node1.setChangeTime((-2861));
      Node node3 = Node.newString(4095, ".6Kg[O,]JE d?U\"w", 154, 39);
      node3.setString("1&Ca");
      node2.removeChildAfter(node0);
      Node node4 = null;
//      try {
        node4 = new Node(37, node0, 1057, 881);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(16, node0, node0, node0, node0);
      jSTypeRegistry0.hasNamespace("w,k:Ct]%2P,g4?7`P4");
      simpleErrorReporter0.warning((String) null, " is not a string node", (-1856), 4095);
      ObjectType objectType0 = jSTypeRegistry0.createObjectType((ObjectType) null);
      objectType0.getImplicitPrototype();
      objectType0.getCtorExtendedInterfaces();
      jSTypeRegistry0.createDefaultObjectUnion(objectType0);
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter((Node) null, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = new Node(115, 115, (-2308));
      Node node1 = Node.newString("]P(e<Gf, {HM_", 32, 47);
      Node node2 = new Node(40, node1, node1, node0, 38, 43);
      node1.isNE();
      Node.newString("com.google.javascript.rhino.Node$AncestorIterable");
      Node node3 = Node.newString(39, "com.google.javascript.rhino.Node$AncestorIterable", 47, 1726);
      node3.isGetProp();
      node1.getLastSibling();
      node3.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = Node.newString(35, "LEAST_FUNCTION_TYPE");
      node0.setSourceEncodedPositionForTree(43);
      node0.isFor();
      node1.isLabel();
      Node node2 = new Node(39, node0, 1496, 55);
      // Undeclared exception!
//      try { 
        node2.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = new Node(115, 115, (-2308));
      Node node1 = Node.newString((-2308), "v-en3iD7S7I@eGN\"");
      Node node2 = new Node(13, node1, node0, node0, 52, 152);
      node1.isQualifiedName();
      Node node3 = Node.newNumber((double) 1, (-1905), 29);
      node3.isObjectLit();
      node2.setLength(36);
      node0.isDelProp();
      node0.isDefaultCase();
      node0.isSwitch();
      Node node4 = new Node(13, 38, 15);
      node4.getLastSibling();
      Node.newString(38, "v-en3iD7S7I@eGN\"");
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = new Node(112);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = new Node(49, node0, node0, node0, node0);
      node1.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node0, false, false, true);
      node0.isGetterDef();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      node1.putProp((-2359), node0);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node2.isVoid();
      node1.getSideEffectFlags();
      node0.isEmpty();
      Node node3 = new Node(101);
      node3.isInstanceOf();
      InputId inputId0 = new InputId(";-X");
      node1.isArrayLit();
      node2.isGetterDef();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = new Node(154, node0, node0, node0, node0, 2, 30);
      node1.isEquivalentTo(node0, true, true, true);
      node0.isGetterDef();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      node0.putProp(32768, simpleErrorReporter0);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node2.checkTreeEqualsImpl(node0);
      node1.getSideEffectFlags();
      node1.isEmpty();
      jSDocInfo0.setConstructor(true);
      node2.isInstanceOf();
      node1.isDelProp();
      node2.isParamList();
      node1.isOr();
      Node.extractCharno(16);
      node2.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.isGetterDef();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Node node2 = node0.cloneNode();
      node1.setCharno(3368);
      Node node3 = new Node(13, 56, (-746));
      node3.getIntProp(12);
      node3.isEquivalentToShallow(node1);
      node2.putIntProp(98, 8);
      node2.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = new Node(119, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("#{4-cg{#bZ<7q2asfs", 32, 1920);
      node0.setLength((-1091));
      Node node2 = new Node(47);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = node0.useSourceInfoFrom(node1);
      Node node4 = node2.clonePropsFrom(node0);
      node3.isEquivalentTo(node4, true, true, false);
      node3.isIn();
      Node node5 = new Node((-1786), node0, node2);
      node2.isEquivalentToTyped(node5);
      node2.isIn();
      node3.isComma();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = new Node((-2964));
      Node node1 = new Node((-2964), node0, node0, node0, 2761, 62);
      node0.isNE();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newString("Not(");
      Node node2 = Node.newString(16, "1)k0gnpeQa{-j]", 391, 125);
      node2.isGetProp();
      node0.getLastSibling();
      node1.getBooleanProp(51);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isTypeOf();
      node0.isIn();
      Node node1 = new Node(40, node0, node0);
      // Undeclared exception!
//      try { 
        node1.setString("");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node.extractCharno((-1012));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
//      try { 
        Node.newString(3, (String) null, (-938), 3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2865));
      node1.isAssignAdd();
      node0.setWasEmptyNode(false);
      node1.setSourceEncodedPositionForTree(43);
      node1.isComma();
      node0.setString("\"DDWOMBZ5|C!<R");
      Node node2 = Node.newNumber(4768.7091956);
      node0.checkTreeEqualsImpl(node2);
      Node node3 = Node.newNumber((double) 53);
      node3.isNumber();
      Node node4 = Node.newString("<yR4W2", 2495, 4095);
      node4.getBooleanProp(53);
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      node0.isIn();
      node0.mayMutateGlobalStateOrThrow();
      node0.hasChildren();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isDefaultCase();
      node0.putIntProp(112, 112);
      node0.isSwitch();
      Node node1 = node0.getLastSibling();
      node0.cloneTree();
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = new Node(154);
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setVarArgs(true);
      node0.setSourceEncodedPosition(100);
      node0.getLineno();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = Node.newString(39, "new child has existing parent", 55, 16);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.toStringTree();
      node0.isSetterDef();
      node0.isIf();
      node0.isAssignAdd();
      node0.getStaticSourceFile();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      node0.cloneTree();
      Node node1 = Node.newString(38, "LEAST_FUNCTION_TYPE");
      node0.isFor();
      node1.toStringTree();
      node1.isLabel();
      Node node2 = new Node(150);
      node0.isDelProp();
      node1.isCall();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(64, "");
      node0.isArrayLit();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.addChildToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = new Node(115);
      node0.isEquivalentToTyped(node0);
      node0.setSourceEncodedPosition(48);
      node0.setCharno(2567);
      node0.setLength(4095);
      node0.setIsSyntheticBlock(true);
      Node.newString(703, "|Lx-'RUw6Nl1FjR");
//      try { 
        node0.setString((String) null);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FOR 0 [synthetic: com.google.javascript.rhino.Node$IntPropListItem@0000000003] [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = new Node(115, 115, (-2308));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(48, node0, node0, node0, 47, 55);
      node1.isRegExp();
      node0.setSourceEncodedPosition(26);
      node0.isAnd();
      node1.isDo();
      Node node2 = new Node(13);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.setJSDocInfo((JSDocInfo) null);
      node2.isSetterDef();
      node2.isCatch();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = new Node(119, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(49, node0, node0, node0, 2, 1);
      node1.hasChild(node0);
      Node.newString(4015, "");
      node0.isTrue();
      node1.isVoid();
      node1.removeChildren();
      node1.isCast();
      node0.isContinue();
      Node node2 = new Node(56, node0, (-2324), 1073741824);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      int int0 = Node.VAR_ARGS_NAME;
      node0.toStringTree();
      node0.isAnd();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = new Node(42, node0, node0, node0, node0, (-2182), 102);
      Node.NodeMismatch node_NodeMismatch1 = new Node.NodeMismatch(node1, node0);
      node_NodeMismatch1.equals(node0);
      node0.isWhile();
      node0.getStaticSourceFile();
      Node node2 = new Node(15, node1);
      node2.isWhile();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      int int0 = 105;
      String string0 = "E";
      Node node0 = Node.newString("E", 105, 105);
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString("#{4-cg{#bZ<7q2asfs", 38, 42);
      node1.isSyntheticBlock();
      Node.newString("#{4-cg{#bZ<7q2asfs");
      Node node2 = new Node((-2278), 2, 1);
      node1.isHook();
      Node node3 = Node.newNumber((double) 48);
      node3.setChangeTime(8);
      Node node4 = Node.newString(47, "#{4-cg{#bZ<7q2asfs", 3097, 51);
      node4.isComma();
      node2.isThrow();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isQuotedString();
      node2.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-888));
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1056);
      node0.isQuotedString();
      node0.isRegExp();
      node0.isArrayLit();
      node0.getJSDocInfo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[5];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("yDdEx", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      ObjectType objectType0 = enumType1.getImplicitPrototype();
      jSTypeArray0[0] = (JSType) objectType0;
      JSType jSType1 = jSTypeRegistry0.createNullableType(enumType1);
      jSTypeArray0[1] = jSType1;
      JSType jSType2 = modificationVisitor0.caseVoidType();
      jSTypeArray0[2] = jSType2;
      ObjectType objectType1 = jSTypeRegistry0.createObjectType((ObjectType) enumType0);
      jSTypeArray0[3] = (JSType) objectType1;
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("K(bcO-m^+dp`/f`E;");
      jSTypeArray0[4] = (JSType) templateType0;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.hasChild(node1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node0.isVoid();
      node0.isEmpty();
      node2.isInstanceOf();
      InputId inputId0 = new InputId("Named type with empty name component");
      node1.isGetterDef();
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), (-938));
      Node node1 = new Node(42);
      node1.getJSDocInfo();
      Node node2 = new Node(54, node0, node1, node0);
      Node node3 = new Node((-3507), node2);
      node1.getQualifiedName();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      // Undeclared exception!
//      try { 
        node3.addChildBefore((Node) null, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = Node.newString(35, "LEAST_FUNCTION_TYPE");
      node1.isTry();
      node1.toStringTree();
      node1.isNoSideEffectsCall();
      node0.getSourceFileName();
      Node node2 = new Node(30, node1, 30, 55);
      Node node3 = new Node(15, (-873), 46);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node1.isOptionalArg();
      node0.isName();
      node1.isLabel();
      node2.getIndexOfChild(node0);
      node1.isSyntheticBlock();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      int int0 = Node.SIDE_EFFECTS_ALL;
      node0.toStringTree();
      Node node1 = new Node(47, node0, node0, node0, 55, 90);
      node1.getSideEffectFlags();
      node1.useSourceInfoIfMissingFrom(node0);
      node0.hasChild(node1);
      node1.getDirectives();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(116, "$H@R69ajZRJ", 116, 53);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(715, node0, node0, node0);
      node2.removeChild(node0);
      node2.isDebugger();
      node2.getParent();
      Node.newNumber((double) 46);
      node0.isCase();
      node2.getLastSibling();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), (-938));
      Node node1 = new Node(42);
      node1.checkTreeEqualsImpl(node0);
      node0.isNumber();
      node1.setLength((-468));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(39);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.removeProp(29);
      node1.isEquivalentTo(node0, true, true, true);
      node1.isGetterDef();
      Node.newString((-4761), "/]|0");
      node1.isDefaultCase();
      Node.newString("o!*P`0HC|x TusX}");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isRegExp();
      node0.setSourceEncodedPosition(1939);
      node0.toStringTree();
      node0.isTry();
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.getSourceFileName();
      Node node1 = new Node((-3818), node0, (-1737), 46);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isOptionalArg();
      node1.isName();
      node1.isLabel();
      node1.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.isGetterDef();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      node0.putProp(32768, simpleErrorReporter0);
      node0.setJSDocInfo(jSDocInfo0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node1.isVoid();
      node1.getSideEffectFlags();
      node1.isEmpty();
      Node node2 = new Node(31);
      jSDocInfo0.setConstructor(true);
      node2.isInstanceOf();
      InputId inputId0 = new InputId(";-X");
      node1.isArrayLit();
      node2.isGetterDef();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(2293);
      node0.getLineno();
      Node node1 = new Node(30, node0);
      node0.hasChild(node1);
      Node node2 = Node.newString(118, "com.google.common.collect.ImmutableBiMap");
      node0.isTrue();
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node0.isVoid();
      node3.getSideEffectFlags();
      node1.isEmpty();
      node0.isInstanceOf();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node3;
      nodeArray0[1] = node3;
      nodeArray0[2] = node3;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node2;
      nodeArray0[6] = node3;
      nodeArray0[7] = node2;
      Node node4 = null;
//      try {
        node4 = new Node(42, nodeArray0, 103, 56);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(1, 40, 586);
      node1.isOnlyModifiesThisCall();
      Node node2 = Node.newString("#{4-cg{#bZ<7q2asfs", 40, 56);
      node0.isSyntheticBlock();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node2.setLength(48);
      Node node3 = new Node(49);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node node4 = node2.useSourceInfoFrom(node3);
      Node node5 = node3.clonePropsFrom(node2);
      node1.isEquivalentTo(node0, true, true, true);
      node4.isIn();
      node3.isEquivalentToTyped(node4);
      node1.isIn();
      node5.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(2293);
      node0.getLineno();
      Node node1 = new Node(30, node0);
      node0.hasChild(node1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node0.isVoid();
      node2.isEmpty();
      node1.isInstanceOf();
      InputId inputId0 = new InputId("t-+|=+6R$");
      node0.isGetterDef();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = new Node(64, 35, 35);
      node0.isOnlyModifiesThisCall();
      String string0 = "#{4-cg{#bZ<7q2asfs";
      Node node1 = Node.newString("%9bg.S", 3071, (-36));
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.setLength((-2660));
      Node node2 = new Node(2);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = node0.useSourceInfoFrom(node1);
      // Undeclared exception!
//      try { 
        node1.clonePropsFrom(node3);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Node has existing properties.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(124, 124, 124);
      node0.isIn();
      node0.mayMutateGlobalStateOrThrow();
      node0.hasChildren();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isDefaultCase();
      node0.isSwitch();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString("#{4-cg{#bZ<7q2asfs", 1, 0);
      node0.isSyntheticBlock();
      Node node2 = new Node(85, node0);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node1.setLength((-2182));
      Node node3 = new Node(31);
      Node node4 = node2.useSourceInfoFrom(node1);
      node4.clonePropsFrom(node1);
      Node.newString("9zVWq ", (-622), 40);
      node1.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter2, false);
      node3.isSetterDef();
      node2.isCatch();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      node0.setSourceEncodedPosition(115);
      node0.getLineno();
      Node node1 = new Node(31, node0);
      Node node2 = new Node(38, node1, node1, node1, 47, 93);
      node2.hasChild(node1);
      Node.newString(913, "Ip0Nf5U'|S");
      node1.setLength((-2339));
      node2.setIsSyntheticBlock(false);
      Node.newString(0, "Ip0Nf5U'|S");
      // Undeclared exception!
//      try { 
        node2.setString((String) null);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 47, 100);
      node0.mayMutateGlobalStateOrThrow();
      node0.getType();
      node0.isSyntheticBlock();
      Node node1 = new Node(154);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isSetterDef();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", (-94), (-94));
      Node node1 = new Node((-94), node0, node0);
      node1.isTrue();
      Node node2 = new Node(15, node1, node1, node1, node1, 55, 8);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.setLength(1798);
      Node node3 = new Node((-546));
      Node node4 = new Node(16);
      node4.checkTreeTypeAwareEqualsImpl(node2);
      node3.useSourceInfoFrom(node4);
      node1.clonePropsFrom(node3);
      Node.newString("n!Cl[AJ*WNcHH", 53, (-117));
      node2.wasEmptyNode();
      Node.newString(182, "com.google.javascript.rhino.jstype.TemplateType", (-567), 97);
      node4.isLabelName();
      Node node5 = null;
//      try {
        node5 = new Node(30, node3, node1, 56, 1021);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(39);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node0, true, true, true);
      node1.isGetterDef();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      node1.putProp(43, locale_FilteringMode1);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node2);
      node0.isVoid();
      node1.getSideEffectFlags();
      node1.isEmpty();
      Node node3 = new Node(48);
      node3.isInstanceOf();
      InputId inputId0 = new InputId(";-X");
      node3.isArrayLit();
      node0.isGetterDef();
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = new Node(1073741823, 119, 119);
      node0.mayMutateGlobalStateOrThrow();
      node0.isStringKey();
      String string0 = "\n\nSubtree1: ";
      Node node1 = Node.newString((-3094), "\n\nSubtree1: ", 5932, (-1902));
      node0.isAssignAdd();
      Node node2 = new Node((-3094), node1, node1, node1, 40, 4095);
      boolean boolean0 = false;
      node2.setWasEmptyNode(false);
      node2.setSourceEncodedPositionForTree(119);
      node0.isComma();
      // Undeclared exception!
//      try { 
        node2.setString("(OS;");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -3094
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1056);
      node0.isQuotedString();
      node0.isRegExp();
      node0.isArrayLit();
      node0.getJSDocInfo();
      Node node1 = new Node(49, node0, node0, node0, node0);
      node1.isWith();
      node1.isFromExterns();
      node0.isFalse();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node2.putIntProp(2, 29);
      Node node3 = Node.newString(12, "[XL23-iS{jm");
      node3.isTrue();
      node0.getSourceFileName();
      node1.checkTreeTypeAwareEqualsImpl(node3);
      node1.isTrue();
      node3.isBreak();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = new Node(115, 1606, 1606);
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      node0.isTry();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = Node.newString("O6cX)\"9", 234, 3000);
      node0.srcrefTree(node1);
      Node node2 = new Node(42, node0, node0, node0, node0, (-2182), 102);
      Node.NodeMismatch node_NodeMismatch1 = new Node.NodeMismatch(node2, node0);
      node_NodeMismatch1.equals(node0);
      node2.removeChild(node0);
      node0.isWhile();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node2.isThis();
      node0.isAssignAdd();
      node0.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(101);
      node0.isIn();
      node0.isTypeOf();
      node0.hasChildren();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isDefaultCase();
      node0.isFromExterns();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isOptionalArg();
      Node node1 = Node.newString(57, "quoted");
      Node node2 = node0.cloneNode();
      node2.setCharno((-3021));
      node1.getIntProp(50);
      node1.isEquivalentToShallow(node2);
      node1.hasOneChild();
      Node.newNumber(1107.437378061993, 57, 43);
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(52, node0, node0, node0, 286, 49);
      Node node2 = Node.newString(31, "FOR\n");
      Node node3 = new Node(39);
      Node node4 = Node.newNumber((double) 42, 4, (-457));
      node4.getStaticSourceFile();
      node0.addChildrenToFront(node3);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node0.isIf();
      node3.isAssignAdd();
      node2.hasOneChild();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      node0.isIn();
      node0.mayMutateGlobalStateOrThrow();
      node0.hasChildren();
      node0.setCharno(112);
      node0.removeProp(79);
      node0.isDelProp();
      Node node1 = Node.newNumber((double) 30);
      node1.getChildAtIndex((-290));
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = new Node(115);
      node0.isEquivalentToTyped(node0);
      node0.setSourceEncodedPosition(1939);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isDefaultCase();
      node0.isSwitch();
      Node node1 = new Node(112, node0);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("<yR4W2");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("QMARK", 8, (-2096));
      Node node2 = new Node((-224));
      Node node3 = new Node(12, node1, node1, node2, 43, 48);
      node2.hasChild(node0);
      Node node4 = Node.newString(41, "K(bcO-m^+dp`/f`E;");
      node3.isTrue();
      node2.getSourceFileName();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isTrue();
      node1.isBreak();
      node2.copyInformationFromForTree(node4);
      node3.isRegExp();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newString("ldrn|sIi,rG;u]M^R", (-1104), (-1104));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("ldrn|sIi,rG;u]M^R", 2805, 57);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node2.isEquivalentTo(node0, true, true, true);
      Node node3 = Node.newNumber((double) 16);
      node3.isName();
      node1.setSourceEncodedPositionForTree(457);
      node0.isComma();
      node0.getSideEffectFlags();
      node2.detachChildren();
      int int0 = 1323;
      // Undeclared exception!
//      try { 
        node3.addChildBefore(node0, (Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition((-1183));
      node0.toStringTree();
      Node node1 = new Node(47, node0);
      node0.hasChild(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.areAllFlagsSet();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString((-3014), "*DiOczsRK/8ovMs~");
      Node node1 = new Node(42, node0, node0, node0, node0);
      node1.useSourceInfoIfMissingFrom(node0);
      node1.isVarArgs();
      node0.isSetterDef();
      node0.isCatch();
//      try { 
        node1.setDouble(912.75);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // THIS is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("?X=+='SqEKh", 2, 1);
      node0.isEquivalentTo(node0, true, true, true);
      Node node2 = Node.newNumber((double) 4095);
      node2.isName();
      node1.setSourceEncodedPositionForTree(39);
      node1.isComma();
      Node node3 = new Node(679);
      Node node4 = new Node(105, node3, node3, 1532, 147);
      node4.useSourceInfoFromForTree(node0);
      node2.getType();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(1480);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isScript();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      node0.setJSDocInfo((JSDocInfo) null);
      node0.isVoid();
      node1.isEmpty();
      Node node2 = Node.newString("Window");
      node2.isInstanceOf();
      InputId inputId0 = new InputId("parts");
      Node node3 = Node.newString(307, "opt_arg", 354, 32);
      node3.isGetterDef();
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = new Node(115);
      node0.isEquivalentToTyped(node0);
      node0.setSourceEncodedPosition(1939);
      node0.setCharno(2567);
      node0.removeProp(115);
      node0.isDelProp();
      Node.newString(51, "Object#Key");
      node0.getChildAtIndex(0);
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.isOnlyModifiesThisCall();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(47, node0, node0, node0, 55, 90);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.hasChild(node1);
      Node node2 = Node.newString(29, "Not(");
      node1.isTrue();
      node1.getSourceFileName();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.isTrue();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[0];
      simpleErrorReporter0.error("Null", "Null", 925, 925);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(153, node0, node0);
      node1.isAnd();
      node0.isLocalResultCall();
      node1.getIntProp(52);
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(57, "");
      Node node1 = new Node(2, node0, node0, node0, 32, (-46));
      node0.isQualifiedName();
      node0.isObjectLit();
      node0.setLength(51);
      node0.siblings();
      node0.setIsSyntheticBlock(true);
      Node node2 = Node.newString(8, "not a StringNode");
      // Undeclared exception!
//      try { 
        node2.setString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newString(2, "\"DDWOMBZ5|C!<R");
      Node node1 = new Node(360, node0);
      node1.removeProp(49);
      node1.isDelProp();
      Node.newString(8, "\"DDWOMBZ5|C!<R");
      // Undeclared exception!
//      try { 
        node1.getChildAtIndex(4095);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newString(91, "OJ");
      node0.setCharno(91);
      node0.isOnlyModifiesArgumentsCall();
      node0.isAdd();
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSetterDef();
      node0.isCatch();
      node0.isDec();
      node0.isCall();
      node0.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(57, "");
      Node node1 = new Node(2, node0, node0, node0, 32, (-46));
      node0.isQualifiedName();
      node0.isObjectLit();
      node0.setLength(51);
      node0.siblings();
      node0.setIsSyntheticBlock(true);
      Node node2 = Node.newString("Odinal: ");
      node2.isSetterDef();
      node1.isCatch();
      node1.isDec();
      node1.isCall();
      // Undeclared exception!
//      try { 
        node1.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString("#{4-cg{#bZ<7q2asfs", 38, 42);
      node1.isSyntheticBlock();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setLength(634);
      node1.getBooleanProp(32);
      Node node2 = new Node(52, node1, node0, 4095, 21);
      node2.isString();
      node2.hasMoreThanOneChild();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      node0.isOnlyModifiesThisCall();
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(47, node0);
      node1.getJSDocInfo();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isNoSideEffectsCall();
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp(4095);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 4095
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = Node.newString(5180, "w(8@,*k}+f~JD");
      node1.setSourceEncodedPositionForTree(154);
      node0.isFor();
      node0.isLabel();
      Node node2 = Node.newNumber(0.0, 42, 0);
      Node node3 = new Node(36);
      Node node4 = new Node(15, node2, node0, (-1083), 38);
      Node node5 = null;
//      try {
        node5 = new Node(529, node0, node3, node1, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      int int0 = Node.SIDE_EFFECTS_ALL;
      node0.toStringTree();
      Node node1 = node0.cloneTree();
      node1.isLabel();
      node1.setOptionalArg(false);
      node0.isAnd();
      node1.isEmpty();
      node0.isCast();
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      node0.isOnlyModifiesThisCall();
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(47, node0);
      Node node2 = Node.newString(2, "STRING_KEY\n", 40, 54);
      Node node3 = new Node(52, node2);
      Node node4 = Node.newString(781, "STRING_KEY\n");
      node4.isTrue();
      Node node5 = node3.setJSDocInfo((JSDocInfo) null);
      node5.copyInformationFrom(node0);
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node1.isIf();
      node5.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = new Node(119, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString(32, "(OS;", 154, 57);
      node0.isAssignAdd();
      Node node2 = new Node(29, node0, node1, node1, 4095, 0);
      node2.setWasEmptyNode(false);
      node2.setSourceEncodedPositionForTree(15);
      node2.isComma();
      node1.setString("(OS;");
      node1.isUnscopedQualifiedName();
      node0.isComma();
      Node node3 = node2.removeFirstChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isDefaultCase();
      node0.isNoSideEffectsCall();
      Node node4 = null;
//      try {
        node4 = new Node(1303, node3, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.setLength(16);
      Node node1 = new Node(46);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      // Undeclared exception!
//      try { 
        node2.clonePropsFrom(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Node has existing properties.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = Node.newString("gkCTOK s<VCZzaJ{c");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "gkCTOK s<VCZzaJ{c");
      node0.addSuppression(":]-n,yS 2sc}lY4B");
      node0.getAncestors();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      jSType0.autoboxesTo();
      node0.setJSType(jSType0);
      node0.getBooleanProp((-904));
      node0.getJSType();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = Node.newNumber(2731.544731350971, (-1688), 9);
      node1.getAncestors();
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), (-2339));
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(124, node0, node0, node0, 2283, 1);
      node1.hasChild(node0);
      node0.setSourceEncodedPosition(43);
      node1.isEquivalentToTyped(node0);
      node1.isLabel();
      node1.getInputId();
      node1.isArrayLit();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(46);
      int int0 = Node.LAST_PROP;
      node0.toStringTree();
      Node node1 = new Node(47, node0);
      node1.srcref(node0);
      node0.hasChild(node1);
      node0.checkTreeEquals(node1);
      // Undeclared exception!
//      try { 
        node1.addChildrenAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = new Node(154);
      node0.setSourceEncodedPositionForTree(43);
      node0.isFor();
      Node node1 = new Node(57);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.clonePropsFrom(node1);
      Node.newString("LEAST_FUNCTION_TYPE", 4095, 4);
      node1.wasEmptyNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING_KEY
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isExprResult();
      Node node1 = new Node(115);
      node1.isQualifiedName();
      node0.isObjectLit();
      Node node2 = Node.newString("", 52, 306654252);
      node2.isAnd();
      Node node3 = new Node(4095, node1);
      node3.addChildToBack(node2);
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", 103, 103);
      Node node1 = new Node(103, node0, node0);
      node1.getJsDocBuilderForNode();
      node1.isTrue();
      node0.isObjectLit();
      node1.setLength(2688);
      node0.setIsSyntheticBlock(false);
      Node.newString(36, "com.google.javascript.rhino.jstype.TemplateType", 47, 36);
      Node node2 = node1.cloneTree();
      node1.isLabel();
      node1.isAnd();
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 47, 100);
      node0.getType();
      node0.isSyntheticBlock();
      Node node1 = new Node(154);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isSetterDef();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = new Node(119, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString(32, "(OS;", 154, 57);
      node0.isAssignAdd();
      Node node2 = new Node(29, node0, node1, node1, 4095, 0);
      node2.setWasEmptyNode(false);
      node2.setSourceEncodedPositionForTree(15);
      node2.isComma();
      node1.setString("(OS;");
      node1.isUnscopedQualifiedName();
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isDefaultCase();
      node0.isNoSideEffectsCall();
      // Undeclared exception!
//      try { 
        node1.replaceChild(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), (-938));
      node0.isWith();
      node0.mayMutateGlobalStateOrThrow();
      node0.getBooleanProp(11);
      node0.setVarArgs(true);
      node0.setSourceEncodedPosition(13);
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(29, node0, node0, node0);
      node1.copyInformationFromForTree(node0);
      node1.isSetterDef();
      node1.isIf();
      node0.isAssignAdd();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", 103, 103);
      Node node1 = new Node(103, node0, node0);
      node1.getJsDocBuilderForNode();
      node0.isSyntheticBlock();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.setLength(124);
      Node node2 = new Node((-55));
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node node3 = node1.useSourceInfoFrom(node0);
      Node node4 = node2.clonePropsFrom(node1);
      Node node5 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", 42, 46);
      Node node6 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", 12, 2016);
      node6.wasEmptyNode();
      Node.newString(117, "com.google.javascript.rhino.jstype.TemplateType", 38, 8);
      node1.isLabelName();
      Node node7 = new Node(2, node3, node5, 38, 33);
      node7.isNot();
      node4.cloneNode();
      Node.mergeLineCharNo((-944), 2962);
      node6.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = new Node(112, (-2339), (-2339));
      node0.isIn();
      node0.mayMutateGlobalStateOrThrow();
      node0.hasChildren();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isDefaultCase();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = new Node((-3014));
      node0.siblings();
      Node node1 = new Node(304, 37, 0);
      node1.removeProp(13);
      node0.isDelProp();
      node0.isVar();
      node0.getType();
      Node node2 = Node.newString("D~:N", (-40), (-2339));
      node2.isSwitch();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node((-1715));
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      Node node1 = new Node(42);
      node1.checkTreeEqualsImpl(node0);
      node1.isFalse();
      node0.isNumber();
      node1.getIntProp(57);
      node1.isBlock();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[4];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      // Undeclared exception!
//      try { 
        modificationVisitor0.caseUnionType(unionType0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = new Node((-3014));
      node0.getJSDocInfo();
      Node node1 = Node.newNumber((double) 37, (-2278), 103);
      Node node2 = node0.cloneTree();
      node2.siblings();
      Node node3 = new Node(304, 37, 0);
      node3.removeProp(13);
      node2.isDelProp();
      Node.newString(4095, "D~:N");
      node0.isHook();
      // Undeclared exception!
//      try { 
        node1.getChildAtIndex(153);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newString("ALWAYS_TRUE", 30, 3075);
      Node node2 = new Node(50);
      node0.cloneNode();
      node2.isEquivalentTo(node1, true, true, true);
      node1.checkTreeEqualsImpl(node2);
      node1.isFalse();
      node0.isQuotedString();
      node1.getDirectives();
      node1.isVar();
      node0.getType();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      node0.getJSType();
      ObjectType.cast((JSType) null);
      jSTypeArray0[0] = (JSType) null;
      node0.getJSType();
      jSTypeArray0[1] = null;
      node0.getJSType();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, node0);
      jSTypeArray0[2] = (JSType) functionType0;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = jSTypeRegistry1.createParametersWithVarArgs(jSTypeArray0);
      node1.hasChild(node2);
      Node node3 = Node.newString(43, ".");
      node3.isTrue();
      node1.setChangeTime(15);
      node3.isComma();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node4 = Node.newString(4095, "Node has existing properties.");
      node4.setString("Not declared as a type name");
      node1.getSideEffectFlags();
      node1.isDelProp();
      node4.isParamList();
      node4.isOr();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node(47);
      Node.newString(545, "LEAST_FUNCTION_TYPE");
      node0.setSourceEncodedPositionForTree((-1352));
      node0.isFor();
      node0.isLabel();
      Node node1 = Node.newNumber((double) 0, 290, 29);
      Node node2 = new Node(0);
      Node node3 = new Node(159, node1, node2, 42, 52);
      node0.isDelProp();
      node3.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString((-3014), "*DiOczsRK/8ovMs~");
      Node node1 = Node.newString("eb7\"V~:");
      node1.getLength();
      Node node2 = new Node(52, node0, node1, node1, node0);
      node1.isNull();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(39);
      Node node1 = Node.newNumber((double) 29, 480, 4081);
      Node node2 = node0.cloneTree();
      node2.siblings();
      Node.newString("end-char: ", 4081, 57);
      node1.setSourceFileForTesting("K(bcO-m^+dp`/f`E;");
      // Undeclared exception!
//      try { 
        node2.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newString("P)^w[]}j'UI@i");
      node0.isSwitch();
      node0.isRegExp();
      node0.setSourceEncodedPosition(42);
      node0.getJSDocInfo();
      Node node1 = Node.newNumber((double) 2, 1549, 40);
      node1.setLength(1);
      Node node2 = new Node(1, node1, node1, node0, node0, 51, 16);
      node2.setIsSyntheticBlock(true);
      Node node3 = Node.newString(54, "P)^w[]}j'UI@i", 118, 89);
      Node node4 = node2.cloneTree();
      node2.copyInformationFrom(node1);
      node4.isLabel();
      node2.addChildrenToFront(node3);
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = new Node((-3014));
      node0.getJSDocInfo();
      Node node1 = Node.newNumber((double) 37, (-2278), 103);
      Node node2 = node0.cloneTree();
      node2.siblings();
      Node.newString("end-char: ", 43, 122);
      node1.setSourceFileForTesting((String) null);
//      try { 
        node1.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 37.0 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000006] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = new Node(232);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.isEquivalentTo(node0, false, true, false);
      node0.isLabel();
      node0.isQuotedString();
      node0.getDirectives();
      node0.isVar();
      node0.getType();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(39);
      node0.setJSType((JSType) null);
      // Undeclared exception!
//      try { 
        node0.setString("jsdoc_info");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = Node.newString(3776, "OJ", 3776, 3776);
      node0.setCharno(3776);
      int int0 = Node.QUOTED_PROP;
      node0.setSourceEncodedPosition(51);
      node0.isWith();
      Node node1 = Node.newString(3271, "OJ");
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCast();
      node0.isIf();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.mayMutateArguments();
      node0.getJSDocInfo();
      Node node1 = new Node(51, node0, node0, node0, 0, 36);
      node1.isOptionalArg();
      node1.isFromExterns();
      node0.isFalse();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node0.isEquivalentTo(node1, true, false, true);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.isVoid();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = Node.newString(1073741823, "String node not created with Node.newString", 577, 0);
      node0.getJSDocInfo();
      Node node1 = Node.newNumber(2166.12687, 132, 36);
      Node node2 = node0.cloneTree();
      node1.siblings();
      node2.getString();
      node0.siblings();
      node1.isQualifiedName();
      node2.isVar();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", 103, 103);
      Node node1 = new Node(103, node0, node0);
      node1.getJsDocBuilderForNode();
      node1.isTrue();
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.TemplateType");
      node2.isObjectLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getJSDocInfo();
      Node.newString("NUMBER_OBJECT_FUNCTION_TYPE");
      node0.hasOneChild();
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(43, "");
      Node node1 = Node.newNumber((double) 12, 42, 38);
      node0.toString();
      node0.addSuppression("CASE");
      Node node2 = Node.newString(2020, "enum{", 2, (-2671));
      Node node3 = new Node(2004, node0, node2, node1);
      node0.getDirectives();
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", 103, 103);
      Node node1 = new Node(103, node0, node0);
      node1.getJsDocBuilderForNode();
      node0.toStringTree();
      Node node2 = new Node(113, node1);
      node2.hasChild(node1);
      node2.copyInformationFrom(node0);
      Node node3 = new Node(0, node2, 53, 133);
      node3.isTrue();
      Node node4 = node3.setJSDocInfo((JSDocInfo) null);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.isVoid();
      Node node5 = new Node(644, node4);
      node5.getSideEffectFlags();
      node2.isEmpty();
      node3.isInstanceOf();
      node1.getInputId();
      Node.mergeLineCharNo(5145, 1142);
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newString("", 101, 101);
      node0.isFunction();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.toStringTree();
      node0.getSourceOffset();
      Node node1 = Node.newNumber((double) 15, 8, 4095);
      Node node2 = new Node(388, node0, node1, node1, node0, 4, 4095);
      node2.getChildCount();
      node2.isGetElem();
      node1.isBlock();
      node0.isNE();
      node2.getStaticSourceFile();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("STRING  101\n");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("G");
      node_FileLevelJsDocBuilder0.append("");
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newString(1073741823, "String node not created with Node.newString", 577, 0);
      node0.getJSDocInfo();
      Node.newNumber(1.0, 303, 660);
      Node node1 = new Node(47);
      node1.cloneTree();
      node0.siblings();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(40, nodeArray0);
      // Undeclared exception!
//      try { 
        node2.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = new Node(119, (-2339), (-2339));
      node0.getSourceOffset();
      node0.mayMutateGlobalStateOrThrow();
      node0.getLineno();
      node0.toStringTree();
      node0.mayMutateGlobalStateOrThrow();
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isDefaultCase();
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString("com.google.common.collect.ImmutableAsList", 2, 53);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.Node$SiblingNodeIterable";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(3231, "com.google.javascript.rhino.Node$SiblingNodeIterable", 3231, 35);
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.addChildAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = new Node(119, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newString(50, "Not(");
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newString("P)^w[]}j'UI@i");
      node0.isSwitch();
      node0.isRegExp();
      node0.setSourceEncodedPosition(42);
      node0.setJSType((JSType) null);
      node0.getJSDocInfo();
      Node node1 = Node.newNumber((double) 2, 1549, 40);
      node1.setLength(1);
      Node node2 = new Node(1, node1, node1, node0, node0, 51, 16);
      node2.setIsSyntheticBlock(true);
      Node node3 = Node.newString(54, "P)^w[]}j'UI@i", 118, 89);
      Node node4 = node2.cloneTree();
      node4.isLabel();
      node2.addChildrenToFront(node3);
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = new Node(232);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, true, true, true);
      node1.isGetterDef();
      Node node2 = Node.newString(2082, "N-Hwq 16Sm)wI");
      node1.isDefaultCase();
      node0.addSuppression("N-Hwq 16Sm)wI");
      node2.isContinue();
      Node node3 = new Node(52, 110, (-639));
      node0.useSourceInfoIfMissingFromForTree(node3);
      node1.removeProp(327);
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(39);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node0, true, true, true);
      node1.isGetterDef();
      Node.newString((-4761), "/]|0");
      node1.isDefaultCase();
      Node.newString("o!*P`0HC|x TusX}");
      Node.newString(119, "8-", 1939, (-2765));
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "STRING 2283\n");
      Node node0 = new Node(154);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition((-1001));
      node0.toStringTree();
      Node node1 = new Node((-1317), node0);
      node0.hasChild(node1);
      node0.isTrue();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.isVoid();
      node2.srcrefTree(node1);
      node2.getSideEffectFlags();
      node0.isEmpty();
      node1.isInstanceOf();
      node2.getInputId();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newString(92, "OJ");
      InputId inputId0 = new InputId("OJ");
      node0.setInputId(inputId0);
      node0.setCharno(92);
      node0.setType(1);
      Node node1 = Node.newString(0, "OJ");
      node1.isReturn();
      node0.getInputId();
      node0.isQuotedString();
      node0.getDirectives();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(2293);
      node0.getLineno();
      Node node1 = new Node(30, node0);
      node0.hasChild(node1);
      Node node2 = Node.newString(118, "com.google.common.collect.ImmutableBiMap");
      node0.isTrue();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      node2.putProp(0, locale_FilteringMode0);
      Node node3 = node2.setJSDocInfo((JSDocInfo) null);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node3.isVoid();
      node0.getSideEffectFlags();
      node0.isEmpty();
      node1.isInstanceOf();
      InputId inputId0 = new InputId("com.google.common.collect.ImmutableBiMap");
      node0.isArrayLit();
      node0.isGetterDef();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((-429.0721035134666));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InputId inputId0 = new InputId("");
      inputId0.toString();
      inputId0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Cq-;OA`tAV5)Pua#g.");
      Node.newNumber((double) 56, 49, 42);
      // Undeclared exception!
//      try { 
        node0.clonePropsFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = Node.newString(35, "LEAST_FUNCTION_TYPE");
      node0.setSourceEncodedPositionForTree(43);
      node0.isFor();
      node1.isLabel();
      node0.setSourceFileForTesting(")#gG>#~aa+yRmX");
      Node node2 = Node.newString("LEAST_FUNCTION_TYPE", 16384, 49);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node node3 = new Node(57, 4095, 724);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node1.isVoid();
      node2.isCast();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node4 = new Node(56, nodeArray0);
      node4.isIf();
      Node node5 = new Node(33, node3, (-1036), 13);
      node5.isAssignAdd();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      Node node1 = new Node(102);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.clonePropsFrom(node2);
      Node node3 = Node.newString("mYgEhr: lO:hUl4[0", 4095, 118);
      node3.wasEmptyNode();
      // Undeclared exception!
//      try { 
        Node.newString(39, (String) null, 1, 56);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = new Node(119, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(49, node0, node0, node0, 2, 1);
      node1.hasChild(node0);
      node0.setSourceEncodedPosition(126);
      Node node2 = Node.newString("second new child has existing sibling", (-1568), 56);
      node2.isEquivalentToTyped(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.isVoid();
      node1.isCast();
      node0.isIf();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      Node node1 = new Node(1099, node0, node0, node0, node0);
      Node node2 = new Node(117);
      Node node3 = new Node(16, node1, node2, node1, (-421), 130);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.addChildBefore(node3, node0);
      Node.newString("Object#Key");
      node3.isIn();
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString("#{4-cg{#bZ<7q2asfs", 38, 42);
      node1.isSyntheticBlock();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setLength(634);
      Node node2 = new Node(2);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = node2.useSourceInfoFrom(node0);
      node0.clonePropsFrom(node2);
      Node.newString("#{4-cg{#bZ<7q2asfs", 8, 57);
      node3.wasEmptyNode();
      Node node4 = Node.newString(2, "#{4-cg{#bZ<7q2asfs", 4095, 15);
      node0.isLabelName();
      Node node5 = new Node(29, node4, node1, 57, (-531));
      node5.isNot();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node.extractCharno(9);
      Node node0 = Node.newString("");
      node0.isSetterDef();
      node0.isIn();
      Node node1 = new Node(40, node0, node0);
      Node node2 = Node.newString(692, "4@", 53, 52);
      Node node3 = node1.cloneTree();
      node3.isAnd();
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.isDefaultCase();
      node0.isNoSideEffectsCall();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString(50, "Not(");
      node1.detachChildren();
      node0.isWith();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(52, node0, node0, node0, 286, 49);
      Node node2 = Node.newString(31, "FOR\n");
      node2.isFalse();
      node2.isNumber();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node3 = new Node(263, nodeArray0, 4095, (-1375));
      node3.getLastChild();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.getAncestor(0);
      node1.setLength(1);
      Node node2 = new Node((-872));
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node2.getInputId();
      node2.setInputId((InputId) null);
      node1.toStringTree();
      node2.getSourceOffset();
      node0.getChildCount();
      node1.isGetElem();
      node1.isBlock();
      node1.isNE();
      node1.getStaticSourceFile();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("GT");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder1.append("GT");
      node_FileLevelJsDocBuilder1.append("NUMBER_VALUE_OR_OBJECT_TYPE");
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((-428.07943951243));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InputId inputId0 = new InputId("");
      inputId0.toString();
      inputId0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Cq-;OA`tAV5)Pua#g.");
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newString("P)^w{[]}j'UI@i");
      node0.isSwitch();
      node0.isRegExp();
      node0.isThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(42);
      node0.setJSType((JSType) null);
      node0.getJSDocInfo();
      Node node1 = Node.newNumber((double) 2, 1549, 40);
      Node node2 = node1.cloneTree();
      node1.siblings();
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      Node node4 = new Node(53, 4095, 8);
      node4.checkTreeTypeAwareEqualsImpl(node3);
      node4.isVoid();
      node4.isCast();
      node2.isIf();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newString("Zot(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      node0.isContinue();
      Node.newString("Zot(");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeRegistry0.getType("Zot(");
      jSTypeArray0[0] = null;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      FunctionType functionType0 = jSTypeRegistry1.createConstructorType((JSType) null, false, jSTypeArray0);
      JSType jSType0 = jSTypeRegistry0.getType((StaticScope<JSType>) functionType0, "JA 8VvY`X\"$^TD", "com.google.javascript.rhino.jstype.FunctionType$Kind", 39, 1);
      jSTypeArray0[1] = jSType0;
      jSTypeRegistry0.createParameters(jSTypeArray0);
      // Undeclared exception!
//      try { 
        ImmutableList.of(jSType0, jSType0, jSType0, (JSType) null, (JSType) functionType0, (JSType) functionType0, jSType0, (JSType) null, (JSType) null, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 3
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(47, node0);
      node0.setJSType((JSType) null);
      node1.getJSDocInfo();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      Node node2 = Node.newString(4095, "STRING_KEY\n");
      node2.putIntProp(112, (-1));
      node0.isWith();
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString("#{4-cg{#bZ<7q2asfs", 38, 42);
      node1.isSyntheticBlock();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.children();
      node1.checkTreeEqualsImpl(node0);
      node0.isVarArgs();
      node1.getChangeTime();
      Node node2 = Node.newNumber((double) 57);
      node0.setVarArgs(false);
      Node node3 = Node.newString(13, "#{4-cg{#bZ<7q2asfs");
      node3.setOptionalArg(true);
      node2.getQualifiedName();
//      try { 
        node3.setDouble((-3434.3287));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NE #{4-cg{#bZ<7q2asfs [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000007] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(440, 440, 31);
      nodeArray0[0] = node0;
      node0.cloneNode();
      Node node1 = new Node(31, nodeArray0, 12, 32);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.putIntProp(2935, (-2020));
      Node.newNumber(1115.0583608965, 115, 38);
      Node node2 = null;
//      try {
        node2 = new Node(440, node1, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((-428.07943951243));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InputId inputId0 = new InputId("");
      inputId0.toString();
      inputId0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Cq-;OA`tAV5)Pua#g.");
      node0.setInputId(inputId0);
      node0.toStringTree();
      node0.getSourceOffset();
      node0.getChildCount();
      node0.isGetElem();
      Node node1 = Node.newNumber(912.970723095);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      node0.setSourceEncodedPositionForTree((-1773));
      Node node2 = new Node(43, node1, node1, 57, 0);
      // Undeclared exception!
//      try { 
        node2.addChildToBack(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(1245);
      node0.isFalse();
      Node node1 = Node.newString("e>t (01D_::)/");
      node1.isEmpty();
      node0.isAnd();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString("#{4-cg{#bZ<7q2asfs", 38, 42);
      node1.isSyntheticBlock();
      Node.newNumber(0.0);
      Node node2 = new Node((-2278), 2, 1);
      node2.isObjectLit();
      Node node3 = Node.newNumber((double) 48);
      node3.setChangeTime(8);
      Node node4 = Node.newString(47, "#{4-cg{#bZ<7q2asfs", 3097, 51);
      node4.isComma();
//      try { 
        node3.setString("\"$kP/![!RD");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 48.0 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000006] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.getAncestor(0);
      node1.setLength(1);
      Node node2 = new Node((-872));
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = node1.useSourceInfoFrom(node2);
      Node node4 = node2.clonePropsFrom(node3);
      Node node5 = Node.newString("Object#Key", 51, 39);
      node5.wasEmptyNode();
      Node.newString(55, "Object#Element", 49, 43);
      node0.isLabelName();
      Node node6 = new Node(3729, node3, node4, (-1027), (-938));
      node5.isNot();
      node3.cloneNode();
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      Node node1 = new Node(1245);
      node1.getInputId();
      node0.isComma();
      node1.isSetterDef();
      node0.isIf();
      node0.isAssignAdd();
      Node.newString(3442, "\"DDWOMBZ5|C!<R");
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.hasChild(node1);
      Node node2 = Node.newString(52, "com.google.common.collect.ImmutableBiMap");
      node1.isTrue();
      node2.setChangeTime(1);
      node2.isComma();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node3 = Node.newString(2152, "Object#Key");
      node3.setString("com.google.common.collect.ImmutableBiMap");
      node1.getSideEffectFlags();
      node1.isDelProp();
      node1.isParamList();
      node2.isOr();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(46);
      int int0 = Node.LAST_PROP;
      node0.toStringTree();
      Node node1 = new Node(47, node0);
      node0.hasChild(node1);
      node1.isEquivalentTo(node0, false, false, false);
      node0.checkTreeEquals(node1);
      // Undeclared exception!
//      try { 
        node1.addChildrenAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition((-2339));
      node0.setJSType((JSType) null);
      node0.getJSDocInfo();
      Node.newString("BByKn{");
      // Undeclared exception!
//      try { 
        node0.isEquivalentToShallow((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[0];
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(153, node0, node0);
      Node node2 = new Node(57, node1, node1, node1);
      node2.getLength();
      Node node3 = Node.newString("\"DDWOMBZ5|C!<R");
      node1.hasChild(node3);
      node1.cloneNode();
      node0.getCharno();
      node2.siblings();
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newString("P)^w{[]}j'UI@i");
      node0.isQuotedString();
      node0.isRegExp();
      node0.isThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1);
      node0.setJSType((JSType) null);
      node0.getJSDocInfo();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node node1 = Node.newString(38, "P)^w{[]}j'UI@i");
      node1.putIntProp(100, 46);
      node1.isWith();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newString(147, "j~");
      node0.getLength();
      node0.isBlock();
      Node node1 = Node.newString("P)^w{[]}j'UI@i");
      node0.setQuotedString();
      node0.isDo();
      Node node2 = new Node(1166);
      node2.getStaticSourceFile();
      Node node3 = Node.newString("Kt?!:[@w9EdvGxW?!=");
      node1.addChildrenToFront(node3);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(102);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got GETTER_DEF
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("ASSIGN_MUL");
      node0.setCharno(372857);
      node0.setString("ASSIGN_MUL");
      Node node1 = new Node(50, node0);
      node0.isNE();
      node1.isGetterDef();
      node0.isQuotedString();
      node1.removeProp(256);
      node0.addSuppression("com.google.common.collect.Collections2");
      node1.wasEmptyNode();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(57, nodeArray0, 55, 1);
      Node node3 = new Node(2);
      Node node4 = null;
//      try {
        node4 = new Node(1, node3, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = new Node(1765);
      Node node1 = Node.newString(47, ": ", 31, 713);
      node1.putIntProp(0, (-879));
      node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = new Node((-79));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node1.isEquivalentTo(node0, false, false, true);
      node0.getIndexOfChild(node1);
      node0.checkTreeEquals(node1);
      node1.setChangeTime(38);
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((-428.07943951243));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InputId inputId0 = new InputId("");
      inputId0.toString();
      inputId0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Cq-;OA`tAV5)Pua#g.");
      node0.setInputId(inputId0);
      node0.toStringTree();
      node0.getSourceOffset();
      node0.getChildCount();
      Node node1 = Node.newString((-129), "K(bcO-m^+dp`/f`E;");
      node1.hasChild(node0);
      Node node2 = Node.newString((-2959), "K(bcO-m^+dp`/f`E;");
      Node node3 = new Node(77, node1);
      node3.isThrow();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.isVoid();
      node1.isDec();
      node1.wasEmptyNode();
      node1.isGetProp();
      node2.setString("InputId: ");
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(57, "");
      node0.setSourceEncodedPositionForTree(1474);
      node0.getInputId();
      node0.isComma();
      Node node1 = Node.newNumber(51.0, 152, 53);
      Node node2 = node0.cloneTree();
      node1.siblings();
      node0.getString();
      node1.siblings();
      node2.isQualifiedName();
      node0.getLength();
      node2.isBlock();
      Node.mergeLineCharNo((-1107), 4095);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2046);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = Node.newString(91, "OJ");
      node0.setCharno(91);
      node0.isOnlyModifiesArgumentsCall();
      node0.isAdd();
      node0.toStringTree();
      node0.isTry();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = new Node(56, node0, node0, node0, node0, 9, (-168));
      Node.NodeMismatch node_NodeMismatch1 = new Node.NodeMismatch(node1, node1);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      // Undeclared exception!
//      try { 
        node0.removeChild(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = new Node(115);
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isNull();
      node0.toStringTree();
      node0.isHook();
      node0.getAncestor(1939);
      Node.newString(56, "P)^w{[}j'UI@i");
//      try { 
        node0.setDouble(179.010478);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FOR 0 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("com.google.common.collect.Collections2");
      node0.setJSType((JSType) null);
      node0.setString("P)^w{[}j'UI@i");
      node0.getJSDocInfo();
      Node node1 = Node.newString("K(bcO-m^+dp`/f`E;");
      node0.isEquivalentToShallow(node1);
      node1.addChildToFront(node0);
      ImmutableList<UnknownType> immutableList0 = ImmutableList.of();
      ImmutableList<UnknownType> immutableList1 = ImmutableList.copyOf((Collection<? extends UnknownType>) immutableList0);
      ImmutableList.copyOf((Iterable<? extends JSType>) immutableList1);
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = Node.newString(64, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getLength();
      node0.isBlock();
      node0.siblings();
      node0.getType();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(35, node0, node0);
      node1.isAnd();
      node1.isLocalResultCall();
      node0.getIntProp(43);
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("com.google.common.collect.Collections2");
      node0.setJSType((JSType) null);
      node0.getJSDocInfo();
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      node0.isTry();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = new Node(42, node0, node0, node0, node0, (-2182), 102);
      Node.NodeMismatch node_NodeMismatch1 = new Node.NodeMismatch(node1, node0);
      node_NodeMismatch1.equals(node0);
      node1.removeChild(node0);
      node0.isWhile();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.isThis();
      Node.newString(15, "FOR 0\n", 52, 1204);
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = Node.newString(115, "Not(");
      node0.isStringKey();
      node0.isAssign();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newNumber(1741.61135874034);
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      Node node1 = Node.newString("FOR Not( 0\n", 29, 47);
      node0.isVoid();
      node0.isQuotedString();
      node1.isCast();
      node1.detachChildren();
      node1.putIntProp((-1000), 39);
      Node.extractCharno(0);
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(52, node0, node0, node0, 286, 49);
      Node node2 = Node.newString(43, "FOR\n");
      node1.hasChild(node2);
      Node node3 = Node.newString(1685, "Not(");
      node1.isThrow();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isVoid();
      node0.isCast();
      node3.isContinue();
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((-428.07943951243));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InputId inputId0 = new InputId("");
      inputId0.toString();
      inputId0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Cq-;OA`tAV5)Pua#g.");
      node0.setInputId(inputId0);
      node0.toStringTree();
      node0.getSourceOffset();
      node0.getChildCount();
      node0.isGetElem();
      node0.isBlock();
      node0.isNE();
      node0.getStaticSourceFile();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append((String) null);
      node_FileLevelJsDocBuilder0.append("com.google.common.collect.Iterators$3");
      node_FileLevelJsDocBuilder0.append("P)^w{[}j'UI@i");
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.hasChild(node1);
      Node node2 = Node.newString(52, "com.google.common.collect.ImmutableBiMap");
      node1.isTrue();
      node2.setChangeTime(1);
      Node.newNumber((double) 0, 29, 8);
      Node node3 = node0.cloneTree();
      node3.siblings();
      node2.siblings();
      node2.isQualifiedName();
      Node.newNumber((-53.6098));
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(64, "<");
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(51, node0, node0, node0, node0, 125, 51);
      node1.isVarArgs();
      node0.addChildrenToFront(node1);
      node0.setSourceEncodedPosition(43);
      node0.toString();
      Node.mergeLineCharNo((-4220), 155);
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1781, 1781);
      node0.isOptionalArg();
      // Undeclared exception!
//      try { 
        node0.srcrefTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = Node.newString(547, "OJ");
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = new Node((-79));
      Node node1 = new Node(1685, 423, 52);
      node1.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getInputId();
      node1.setInputId((InputId) null);
      Node node2 = Node.newNumber((-110.440168116), 2839, 40);
      node2.setSourceEncodedPosition(64);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = Node.newString("P)^w{[]}j'UI@i");
      node0.isQuotedString();
      node0.isRegExp();
      node0.isThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(31);
      Node node1 = Node.newNumber((-2267.494695));
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isReturn();
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp(2772);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 2772
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[0];
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(153, node0, node0);
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = Node.newString(3776, "OJ", 3776, 3776);
      node0.setCharno(3776);
      int int0 = Node.QUOTED_PROP;
      node0.setSourceEncodedPosition(51);
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3776
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = new Node(115, (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(52, node0, node0, node0, 286, 49);
      Node node2 = Node.newString(43, "FOR\n");
      node1.hasChild(node2);
      Node.newString(1685, "Not(");
      node1.isThrow();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isVoid();
      node0.isCast();
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), (-2339));
      Node node1 = new Node(54, node0, node0);
      node0.getJsDocBuilderForNode();
      node0.isTrue();
      Node node2 = null;
//      try {
        node2 = new Node((-1396), node1, node1, node1, node0, 35, 126);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.hasChild(node1);
      Node node2 = Node.newString(52, "com.google.common.collect.ImmutableBiMap");
      node1.isTrue();
      node2.setChangeTime(1);
      node2.isComma();
      Node node3 = Node.newString(2152, "Object#Key");
      node3.setString("com.google.common.collect.ImmutableBiMap");
      node1.getSideEffectFlags();
      node1.isDelProp();
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.getDirectives();
      node0.mayMutateArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(49, node0, node0, node0, node0);
      node1.isOptionalArg();
      node1.isFromExterns();
      node0.isFalse();
      node1.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, true, false, true);
      node0.isWith();
      node1.removeFirstChild();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newNumber(1115.0583608965, 2, 47);
      node0.getType();
      node0.isSyntheticBlock();
      Node node1 = new Node(2);
      Node node2 = new Node(37, node0, node0, node1, node0);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.children();
      node1.checkTreeEqualsImpl(node0);
      node2.isVarArgs();
      node0.getChangeTime();
      Node node3 = Node.newNumber((double) 4);
      node1.setVarArgs(false);
      node1.setOptionalArg(false);
      node1.isDo();
      Node node4 = new Node(2);
      Node node5 = new Node((-2710), node3);
      node5.addChildrenToFront(node4);
      node2.setSideEffectFlags(47);
      node3.isOnlyModifiesThisCall();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = new Node(325, 325, 325);
      node0.setOptionalArg(false);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.getJsDocBuilderForNode();
      node0.removeFirstChild();
      node0.isInstanceOf();
      node0.isFor();
      // Undeclared exception!
//      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(57, "");
      node0.setSourceEncodedPositionForTree(1474);
      node0.getInputId();
      node0.isVar();
      node0.isFor();
      node0.isIf();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = Node.newString(115, "Not(");
      node0.isStringKey();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      Node node1 = Node.newString("FOR Not( 0\n", 29, 47);
      node0.hasChild(node1);
      node0.isComma();
      node1.setString("K(bcO-m^+dp`/f`E;");
      node1.getSideEffectFlags();
      node1.isDelProp();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = new Node(1939);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.checkTreeEquals(node1);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.hasChild(node1);
      Node node2 = Node.newString(52, "com.google.common.collect.ImmutableBiMap");
      node1.isTrue();
      node0.setJSDocInfo((JSDocInfo) null);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.isVoid();
      node1.isQuotedString();
      node0.isCast();
      node1.detachChildren();
      node0.putIntProp((-1551), 15);
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = new Node((-79));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo1);
      Node node2 = Node.newString((-2922), "com.google.common.collect.ImmutableBiMap");
      node2.isTrue();
      Node node3 = node0.setJSDocInfo(jSDocInfo0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node3.isVoid();
      node3.isCast();
      node1.detachChildren();
      node3.putIntProp(57, (-1296));
      node0.isFunction();
      node0.isLocalResultCall();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = new Node(243);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.setSourceEncodedPosition(8);
      node1.setJSType((JSType) null);
      Node.newString("K(bcO-m^+dp`/f`E;");
      node1.isEquivalentToShallow(node0);
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.getDirectives();
      node0.mayMutateArguments();
      node0.getJSDocInfo();
      node0.isOptionalArg();
      node0.isFalse();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node0.isTry();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      Node node2 = new Node(1233, node0, node0, node0, node0, (-862048943), 47);
      node_NodeMismatch0.equals(node2);
      node0.isWhile();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isThis();
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node3.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition((-1183));
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(47, node0);
      node0.hasChild(node1);
      Node node2 = Node.newString(100, "com.google.common.collect.ImmutableBiMap");
      node1.isTrue();
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node0.isVoid();
      node0.isCast();
      node3.detachChildren();
      node2.putIntProp((-1296), (-1296));
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.getAncestor(0);
      node1.setLength(1);
      Node node2 = new Node((-872));
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = node1.useSourceInfoFrom(node2);
      Node node4 = node2.clonePropsFrom(node3);
      Node.newString("#uU%D$MR", 122, 4095);
      Node.newString("Object#Element");
      // Undeclared exception!
//      try { 
        node4.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -872
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = new Node((-938), 1074, 1074);
      Node node1 = new Node(1245);
      Node node2 = new Node(4095, node1, node0, node0, 49, 4);
      Node node3 = Node.newString("\"DDWOMBZ5|C!<R", 4095, 12);
      node3.hasChild(node2);
      Node node4 = Node.newString(51, "null");
      node3.isTrue();
      Node node5 = Node.newString(47, "\"DDWOMBZ5|C!<R", 47, 8);
      node5.getSourceFileName();
      node5.checkTreeTypeAwareEqualsImpl(node3);
      node4.isTrue();
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newString("", (-938), 1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      node0.setLength(2);
      Node node1 = new Node(2);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = node0.useSourceInfoFrom(node1);
      // Undeclared exception!
//      try { 
        node2.clonePropsFrom(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Node has existing properties.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      Node node1 = new Node(124, node0, 46, 30);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isEquivalentTo(node2);
      node0.putBooleanProp(54, true);
      node2.isInc();
      node2.toStringTree();
      // Undeclared exception!
//      try { 
        node0.replaceChild(node1, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newNumber((-1192.8798369749102), 1278, 1278);
      Node node1 = new Node(1278, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(102, node1, node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("com.google.common.collect.Collections2");
      node0.setJSType((JSType) null);
      node0.getJSDocInfo();
      Node node1 = Node.newString("K(bcO-m^+dp`/f`E;");
      node0.isEquivalentToShallow(node1);
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      Node node1 = new Node(128, node0, 46, 30);
      Node node2 = new Node(29);
      node1.isFalse();
      Node node3 = new Node(40, node1);
      node1.hasChild(node3);
      node1.isNumber();
      node1.getChildBefore(node0);
      Node node4 = node3.getLastChild();
      node4.setIsSyntheticBlock(false);
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newNumber(4583.191139565);
      node0.getSourceOffset();
      node0.putProp((-1387), "^w~mq:f1&]");
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = Node.newString("P)^w{[}j'I@i");
      node0.isQuotedString();
      node0.isRegExp();
      node0.isThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setVarArgs(false);
      Node node1 = null;
//      try {
        node1 = new Node(52, (Node[]) null, 53, 4359);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber(0.7);
      Node node1 = new Node(43, node0, node0, node0);
      Node node2 = new Node(43, node1, node1);
      node1.getJsDocBuilderForNode();
      node1.isTrue();
      Node node3 = null;
      Node node4 = null;
//      try {
        node4 = new Node(88, (Node) null, node2, node2, (Node) null, 53, 12);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newString(" kE)$_Rbtc]]m19");
      Node node1 = new Node(1941, node0, 15, 91);
      node0.cloneTree();
      node0.isLocalResultCall();
      node1.getQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // com.google.javascript.rhino.jstype.UnionType cannot be cast to com.google.javascript.rhino.jstype.FunctionType
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      UnknownType unknownType0 = mock(UnknownType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(unknownType0).toString();
      UnknownType unknownType1 = mock(UnknownType.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(unknownType1).isEmptyType();
      doReturn((String) null, (String) null, (String) null, (String) null).when(unknownType1).toString();
      UnknownType[] unknownTypeArray0 = new UnknownType[5];
      UnknownType unknownType2 = mock(UnknownType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(unknownType2).toString();
      unknownTypeArray0[0] = unknownType2;
      unknownTypeArray0[1] = unknownType0;
      unknownTypeArray0[2] = unknownType0;
      unknownTypeArray0[3] = unknownType1;
      unknownTypeArray0[4] = unknownType1;
      ImmutableList<UnknownType> immutableList0 = ImmutableList.of(unknownType0, unknownType0, unknownType0, unknownType0, unknownType0, unknownType1, unknownType0, unknownType0, unknownType1, unknownType0, unknownType1, unknownType0, unknownTypeArray0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList1);
      Node node1 = new Node(2815, node0, node0, node0);
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      Node node1 = new Node(4095, node0, (-2339), (-797));
      Node node2 = new Node(1924);
      Node node3 = node2.cloneTree();
      Node node4 = null;
//      try {
        node4 = new Node(43, node3, node3, node0, 51, 4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isSyntheticBlock();
      node0.isUnscopedQualifiedName();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\"DDWOMBZ5|C!<R");
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0);
      node0.appendStringTree(outputStreamWriter0);
      node0.isBlock();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = Node.newString("P)^w{[}j'I@i");
      node0.isQuotedString();
      node0.isRegExp();
      node0.isThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(42);
      node0.setCharno(372827);
      node0.setString("P)^w{[}j'I@i");
      node0.isNE();
      node0.isReturn();
      node0.removeProp(42);
      node0.addSuppression("zk-*88_AuGr");
      node0.setQuotedString();
      node0.isQuotedString();
      node0.isDo();
      Node node1 = new Node(0);
      node0.addChildrenToFront(node1);
      node1.isOnlyModifiesThisCall();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags((-787));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("", (-938), 1074);
      node0.isQuotedString();
      int int0 = 57;
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isSyntheticBlock();
      node0.isUnscopedQualifiedName();
      node0.isBlock();
      node0.isCatch();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(57, "");
      node0.isVarArgs();
      Node node1 = Node.newString((-776), "");
      node1.isEquivalentTo(node0, false, false, true);
      // Undeclared exception!
//      try { 
        node0.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 57
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = Node.newString(39, "");
      node0.addSuppression("com.google.common.base.CharMatcher$Or");
      node0.isWith();
      // Undeclared exception!
//      try { 
        node0.setDouble(39);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = new Node(1074, (-938), (-938));
      node0.checkTreeEqualsImpl(node0);
      node0.isFalse();
      node0.hasChild(node0);
      node0.getAncestor(36);
      Node.newString(13, "bYACbm8A");
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = Node.newString("", (-938), 1074);
      node0.isQuotedString();
      node0.removeChildren();
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      node0.getBooleanProp((-6));
      Node node1 = Node.newString(43, "");
      Node node2 = Node.newNumber(1260.198563558452, 42, 38);
      Node node3 = new Node(1, node0, 76, 64);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node1.isTrue();
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newString(115, "Not(");
      node0.isStringKey();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      Node node1 = Node.newString("FOR Not( 0\n", 29, 47);
      node0.hasChild(node1);
      Node node2 = Node.newString(29, "Not(");
      node1.isTrue();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.isVoid();
      node1.isCast();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = new Node(232);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, false, false, false);
      node0.isEquivalentToTyped(node1);
      node1.isLabel();
      Node node2 = new Node(341, node1, node1, node1, node1);
      node2.getLength();
      node0.hasChild(node2);
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = new Node(1765);
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = new Node((-4776));
      Node node1 = new Node(16, node0, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      Node node2 = null;
//      try {
        node2 = new Node((-4776), node0, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = Node.newString("1");
      Node node1 = new Node(1023, node0, (-1220), 56);
      Node node2 = node1.cloneTree();
      node1.isLocalResultCall();
      node0.getQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      node1.setJSType(functionType0);
      node2.isQuotedString();
      // Undeclared exception!
//      try { 
        node1.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1023
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(43, "");
      node0.setSourceEncodedPositionForTree(36);
      node0.getInputId();
      node0.isWith();
      node0.removeFirstChild();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = new Node(243);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, true, false, true);
      node1.checkTreeEquals(node0);
      // Undeclared exception!
//      try { 
        node1.addChildrenAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = new Node(232, 232, 232);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isObjectLit();
      node0.isEquivalentToTyped(node1);
      node1.isLabel();
      Node node2 = Node.newString("B9K{0y,'wH!d", 47, 627);
      Node node3 = new Node(12, node2);
      node3.getLength();
      node0.hasChild(node3);
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = new Node(325, 325, 325);
      node0.setOptionalArg(false);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(38, nodeArray0);
      node0.hasChild(node1);
      node1.hasMoreThanOneChild();
      node0.isNE();
      Node node2 = node1.cloneNode();
      node0.isQualifiedName();
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isNE();
      node0.isDebugger();
      Node node1 = new Node(126);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newString((-580), " is not a string node", 151, (-580));
      Node node1 = new Node(1, node0, node0, node0, 29, 50);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.getAncestors();
      node0.setOptionalArg(false);
      node1.hasChild(node0);
      node0.hasMoreThanOneChild();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.isNE();
      node0.removeFirstChild();
      node2.isDebugger();
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = new Node(232);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.getJsDocBuilderForNode();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(30, node1, node0, 36, 13);
      Node node3 = null;
//      try {
        node3 = new Node(64, node0, node1, node2, 2, 751619276);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isQuotedString();
      Node node1 = Node.newString("ANY", 2006, 430);
      node1.mayMutateGlobalStateOrThrow();
      node0.isOptionalArg();
      node1.setVarArgs(false);
      Node node2 = Node.newString(4, "\"DDWOMBZ5|C!<R", 42, 43);
      node2.isExprResult();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node.newString("Object#Key");
      Node node0 = Node.newString("Object#Key", 37, 1);
      Node node1 = new Node(52, node0, node0, (-613), 36);
      node1.isNE();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = Node.newNumber(1115.0583608965, 2, 47);
      node0.getType();
      node0.isSyntheticBlock();
      Node node1 = new Node(2);
      Node node2 = new Node(37, node0, node0, node1, node0);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.children();
      node1.checkTreeEqualsImpl(node0);
      node2.isVarArgs();
      node0.getChangeTime();
      Node node3 = Node.newNumber((double) 4);
      Node node4 = Node.newString(12, "xyG?+8ph7#FR=@J({");
      Node.newString(8, "!NPy3fmNJID");
      node3.hasChildren();
      node4.getJsDocBuilderForNode();
      node3.removeFirstChild();
      node3.isInstanceOf();
      node3.isFor();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = Node.newString((-1489), "/zFcVQWC'Bj?1sP", (-1489), (-1489));
      node0.type = (-1489);
      Node node1 = node0.cloneNode();
      Node node2 = new Node((-1489), node0, node0);
      node1.isCast();
      node0.isInstanceOf();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      // Undeclared exception!
//      try { 
        modificationVisitor0.caseUnionType(unionType0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = new Node(3307, (-1257), 3307);
      char[] charArray0 = new char[9];
      charArray0[0] = 's';
      charArray0[1] = 'T';
      charArray0[2] = 'G';
      charArray0[3] = '4';
      charArray0[4] = '6';
      charArray0[5] = 'X';
      charArray0[6] = '0';
      charArray0[7] = 'a';
      charArray0[8] = 'B';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
//      try { 
        node0.appendStringTree(charBuffer0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3307
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isQuotedString();
      Node node1 = Node.newString("", 1930, 60);
      node1.mayMutateGlobalStateOrThrow();
      node0.isOptionalArg();
      node1.setVarArgs(false);
      Node node2 = Node.newString(2100, ">");
      node0.isDo();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(4095, "I:;<|B>dU^}) 4");
      node0.isReturn();
      Node node2 = new Node((-2339), node0, node1, node1, node0, 1, 3837);
      node2.srcref(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node2.isFalse();
      Node node3 = Node.newString(32, "^r;=<?#ls");
      node3.isQuotedString();
      // Undeclared exception!
//      try { 
        node2.addChildrenToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.getDirectives();
      node0.mayMutateArguments();
      node0.getJSDocInfo();
      Node node1 = new Node(49, node0, node0, node0, node0);
      node1.isOptionalArg();
      node1.isFromExterns();
      node0.isFalse();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node0.isEquivalentTo(node1, true, true, true);
      node1.isIn();
      Node node3 = Node.newString(39, "-gu,f");
      node3.isEquivalentToTyped(node1);
      node3.isDelProp();
      Node.newString(53, "-gu,f", 39, 39);
      node0.isLabelName();
      node2.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newString("", 1074, (-580));
      node0.isQuotedString();
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition((-100));
      node0.getLineno();
      node0.toStringTree();
      node0.getBooleanProp((-938));
      Node node1 = null;
//      try {
        node1 = new Node((-800), node0, (Node) null, (Node) null, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      Node node1 = new Node(124, node0, 46, 30);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isEquivalentTo(node2);
      node0.putBooleanProp(54, true);
      node2.isInc();
      node2.toStringTree();
      node1.putProp(1953, (Object) null);
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags((-1981));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got EMPTY
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 102);
      Node node1 = new Node(124, node0, 46, 30);
      Node node2 = node1.copyInformationFromForTree(node0);
      // Undeclared exception!
//      try { 
        node2.isEquivalentTo((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = Node.newString("", (-985), (-985));
      node0.setType((-30));
      Node node1 = new Node(299, node0);
      node1.isSyntheticBlock();
      node1.isExprResult();
      Node node2 = node0.cloneTree();
      node2.isHook();
      node2.isObjectLit();
      node1.setLength(54);
      node2.setIsSyntheticBlock(false);
      Node node3 = node1.cloneNode();
      node3.isBlock();
      node3.copyInformationFromForTree(node1);
      Node node4 = Node.newString(2232, "");
      node4.getAncestor(51);
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("", 299, 2993);
      Node node1 = new Node(40, node0, 125, 43);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.isEquivalentTo(node2);
      node1.putBooleanProp(43, false);
      node1.isArrayLit();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags((-1082));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = new Node(232);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, true, false, true);
      node0.isEquivalentToTyped(node1);
      jSDocInfo0.documentParam("", "");
      node0.isLabel();
      Node node2 = Node.newString("B9K{0y,'wH!d", 12, 148);
      node2.copyInformationFromForTree(node0);
      node0.getLength();
      node2.hasChild(node1);
      node2.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R");
      // Undeclared exception!
//      try { 
        node0.copyInformationFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = Node.newString((-73), "");
      node0.setIsSyntheticBlock(true);
      Node node1 = new Node((-73), node0, node0);
      // Undeclared exception!
//      try { 
        node1.replaceChild(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newString(2923, "Q!z`ra", 2923, (-122));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(0, nodeArray0, 54, 116);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("", "", 49, 4096);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = Node.newNumber(1115.0583608965, 2, 47);
      node0.getType();
      node0.isSyntheticBlock();
      Node node1 = new Node(2);
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isNull();
      Node node2 = new Node(16, node0, node0, 1, 15);
      Node node3 = null;
//      try {
        node3 = new Node(29, node2, node1, node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2864));
      node1.isAssignAdd();
      node0.setWasEmptyNode(false);
      node1.setSourceEncodedPositionForTree(43);
      node0.isEquivalentTo(node1, false, false, false);
      node0.isQuotedString();
      Node node2 = node1.cloneNode();
      node2.isGetterDef();
      node1.getLength();
      node2.hasChild(node0);
      node1.siblings();
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node.newString(91, "OJ");
      Node node0 = Node.newString("H3WH3@*Cg", 126, 46);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      Node node1 = new Node(40, node0, node0);
      nodeArray0[1] = node1;
      Node node2 = null;
//      try {
        node2 = new Node(54, nodeArray0, 49, (-1878));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      String string0 = " is not a string node";
      Node node0 = Node.newString((-580), " is not a string node", 151, (-580));
      Node node1 = new Node(1, node0, node0, node0, 29, 50);
      int int0 = (-1314);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string1 = null;
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[8];
      JSTypeNative jSTypeNative0 = JSTypeNative.RANGE_ERROR_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      node1.useSourceInfoFromForTree(node0);
      node0.copyInformationFromForTree(node1);
      JSTypeNative jSTypeNative2 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.STRING_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSTypeNative jSTypeNative4 = JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative4;
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      Node node1 = new Node(124, node0, 46, 30);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isEquivalentTo(node2);
      node0.putBooleanProp(54, true);
      node2.setSourceFileForTesting("pz}[%");
      node2.isInc();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags((-1981));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got EMPTY
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node.extractCharno(9);
      Node node0 = Node.newString("");
      node0.isTypeOf();
      node0.isIn();
      node0.isDo();
      Node node1 = new Node(40, node0, node0);
      Node.newString("\"DDWOMBZ5|C!<R", 84, 32);
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = Node.newString((-580), "31kZ6+c[r");
      node0.getStaticSourceFile();
      Node node1 = new Node(1473);
      node1.isNew();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.headSet("31kZ6+c[r", false);
      node1.setDirectives(treeSet0);
      node_SideEffectFlags0.setThrows();
      node2.isEquivalentTo(node0);
      node2.addChildrenToBack(node0);
      Node node3 = Node.newNumber((double) 57, (-429), 2);
      node3.getDirectives();
      node0.cloneTree();
      node0.siblings();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node3;
      Node node4 = Node.newString("", 4095, 4);
      nodeArray0[2] = node4;
      Node node5 = new Node(93, nodeArray0);
//      try { 
        node5.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // ASSIGN_ADD 0 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(43, "");
      node0.setSourceEncodedPositionForTree(1474);
      node0.getInputId();
      node0.isComma();
      node0.isSetterDef();
      node0.isIf();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", (-94), (-94));
      Node node1 = new Node((-94), node0, node0);
      node1.getJsDocBuilderForNode();
      node1.isHook();
      Node node2 = new Node(15, node1, node1, node1, node1, (-3301), 8);
      node2.isObjectLit();
      node1.setLength(2688);
      node2.setIsSyntheticBlock(false);
      Node.newString(36, "com.google.javascript.rhino.jstype.TemplateType", 47, 36);
      node2.addSuppression("");
      Node node3 = node2.cloneTree();
      node3.toString(false, false, false);
      Node node4 = new Node(4095, (-1943), (-632));
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags((-3001));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = Node.newString("VU$R", (-938), 1042);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      node0.hasChild(node0);
      Node node1 = Node.newString(43, "");
      node0.isTrue();
      node1.setJSDocInfo((JSDocInfo) null);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isVoid();
      node1.isCast();
      node0.detachChildren();
      node1.putIntProp(1364, 51);
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      Node node1 = new Node(47, node0, node0, node0, 55, 90);
      node0.hasChild(node1);
      Node node2 = Node.newString(29, "Not(");
      node1.isTrue();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.isVoid();
      node1.isCast();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newString("N");
      Node node1 = new Node(30, node0, node0, (-294), 40);
      node1.isName();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(147);
      node1.isAssignAdd();
      node1.setWasEmptyNode(false);
      node1.setSourceEncodedPositionForTree((-292));
      node1.isComma();
//      try { 
        node0.setString("x4_6:O1eO");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // PARAM_LIST is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString((-580), " is not a string node", 151, (-580));
      Node node1 = new Node(1, node0, node0, node0, 29, 50);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setOptionalArg(false);
      node1.hasChild(node0);
      node0.hasMoreThanOneChild();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.isNE();
      node0.removeFirstChild();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = new Node(232);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, true, false, true);
      node0.isEquivalentToTyped(node1);
      node0.isLabel();
      Node node2 = Node.newString("B9K{0y,'wH!d", 19, (-1497));
      node2.getLength();
      node0.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R");
      Node node1 = new Node(110, node0, node0, 2226, 40);
      node1.isName();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = Node.newString(2249, "6,N_P^|Kg3bEErK");
      Node node1 = new Node(38, node0);
      Node.newNumber(51.0, 362, 2);
      node1.cloneTree();
      node0.siblings();
//      try { 
        node1.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = Node.newString("P)^w{[}j'I@i");
      Node node1 = new Node(3849, node0, node0, 37, 36);
      Node node2 = Node.newString(4095, "\"DDWOMBZ5|C!<R");
      node2.isReturn();
      Node node3 = node1.srcref(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node4 = Node.newString("Fo", 8, 8);
      node4.isQuotedString();
      node3.getJSDocInfo();
      Node node5 = new Node(1, node1, node4, 50, 695);
      node5.getDirectives();
      node4.isEmpty();
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = Node.newString(91, "OJ");
      node0.setCharno(91);
      node0.setType(1);
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.copyInformationFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString(37, "Not(");
      Node node2 = new Node(36, node1);
      node1.isEquivalentTo(node2, true, true, false);
      Node.newString("Not(", 1685, 4096);
      Node.newString("Not(");
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING Not( is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(43, "");
      node0.toString();
      Node node1 = Node.newNumber(1260.198563558452, 42, 38);
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2864));
      node1.isAssignAdd();
      node0.setWasEmptyNode(false);
      node1.setSourceEncodedPositionForTree(43);
      node1.isComma();
      node0.setString("\"DDWOMBZ5|C!<R");
      node0.isDelProp();
      Node[] nodeArray0 = new Node[2];
      Node node2 = Node.newNumber((double) 50, 117, 57);
      nodeArray0[0] = node2;
      Node node3 = Node.newNumber((double) 2, 0, (-800));
      node3.setCharno(57);
      nodeArray0[1] = node1;
      Node node4 = new Node(113, nodeArray0);
      node4.isCase();
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      Node node1 = new Node(124, node0, 46, 30);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isEquivalentTo(node2);
      node0.putBooleanProp(54, true);
      node2.isArrayLit();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags((-1981));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got EMPTY
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = Node.newString("EDDWOMBZ5|C!<=A7R", 912, 912);
      node0.mayMutateGlobalStateOrThrow();
      Node.newString(4, "source_file");
      Node node1 = Node.newNumber(1921.5268686174807);
      node1.getDouble();
      int int0 = Node.VAR_ARGS_NAME;
      Set<String> set0 = new TreeSet<String>();
      // Undeclared exception!
//      try { 
        node1.removeChild(node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = Node.newString("", (-938), (-938));
      node0.isWith();
      node0.setLineno((-963));
      node0.getSideEffectFlags();
      node0.getLength();
      node0.getIntProp(13);
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", (-94), (-94));
      Node node1 = new Node((-94), node0, node0);
      node1.getJsDocBuilderForNode();
      node1.isHook();
      Node node2 = new Node(15, node1, node1, node1, node1, (-3301), 8);
      node2.isObjectLit();
      node1.setLength(2688);
      node2.setIsSyntheticBlock(false);
      Node node3 = Node.newString(36, "com.google.javascript.rhino.jstype.TemplateType", 47, 36);
      Node node4 = node2.cloneTree();
      Node node5 = new Node(4095, (-1943), (-632));
      // Undeclared exception!
//      try { 
        node4.replaceChild(node2, node3);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      node0.getBooleanProp(403);
      node0.setVarArgs(true);
      node0.setSourceEncodedPosition(13);
      node0.getLineno();
      node0.toStringTree();
      node0.getBooleanProp(12);
//      try { 
        node0.setDouble(0.0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING Not( 0 [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newNumber(1115.0583608965, 2, 47);
      node0.getType();
      node0.isSyntheticBlock();
      Node node1 = new Node(2);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.children();
      node1.checkTreeEqualsImpl(node0);
      node1.isVarArgs();
      node0.getChangeTime();
      Node node2 = Node.newNumber((double) 4);
      node1.setVarArgs(false);
      node0.useSourceInfoFromForTree(node1);
      // Undeclared exception!
//      try { 
        node0.removeChild(node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), (-2339));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString(37, "Not(");
      node1.isEquivalentTo(node0, false, false, false);
      node1.isIn();
      Node node2 = new Node(37, node1, node0, node0, 47, 1);
      node2.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = new Node(1074);
      node0.getBooleanProp(763);
      Node node1 = new Node((-1558), node0, node0, node0, 403, 1);
      node1.isEquivalentTo(node0, false, true, true);
      node0.isIn();
      Node node2 = Node.newString(49, "2");
      Node node3 = Node.newNumber(0.5);
      node1.isEquivalentToTyped(node3);
      node0.isLabel();
      node2.getLength();
      node2.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      node0.getBooleanProp(8);
      node0.setVarArgs(false);
      node0.setOptionalArg(false);
      node0.getJSDocInfo();
      node0.getQualifiedName();
      Node node1 = Node.newString(1, "");
      node0.setSourceEncodedPositionForTree(39);
      Node node2 = new Node(0, node0, node0);
      node2.isComma();
      node0.setString("");
      node1.isDelProp();
      Node.mergeLineCharNo(55, 15);
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", (-94), (-94));
      Node node1 = new Node((-94), node0, node0);
      node1.getJsDocBuilderForNode();
      node1.isHook();
      Node node2 = null;
//      try {
        node2 = new Node(27, node0, 27, 4095);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = Node.newString("VU$R", (-938), 1074);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(48, node0, node0, node0, 8, 56);
      node0.isGetElem();
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 201, 2734);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      String string0 = " is not a string node";
      Node node0 = Node.newString((-580), " is not a string node", 151, (-580));
      node0.getLineno();
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -580
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = Node.newString((-580), " is not a string node", 151, (-580));
      Node node1 = new Node(1, node0, node0, node0, 29, 50);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.copyInformationFrom(node0);
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 17, (-537));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newString(1073741823, "String node not created with Node.newString", 577, 0);
      Node node1 = node0.cloneTree();
      node1.children();
      node0.removeProp(2838);
      node1.setString("a");
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2864));
      node1.isAssignAdd();
      node0.setWasEmptyNode(false);
      node1.setSourceEncodedPositionForTree(43);
      node1.isComma();
      node0.setString("\"DDWOMBZ5|C!<R");
      node0.isDelProp();
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newString("VU$R", (-938), 1042);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      node0.hasChild(node0);
      Node node1 = Node.newString(43, "");
      node0.isTrue();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isVoid();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", 48, 1652);
      Node node1 = new Node(12, node0, 4095, 2);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isEquivalentTo(node0);
      node1.putBooleanProp(16, true);
      node2.isInc();
      // Undeclared exception!
//      try { 
        node2.getChildBefore(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = new Node(1073741823);
      boolean boolean0 = false;
      node0.setOptionalArg(false);
      node0.getBooleanProp(763);
      Node node1 = new Node(43, node0, node0, node0, node0);
      Node node2 = node0.srcrefTree(node1);
      node1.setOptionalArg(false);
      node1.isFalse();
      Node node3 = null;
//      try {
        node3 = new Node(1686, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.getAncestor(0);
      node1.setLength(1);
      Node node2 = new Node((-872));
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = node1.useSourceInfoFrom(node2);
      Node node4 = node2.clonePropsFrom(node3);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node2;
      nodeArray0[1] = node4;
      nodeArray0[2] = node4;
      nodeArray0[3] = node3;
      Node node5 = Node.newString("Object#Key", 51, 39);
      node5.wasEmptyNode();
      node4.getSourceFileName();
      node4.checkTreeTypeAwareEqualsImpl(node4);
      node1.isTrue();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      String string0 = " is not a string node";
      Node node0 = Node.newString((-580), " is not a string node", 151, (-580));
      Node node1 = new Node(1, node0, node0, node0, 29, 50);
      int int0 = (-1314);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string1 = null;
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[8];
      JSTypeNative jSTypeNative0 = JSTypeNative.RANGE_ERROR_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.STRING_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      node1.cloneTree();
      JSTypeNative jSTypeNative4 = JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative4;
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = Node.newString(") ", 1073741823, 1073741823);
      node0.isQuotedString();
      Node node1 = new Node((-2360));
      node1.isRegExp();
      node1.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(341);
      node0.getLineno();
      Node node2 = Node.newString(46, "var_args_name");
      node2.toStringTree();
      node2.getBooleanProp((-1377));
      Node node3 = Node.newString(15, "SHNE var_args_name\n");
      Node.newNumber((double) 30, 510, 57);
      Node node4 = new Node(46, node0, 43, 32);
      Node node5 = Node.newString("\"DDWOMBZ5|C!<R", 43, (-1633));
      // Undeclared exception!
//      try { 
        node5.addChildAfter(node1, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = new Node(1074);
      node0.getBooleanProp(763);
      Node node1 = new Node(53, node0, node0, 54, 149);
      Node node2 = Node.newString(54, "");
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.getDirectives();
      node0.mayMutateArguments();
      node0.getJSDocInfo();
      Node node1 = new Node(49, node0, node0, node0, node0);
      node1.isOptionalArg();
      node1.isFromExterns();
      node0.isFalse();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node0.isEquivalentTo(node1, true, false, true);
      node1.isIn();
      Node node3 = Node.newString(39, "-gu,f");
      node3.isEquivalentToTyped(node1);
      node1.isLabel();
      node0.getLength();
      node2.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = Node.newString("", 124, 124);
      Node node1 = Node.newNumber((double) 0);
      node0.removeFirstChild();
      node0.setLineno(39);
      node0.isEquivalentTo(node1, true, false, true);
      node1.isQuotedString();
      Node node2 = node1.cloneNode();
      // Undeclared exception!
//      try { 
        node2.isEquivalentToTyped((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = Node.newString("", 124, 124);
      Node node1 = Node.newNumber((double) 0);
      node0.setChangeTime(1);
      node0.removeFirstChild();
      Node node2 = null;
//      try {
        node2 = new Node(42, node1, (Node) null, node1, 90, (-212));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = Node.newNumber(1115.0583608965, 2, 47);
      node0.getType();
      node0.isSyntheticBlock();
      Node node1 = new Node(2);
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isNull();
      node1.isHook();
      node1.getAncestor(4000);
      Node.newString(57, "\"DDWOMBZ5|C!<R");
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = new Node(589, 13, 1640);
      Node node1 = new Node(13, node0);
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no next sibling.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = Node.newString("", (-985), (-985));
      node0.setType((-30));
      Node node1 = new Node(299, node0);
      node1.isSyntheticBlock();
      node1.isExprResult();
      Node node2 = node0.cloneTree();
      node2.isHook();
      node2.isObjectLit();
      node1.setLength(54);
      node2.setIsSyntheticBlock(false);
      Node node3 = node1.cloneNode();
      node1.isGetterDef();
      node0.getLength();
      node1.hasChild(node3);
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      int int0 = (-938);
      Node node0 = new Node((-938));
      // Undeclared exception!
//      try { 
        node0.setString("number");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -938
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      String string0 = "QBBu)6AC";
      Node node0 = Node.newString("QBBu)6AC", 1074, 232);
      Node node1 = new Node(2, node0, 57, 2183);
      node1.copyInformationFromForTree(node0);
      node0.isEquivalentTo(node1);
      node0.putBooleanProp(3195, false);
      node0.isInc();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(307);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = Node.newString(91, "OJ");
      node0.setCharno(91);
      node0.setSourceEncodedPosition(2);
      node0.setType(30);
      Node node1 = Node.newString(4, "OJ");
      node1.getStaticSourceFile();
      node0.isReturn();
      Node node2 = node0.srcref(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isFalse();
      node2.addChildrenToFront(node0);
      int int0 = 46;
      Node node3 = null;
//      try {
        node3 = new Node(31, (Node) null, (Node) null, 57, (-3417));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", (-94), (-94));
      Node node1 = new Node((-94), node0, node0);
      node1.getJsDocBuilderForNode();
      node1.isHook();
      Node node2 = new Node(15, node1, node1, node1, node1, (-3301), 8);
      node2.isObjectLit();
      node1.setLength(2688);
      node2.setIsSyntheticBlock(false);
      Node.newString(36, "com.google.javascript.rhino.jstype.TemplateType", 47, 36);
      node2.cloneTree();
      node0.siblings();
      // Undeclared exception!
//      try { 
        node1.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -94
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = Node.newString(91, "OJ", 91, 91);
      node0.setCharno(91);
      node0.getCharno();
      node0.setSourceEncodedPosition(51);
      node0.setType((-1825));
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("", (-985), (-985));
      node0.setType((-30));
      Node node1 = new Node(299, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = null;
//      try {
        node2 = new Node(1074, node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = Node.newString("", (-938), 1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newNumber((double) 38);
      Node node2 = new Node(2736, node1, node0, node0, node1);
      node2.isSyntheticBlock();
      node2.isExprResult();
      Node node3 = node0.cloneTree();
      node3.isHook();
      node1.isObjectLit();
      node1.setLength(310);
      node2.setIsSyntheticBlock(true);
      Node node4 = Node.newString(1116, "", 42, 8);
      Node node5 = Node.newNumber(0.0, 303, 29);
      node5.cloneTree();
      node4.siblings();
//      try { 
        node5.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 0.0 303 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = Node.newString("VU$R", (-938), 1074);
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      node0.getBooleanProp((-1));
      Node node1 = Node.newString(43, "");
      node1.setSourceEncodedPositionForTree(1474);
      node0.isComma();
      node1.setString("\"DDWOMBZ5|C!<R");
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = Node.newString((-3177), "31kZ6+c[r");
      node0.getStaticSourceFile();
      node0.isNew();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-629));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node1.isEquivalentTo(node0);
      node0.addChildrenToBack(node1);
      node0.getDirectives();
      Node node2 = null;
//      try {
        node2 = new Node(57, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      node0.getBooleanProp(403);
      node0.setVarArgs(true);
      node0.setOptionalArg(false);
      node0.getJSDocInfo();
      Node node1 = new Node(32, node0);
      node1.getQualifiedName();
//      try { 
        node1.setDouble(36);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // TYPEOF is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(38, node0, node0, node0, node0);
      node0.checkTreeEquals(node1);
      node0.setSourceEncodedPosition(1939);
      node0.toStringTree();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(1318);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      int int0 = 102;
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node((-692), (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1057);
      node0.isQuotedString();
      node0.isRegExp();
      node0.isThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      JSType[] jSTypeArray0 = new JSType[0];
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      simpleErrorReporter1.error("Object#Element", (String) null, 50, 4553);
      Node node2 = Node.newString("\"DDWOMBZ5|C!<R", 43, 39);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = Node.newString("", (-985), (-985));
      node0.setType((-30));
      Node node1 = new Node(299, node0);
      node1.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.setThrows();
      node0.isEquivalentTo(node1);
      // Undeclared exception!
//      try { 
        node1.addChildrenToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = new Node(1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1074
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setLength(1);
      Node node1 = new Node(42);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = new Node(29, node2, node1, 4095, 4095);
      Node node4 = node2.useSourceInfoFromForTree(node0);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node4;
      nodeArray0[1] = node3;
      nodeArray0[2] = node4;
      nodeArray0[3] = node2;
      nodeArray0[4] = node0;
      nodeArray0[5] = node4;
      Node node5 = null;
//      try {
        node5 = new Node(43, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      node0.getBooleanProp((-1));
      Node node1 = Node.newString(43, "");
      node1.setSourceEncodedPositionForTree(1474);
      node0.isComma();
      node1.isComma();
      node0.getLastSibling();
      node1.getProp(40);
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node.newString((-580), " is not a string node", 154, (-580));
      Node node0 = Node.newNumber(3802.5484341);
      node0.removeFirstChild();
      // Undeclared exception!
//      try { 
        node0.isEquivalentTo((Node) null, true, true, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = Node.newString(91, "OJ");
      node0.setCharno(91);
      node0.setSourceEncodedPosition(2);
      node0.setType((-1825));
      Node node1 = null;
      // Undeclared exception!
//      try { 
        Node.newString(56, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = Node.newString(91, "OJ");
      node0.setCharno(91);
      node0.setSourceEncodedPosition(2);
      node0.setType(1);
      Node node1 = Node.newString(0, "I:;<|B>dU^}) 4");
      node1.isReturn();
      Node node2 = node1.srcref(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node2.isFalse();
      node1.isQuotedString();
      // Undeclared exception!
//      try { 
        node2.addChildrenToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = Node.newNumber(1115.0583608965, 2, 47);
      node0.getType();
      node0.isSyntheticBlock();
      Node node1 = new Node(2);
      Node node2 = new Node(37, node0, node0, node1, node0);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.children();
      node1.checkTreeEqualsImpl(node0);
      node2.isVarArgs();
      node0.getChangeTime();
      Node node3 = Node.newNumber((double) 4);
      node1.setVarArgs(false);
      node0.useSourceInfoFromForTree(node2);
      // Undeclared exception!
//      try { 
        node2.removeChild(node3);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      Node node1 = new Node(124, node0, 46, 30);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isEquivalentTo(node2);
      node0.putBooleanProp(54, true);
      node2.isInc();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags((-1981));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got EMPTY
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      Node node1 = new Node(1245);
      node1.checkTreeEqualsImpl(node0);
      node1.isFalse();
      node1.hasChild(node0);
      node0.isNumber();
      node0.getLastChild();
      node1.setIsSyntheticBlock(false);
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node.extractLineno(122);
      Node node0 = Node.newNumber((double) 0);
      node0.detachChildren();
      node0.addSuppression("\"DDWOMBZ5|C!<R");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("change_time", true);
      simpleSourceFile0.getLineOffset(8388608);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2864));
      node1.isAssignAdd();
      node0.setWasEmptyNode(false);
      node1.isTrue();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = Node.newString(91, "OJ");
      node0.setCharno(91);
      node0.setSourceEncodedPosition(2);
      node0.setType((-1825));
      Node node1 = Node.newString(4, "OJ");
      node0.isReturn();
      Node node2 = node0.srcref(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isFalse();
      node1.isQuotedString();
      node2.addChildrenToFront(node0);
      int int0 = 46;
      Node node3 = null;
//      try {
        node3 = new Node(31, (Node) null, (Node) null, 57, (-3417));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      node0.getBooleanProp((-1));
      Node node1 = Node.newString(43, "");
      Node.newString((-321), "\"DDWOMBZ5|C!<R");
      node1.hasChildren();
      node1.getJsDocBuilderForNode();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", (-94), (-94));
      Node node1 = new Node((-94), node0, node0);
      node1.getJsDocBuilderForNode();
      node1.getStaticSourceFile();
      // Undeclared exception!
//      try { 
        node1.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -94
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = Node.newString(130, "6,N_P^|Kg3bEErK");
      Node node1 = new Node(38, node0);
      node0.isEquivalentTo(node1);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(130);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 130
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isQuotedString();
      Node node1 = Node.newString("", 1930, 77);
      node1.mayMutateGlobalStateOrThrow();
      node0.isOptionalArg();
      node1.setVarArgs(false);
      node1.getSourceFileName();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
//      try {
        node1 = new Node((-631), nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = Node.newString((-580), " is not a string node", 154, (-580));
      Node node1 = Node.newNumber((-1265.95324));
      node0.isFunction();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node2, true, false, true);
      node1.isIn();
      node2.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(" is not a string node");
      node2.isOptionalArg();
      node1.setDouble(0.0);
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newString("", (-938), 1074);
      node0.isQuotedString();
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      node0.getBooleanProp((-1));
      Node node1 = Node.newString(43, "");
      Node node2 = Node.newNumber(1260.198563558452, 42, 38);
      Node node3 = new Node(1, node0, 76, 64);
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node1, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = Node.newString("EDDWOMBZ5|C!<=A7R", (-938), 1074);
      Node node1 = new Node(37, node0, node0, node0, (-580), 1);
      node1.setSourceEncodedPositionForTree(57);
      node1.isComma();
      node1.isComma();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", (-95), (-95));
      Node node1 = new Node((-95), node0, node0);
      node1.getJsDocBuilderForNode();
      node0.getDirectives();
      node1.mayMutateArguments();
      node1.getJSDocInfo();
      node0.isOptionalArg();
      node0.isFromExterns();
      node0.isFalse();
      node1.setJSDocInfo((JSDocInfo) null);
      node0.isEquivalentTo(node1, true, true, true);
      node0.isIn();
      Node node2 = Node.newString(49, "com.google.javascript.rhino.jstype.TemplateType");
      node1.isEquivalentToTyped(node2);
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1057);
      node0.isQuotedString();
      node0.isRegExp();
      node0.isThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = Node.newString("\"DDWOMBZ5|C!<R", 43, 39);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      String string0 = " is not a string node";
      Node node0 = Node.newString((-580), " is not a string node", 151, (-580));
      Node node1 = new Node(1, node0, node0, node0, 29, 50);
      int int0 = (-1314);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string1 = null;
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[8];
      JSTypeNative jSTypeNative0 = JSTypeNative.RANGE_ERROR_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.STRING_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSTypeNative jSTypeNative4 = JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative4;
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string0 = "et>7, )6'O0k";
      Node node0 = null;
//      try {
        node0 = new Node((-1805), (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 15, 15);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(122);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node node0 = new Node(299, (-999), (-999));
      node0.setType((-30));
      Node node1 = new Node(299, node0);
      node1.isSyntheticBlock();
      node1.isExprResult();
      Node node2 = node0.cloneTree();
      node2.isHook();
      node2.isObjectLit();
      String string0 = "";
      node1.setLength((-3012));
      node2.setIsSyntheticBlock(false);
      Node node3 = Node.newString(1, "", 46, 33);
      // Undeclared exception!
//      try { 
        node3.removeChild(node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = Node.newString((-3177), "31kZ6+c[r");
      node0.getStaticSourceFile();
      node0.isNew();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-629));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node1.isEquivalentTo(node0);
      node0.addChildrenToBack(node1);
      node0.getDirectives();
      // Undeclared exception!
//      try { 
        node1.cloneTree();
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = Node.newString(137, "1,N_P^|Kg3JEErK");
      // Undeclared exception!
//      try { 
        node0.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 137
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node node0 = Node.newString((-3177), "31kZ6+c[r");
      node0.getStaticSourceFile();
      node0.isQuotedString();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-629));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node1.isEquivalentTo(node0);
      node0.addChildrenToBack(node1);
      node0.getDirectives();
      // Undeclared exception!
//      try { 
        node1.cloneTree();
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = Node.newString((-580), " is not a string node", 151, (-580));
      Node node1 = new Node(1, node0, node0, node0, 29, 50);
      node1.isGetElem();
      Node node2 = node0.cloneNode();
      node2.isVoid();
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, false, false, false);
      node0.isIn();
      Node node2 = Node.newString((-3688), "Named type with empty name component");
      node0.isEquivalentToTyped(node2);
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node node0 = new Node((-938));
      node0.isOptionalArg();
      node0.setVarArgs(false);
      node0.getSourceFileName();
      node0.getSourceFileName();
      // Undeclared exception!
//      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = Node.newString((-3177), "31kZ6+c[r");
      node0.getStaticSourceFile();
      node0.isQuotedString();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-629));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node1.isEquivalentTo(node0);
      node0.getDirectives();
      Node node2 = node1.cloneTree();
      node2.siblings();
      node2.getString();
      node0.siblings();
      node0.isQualifiedName();
      node2.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      node0.isOptionalArg();
      node0.setVarArgs(true);
      node0.getSourceFileName();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = Node.newString("", (-985), (-985));
      node0.setType((-30));
      Node node1 = new Node(299, node0);
      node1.isSyntheticBlock();
      node1.isExprResult();
      Node node2 = node0.cloneTree();
      node2.isHook();
      node2.isObjectLit();
      node1.setLength((-3012));
      node2.setIsSyntheticBlock(false);
      Node node3 = Node.newString(1, "", 46, 33);
      node2.cloneTree();
      node3.siblings();
      node3.getString();
      node0.siblings();
      node0.isQualifiedName();
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      node0.isWith();
      node0.setLineno((-2407));
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = Node.newNumber(51.0);
      Node node1 = new Node((-536870912), node0, node0, node0, node0);
      Node node2 = new Node((-882), node1, node1, node1, 54, (-103));
      node1.checkTreeEqualsImpl(node0);
      Node node3 = new Node((-536870912), node2, 38, 1939);
      node3.getLength();
      int int0 = (-1056);
      int int1 = 375;
      // Undeclared exception!
//      try { 
        node3.addChildToFront(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      int int0 = 130;
      // Undeclared exception!
//      try { 
        Node.newString(3271, (String) null, 375, 130);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node.newString((-580), " is not a string node", 154, (-580));
      Node node0 = Node.newNumber((-1265.95324));
      node0.isNoSideEffectsCall();
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(147);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 147
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node node0 = Node.newString((-1981), "");
      node0.getStaticSourceFile();
      node0.getString();
      node0.isFalse();
      Node node1 = Node.newNumber((-2566.23905676348), 39, (-1));
      node1.isUnscopedQualifiedName();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      Node node1 = Node.newNumber(629.73768328, 54, (-938));
      node1.isUnscopedQualifiedName();
      node0.isBlock();
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = new Node(41);
      node0.setCharno((-875));
      Node node1 = null;
      node0.cloneTree();
      node0.addSuppression("ZJIbG7Re=t,9jY");
      int int0 = (-1587);
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node node0 = new Node(1073741823);
      node0.setOptionalArg(false);
      node0.getBooleanProp(763);
      Node node1 = new Node(43, node0, node0, 15, 31);
      node1.isString();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = Node.newString("EDDWOMBZ5|C!<=A7R", (-938), 1074);
      Node.newNumber(629.73768328, 54, (-938));
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      Node node1 = new Node((-938), node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(37);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -938
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      Node node0 = Node.newString((-580), " is not a string node", 154, (-580));
      Node node1 = Node.newNumber((-1265.95324));
      node0.isFunction();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node2, true, false, true);
      node1.isIn();
      Node.newString((-2323), "ri$-6O)dm%OLG?n$yJ");
      node0.isEquivalentToTyped(node2);
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node.newString("", 124, 124);
      Node node0 = Node.newNumber((double) 0);
      boolean boolean0 = true;
      String string0 = "$_jnN_AN5Uwm";
      Node node1 = Node.newString(30, "$_jnN_AN5Uwm", 53, (-1005));
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.toStringTree();
      node1.setVarArgs(true);
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(116);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.getAncestor(0);
      node1.setLength(1);
      Node node2 = new Node((-872));
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = node1.useSourceInfoFrom(node2);
      Node node4 = node2.clonePropsFrom(node3);
      Node node5 = node3.useSourceInfoFromForTree(node0);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node5;
      nodeArray0[1] = node4;
      nodeArray0[2] = node5;
      nodeArray0[3] = node3;
      nodeArray0[4] = node1;
      nodeArray0[5] = node5;
      Node node6 = null;
//      try {
        node6 = new Node(43, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = new Node((-733), (-733), (-733));
      Node node1 = Node.newString(822, "HB", 42, 0);
      Node node2 = new Node(57, node1, node0, 2556, 42);
      // Undeclared exception!
//      try { 
        node2.setDouble(1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 57
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = new Node(225);
      node0.setOptionalArg(false);
      node0.getBooleanProp(51);
      Node node1 = node0.cloneTree();
      node1.siblings();
      // Undeclared exception!
//      try { 
        node0.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 225
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = Node.newString("= F");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node0.isEquivalentToShallow(node0);
      Node node1 = new Node(147);
      node0.isOptionalArg();
      Node node2 = new Node((-862048943), node0, node0, node0);
      Node node3 = null;
//      try {
        node3 = new Node(29, node0, node0, node0, node2, 98, 2048);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = Node.newString((-1981), "");
      node0.getStaticSourceFile();
      node0.getString();
      Node node1 = new Node((-1981));
      node0.isOptionalArg();
      node1.setVarArgs(true);
      node1.getSourceFileName();
      node0.getSourceFileName();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(130, (Node) null, (Node) null, (Node) null, 1326, (-1564));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node node0 = Node.newString("P)^w{[}j'I@i");
      node0.isGetProp();
      Node node1 = new Node(3849, node0, node0, 37, 36);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node3);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3849
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = Node.newString(41, "ZJIbG7Re=t,9jY");
      node0.setCharno((-875));
      Node node1 = Node.newString("ZJIbG7Re=t,9jY", 12, (-1662));
      node1.mayMutateGlobalStateOrThrow();
      node1.checkTreeEqualsImpl(node0);
      Node node2 = new Node(21);
      node1.checkTreeEqualsImpl(node0);
      node2.isAdd();
      node0.setQuotedString();
      node0.getChangeTime();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node node0 = new Node(232);
      // Undeclared exception!
//      try { 
        node0.srcref((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      int int0 = 130;
      Node node0 = Node.newString(130, "1,N_P^|Kg3JEErK");
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // EXPR_RESULT 1,N_P^|Kg3JEErK is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node node0 = new Node(225);
      node0.setOptionalArg(false);
      node0.getBooleanProp(51);
      node0.isString();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = Node.newString("", 124, 124);
      Node node1 = Node.newNumber((double) 0);
      node0.removeFirstChild();
      node0.isEquivalentTo(node1, true, false, false);
      node1.isQuotedString();
      Node node2 = node1.cloneNode();
      node0.isGetterDef();
      node1.getLength();
      node1.hasChild(node2);
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = Node.newString(91, "OJ");
      node0.setCharno(91);
      node0.setSourceEncodedPosition(2);
      node0.setType((-1825));
      Node node1 = null;
      Node node2 = Node.newString(4, "OJ");
      node0.isReturn();
      node0.srcref(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      String string0 = "aJE12G,QnRx";
      // Undeclared exception!
//      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "com.google.javascript.rhino.jstype.UnknownType");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node node0 = new Node(232);
      // Undeclared exception!
//      try { 
        node0.setString("number");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 232
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = Node.newString((-580), " is not a string node", 154, (-580));
      Node node1 = Node.newNumber((-1265.95324));
      node1.setCharno(57);
      Node node2 = new Node(153);
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(232, (Node) null, (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(1939);
      node0.getLineno();
      node0.toStringTree();
      node0.getBooleanProp((-1));
      Node node1 = Node.newString(43, "");
      node0.isComma();
      node1.isComma();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node node0 = Node.newNumber(2047.81, 0, 0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node(2590, node0, node0, node0);
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      Node node2 = null;
//      try {
        node2 = new Node(56, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      Node node0 = Node.newNumber(2047.81, 0, 0);
      node0.isUnscopedQualifiedName();
      assertTrue(node0.isNumber());
      assertEquals(0, node0.getSourcePosition());
      
      // Undeclared exception!
//      try { 
        node0.removeChildAfter((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node((-1076), node0, node0, (-1241), 32);
      node0.useSourceInfoFromForTree(node1);
      Node node2 = null;
//      try {
        node2 = new Node((-3542), node0, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isNull();
      node0.isHook();
      // Undeclared exception!
//      try { 
        node0.getAncestor((-2471));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.RecordType", (-4075), 492);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-1107));
      node1.isOptionalArg();
      node1.setVarArgs(true);
      node0.getSourceFileName();
      node0.getSourceFileName();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.getBooleanProp(2041);
      node1.isString();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = Node.newNumber(1115.0583608965, 2, 47);
      node0.getType();
      node0.isSyntheticBlock();
      Node node1 = new Node(2);
      Node node2 = new Node(37, node0, node0, node1, node0);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.children();
      node1.checkTreeEqualsImpl(node0);
      node2.isVarArgs();
      node0.getChangeTime();
      Node.newNumber((double) 4);
      node1.setVarArgs(false);
      node1.setOptionalArg(false);
      node0.getQualifiedName();
//      try { 
        node2.setDouble(2217.461426319);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // CALL is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(5421, node0, node0, 0, 0);
      Node node2 = new Node(1744, node1, node1, node1);
      node2.setCharno((-2824));
      Node node3 = null;
//      try {
        node3 = new Node(0, node0, node0, 30, 2051);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      Node node0 = new Node(232);
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node node0 = new Node((-751), (-751), (-751));
      node0.setSourceEncodedPositionForTree((-751));
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newNumber(0.0, 55, 2);
      node1.setType(32);
      node1.copyInformationFrom(node0);
      node0.isEquivalentTo(node1, false, false, true);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -751
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2864));
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.children();
      node0.isAdd();
      node0.setQuotedString();
      node1.getSourceOffset();
      // Undeclared exception!
//      try { 
        node1.toString(false, true, true);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2864
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node node0 = new Node((-2339), 115, 115);
      node0.isSyntheticBlock();
      Node node1 = new Node((-2864));
      node0.checkTreeEqualsImpl(node1);
      node0.isAdd();
      // Undeclared exception!
//      try { 
        node0.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2864));
      node0.checkTreeEqualsImpl(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Not(");
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2864));
      node1.isOptionalArg();
      node0.setVarArgs(true);
      node0.getSourceFileName();
      node0.getSourceFileName();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.getBooleanProp(505);
      node0.isString();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      String string0 = "\"DDWOMBZ5|C!<R";
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.identifyNonNullableName("\"DDWOMBZ5|C!<R");
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = (JSType) null;
      jSTypeArray0[1] = (JSType) null;
      jSTypeArray0[2] = null;
      jSTypeArray0[4] = (JSType) null;
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) null, jSTypeArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      Node node0 = Node.newString(41, "ZJIbG7Re=t,9jY");
      node0.setCharno((-875));
      Node node1 = Node.newString("ZJIbG7Re=t,9jY", 12, (-1662));
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(21);
      node1.checkTreeEqualsImpl(node0);
      node2.isAdd();
      node0.setQuotedString();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = (JSType) null;
      jSTypeArray0[1] = (JSType) null;
      jSTypeArray0[2] = null;
      jSTypeArray0[4] = (JSType) null;
      Node node1 = node0.cloneNode();
      node0.isVoid();
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2864));
      node0.isAdd();
      node0.setWasEmptyNode(false);
      node1.isTrue();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      Node node0 = Node.newString("", (-999), (-999));
      node0.setType((-30));
      Node node1 = new Node(299, node0);
      node1.isSyntheticBlock();
      node1.isNE();
      Node node2 = node0.cloneTree();
      node2.isHook();
      node2.isObjectLit();
      node1.setLength((-3012));
      node2.setIsSyntheticBlock(false);
      Node node3 = Node.newString(1, "", 46, 33);
      // Undeclared exception!
//      try { 
        node3.removeChild(node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      int int0 = 981;
      Node node0 = Node.newNumber(2983.3194078838483, 981, 93);
      node0.setSourceEncodedPosition(93);
      Node node1 = Node.newNumber((double) 51);
      node1.isEquivalentTo(node0, false, false, false);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      Node node0 = Node.newString("", 4690, 1612);
      Node node1 = Node.newString(4095, "");
      node1.isEquivalentTo(node0, false, false, true);
      boolean boolean0 = node1.isIn();
      Node.newString(4228, "");
      boolean boolean1 = node0.isEquivalentToTyped(node1);
      assertTrue(boolean1 == boolean0);
      assertEquals(40, node0.getType());
      assertEquals(4095, node1.getType());
      assertEquals(19211852, node0.getSourcePosition());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      Node node0 = Node.newString((-1152), "7[;S/IUG@cn00", (-1152), (-1152));
      Node.newString(1, "CharMatcher.inRange('", 54, 53);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[9];
      jSTypeRegistry0.getType("7[;S/IUG@cn00");
      jSTypeArray0[0] = null;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createInterfaceType("Named type with empty name component", node0, (ImmutableList<TemplateType>) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(5421, node0, node0, 0, 0);
      Node node2 = new Node(1744, node1, node1, node1);
      Node node3 = null;
//      try {
        node3 = new Node(5421, node2, node1, node2, node2, 57, 105);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      Node node0 = new Node(225);
      boolean boolean0 = node0.isTrue();
      assertEquals(225, node0.getType());
      assertFalse(boolean0);
      assertEquals((-1), node0.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      String string0 = " is not a string node";
      Node node0 = Node.newString((-580), " is not a string node", 154, (-580));
      Node.newNumber((-1265.95324));
      node0.isFunction();
      boolean boolean0 = true;
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = Node.newString(8, " is not a string node", 48, 16);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node2.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -580
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1469);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      assertTrue(node_SideEffectFlags0.areAllFlagsSet());
      
      Node node0 = Node.newString("");
      node0.setSourceEncodedPosition(1469);
      assertTrue(node0.isString());
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      Node node0 = Node.newString(0, "tmP 5,YH?");
      Node node1 = Node.newString(1, "tmP 5,YH?");
      Node node2 = new Node(32, node0, node0, node0, node1, (-167), 3259);
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      Node node0 = Node.newString((-1981), "");
      node0.getStaticSourceFile();
      node0.getString();
      node0.isFalse();
      node0.isBlock();
      node0.isNumber();
      node0.getLastChild();
      node0.setIsSyntheticBlock(false);
      assertEquals((-1981), node0.getType());
      assertEquals((-1), node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.TemplateType", (-95), (-95));
      Node node1 = new Node((-95), node0, node0);
      node1.getJsDocBuilderForNode();
      node0.isFromExterns();
      node0.getDirectives();
      node1.mayMutateArguments();
      node1.getJSDocInfo();
      node0.isOptionalArg();
      node0.isFromExterns();
      node0.isEquivalentTo(node1, false, true, false);
      node0.isFalse();
      node1.isQuotedString();
      // Undeclared exception!
//      try { 
        node1.addChildrenToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node node0 = Node.newString(0, "X7\"1d@S", 0, 4690);
      boolean boolean0 = true;
      Node node1 = new Node(32, node0, node0, 47, 0);
//      try { 
        node1.setDouble(2);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // TYPEOF 47 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test701()  throws Throwable  {
      int int0 = 981;
      Node node0 = Node.newNumber(2983.3194078838483, 981, 93);
      node0.setSourceEncodedPosition(93);
      Node node1 = Node.newNumber((double) 51);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test702()  throws Throwable  {
      Node node0 = Node.newString(41, "ZJIbG7Re=t,9jY");
      node0.setCharno((-875));
      Node node1 = null;
      node0.cloneTree();
      node0.addSuppression("ZJIbG7Re=t,9jY");
      int int0 = (-1587);
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test703()  throws Throwable  {
      Node node0 = Node.newString((-3177), "31kZ6+c[r");
      node0.getStaticSourceFile();
      node0.isQuotedString();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-629));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.valueOf();
      assertEquals((-633), node_SideEffectFlags1.valueOf());
      
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node0.isTry();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node2);
      node0.getSourceOffset();
      node_NodeMismatch0.equals(node1);
      node2.isWhile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      boolean boolean0 = node0.isThis();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test704()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Object object0 = new Object();
      // Undeclared exception!
//      try { 
        SimpleErrorReporter.getMessage1((String) null, object0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.PropertyResourceBundle", e);
//      }
  }

  @Test(timeout = 4000)
  public void test705()  throws Throwable  {
      String string0 = "\"DDWOMBZ5|C!<R";
      Node node0 = Node.newString("\"DDWOMBZ5|C!<R", (-938), 1074);
      node0.isRegExp();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.identifyNonNullableName("\"DDWOMBZ5|C!<R");
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = (JSType) null;
      jSTypeArray0[1] = (JSType) null;
      jSTypeArray0[2] = null;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType((String) null, node0, jSTypeArray0[2]);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test706()  throws Throwable  {
      Node.mergeLineCharNo(1075, 1075);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = "";
      int int0 = 0;
      Node[] nodeArray0 = new Node[8];
      Node node0 = Node.newString(0, "Object#Element");
      nodeArray0[0] = node0;
      Node node1 = new Node((-3275));
      nodeArray0[1] = node1;
      Node node2 = Node.newNumber((double) 1, 0, 2865);
      nodeArray0[2] = node2;
      String string1 = "com.google.javascript.rhino.Node$AncestorIterable$1";
      Node node3 = Node.newString("com.google.javascript.rhino.Node$AncestorIterable$1", 29, 0);
      Node node4 = new Node(3277, node3, node1, node0, node3, 2, 108);
      nodeArray0[3] = node4;
      Node node5 = null;
//      try {
        node5 = new Node(36, node4, node0, node2, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test707()  throws Throwable  {
      Node node0 = Node.newString("= F");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node1 = Node.newNumber(87.2, 57, 0);
      nodeArray0[4] = node1;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      Node node2 = null;
//      try {
        node2 = new Node(2, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test708()  throws Throwable  {
      Node node0 = new Node((-733), (-733), (-733));
      // Undeclared exception!
//      try { 
        node0.getAncestor((-733));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test709()  throws Throwable  {
      Node node0 = new Node((-751));
      node0.setSourceEncodedPositionForTree((-751));
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newNumber(0.0, 55, 2);
      node1.setType(16);
      node0.isEquivalentTo(node1, false, false, true);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -751
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test710()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node((-3569), node0, node0, node0);
      // Undeclared exception!
//      try { 
        node1.setDouble((-1.0));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -3569
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test711()  throws Throwable  {
      Node node0 = Node.newString("", (-999), (-999));
      node0.setType((-30));
      Node node1 = new Node(299, node0);
      node1.isSyntheticBlock();
      node1.isExprResult();
      Node node2 = node0.cloneTree();
      node2.isHook();
      node2.isObjectLit();
      node1.setLength((-3012));
      node2.setIsSyntheticBlock(false);
      Node node3 = Node.newString(1, "", 46, 33);
      // Undeclared exception!
//      try { 
        node3.removeChild(node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test712()  throws Throwable  {
      int int0 = 0;
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test713()  throws Throwable  {
      Node node0 = Node.newString("Not(", (-2339), 115);
      boolean boolean0 = node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-2864));
      node0.checkTreeEqualsImpl(node1);
      assertEquals((-2864), node1.getType());
      
      boolean boolean1 = node0.isAdd();
      assertFalse(boolean1 == boolean0);
      
      node0.setQuotedString();
      assertTrue(node0.isString());
      assertEquals((-1), node0.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test714()  throws Throwable  {
      Node node0 = Node.newString("", 124, 124);
      Node node1 = Node.newNumber((double) 0);
      node0.isEquivalentTo(node1, true, false, false);
      node0.isIn();
      Node node2 = Node.newString(12, "");
      boolean boolean0 = node0.isEquivalentToTyped(node2);
      assertEquals(508028, node0.getSourcePosition());
      assertEquals(12, node2.getType());
      assertEquals(40, node0.getType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test715()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "xAT>ooDi+o%cC6u1u^";
      int int0 = (-998);
      Node[] nodeArray0 = new Node[1];
      Node node0 = null;
//      try {
        node0 = new Node((-998), (Node) null, (Node) null, (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test716()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      assertEquals(24, node_SideEffectFlags3.valueOf());
      
      Node.extractLineno(0);
      Node node0 = new Node(0);
      node0.getNext();
      assertEquals((-1), node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test717()  throws Throwable  {
      int int0 = 0;
      Node node0 = null;
//      try {
        node0 = new Node(0, (Node[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test718()  throws Throwable  {
      int int0 = 122;
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(122, (Node) null, 122, 122);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test719()  throws Throwable  {
      Node node0 = Node.newString(91, "OJ");
      node0.setCharno(91);
      node0.getCharno();
      node0.setSourceEncodedPosition(0);
      node0.setType((-1825));
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test720()  throws Throwable  {
      Node node0 = new Node((-1752));
      Node node1 = new Node(485, node0, 0, (-2109));
      boolean boolean0 = false;
      Node node2 = node1.removeChildren();
      // Undeclared exception!
//      try { 
        node2.toString(false, false, false);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -1752
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test721()  throws Throwable  {
      int int0 = (-3286);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newNumber(1.0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test722()  throws Throwable  {
      Node node0 = new Node((-2407));
      // Undeclared exception!
//      try { 
        node0.toString(true, true, true);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2407
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }
}
