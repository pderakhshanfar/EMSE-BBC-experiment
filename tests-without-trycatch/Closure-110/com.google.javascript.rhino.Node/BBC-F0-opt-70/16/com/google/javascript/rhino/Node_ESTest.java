/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 14:50:53 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.NoObjectType;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.NavigableSet;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(152);
      Node node1 = new Node(49, node0, node0);
      node1.cloneNode();
      node1.setType(1);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.getBooleanProp(4095);
      node2.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(153, (-3184), (-3451));
      Node node1 = new Node(35);
      node0.addChildrenToFront(node1);
      node0.removeProp((-3451));
      Node node2 = new Node(50, node0, 52, 127);
      node0.getIndexOfChild(node2);
      Node node3 = node0.removeChildren();
      node3.checkTreeEqualsImpl(node1);
      node2.isFromExterns();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node0);
      Node node4 = node3.srcref(node2);
      node4.isQuotedString();
      node_NodeMismatch0.equals((Object) null);
      // Undeclared exception!
//      try { 
        node3.addChildBefore(node2, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node(153);
      node0.toString();
      Node node1 = node0.getLastSibling();
      int int0 = (-25);
      // Undeclared exception!
//      try { 
        node0.replaceChild(node1, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = Node.newNumber(3709.793121282354);
      node0.putIntProp(35, 35);
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 35
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newString(119, "H");
      Node node1 = new Node(119, node0, node0, node0);
      node1.setOptionalArg(false);
      Node node2 = new Node(119, node1, (-1399), 51);
      node0.putIntProp(0, (-4350));
      node1.getDirectives();
      node1.addChildToFront(node2);
      node1.getProp((-4350));
      node1.isScript();
      node2.mayMutateGlobalStateOrThrow();
      node1.setSourceEncodedPosition(55);
      node1.getDirectives();
      node2.isFor();
      node0.addSuppression("");
      Node node3 = node2.getParent();
      node3.setIsSyntheticBlock(false);
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(102, (-2130), 44);
      Node node1 = new Node(1, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.checkTreeEqualsImpl(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayDeque<NoObjectType> arrayDeque0 = new ArrayDeque<NoObjectType>();
      Iterator<NoObjectType> iterator0 = arrayDeque0.descendingIterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node4 = node2.srcrefTree(node3);
      node1.checkTreeEqualsImpl(node4);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = new Node(256, node0, node0, node0, node0);
      node0.srcrefTree(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.removeChildren();
      node0.getAncestor(159);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newString("rinan|me");
      Node node1 = new Node(51);
      node1.isNew();
      node0.isThis();
      node1.getQualifiedName();
      node0.isEquivalentTo(node1, false, true, false);
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node(105);
      node0.putIntProp(55, 47);
      node0.toStringTree();
      node0.isAssign();
      node0.hasChildren();
      Node node1 = new Node(492);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      Node node1 = new Node((-1613), node0, node0, node0, node0, 31, 4095);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isCast();
      node2.isEquivalentTo(node0, false, true, true);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = new Node(105);
      node0.putIntProp(55, 47);
      node0.toStringTree();
      node0.isAssign();
      node0.isCast();
      Node node1 = Node.newString(0, "FUNCTION <invalid> [inferred: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n", 49, 3527);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(26, 26, 26);
      node0.isAdd();
      node0.getBooleanProp(26);
      node0.getLastSibling();
//      try { 
        node0.setString("no next sibling.");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NOT 26 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newString("change_time");
      node0.putIntProp(36, 36);
      node0.toStringTree();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = Node.newString("change_time");
      node0.putIntProp(40, 40);
      node0.toStringTree();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.putIntProp(34, 34);
      node0.getBooleanProp(34);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(105);
      node0.putIntProp(55, 47);
      node0.toStringTree();
      node0.isAssign();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      node0.cloneNode();
      node0.isFunction();
      node0.isAssign();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(58, nodeArray0, 58, 58);
      Node node1 = new Node(2, nodeArray0);
      node1.isReturn();
      node1.isQualifiedName();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(105);
      node0.putIntProp(47, 47);
      node0.toStringTree();
      node0.setOptionalArg(false);
      node0.isAssign();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node(105);
      Locale locale0 = Locale.JAPAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = Node.newString(8, "WF?&vn", 50, 105);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node(26, 26, 26);
      node0.isAdd();
      node0.getBooleanProp(26);
      Node node1 = Node.newNumber((double) 4, 1402, 56);
      Node node2 = node0.srcrefTree(node1);
      node1.isBlock();
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(98, 98, 98);
      Node[] nodeArray0 = new Node[1];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      nodeArray0[0] = node0;
      Node node1 = new Node(49, nodeArray0);
      node0.isDec();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node(77, 77, 77);
      Node node1 = new Node(32);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(152);
      node0.putIntProp((-1562), 152);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.toStringTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      modificationVisitor0.caseUnknownType();
      node2.getProp(1746);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isFunction();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newNumber(1737.37, 119, 75);
      node0.putIntProp(32, 49);
      node0.toStringTree();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(46);
      Node node1 = new Node(38, node0, node0, node0);
      node1.srcrefTree(node0);
      // Undeclared exception!
//      try { 
        node1.isQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(101, 126, 126);
      node0.addChildToFront(node0);
      Node node1 = node0.getAncestor(38);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(110, 110, (-985));
      Node node1 = new Node(47, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.checkTreeEqualsImpl(node2);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(93);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 93
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newString("new child has existing sibling");
      Node node1 = new Node(46, node0, node0, node0, node0);
      Node node2 = new Node((-1086), node1, node1, node1, node1, 30, 56);
      node2.isCast();
      node1.isEquivalentTo(node1, false, true, false);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(36, (-3141), 32);
      node0.setSourceEncodedPosition((-3141));
      node0.isThrow();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node(123, 123, 123);
      Node node1 = new Node(148, node0, node0);
      node0.addChildToFront(node1);
      node0.getAncestor(63);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(26, 37, 905);
      node0.isDec();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newString("mN9w'");
      node0.putIntProp(49, 49);
      node0.toStringTree();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.addChildToFront(node0);
      node0.getAncestor(38);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(101);
      Node node1 = new Node(42, node0, node0, node0, node0, 48, 37);
      node1.cloneTree();
      node1.removeProp(4095);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(5);
      Node node1 = new Node(38, node0, node0, node0);
      node0.addChildToFront(node1);
      node1.getAncestor(10);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      node0.addChildToFront(node0);
      Node node1 = node0.getAncestor(38);
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(105);
      node0.putIntProp(42, 47);
      node0.toStringTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(105);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("\n\nSubtree1: ", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(0, node0, node0, node0);
      node1.isTry();
      node0.useSourceInfoFromForTree(node1);
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString("rinaln|me");
      Node node1 = new Node(39, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = new Node(32, 46, 30);
      Node node3 = new Node((-1361), node2, node2, 49, 125);
      node1.copyInformationFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(105);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(96, nodeArray0);
      node0.getInputId();
      node1.setInputId((InputId) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isDec();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      Node node1 = Node.newString("#;@H>$v<", 32, 49);
      node0.useSourceInfoFrom(node1);
      node0.addChildToFront(node0);
      node0.getAncestor(38);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Node node0 = Node.newNumber((-132.328));
      Node node1 = new Node(108, node0, node0);
      node0.toString(false, false, false);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = node2.srcrefTree(node0);
      Node node4 = node2.useSourceInfoFrom(node1);
      node0.useSourceInfoFromForTree(node3);
      node4.isNoSideEffectsCall();
      node2.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node((-7276), (-7276), (-7276));
      Node node1 = new Node(4095, node0, node0, node0, node0, 8, 37);
      Node node2 = new Node(46, 15, 152);
      node0.isDelProp();
      Node node3 = new Node(38, 57, 38);
      // Undeclared exception!
//      try { 
        node3.isUnscopedQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME 57 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = Node.newNumber(2247.77459, (-1173), 45);
      Node node1 = new Node(117, node0);
      node1.putIntProp(39, 12);
      node1.toStringTree();
      node0.isVar();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(4, 4, 4);
      Node node1 = Node.newNumber((-200.40128713), 49, 37);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node(98);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(49, nodeArray0);
      node1.useSourceInfoFromForTree(node0);
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(58);
      Node node1 = new Node(57, nodeArray0, 12, 46);
      Node node2 = new Node(8, node0, node1, node1, node0);
      node2.isCall();
      node0.isObjectLit();
      node2.mayMutateGlobalStateOrThrow();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isInc();
      node0.isLabel();
      Node node3 = node1.getNext();
      node3.setJSDocInfo((JSDocInfo) null);
      node2.getNext();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(58, nodeArray0, 58, 58);
      Node node1 = new Node(2, nodeArray0);
      node1.isReturn();
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      node0.isVarArgs();
      node0.getAncestor(1064);
      Node node1 = new Node(86, node0);
      node1.isHook();
      node1.cloneTree();
      node1.isComma();
      // Undeclared exception!
//      try { 
        node1.replaceChild(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString("orizginalname");
      Node node1 = new Node(96, 32, 96);
      Node node2 = new Node(38, node1);
      node0.getQualifiedName();
      node0.isEmpty();
      node2.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(105);
      node0.cloneTree();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("\n\nSubtree1: ", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getLength();
      Node node1 = new Node(29, node0, 115, (-158));
      node0.addChildrenToBack(node1);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newString("rg5inaln|me");
      node0.checkTreeEqualsImpl(node0);
      Node node1 = new Node(0, 31, 0);
      node1.isBlock();
      node1.isComma();
      node0.isDefaultCase();
      node0.isComma();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.addChildToFront(node0);
      node0.getAncestor(38);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString(825, "s25KFP=n4<ur:#W E", (-471), 825);
      Node node1 = new Node(40, 654, 29);
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.isFunction();
      node1.isEquivalentTo(node2, true, false, true);
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newString(29, "h_z:8pysC?[k >yE X[");
      Node node1 = new Node(26, node0, node0, node0);
      Node node2 = Node.newNumber((double) 4095, 2603, 49);
      Node node3 = new Node(105, node1, node1, node2, 12, 127);
      node3.toString();
      Node node4 = new Node(26, node3);
      Node node5 = node4.useSourceInfoFrom(node1);
      node5.checkTreeEqualsImpl(node3);
      // Undeclared exception!
//      try { 
        node5.getChildBefore(node4);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newNumber(3709.793121282354);
      Node node1 = Node.newNumber(582.61188054737, 40, 43);
      Node node2 = new Node(2, node0);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(0, nodeArray0);
      Node node4 = new Node(3, node2, node2, node3, 2843, 40);
      node1.toString();
      Node node5 = Node.newNumber((double) 4);
      Node node6 = new Node(117, node5);
      Node node7 = node6.useSourceInfoFrom(node0);
      node7.checkTreeEqualsImpl(node2);
      // Undeclared exception!
//      try { 
        node2.getChildBefore(node6);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newString(".9kfig9wXJPs");
      node0.toStringTree();
      node0.siblings();
      Node node1 = new Node(39, node0, node0, 57, (-2023));
      node1.removeProp(8);
      node1.isSetterDef();
      // Undeclared exception!
//      try { 
        node1.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isVarArgs();
      node0.isEmpty();
      node0.cloneTree();
      node0.isLocalResultCall();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node(91, 91, 91);
      node0.isQuotedString();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.addChildToFront(node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      node0.getQualifiedName();
      node0.isDec();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node.newNumber((-4740.4522));
      Node node1 = node0.getChildBefore((Node) null);
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node1, (Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = new Node(47, 45, 26);
      Node node2 = new Node(1538, node0, node1, node1);
      Node node3 = Node.newString(2, "\")JlX");
      node1.useSourceInfoFrom(node3);
      node2.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      Node node1 = new Node(36, node0, node0, node0, node0);
      node1.detachChildren();
      node0.useSourceInfoFromForTree(node1);
//      try { 
        node0.setString("{");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // DEFAULT_CASE is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".JTv:5Lwg");
      Node node0 = new Node(105);
      Node node1 = new Node(52, node0);
      node1.isInstanceOf();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString("INTERFACE");
      node0.putIntProp(53, 53);
      node0.toStringTree();
      // Undeclared exception!
//      try { 
        node0.getProp(53);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.getSideEffectFlags();
      Node node1 = new Node(13, node0, node0, 42, 863);
      node1.isTry();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = Node.newString("505?u", 46, 48);
      Node node2 = new Node(118, node1);
      node0.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(77, 77, 41);
      Node node1 = new Node(77, node0, node0, node0, node0);
      node0.putProp(3323, node1);
      Node node2 = new Node(77, node1, 36, 31);
      Node node3 = node2.getChildAtIndex((-2204));
      node3.isCast();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newString(29, "h_z:8pysC?[k >yE X[");
      Node node1 = new Node(26, node0, node0, node0);
      Node node2 = Node.newNumber((double) 4095, 2603, 49);
      Node node3 = new Node(105, node1, node1, node2, 12, 127);
      node3.toString();
      Node node4 = new Node(1, node3);
      Node node5 = node4.useSourceInfoFrom(node1);
      node5.checkTreeEqualsImpl(node3);
      // Undeclared exception!
//      try { 
        node5.getChildBefore(node4);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = Node.newNumber((double) 38);
      node0.toString();
      node1.toString();
      node0.getProp(57);
      Node node2 = node0.getLastSibling();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node3 = new Node(50, nodeArray0, 50, 55);
      node3.getJsDocBuilderForNode();
      node2.isTry();
      node2.getLastChild();
      node2.getJSDocInfo();
      node1.detachFromParent();
      node0.removeChildren();
      node2.isVar();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = new Node(256, node0, node0, node0, node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      node0.copyInformationFromForTree(node1);
      node0.getAncestor(159);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      Node node1 = new Node(36, node0, node0, node0, node0);
      Node node2 = node0.detachFromParent();
      node0.isFunction();
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = new Node(4, node1, node2, (-1495), 39);
      // Undeclared exception!
//      try { 
        node2.replaceChild(node3, node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newString("InputId: originalnaNe");
      node0.putIntProp(33, (-129));
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 33
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = "kO3HTNnB <:B*";
      Node node0 = Node.newString(441, "kO3HTNnB <:B*", 3315, 3315);
      Node node1 = new Node(52, node0, node0);
      node0.setLength(111);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.setJSDocInfo(jSDocInfo0);
      node1.cloneTree();
      Node node2 = null;
//      try {
        node2 = new Node(1865, node0, node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      HashSet<TemplateType> hashSet0 = new HashSet<TemplateType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) hashSet0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = Node.newNumber(3827.43176219718);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(122);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
      Node node1 = new Node(157, node0);
      Node node2 = node0.srcref(node1);
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newString("rg5inaln|me");
      node0.checkTreeEqualsImpl(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(0, 31, 0);
      Node node2 = new Node(33, node1);
      node2.getQualifiedName();
      node1.isEmpty();
      node2.useSourceInfoIfMissingFrom(node1);
      node2.siblings();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      Node node1 = Node.newString(6528, "ldA", 4, 48);
      Node node2 = new Node(49, node1);
      Node node3 = node2.useSourceInfoFrom(node0);
      node3.isFunction();
      node1.isEquivalentTo(node2, true, true, true);
      node2.isDec();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(50, node0, node0, node0, node0, 49, 1572);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = new Node(2239);
      node0.isQuotedString();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node1 = new Node(52, node0, 625, (-1709));
      node0.addChildToFront(node1);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node2 = node0.getAncestor(2239);
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newNumber((-4448.04548843163));
      Node node1 = new Node(30, node0, node0, node0);
      node1.putIntProp(53, 15);
      node1.isObjectLit();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(126, 30, 54);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isSetterDef();
      node0.isThis();
      Node node1 = new Node(52, node0);
      node1.getQualifiedName();
      node1.isNE();
      Node.newString(56, "InputId: orignalnaNe", 15, 112);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newNumber((double) 43, 122, 122);
      Node node1 = new Node(43, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isCast();
      node1.isEquivalentTo(node0, false, true, true);
      node1.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      node0.isVarArgs();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getSourceOffset();
      node0.isDelProp();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(152, 153, 152);
      Node node1 = new Node((-3942), node0, node0, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.isFalse();
      node0.isDebugger();
      // Undeclared exception!
//      try { 
        node1.removeChild(node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node(91, 91, 91);
      node0.isQuotedString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CZiPa+us'J k");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.addChildToFront(node0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node1 = node0.getAncestor(38);
      node1.getChildAtIndex(Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString("second new child has existing parent");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("second new child has existing parent", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getSourceOffset();
      node0.isDelProp();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(98, 98, 98);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(49, nodeArray0);
      node1.putBooleanProp(3210, false);
      node0.isReturn();
      Node node2 = node0.srcref(node1);
      // Undeclared exception!
//      try { 
        node2.getChildAtIndex(57);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString(46, ".:3", 46, 46);
      Node node1 = new Node(38, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node1.setString("ldA");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString(116, "E.};", 116, 26);
      node0.isContinue();
      node0.getDirectives();
      node0.isGetterDef();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node(98, 98, 98);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(49, nodeArray0);
      node0.isOptionalArg();
      node1.srcref(node0);
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(51);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      NavigableSet<String> navigableSet0 = treeSet0.tailSet("incrdecr", true);
      node0.setDirectives(navigableSet0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.isFalse();
      node2.setType(671);
      node2.isDebugger();
      // Undeclared exception!
//      try { 
        node2.removeChild(node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newString("orizginalname");
      Node node1 = new Node(50, node0, 37, 52);
      Node node2 = new Node(37, 37, 0);
      node2.cloneTree();
      node1.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node(43);
      node0.isBreak();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.isUnscopedQualifiedName();
      Node node1 = new Node((-2715), node0, node0, node0, 44, 16);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)56;
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte) (-90);
      byteArray0[5] = (byte)58;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-124);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("%", 30, 152);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      linkedHashSet0.add("%");
      node0.setDirectives(linkedHashSet0);
      Node node1 = new Node(30, node0, node0, node0, node0);
      node1.isEquivalentTo(node0);
      node1.siblings();
      Node node2 = node0.getParent();
      node1.isTrue();
      node2.setSideEffectFlags(57);
      node1.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(126, 30, 54);
      node1.srcrefTree(node0);
      node1.isBlock();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      node0.isAssignAdd();
      Node node1 = new Node(86, node0);
      node1.isHook();
      node1.isComma();
      node0.isAssign();
      node1.isDec();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newString("InputId: originalnaNe");
      node0.putIntProp(34, 44);
      Vector<Node> vector0 = new Vector<Node>(47);
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 34
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString("E.};", 1723, 149);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      NoObjectType noObjectType0 = mock(NoObjectType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(noObjectType0).toString();
      ImmutableList<NoObjectType> immutableList0 = ImmutableList.of(noObjectType0, noObjectType0, noObjectType0, noObjectType0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      // Undeclared exception!
//      try { 
        node1.getChildBefore(node0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = node0.copyInformationFrom(node0);
      Node node2 = node0.useSourceInfoFromForTree(node0);
      node0.setCharno((-1056));
      node2.toString(true, true, true);
      node2.isQualifiedName();
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node0.isQualifiedName();
      node0.getQualifiedName();
      node1.isTypeOf();
      node1.isVar();
      node1.isFromExterns();
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setVarArgs(false);
      node0.isDebugger();
      node0.toString();
      node0.isSwitch();
      Node node1 = new Node(40, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newString("rg:inaln|me");
      node0.checkTreeEqualsImpl(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node((-110), 31, 0);
      Node node2 = new Node(33, node1);
      node2.srcrefTree(node0);
      node2.getQualifiedName();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(119, 119, 119);
      node0.getJsDocBuilderForNode();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = new Node(102, 102, 40);
      Node node1 = new Node(22, node0, 40, 102);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.isFunction();
      node1.isEquivalentTo(node2, true, true, false);
      node2.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = new Node(36, node0, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = Node.newNumber((double) 46);
      node3.isFunction();
      node1.isEquivalentTo(node2, true, true, true);
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setVarArgs(true);
      node0.isDebugger();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 2042, 4);
      node0.srcref(node1);
      node0.toString();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = new Node(152);
      Node node1 = new Node((-652), node0, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.isGetElem();
      node1.isDebugger();
      node1.removeChild(node2);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isVar();
      node0.removeFirstChild();
      node0.isCast();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newNumber((double) 116);
      Node node1 = new Node(116, node0, node0, node0, 4733, 117);
      node0.isQuotedString();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.addChildToFront(node1);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node1.getAncestor(2);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gV?~1:#_ibDUU(zQ");
      Node node0 = new Node((-3323));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(77, nodeArray0);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
//      try { 
        node2.setDouble(51);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // TRY 0 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0);
      Node node1 = Node.newString(4095, "x9i7.A8k");
      Node node2 = new Node(154, node0, node0, node0, node1);
      node2.clonePropsFrom(node1);
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newNumber(782.85079850401);
      node0.isHook();
      node0.isComma();
      node0.isAssign();
      Node node1 = new Node(43);
      node1.cloneNode();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-2633), nodeArray0);
      Node node1 = new Node(46, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = new Node((-301), node1, 2, 15);
      node0.useSourceInfoFromForTree(node3);
      node0.setSourceEncodedPosition(8232);
      node0.isSyntheticBlock();
      node0.isNull();
      node2.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(1456);
      Node node1 = new Node(130);
      node0.srcref(node1);
      node1.isOnlyModifiesThisCall();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString("rg:inaln|me");
      node0.checkTreeEqualsImpl(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node((-110), 31, 0);
      Node node2 = new Node(33, node1);
      node2.srcref(node0);
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      Node node1 = Node.newNumber((double) 1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node0.srcrefTree(node1);
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node((-1));
      Node node1 = new Node(39, node0, node0, node0);
      node1.useSourceInfoFrom(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node(131, 131, 131);
      Node node1 = new Node(131, node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentTo(node1, false, false, false);
      node1.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.isEquivalentToTyped(node1);
      node2.useSourceInfoFromForTree(node0);
      node1.isOnlyModifiesArgumentsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(58, nodeArray0);
      Node node1 = Node.newString(4095, "x9i7.A8k");
      Node node2 = new Node(58, node0, node0, node0, node1);
      node2.clonePropsFrom(node1);
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "originalname");
      Node node0 = new Node(4);
      node0.cloneNode();
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(1709);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 1709
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.setStaticSourceFile((StaticSourceFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentTo(node0, true, true, true);
      node0.isExprResult();
      node0.getChildCount();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newString("rginaln|me");
      Node node1 = new Node(31, node0, node0, node0, 54, 49);
      node1.isNew();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      node0.hasOneChild();
      Node node1 = new Node((-59), node0, node0, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node node3 = null;
//      try {
        node3 = new Node(3, node2, node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString(115, "'#9f+_qtln;C", 369, 115);
      Node node1 = new Node(126, 55, (-825));
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.isFunction();
      node2.isEquivalentTo(node0, true, false, false);
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(26);
      node0.setLineno(3673);
      Node node1 = new Node((-259), node0, node0, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.setLength(113);
      node1.isEquivalentToTyped(node0);
      node1.isOnlyModifiesArgumentsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.setVarArgs(true);
      Node node1 = new Node((-5673), 8, (-1060));
      node1.isDelProp();
      node1.isUnscopedQualifiedName();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newNumber((double) 26, 2, 26);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentTo(node0, true, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getQualifiedName();
      node0.isDefaultCase();
      Node node1 = new Node(40, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newString("3HTN!# <:BO");
      Node node1 = new Node(105, node0);
      node1.useSourceInfoFrom(node0);
      node1.isFunction();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      ObjectType objectType0 = jSTypeRegistry0.createObjectType((ObjectType) templateType0);
      jSTypeArray0[0] = (JSType) objectType0;
      JSType[] jSTypeArray1 = new JSType[4];
      jSTypeArray1[0] = (JSType) templateType0;
      jSTypeArray1[1] = (JSType) templateType0;
      jSTypeArray1[2] = (JSType) templateType0;
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0, templateType0, templateType0);
      ImmutableList.copyOf((Collection<? extends TemplateType>) immutableList0);
      // Undeclared exception!
//      try { 
        FunctionType.getTopDefiningInterface(objectType0, "oiginalname");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.cloneNode();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = new Node(104, 104, 104);
      Node node1 = new Node(32, node0, node0, node0, 55, 2);
      node0.isQuotedString();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.addChildToFront(node1);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node2 = node0.getAncestor(49);
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node(13, 13, (-469));
      String string0 = "set2";
      node0.getLength();
      Node node1 = Node.newString("set2");
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)37;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node2 = new Node(149, node0, node0);
      node0.copyInformationFromForTree(node2);
      // Undeclared exception!
//      try { 
        node1.addChildrenToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node((-7276), (-7276), (-7276));
      Node node1 = new Node(53, node0, 31, 42);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.isFunction();
      node2.isEquivalentTo(node1, false, true, true);
      Node.newNumber((double) 29, 30, (-1314));
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = Node.newString("iterators");
      Node node1 = new Node(50);
      node0.isAssignAdd();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.isAssignAdd();
      node0.isVarArgs();
      Node node2 = new Node(51, node0);
      node1.isHook();
      node2.isFromExterns();
      node2.addChildrenAfter(node1, node0);
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newNumber((double) 52, 16, 50);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.addChildrenToFront(node0);
      node1.isFromExterns();
      node0.isTry();
      node2.isVarArgs();
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = Node.newString("ldA");
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.setDirectives(hashSet0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.getAncestors();
      Node node1 = new Node(52, node0, 8, 42);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isNE();
      node2.getAncestors();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = new Node(36, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.checkTreeEqualsImpl(node1);
      node2.siblings();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node(115);
      node0.setChangeTime(1081);
      node0.isBreak();
      Node node1 = Node.newString(48, "{t OED8U+7-W{", (-2520), 16);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isFalse();
      node0.getChildCount();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.getIntProp(33);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      int int0 = 487543;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[4];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      JSType[] jSTypeArray1 = new JSType[7];
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) objectType0, jSTypeArray0);
      jSTypeArray1[0] = (JSType) functionType0;
      jSTypeArray1[1] = (JSType) objectType0;
      JSType jSType0 = jSTypeRegistry0.getGreatestSubtypeWithProperty(jSTypeArray1[0], "Unknown class name");
      jSTypeArray1[2] = jSType0;
      jSTypeArray1[3] = (JSType) objectType0;
      jSTypeArray1[4] = (JSType) objectType0;
      jSTypeArray1[5] = (JSType) objectType0;
      jSTypeArray1[6] = (JSType) objectType0;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createTemplatizedType(objectType0, jSTypeArray1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = new Node(36, node0, node0, node0, node0);
      node0.isDefaultCase();
      node0.isFromExterns();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = new Node(48, 30, 54);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isEquivalentToTyped(node1);
      node0.isInc();
      Node.newString(50, "W?{ah:qXH.M%g", 8, 302);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.isDo();
      node1.replaceChild(node0, node2);
      // Undeclared exception!
//      try { 
        node0.copyInformationFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentTo(node0, true, true, true);
      Node node1 = new Node(63);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node(102);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = new Node(36, node0, node0, node0, node0);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo1);
      node0.getSourceFileName();
      node0.toString();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(1171);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(114, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.checkTreeEqualsImpl(node1);
      node2.siblings();
      node1.isArrayLit();
      // Undeclared exception!
//      try { 
        node1.removeChild(node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newString("rginaln|me");
      InputId inputId0 = new InputId("rginaln|me");
      node0.setInputId(inputId0);
      Node node1 = node0.copyInformationFrom(node0);
      boolean boolean0 = true;
      node0.putBooleanProp(42, true);
      Node node2 = new Node(1070, node1, 4, (-29));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING rginaln|me [side_effect_flags: com.google.javascript.rhino.Node$IntPropListItem@0000000004] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      node1.addChildrenToBack(node0);
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)78;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte) (-124);
      byteArray0[4] = (byte)108;
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte) (-81);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(110);
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(115);
      node0.setLineno((-1395));
      Node node1 = new Node(37, node0, node0, node0);
      node1.getSourceFileName();
      node1.clonePropsFrom(node0);
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = new Node(118);
      node0.getIntProp(116);
      Node node1 = Node.newString("NO_KEY_MATCH");
      Node node2 = node0.copyInformationFrom(node1);
      node2.toStringTree();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isWith();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(85, 36, (-1));
      Node node1 = node0.cloneNode();
      node0.addChildrenToBack(node1);
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = new Node(1171, 1171, 1171);
      node0.isNoSideEffectsCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("i%\"9K>t^", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(29, node0, 0, 40);
      node1.setSourceEncodedPositionForTree(56);
      // Undeclared exception!
//      try { 
        node0.getSourceOffset();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Should not call getLineOffset with line number 0
//         //
//         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      int int0 = Node.COLUMN_BITS;
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node node2 = Node.newString("pattern.flags", 32, 54);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.clonePropsFrom(node2);
      node0.isNE();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(58, nodeArray0, 58, 58);
      Node node1 = new Node(43, node0, node0, node0, node0, 8, 37);
      node0.isEquivalentTo(node1, true, true, true);
      node0.isAssignAdd();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString(43, "ghr=gx,", 108, 43);
      Node node1 = new Node(38, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node2.setJSDocInfo(jSDocInfo0);
      node2.isFunction();
      node1.isEquivalentTo(node2, false, false, false);
      node0.hasChildren();
      Node.newNumber(1749.453900399008);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(118);
      Node node1 = new Node(31, node0, node0, node0, 46, (-2733));
      node1.children();
      node1.isEquivalentTo(node0, true, false, false);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.toStringTree();
      // Undeclared exception!
//      try { 
        node1.replaceChild((Node) null, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node node1 = Node.newString("com.google.common.base.CharMatcher$5", 1, (-1444));
      node0.clonePropsFrom(node1);
      node0.isOnlyModifiesArgumentsCall();
      node0.isCase();
      node0.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = new Node(115);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.cloneTree();
      node0.getChangeTime();
      Node node1 = new Node(Integer.MAX_VALUE, node0, node0, node0, 39, 124);
      node0.getIndexOfChild(node1);
      Node.mergeLineCharNo(40, 58);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(47, node0);
      node1.isNew();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = new Node(58, 58, 58);
      Node node1 = new Node(0, 15, 112);
      Node node2 = new Node(39, node0, node0, node1, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = node0.cloneNode();
      node0.addChildrenToBack(node1);
      node1.checkTreeEquals(node0);
      node1.isSwitch();
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(46, node0, 36, 31);
      node1.getIntProp(56);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isWith();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = new Node(118);
      node0.getIntProp(116);
      Node node1 = Node.newNumber(31.0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "tp");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.detachChildren();
      node0.isWith();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node((-3971), node0, node0);
      Node node2 = node1.srcref(node0);
      node2.isFunction();
      node2.siblings();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = Node.newString(166, "_?\"(xwB3 ", 54, 51);
      Node node3 = new Node(55, node1, node2, 4, 32);
      node0.detachFromParent();
      Node node4 = node1.useSourceInfoFrom(node0);
      node4.isEquivalentToTyped(node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node4.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(58, nodeArray0, 58, 58);
      node0.isObjectLit();
      Node node1 = new Node(35, node0);
      Node node2 = new Node((-577), node1, node1);
      Node node3 = node1.srcref(node2);
      node2.isFunction();
      node2.checkTreeTypeAwareEqualsImpl(node3);
      node3.siblings();
      node2.isCatch();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = new Node(113);
      node0.setLength(113);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newNumber(1969.0);
      int int0 = Node.COLUMN_BITS;
      Node node1 = new Node(32);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isSetterDef();
      node0.addChildrenToFront(node2);
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "origianame");
      Node node0 = new Node(119);
      node0.setLineno(119);
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(113, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      int int0 = (-1046);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType.cast((JSType) null);
      node2.copyInformationFromForTree(node3);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("e(QK8", node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node(2, node0, node0);
      node0.srcref(node1);
      node1.isFunction();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3/H#$*TL", 127, 127);
      Node node1 = new Node(30, node0, node0, node0, node0, 2, 38);
      Node node2 = new Node(153, 30, 54);
      node2.isNull();
      node0.setSourceEncodedPosition(4095);
      node1.putBooleanProp(42, false);
      node1.isThrow();
      node2.isCast();
      node0.isSwitch();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = new Node((-7276), (-7276), (-7276));
      Node node1 = new Node(53, node0, 31, 42);
      node1.removeProp(46);
      node1.isInstanceOf();
      node0.mayMutateArguments();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = new Node((-2011));
      node0.isVar();
      Node node1 = new Node(105, 51, (-1604));
      Node node2 = new Node(153, node0, (-1604), 0);
      node0.useSourceInfoFrom(node2);
      Node node3 = new Node(4, node2, node2);
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node((-1388), nodeArray0);
      node3.addChildrenToFront(node4);
      node0.isEquivalentToShallow(node1);
      node4.getCharno();
      Node.newString("%Z}~Gg");
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-7276));
      int int0 = Node.COLUMN_BITS;
      Node node1 = new Node(39, node0, node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isNE();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node2.getIntProp(1);
      node2.getDirectives();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(98, 98, 98);
      node0.isCatch();
      Node node1 = Node.newNumber(48.0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Iterator<JSType> iterator0 = arrayList0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList1);
      Node node3 = new Node((-3444), node0, node2, node1, 57, 4);
      node3.removeProp(8);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.isForwardDeclaredType("<KN_");
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toString(false, true, true);
      Node node1 = new Node((-4648), node0, node0, node0, 5871, 44);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node0);
      node_NodeMismatch0.equals(node1);
      node1.removeProp(12);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node node3 = null;
//      try {
        node3 = new Node(83, node2, 110, 16);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node node0 = new Node(105);
      node0.cloneNode();
      node0.isAssignAdd();
      Node node1 = Node.newString("7%i^u%C", 12, 9);
//      try { 
        node1.setDouble(42);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING 7%i^u%C 12 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      int int0 = 2005;
      Node node1 = new Node(2348, 2005, 125);
      node1.isWith();
      node1.setWasEmptyNode(true);
      // Undeclared exception!
//      try { 
        node0.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isNoSideEffectsCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("J<", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getJSDocInfo();
      Node node1 = new Node(38, node0, 4095, 49);
      node1.toString();
      node0.getSourceOffset();
      node1.isVoid();
      node1.useSourceInfoFromForTree(node0);
      node0.getAncestor(8);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = new Node(1117);
      node0.isFromExterns();
      Node node1 = new Node(39, node0, node0, node0, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newNumber(13.942686973155018);
      int int0 = Node.COLUMN_BITS;
      Node node1 = new Node(38);
      Node node2 = node1.clonePropsFrom(node0);
      Node node3 = Node.newString(57, "com.google.common.base.CharMatcher$And", (-1127), (-2682));
      node3.isSetterDef();
      node1.addChildrenToFront(node3);
      node3.addChildrenToBack(node2);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = new Node(101);
      node0.isFromExterns();
      node0.isDefaultCase();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node((-463), node0, node0, node0, 52, 46);
      node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp((-624));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: -624
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      int int0 = Node.COLUMN_BITS;
      Node node0 = new Node(98);
      Node node1 = new Node(52);
      Node node2 = node0.clonePropsFrom(node1);
      node2.isSetterDef();
      node2.checkTreeEquals(node1);
      Node node3 = new Node(4659, node1, node0, node2);
      node1.addChildrenToFront(node3);
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = new Node(119);
      node0.isVar();
      node0.isBlock();
      node0.addChildrenToFront(node0);
      Node node1 = Node.newString("reflected_object", 149, 1723);
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newNumber((-2520.076));
      node0.putIntProp(44, 44);
      // Undeclared exception!
//      try { 
        node0.setString("3HTNd# <:BO");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 44
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = Node.newString(166, "_?\"(xwB3 ", 54, 51);
      Node node3 = new Node(55, node1, node2, 4, 32);
      Node node4 = node1.useSourceInfoFrom(node0);
      node4.isEquivalentToTyped(node1);
      node1.isFunction();
      node0.isCatch();
      Node node5 = Node.newNumber((double) 43, 3685, 2);
      node5.getProp(50);
      node3.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = new Node(108);
      node0.mayMutateGlobalStateOrThrow();
      node0.isSwitch();
      node0.getLength();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(75, nodeArray0, (-918), 105);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("978=Sq@pcLOF");
      node0.setDirectives(linkedHashSet0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Node node1 = new Node(0, node0);
      node0.checkTreeEqualsImpl(node1);
      node0.isTrue();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.siblings();
      node0.isNE();
      Node node1 = Node.newNumber(0.0, (-220), 4095);
      node0.clonePropsFrom(node1);
      Node node2 = new Node(16, node0);
      node0.isHook();
      node0.isComma();
      Node node3 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      // Undeclared exception!
//      try { 
        node3.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node(102);
      Node node2 = new Node(29, node1, node0, node0, node0);
      node2.setSourceFileForTesting("");
      Node node3 = new Node(48, 30, 54);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.replaceChild(node0, node3);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = Node.newNumber(1.0);
      node0.useSourceInfoFrom(node1);
      node0.mayMutateGlobalStateOrThrow();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newString("rginaln|me");
      Node node1 = Node.newString("rginaln|me", 278, 28);
      node0.checkTreeEqualsImpl(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = new Node((-110), 31, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rginaln|me");
      Node node3 = new Node(33, node2);
      node3.getQualifiedName();
      Node node4 = Node.newNumber((double) 15);
      node4.isReturn();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = node0.getLastSibling();
      node0.isEquivalentToShallow(node1);
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // HOOK is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = Node.newString(166, "_?\"(xwB3 ", 54, 51);
      Node node3 = new Node(55, node1, node2, 4, 32);
      Node node4 = node1.useSourceInfoFrom(node0);
      node4.isEquivalentToTyped(node1);
      node1.isFunction();
      node4.getJSDocInfo();
      node4.removeChild(node0);
      node2.addChildrenToBack(node3);
      node1.getBooleanProp(49);
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      Node node1 = new Node(2, node0, 43, 116);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isVar();
      Node node3 = null;
//      try {
        node3 = new Node(40, node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      Node node1 = new Node(32, node0, node0, node0, 55, 2);
      node0.isQuotedString();
      node1.useSourceInfoFrom(node0);
      Node node2 = new Node(43, node1, 54, 56);
      node2.isEquivalentToTyped(node1);
      node1.isFunction();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType((String) null, node1, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      Node node1 = new Node(30, 12, 56);
      Node node2 = node0.useSourceInfoFrom(node0);
      node2.isReturn();
      node2.isEquivalentTo(node0, false, true, true);
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("EMPTY", false);
      Node node0 = Node.newNumber((-2701.4061438), 58, 58);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getJSDocInfo();
      Node node1 = new Node(2158, node0, 8, 53);
      node0.toString();
      node0.getSourceOffset();
      node1.isVoid();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node((-80), (-80), (-80));
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node.newString(102, "jtQTc?]T'T3>H#$*TL", 102, 102);
      Node node0 = new Node(31, 1, 12);
      node0.isDelProp();
      node0.isDo();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newString(33, "^4!NW>", 2241, (-4062));
      Node node1 = new Node((-2039), node0, node0, node0, node0, (-4576), 36);
      Node node2 = new Node((-3099), 33, (-4576));
      node1.isNull();
      node2.setSourceEncodedPosition(12);
      node1.putBooleanProp(4095, false);
      node0.isThrow();
      node2.isCast();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newString((-203), "", (-203), 58);
      Node node1 = Node.newString("");
      Node node2 = new Node((-1), node0, node1, node0, node0, 31, 51);
      Node node3 = new Node(0, 54, 86);
      node2.isNull();
      node1.setSourceEncodedPosition(52);
      node0.putBooleanProp(29, true);
      node1.isThrow();
      node2.isCast();
      node3.cloneNode();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = Node.newString(43, "ghr=gx,", 108, 43);
      Node node1 = new Node(108, node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isFunction();
      node2.isEquivalentTo(node0, false, false, false);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node((-7276), (-7276), (-7276));
      Node node1 = new Node(53, node0, 31, 42);
      node0.detachChildren();
      node1.removeProp(46);
      node1.setOptionalArg(false);
      node0.setSourceEncodedPositionForTree(15);
      node1.copyInformationFromForTree(node0);
      node1.isInstanceOf();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3/H#$*TL", 127, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 2, 38);
      node1.cloneNode();
      Node node2 = new Node(153, 30, 54);
      node2.isNull();
      node0.setSourceEncodedPosition(4095);
      node1.putBooleanProp(44, false);
      node1.isThrow();
      node2.isCast();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(113);
      node0.setLength(113);
      node0.isDefaultCase();
      node0.isThrow();
      node0.isCast();
      Node node1 = node0.cloneNode();
      // Undeclared exception!
//      try { 
        node0.replaceChild(node1, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3/H#$*TL", 127, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 2, 38);
      Node node2 = new Node(153, 30, 54);
      node2.isNull();
      node0.setSourceEncodedPosition(4095);
      node1.putBooleanProp(44, false);
      node2.checkTreeEqualsImpl(node0);
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3/H#$*TL", 127, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 2, 38);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node2 = node0.copyInformationFrom(node1);
      node1.getBooleanProp(12);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.useSourceInfoFrom(node2);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node3 = null;
//      try {
        node3 = new Node(30, nodeArray0, 40, (-1747));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newString(6, "Object#Key", 27, 30);
      Node node1 = new Node(49);
      Node node2 = new Node(31, node0, node0, node1, node0, 55, 108);
      Node node3 = new Node(105, 57, 105);
      node0.isNull();
      node0.setSourceEncodedPosition(14);
      Node node4 = Node.newString(5, "Object#Key");
      node4.putBooleanProp(30, true);
      node4.isCast();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(42, node0);
      node0.isContinue();
      Node node2 = new Node(52, node1, node1, node1, 30, 51);
      node0.setVarArgs(true);
      InputId inputId0 = new InputId("originalname");
      node1.setInputId(inputId0);
      Node node3 = Node.newString("originalname");
      Node node4 = node3.copyInformationFrom(node2);
      node4.putBooleanProp(56, true);
      Node node5 = new Node(464, node4, 50, (-1160));
      node4.toString();
      node1.copyInformationFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = new Node(33, (-4062), 93);
      node0.isEmpty();
      node0.isNull();
      Node node1 = Node.newNumber((double) 42);
      node1.setSourceEncodedPosition(21);
      Node node2 = new Node(1358, node0, node1, node1);
      node2.putBooleanProp(29, false);
      node0.isThrow();
      node2.isCast();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = new Node(58, 58, 58);
      Node node1 = new Node(49, node0, node0, node0, 32, 38);
      node1.getAncestors();
      node0.isVar();
      node1.useSourceInfoIfMissingFrom(node0);
      node0.isBlock();
      Node node2 = new Node(4, 16, 30);
      node2.addChildrenToFront(node1);
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(113);
      node0.setLength(113);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isDefaultCase();
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
//      try { 
        node0.getAncestor((-473));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      Node node1 = new Node(29, node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.children();
      // Undeclared exception!
//      try { 
        node1.addChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node((-7276), 4, (-7276));
      Node node1 = new Node(53, node0, 31, 42);
      node0.isFor();
      node0.putIntProp(47, 43);
      InputId inputId0 = new InputId("InputId: originalname");
      node1.removeProp(46);
      node1.isInstanceOf();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(48, 30, 54);
      node0.isWith();
      node0.isNull();
      node1.setSourceEncodedPosition(1297);
      node0.putBooleanProp((-14), true);
      node0.isThrow();
      node0.isCast();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.mayMutateArguments();
      node1.setSourceEncodedPosition(536870912);
      node2.isCast();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = new Node(31, node0, node0, node0, 1, 3679);
      Node node2 = node0.srcref(node1);
      node0.mayMutateGlobalStateOrThrow();
      node0.isAdd();
      node2.getDirectives();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      Node node1 = new Node(39, node0, node0, node0);
      node1.setLineno(111);
      node0.isQuotedString();
      node1.putIntProp((-983), 57);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.addChildToFront(node1);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node2 = node0.getAncestor(49);
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node(115);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.putBooleanProp(103, false);
      Node node1 = new Node(154, node0, node0, node0);
      node1.isThrow();
      node0.isCast();
      node1.isStringKey();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(58, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 717, (-1516));
      Node node1 = new Node(42, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.checkTreeEquals(node1);
      node2.getQualifiedName();
      node2.copyInformationFrom(node0);
      // Undeclared exception!
//      try { 
        Node.newString(30, (String) null, 52, 0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(58, nodeArray0, 1351, 1351);
      Node node1 = Node.newNumber((-3818.9963));
      Node node2 = new Node(1508, node0, node1, 2002, 51);
      node0.getSourceFileName();
      node2.removeFirstChild();
      node0.isBreak();
      node0.isWhile();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node(98);
      int int0 = Node.INCRDECR_PROP;
      Node node1 = new Node(2, node0, node0, node0, 2, 16);
      node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = null;
//      try {
        node2 = new Node((-291), node0, 4, 612);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(98, 98, 98);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPositionForTree((-558));
      node0.isExprResult();
      Node node1 = node0.useSourceInfoFrom(node0);
      node1.checkTreeEqualsImpl(node0);
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      Node node1 = new Node(32, node0, node0, node0, 55, 2);
      node0.isQuotedString();
      node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = new Node(2, node0, 43, 119);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.cloneNode();
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no next sibling.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node(98);
      node0.getBooleanProp(98);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isUnscopedQualifiedName();
      node0.isEquivalentTo(node0, true, true, true);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString("iW\"<_>G8Ak%0S}");
      Node node1 = new Node(482, node0, node0, node0);
      node0.getSourceOffset();
      node0.setChangeTime(920);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isQuotedString();
      Node node3 = new Node(47, node1, node2, node1);
      node0.setChangeTime((-2382));
      Node node4 = node3.useSourceInfoFrom(node0);
      node4.removeChildren();
      node1.addChildrenToFront(node3);
      Node node5 = null;
//      try {
        node5 = new Node(482, node1, node0, node0, 4, 154);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      Node node1 = new Node(32, node0, node0, node0, 55, 2);
      node0.isQuotedString();
      node1.putIntProp((-983), 57);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.addChildToFront(node1);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.getAncestor(49);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = new Node(2, node0, 43, 119);
      node0.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no next sibling.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = new Node(115);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "L+Tp2HU~Y?kn)3m$$=");
      Node node1 = Node.newString("i", 2, 148);
      node0.useSourceInfoFromForTree(node1);
      node0.isBreak();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newString(102, "jtQTc?]T'T3>H#$*TL", 102, 24);
      // Undeclared exception!
//      try { 
        node0.isEquivalentTo((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = Node.newString(166, "_?\"(xwB3 ", 54, 51);
      Node node3 = new Node(55, node1, node2, 4, 32);
      Node node4 = node1.useSourceInfoFrom(node0);
      node4.isEquivalentToTyped(node1);
      node1.isFunction();
      node2.addChildrenToBack(node3);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = Node.newNumber((-3818.9963));
      int int0 = Node.COLUMN_BITS;
      Node node1 = new Node(42);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isSetterDef();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      node1.addChildrenToFront(node0);
      node1.addChildrenToBack(node2);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "W_'o7=yXQ{%");
      Node node0 = Node.newString((-1142), "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 0, (-1142));
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node((-33), nodeArray0);
      Node node2 = new Node(0, node0, node1, node0, node1);
      node1.putBooleanProp(1047, false);
      Node node3 = node2.useSourceInfoFrom(node0);
      node3.isSwitch();
      // Undeclared exception!
//      try { 
        node3.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString(43, "ghr=gx,", 108, 43);
      Node node1 = new Node(4, node0, node0, node0, node0, 0, 47);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.isFunction();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString("orginlam0e");
      Node node1 = new Node(36, node0);
      node1.isEquivalentToTyped(node1);
      node1.setSourceEncodedPositionForTree(49);
      node1.setJSDocInfo((JSDocInfo) null);
      node1.isEquivalentTo(node0, true, true, true);
      node1.useSourceInfoFrom(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isQualifiedName();
      node0.getIntProp((-1545));
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = new Node(152);
      Node node1 = Node.newString(149, ":$ R-~D'vl(I:tQl", 483, 3824);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.siblings();
      node0.isNull();
      node1.getProp((-2126));
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(31, "%s (%s) must be less than size (%s)", 117, 79);
      Node node1 = new Node(45, node0);
      nodeArray0[0] = node1;
      Node node2 = new Node((-1), nodeArray0, 30, 112);
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newString("orginlam0e");
      Node node1 = new Node(36, node0);
      node1.isEquivalentToTyped(node1);
      node1.setSourceEncodedPositionForTree(49);
      node1.isEquivalentTo(node0, true, true, true);
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.checkTreeEqualsImpl(node2);
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = new Node(152, 152, 152);
      node0.isNoSideEffectsCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("J<", false);
      simpleSourceFile0.getLineOffset(725);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isQuotedString();
      node0.isSetterDef();
      Node node1 = new Node(2);
      node0.addChildrenToFront(node1);
      node1.addChildrenToBack(node0);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = new Node(30, (-851), (-851));
      node0.isCast();
      Node node1 = Node.newString(15, "W_'o7=yXQ{%", 351, (-125));
      node1.isArrayLit();
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(49, node1, node0);
      node2.removeProp(155);
      node1.isNE();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isNoSideEffectsCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("J<", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isQuotedString();
      node0.isSwitch();
      Node node1 = new Node(1022, node0, node0, node0, 306, 1);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newNumber((double) 115);
      int int0 = Node.COLUMN_BITS;
      Node node1 = new Node(43);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = new Node(119);
      node0.isVar();
      InputId inputId0 = new InputId("Type names cannot contain template annotations.");
      Node node1 = Node.newString("Type names cannot contain template annotations.");
      Node node2 = node0.copyInformationFrom(node1);
      node2.putBooleanProp((-2228), false);
      Node node3 = new Node(3420, node1, 53, 36);
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(42, node0);
      node0.isArrayLit();
      Node node2 = new Node(52, node1, node1, node1, 30, 51);
      node0.setVarArgs(true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InputId inputId0 = new InputId("originalname");
      node1.setInputId(inputId0);
      Node node3 = Node.newString("originalname");
      Node node4 = node3.copyInformationFrom(node2);
      node4.putBooleanProp(56, true);
      // Undeclared exception!
//      try { 
        node3.clonePropsFrom(node2);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Node has existing properties.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newString(102, "jtQTc?]T'T3>H#$*TL", 102, 24);
      node0.isNot();
      Node node1 = new Node(40, node0);
      node1.isThrow();
      node0.isEquivalentToTyped(node0);
      node0.getDirectives();
      node1.cloneNode();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals(node0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newString("3HTN!# <:BO");
      Node node1 = new Node(105);
      Node node2 = new Node(52);
      InputId inputId0 = new InputId("3HTN!# <:BO");
      node2.setInputId(inputId0);
      node1.copyInformationFrom(node0);
      StringWriter stringWriter0 = new StringWriter(47);
      stringWriter0.append('l');
      stringWriter0.write("Y#");
      node1.appendStringTree(stringWriter0);
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = new Node(47, node0, 46, 48);
      Node node2 = new Node(48, 30, 54);
      node2.isBlock();
      node1.toString();
      Node node3 = Node.newNumber(0.5);
      node0.copyInformationFromForTree(node3);
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = new Node(47, node0, 46, 48);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.removeProp(102);
      node1.isVar();
      node0.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(152);
      int int0 = Node.COLUMN_BITS;
      Node node1 = new Node((-3887), node0, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isNE();
      node2.addChildrenToFront(node1);
      // Undeclared exception!
//      try { 
        node2.addChildrenToBack(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString("3HTN!# <:BO");
      Node node1 = new Node(105);
      node0.isWhile();
      node1.addChildrenToFront(node0);
      Node node2 = node1.getLastSibling();
      node2.isEquivalentToShallow(node0);
      node0.isIn();
      node2.isExprResult();
      node2.isFromExterns();
      node2.removeChildren();
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node(39);
      Node node1 = new Node(39, node0, node0, node0, 1, 40);
      Node node2 = node1.cloneNode();
      node1.checkTreeEqualsImpl(node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isSetterDef();
      node2.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = new Node(132);
      int int0 = Node.INCRDECR_PROP;
      Node node1 = new Node(132, node0, 120, 53);
      node0.checkTreeEquals(node1);
      node0.toString();
      node0.isExprResult();
      node0.isQualifiedName();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.getChildCount();
      node0.getType();
      JSTypeNative jSTypeNative0 = JSTypeNative.NO_TYPE;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSTypeRegistry0.createObjectType("H?*", node0, (ObjectType) null);
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.toString(true, false, false);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) objectType0, jSTypeArray0);
      jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, objectType0);
      node0.getLength();
      Node node1 = node0.getAncestor(0);
      node0.getProp(24);
      node1.isOptionalArg();
      node0.isReturn();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = new Node(132);
      int int0 = Node.INCRDECR_PROP;
      node0.wasEmptyNode();
      Node node1 = new Node(132, node0, 120, 53);
      node0.checkTreeEquals(node1);
      node0.isEquivalentToTyped(node1);
      node1.getDirectives();
      node1.useSourceInfoFromForTree(node0);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString(115, ":$ R-~D'vl(I:tQl", 44, 133);
      Node node1 = new Node(115, node0, node0, node0, 8, 38);
      Node node2 = new Node(147, node1, (-923), 46);
      node2.isVar();
      Node node3 = Node.newString(30, ":$ R-~D'vl(I:tQl", 54, 50);
      node3.setWasEmptyNode(false);
      node3.getChildAtIndex(0);
      node2.setLineno(4095);
      // Undeclared exception!
//      try { 
        node1.useSourceInfoIfMissingFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(108);
      node0.getAncestor(2);
      Node node1 = Node.newString("R:`.6i$!PI");
      node0.isQualifiedName();
      node0.isQualifiedName();
      Node node2 = Node.newString(1, "3Wl1", 29, 114);
      node0.getLastSibling();
      node1.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      Node node1 = new Node(53, node0, 31, 42);
      node0.setLineno(2401);
      node0.isVoid();
      node0.isEmpty();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 2, 38);
      Node node2 = new Node(126, 30, 54);
      node2.isNot();
      node0.isGetElem();
      node0.copyInformationFrom(node1);
      Node node3 = node1.cloneTree();
      node3.getSourceFileName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = null;
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
//      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Object#Key");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "originalname");
      Node node1 = Node.newString("InputId: originalname", 47, 2);
      node0.checkTreeEqualsImpl(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = new Node(38, 2, 15);
      node2.srcref(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "InputId: originalname");
      // Undeclared exception!
//      try { 
        node2.getQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME 47 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(48, 30, 54);
      node0.isWith();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte) (-80);
      byteArray0[2] = (byte)86;
      byteArray0[3] = (byte)48;
      byteArray0[4] = (byte)50;
      byteArray0[5] = (byte)56;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)41;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = new Node(42, 51, 29);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      InputId inputId0 = new InputId("InputId: com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      node2.setInputId(inputId0);
      Node node3 = new Node(56, node1, node2, node1);
      node0.copyInformationFrom(node3);
      StringWriter stringWriter0 = new StringWriter(110);
      stringWriter0.write((String) null);
      // Undeclared exception!
//      try { 
        node3.appendStringTree(stringWriter0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 56
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newNumber(2.0, 49, 49);
      node0.isLocalResultCall();
      node0.getJSDocInfo();
      node0.isDec();
      node0.toString();
      Node node1 = new Node(56, node0);
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no next sibling.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isNoSideEffectsCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("J<", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isDec();
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      InputId inputId0 = new InputId("numberToAdvance must be nonnegative");
      node0.setInputId(inputId0);
      Node node1 = new Node(0, node0, (-1093), (-2733));
      Node node2 = node0.copyInformationFrom(node1);
      StringWriter stringWriter0 = new StringWriter(55);
      stringWriter0.write("^-<%");
      node2.appendStringTree(stringWriter0);
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(33, (-4062), 93);
      node0.isGetProp();
      node0.getSourceFileName();
      // Undeclared exception!
//      try { 
        node0.isQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber((-2334.2975761330663));
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node1 = new Node(52, node0, node0, 86, 86);
      node1.copyInformationFromForTree(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.removeChildren();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.getJSType();
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(32, 37, 2);
      node1.isDelProp();
      node0.isEquivalentTo(node1, true, false, false);
      node1.isOptionalArg();
      node1.isCall();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(32, node0, node0, 36, 51);
      node1.useSourceInfoFromForTree(node0);
      node1.isNot();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node((-2741), nodeArray0);
      // Undeclared exception!
//      try { 
        node2.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2741
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = new Node(153);
      node0.isDebugger();
      Node node1 = Node.newString(":nY,`");
      Node node2 = node0.copyInformationFrom(node1);
      node0.putBooleanProp(47, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = new Node(2, node2, 1, 544);
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(32, 37, 2);
      node1.srcref(node0);
      node1.setLineno(1);
      node1.isDelProp();
      node0.getIntProp(115);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2356));
      Node node1 = new Node((-2356), node0, node0, 33, 1);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.useSourceInfoFromForTree(node0);
      node1.isNot();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(42, nodeArray0);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node2);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2356
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newString(43, "ghr=gx,", 43, 43);
      Node node1 = new Node(52, 30, 2);
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.isFunction();
      boolean boolean0 = false;
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", (-14), (-14));
      Node node1 = new Node(102, 30, 54);
      node1.isDec();
      Node node2 = new Node(16, node0);
      node2.isFromExterns();
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node3.addChildrenToFront(node2);
      node0.getJSType();
      node0.isFalse();
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      Node.newString("originalname");
      node0.setVarArgs(true);
      node0.setInputId(inputId0);
      Node node1 = node0.copyInformationFrom(node0);
      node1.hasChild(node0);
      StringWriter stringWriter0 = new StringWriter(31);
      stringWriter0.write("InputId: originalname");
      node0.getIntProp(30);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      int int0 = Node.COLUMN_BITS;
      Node node1 = new Node(12, node0, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node1.isNE();
      node2.addChildrenToFront(node1);
      node2.isReturn();
      // Undeclared exception!
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(32, 37, 2);
      node1.setLineno(1);
      node1.isDelProp();
      node1.isUnscopedQualifiedName();
      node0.getJSType();
      Node.newString(2, " [", (-1933), 57);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newString("orginlnme");
      Node node1 = new Node(50, node0, 52, 43);
      Node node2 = node1.removeFirstChild();
      node2.getLength();
      Node node3 = new Node(33, 57, 48);
      node3.isFromExterns();
      node3.useSourceInfoFrom(node2);
      Node node4 = null;
//      try {
        node4 = new Node(461845907, (Node) null, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newString((-3447), "H");
      Node node1 = new Node((-3447), node0, node0, node0);
      Node node2 = new Node((-3447), node1, (-1433), 51);
      Node node3 = node2.removeChildren();
      node0.putIntProp((-21), 1);
      node1.getDirectives();
      node1.addChildToFront(node2);
      node1.getProp(38);
      // Undeclared exception!
//      try { 
        node2.removeChild(node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(132);
      int int0 = Node.INCRDECR_PROP;
      node0.isFunction();
      Node node1 = new Node(111);
      node0.isEquivalentTo(node1, false, true, true);
      node0.isCall();
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$4");
      Node node1 = new Node(43, node0, node0, node0, 2846, 38);
      node1.siblings();
      node0.copyInformationFrom(node1);
      Node node2 = node1.getFirstChild();
      node2.toString();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node3.getCharno();
      Node.mergeLineCharNo(40, 52);
      node1.isQuotedString();
      node1.getDirectives();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newString("originalname", 98, (-844));
      node0.isDebugger();
      Node node1 = new Node(42, 57, 4);
      node0.isFromExterns();
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = new Node(1, node0, node0, node1, 54, 50);
      node3.isLabel();
      node2.isAssign();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newString(26, "", (-2011), (-2011));
      node0.setLineno(26);
      Node node1 = new Node(48, node0, node0, node0, 1, 39);
      node1.isCall();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newString("ghr=gx,", 31, 31);
      Node node1 = new Node(100, 116, (-1081));
      node1.isFromExterns();
      node1.useSourceInfoFrom(node0);
      node0.isLabel();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Vector<JSType> vector0 = new Vector<JSType>();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) objectType0, (List<JSType>) vector0);
      vector0.iterator();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      functionType0.canCastTo(objectType0);
      JSType jSType0 = jSTypeRegistry1.createOptionalNullableType(functionType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) functionType0, jSType0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) objectType0, (List<JSType>) immutableList0);
      jSTypeArray0[0] = (JSType) functionType1;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isTry();
      vector0.add(jSTypeArray0[0]);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setNoCheck(false);
      node0.hasMoreThanOneChild();
      Node node1 = Node.newString(115, "Node has existing properties.", 1, 47);
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2356));
      Node node1 = new Node((-2356), node0, node0);
      Node node2 = new Node((-2356), node1, node1, 33, 1);
      Node node3 = node2.useSourceInfoFromForTree(node0);
      node2.isNot();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node4 = new Node(42, nodeArray0);
      node2.checkTreeEquals(node3);
      node1.isCast();
      node3.isWhile();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString(108, "ghr=gx,");
      Node node1 = new Node(31, node0, node0, node0, 57, 42);
      node1.useSourceInfoFrom(node0);
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      String string0 = "H";
      Node node0 = Node.newString(42, "H");
      Node node1 = new Node(102, node0, node0, node0);
      Node node2 = new Node(55, node1, 1581, 309);
      node1.getStaticSourceFile();
      node2.isVarArgs();
      node2.putIntProp(27591, 309);
      node0.getDirectives();
      node0.addChildToFront(node2);
      node1.getProp(51);
      node0.getDirectives();
      Node node3 = node2.getAncestor(845);
      // Undeclared exception!
//      try { 
        node3.appendStringTree((Appendable) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = new Node(30, node0, node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isNE();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setNoCheck(false);
      node1.removeProp((-557));
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = Node.newString(166, "_?\"(xwB3 ", 54, 51);
      Node node3 = new Node(55, node1, node2, 4, 32);
      node1.useSourceInfoFrom(node0);
      node1.isFunction();
      node2.addChildrenToBack(node3);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = new Node(37);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isCatch();
      Node node2 = new Node(51, 111, (-1));
      node0.isEmpty();
      node0.toString();
      node2.isIn();
      Node node3 = new Node(3359, node1, node1);
      node3.isBlock();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = Node.newString(42, "ghr=gx,", 2576, 2404);
      node0.isParamList();
      node0.isNE();
      node1.isQualifiedName();
      Node.newString("ghr=gx,");
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", (-14), (-14));
      Node node1 = new Node(126, 30, 54);
      node0.getAncestor(53);
      node1.getJSDocInfo();
      node1.isEquivalentTo(node0, true, false, true);
      node0.isCall();
      Node node2 = new Node(30, 30, 4095);
      node2.isVarArgs();
      Node node3 = node2.copyInformationFromForTree(node0);
      node3.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = new Node(3258, node0, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = new Node(2, node1, (-721), 50);
      node3.isNE();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setOverride(false);
      jSDocInfo0.setNoCheck(false);
      node2.removeProp(12);
      node0.getSourceOffset();
      node2.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = new Node(0, 2308, 48);
      Node node1 = new Node(26, 57, 274);
      Node node2 = new Node(4, node0, node0, node1, node1, (-84), (-2245));
      node2.getAncestors();
      node2.mayMutateGlobalStateOrThrow();
      node0.copyInformationFromForTree(node2);
      node1.getAncestors();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(node_SideEffectFlags0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got RETURN
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = new Node((-834), 35, 1651);
      Node node1 = new Node(1, node0, 56, 48);
      node0.isNoSideEffectsCall();
      node0.isThis();
      InputId inputId0 = new InputId("InputId: originalname");
      node0.detachFromParent();
      node0.removeProp(369);
      node1.isInstanceOf();
      node0.isDo();
      node1.checkTreeEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = new Node(102);
      node0.cloneNode();
      Node node1 = new Node(46, 56, 4095);
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString(115, "xG{.$<4");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(115, node0, node0, node0);
      node1.removeProp(57);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isContinue();
      node2.clonePropsFrom(node1);
      node0.getSourceFileName();
      node1.getLastChild();
      Node.newString(15, "~oC4gA&iaPdlh4f", 57, 38);
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1.0);
      node0.getProp(31);
      node0.isQuotedString();
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = Node.newNumber((double) 16);
      node2.isComma();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = new Node(0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = node0.srcref(node1);
      node1.isObjectLit();
      node2.isCall();
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newString(43, "ghr=gx,", 108, 43);
      Node node1 = new Node(12, 48, 4);
      Node node2 = node1.useSourceInfoFrom(node0);
      boolean boolean0 = false;
      node1.setIsSyntheticBlock(false);
      Node node3 = node1.useSourceInfoFromForTree(node2);
      node3.addChildrenAfter(node2, (Node) null);
      node2.isFunction();
      // Undeclared exception!
//      try { 
        node1.addChildrenToBack(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2356));
      Node node1 = new Node((-2356), node0, node0);
      Node node2 = new Node((-2356), node1, node1, 33, 1);
      node2.cloneNode();
      node2.useSourceInfoFromForTree(node0);
      node2.isNot();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(42, nodeArray0);
      // Undeclared exception!
//      try { 
        node2.checkTreeEquals(node3);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2356
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node((-2011), 120, 120);
      node0.isFromExterns();
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newString((-3447), "H");
      Node node1 = new Node((-3447), node0, node0, node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isCatch();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(153, nodeArray0);
      node2.isNew();
      Node node3 = new Node(47, node2, 35, 117);
      node3.isEmpty();
      node3.addChildrenAfter(node1, node2);
      node2.toString();
      node2.getSourceOffset();
      node0.getProp(26);
      Node node4 = node3.copyInformationFrom(node0);
      Node node5 = node4.copyInformationFromForTree(node1);
      node4.isStringKey();
      node5.isDelProp();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = new Node(151);
      int int0 = Node.INCRDECR_PROP;
      node0.getBooleanProp(151);
      Node node1 = Node.newString("4&-zdT 4<)0", 57, 47);
      Node node2 = new Node(38, node1, 380, 12);
      InputId inputId0 = new InputId("2r,kTQkB'32SpL?^");
      inputId0.toString();
      Node node3 = Node.newString("com.google.javascript.rhino.jstype.JSType$2");
      node3.setInputId(inputId0);
      node2.copyInformationFrom(node1);
      Node node4 = Node.newNumber((double) 49);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isIn();
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node4.isFunction();
      node4.isDo();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = new Node(115, (-1723), (-1723));
      node0.setLength((-7276));
      node0.getLength();
      node0.getSourceOffset();
      node0.isDelProp();
      Node node1 = Node.newString("UKVov05r#~Nz\"_26");
      node1.putBooleanProp((-7276), false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.removeChildren();
      node0.mayMutateArguments();
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      Node node0 = Node.newString(":$ R-~D'vl(I:tQl", (-1679), (-210));
      node0.setQuotedString();
      node0.setType((-1679));
      Node node1 = new Node((-1679), node0, node0, node0, (-1150), 31);
      node1.getLastSibling();
      node1.isFromExterns();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(12);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -1679
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newNumber(2057.0606976144);
      node0.isVar();
      node0.setWasEmptyNode(false);
      Node node1 = new Node(8, node0, node0, node0, 8, 50);
      node0.setLineno(62);
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(12, nodeArray0);
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 8
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString(102, "jtQTc?]T'T3>H#$*TL", 102, 40);
      node0.isNot();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isInc();
      Node node1 = Node.newString("jtQTc?]T'T3>H#$*TL");
      node1.isDo();
      // Undeclared exception!
//      try { 
        node0.replaceChild(node1, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createInterfaceType("jJP_F/FR", (Node) null, (ImmutableList<TemplateType>) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      JSType jSType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs((ObjectType) functionType0, (JSType) functionType0, (List<JSType>) vector0);
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      // Undeclared exception!
//      try { 
        node0.addChildToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "y#U");
      Node node0 = new Node((-2354), (-1023), (-1023));
      node0.isFunction();
      node0.getStaticSourceFile();
      Node node1 = Node.newNumber((double) 52, 30, 4095);
      node0.copyInformationFromForTree(node1);
      node0.getJsDocBuilderForNode();
      // Undeclared exception!
//      try { 
        node0.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2354
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = Node.newNumber(1928.8069);
      node0.checkTreeEqualsImpl(node1);
      node1.srcrefTree(node2);
      Node node3 = new Node(48, 30, 54);
      node1.isFromExterns();
      node0.useSourceInfoFrom(node3);
      Node node4 = Node.newString((-3390), "LABEL");
      // Undeclared exception!
//      try { 
        node4.setSideEffectFlags(54);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -3390
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = new Node(53, node0, 31, 42);
      Node node2 = new Node(37);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isCatch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node2.children();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node2.setSideEffectFlags(node_SideEffectFlags4);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(114);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got WITH
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newString(40, "XD*T2M$3'}n!I?[", (-2011), 40);
      node0.setLineno(40);
      node0.isParamList();
      // Undeclared exception!
//      try { 
        node0.addChildrenToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.VOID_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      Node node0 = new Node(623);
      Node node1 = Node.newString(42, ")WJ=(IQ");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.isThis();
      InputId inputId0 = new InputId("Object#Element");
      node2.removeProp((-675));
      node1.isExprResult();
      node2.isArrayLit();
      node2.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = new Node(153);
      node0.isDebugger();
      Node node1 = new Node(123, 49, 47);
      node1.isFromExterns();
      node0.useSourceInfoFrom(node1);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(43);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got LABEL_NAME
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newString((-3447), "H");
      Node node1 = new Node((-3447), node0, node0, node0);
      Node node2 = new Node((-3447), node1, (-1396), 51);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node2.setJSDocInfo(jSDocInfo0);
      node0.putIntProp((-21), 1);
      node2.getChangeTime();
      node1.getDirectives();
      node1.addChildToFront(node2);
      node1.getProp(38);
      node1.getDirectives();
      node1.getAncestor(55);
      Node.mergeLineCharNo(62, 91);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      Node node1 = Node.newString("originalname");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      linkedHashSet0.add("originalname");
      node0.setInputId(inputId0);
      node0.setDirectives(linkedHashSet0);
      Node node2 = node0.copyInformationFrom(node0);
      node2.getJSDocInfo();
      Node node3 = new Node((-426), node2, (-1), 4095);
      node1.isEmpty();
      node2.toString();
      node1.getAncestor(40);
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newString((-14), "jtQTc?]T'T3>H#$*TL", (-1847), (-14));
      Node node1 = new Node(126, (-417), 32);
      node0.isWith();
      Node node2 = new Node((-1756), 3527, (-5055));
      node1.clonePropsFrom(node2);
//      try { 
        node1.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // LABEL is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      Node node1 = new Node(30, node0, node0, node0, node0);
      Node node2 = new Node(57, node1);
      Node node3 = node1.useSourceInfoIfMissingFrom(node1);
      Node node4 = Node.newNumber((double) 1, (-637), 53);
      // Undeclared exception!
//      try { 
        node4.addChildrenToFront(node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newString(136, "R:`.6i$!PI", 136, 136);
      node0.isUnscopedQualifiedName();
      node0.getString();
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
//      try { 
        node0.isEquivalentTo((Node) null, false, true, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(103, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 103, 103);
      Node node1 = new Node(36, node0);
      Node node2 = new Node(32);
      node2.checkTreeEquals(node0);
      node0.getQualifiedName();
      node1.getQualifiedName();
      node2.isTypeOf();
      node0.srcref(node1);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp((-1479));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: -1479
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newString((-1871), "yu(:GnD1#", (-1499), 1372);
      node0.isNE();
      Node node1 = new Node(37);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isThis();
      InputId inputId0 = new InputId("v$3qnbZ");
      node2.removeProp(128);
      node1.isInstanceOf();
      // Undeclared exception!
//      try { 
        node1.replaceChild(node0, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString(46, ".es:3");
      Node node1 = new Node(38, node0, node0, node0);
      node1.setWasEmptyNode(false);
      node0.getString();
      Node node2 = new Node(103, (-1144), 31);
      node2.cloneTree();
      node0.isUnscopedQualifiedName();
      Node node3 = Node.newNumber((-4976.5), (-1805), 29);
      node3.isFunction();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(152);
      node0.isNoSideEffectsCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("J<", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isDec();
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isSetterDef();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getJSDocInfo();
      Node node1 = new Node(38, node0, 4095, 2147483645);
      node1.isEmpty();
      node1.toString();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      int int0 = 115;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)118;
      byteArray0[6] = (byte)40;
      byteArray0[7] = (byte)43;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(115);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = new Node(48, 30, 54);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "3HTN!# <:BO";
      Node node3 = Node.newString("3HTN!# <:BO", (-2391), 51);
      Node node4 = new Node(39, node3, node2, node1, node1);
      node4.isHook();
      node0.useSourceInfoFrom(node4);
      // Undeclared exception!
//      try { 
        node2.addChildrenToFront(node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = new Node(98);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(".=GQQX7F?(G", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isDec();
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isSetterDef();
      Node node1 = Node.newString(43, "Object#Element", 485, (-1));
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.addChildrenToFront(node1);
      node1.isReturn();
      Node node3 = Node.newString((-463), ".=GQQX7F?(G", 0, 761);
      node3.getJSType();
      node3.isFalse();
      node2.getNext();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = new Node(33, (-4062), 93);
      node0.isCatch();
      node0.isGetProp();
      node0.getSourceFileName();
      // Undeclared exception!
//      try { 
        node0.getQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = new Node(98);
      node0.isFromExterns();
      Node node1 = new Node(51, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.addChildrenToFront(node1);
      node2.isReturn();
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.EVAL_ERROR_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Vector<JSType> vector0 = new Vector<JSType>();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) objectType0, (List<JSType>) vector0);
      functionType0.hasAnyTemplateTypes();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      functionType0.canCastTo(objectType0);
      JSType jSType0 = jSTypeRegistry1.createOptionalNullableType(functionType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) functionType0, jSType0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) objectType0, (List<JSType>) immutableList0);
      jSTypeArray0[0] = (JSType) functionType1;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isTry();
      vector0.add(jSTypeArray0[0]);
      node0.getType();
      node0.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString(15, "3HTN!# <:BO", 2212, 115);
      node1.isSetterDef();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry((ErrorReporter) null, true);
      Node node2 = jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      node2.isExprResult();
      node1.isArrayLit();
      node0.isEquivalentTo(node2, true, false, true);
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      node0.siblings();
      node0.setCharno(37);
      node0.toString(true, false, true);
      node0.isQualifiedName();
      node0.getChangeTime();
      node0.isSetterDef();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getJSDocInfo();
      Node node1 = new Node(50, node0, 31, 56);
      node0.isEmpty();
      node0.toString();
      node0.getSourceOffset();
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 2, 38);
      Node node2 = new Node(126, 30, 54);
      node1.isNot();
      node0.isGetElem();
      node0.setSourceEncodedPosition(4095);
      node1.putBooleanProp(44, false);
      node1.isThrow();
      node2.isCast();
      node1.setSideEffectFlags((-2886));
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = Node.newString(47, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 47, 47);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node0.isAdd();
      node0.getJsDocBuilderForNode();
      node0.isVarArgs();
      node0.isVarArgs();
      node1.isRegExp();
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      Node node1 = Node.newString("originalname");
      node0.setVarArgs(true);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      node0.setInputId(inputId0);
      Node node2 = node0.copyInformationFrom(node0);
      node0.isNew();
      StringWriter stringWriter0 = new StringWriter(31);
      stringWriter0.write("InputId: originalname");
      node0.appendStringTree(stringWriter0);
      node1.siblings();
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = new Node(130);
      int int0 = Node.INCRDECR_PROP;
      node0.isDebugger();
      Node node1 = new Node(48);
      node0.useSourceInfoFrom(node1);
      // Undeclared exception!
//      try { 
        node1.setDouble(47);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 48
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(57, node0, node0, node0, node0, (-1730), 49);
      Node node2 = node0.srcref(node1);
      node1.isObjectLit();
      node1.isCall();
      node2.getAncestors();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(58, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 717, (-1519));
      Node node1 = new Node(42, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.addChildrenToFront(node2);
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node(132);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5B>vdhAwoyJ");
      Node node1 = node0.cloneTree();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      int int0 = Node.INCRDECR_PROP;
      Node node2 = new Node(31, 1070, 1070);
      node0.getQualifiedName();
      node2.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node2.srcref(node0);
      node0.isHook();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-2416), node0, node0, node1, node0);
      node0.isCall();
      node1.isBreak();
      node0.hasOneChild();
      // Undeclared exception!
//      try { 
        node2.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2416
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = new Node(48, 30, 54);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isEquivalentToTyped(node1);
      node0.isInc();
      node1.isDo();
      node1.replaceChild(node0, node2);
      // Undeclared exception!
//      try { 
        node0.copyInformationFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = new Node(126, 2412, 126);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      int int0 = Node.INCRDECR_PROP;
      Node node1 = new Node(2412, (-1596), 49);
      node0.getQualifiedName();
      node0.isTypeOf();
      Node node2 = node0.srcref(node1);
      node2.isHook();
      node1.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      String string0 = "3HTN!# <:BO";
      Node.newString("3HTN!# <:BO");
      Node node0 = new Node(105);
      node0.isAssignAdd();
//      try { 
        node0.setDouble(12);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FUNCTION <invalid> is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString(4194304, "jtQTc?]T'T3>H#$*TL", (-2906), (-3036));
      node0.isStringKey();
      node0.isParamList();
      Node.newNumber((double) 37, 57, 4194304);
      node0.mayMutateGlobalStateOrThrow();
      node0.isInc();
      node0.isDo();
      Node node1 = Node.newNumber((double) 37, 233, 1716);
      // Undeclared exception!
//      try { 
        node0.replaceChild(node1, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString("3HTNd# <:BO");
      Node node1 = new Node(52, node0, node0, node0, node0);
      node0.getLength();
      node1.getLength();
      Node node2 = Node.newNumber((double) 54);
      node0.toString();
      node1.isIn();
      node2.isExprResult();
      Node.newString("STRING 3HTNd# <:BO");
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      int int0 = Node.INCRDECR_PROP;
      node0.isDebugger();
      Node node1 = new Node(3566, (-1), 52);
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.isFunction();
      node2.isEquivalentTo(node1, false, false, false);
      node2.isThis();
      node0.isObjectLit();
      node0.isComma();
      Node node3 = Node.newString("InputId: originalname");
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newString(26, "SsC$%sWf?nb!Zdhr-M", (-2011), 26);
      node0.isNot();
      Node node1 = new Node(55, 32, (-2011));
      node1.isGetElem();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node1.isQualifiedName();
      node1.hasChildren();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(103, nodeArray0, 103, 103);
      Node node1 = new Node(57, nodeArray0, 12, 46);
      node0.isObjectLit();
      node1.mayMutateGlobalStateOrThrow();
      node0.isLabel();
      node0.srcref(node1);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = new Node(132);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      int int0 = Node.INCRDECR_PROP;
      node0.isDebugger();
      Node node1 = new Node(123, 1434, 47);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isFunction();
      node1.isEquivalentTo(node2, true, false, false);
      node2.isThis();
      node0.isObjectLit();
      node1.isComma();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(102, nodeArray0);
      Node node1 = new Node(102, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.copyInformationFrom(node1);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.removeFirstChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isQualifiedName();
      node2.clonePropsFrom(node0);
      Node node3 = Node.newString(47, "Object#Element", 32, 42);
      node3.hasChildren();
      Node node4 = new Node(2, node2, node2);
      node2.getSideEffectFlags();
      node0.isGetProp();
      Node node5 = Node.newNumber(391.9176669, 727, 12);
      node4.hasChild(node5);
      node0.isFunction();
      node5.isAnd();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = new Node(98);
      node0.cloneTree();
      Node.newString("cL8xK", 969, 49);
      node0.isFromExterns();
      node0.isDefaultCase();
      node0.setLineno(0);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = new Node((-936), (-132), (-132));
      Node node1 = new Node(114, node0, node0, node0, node0, (-96), (-1231));
      Node node2 = new Node(56, 57, 3970);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isInc();
      node1.isDo();
      Node node3 = new Node(130, node1, node1);
      // Undeclared exception!
//      try { 
        node2.replaceChild(node1, node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newNumber(923.2, 98, 93);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(57, node0, node1, node0, node1);
      node2.setIsSyntheticBlock(true);
      node1.isCall();
      node0.isBreak();
      node1.hasOneChild();
      node0.getDouble();
      node1.isInc();
      node0.isScript();
      node2.hasMoreThanOneChild();
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp(114);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 114
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node((-24));
      node0.checkTreeEqualsImpl(node0);
      node0.getType();
      node0.wasEmptyNode();
      node0.mayMutateArguments();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.hasMoreThanOneChild();
      // Undeclared exception!
//      try { 
        Node.newString(43, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, 115);
      Node node1 = new Node(16, 51, 29);
      Node node2 = new Node(1, node1, node0, node1, node1, 4095, 30);
      Node node3 = new Node(905, (-2234), 4045);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node4 = Node.newString(40, "jtQTc?]T'T3>H#$*TL");
      node4.isInc();
      node2.isDo();
      // Undeclared exception!
//      try { 
        node3.replaceChild(node2, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(58, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 717, (-1516));
      Node node1 = new Node(42, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.checkTreeEquals(node1);
      node2.getQualifiedName();
      // Undeclared exception!
//      try { 
        Node.newString(30, (String) null, 52, 0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = new Node(98);
      node0.isDec();
      node0.isHook();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = new Node(119);
      Node.newString(727, "EVAL_ERROR_TYPE");
      Node node1 = new Node(12);
      Node node2 = node0.srcref(node1);
      node2.isObjectLit();
      node1.isCall();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newString("iterators");
      Node node1 = new Node(50);
      node1.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAssignAdd();
      node0.isVarArgs();
      Node node2 = new Node(51, node0);
      node2.isHook();
      node2.isRegExp();
      node2.useSourceInfoFromForTree(node0);
      node2.addChildrenAfter(node1, node0);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = Node.newString(116, "", 4095, 43);
      node1.isContinue();
      Node.newString("originalname");
      node0.getIntProp(912);
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 115, 115);
      Node node1 = new Node(30, node0, node0, node0, node0, 42, 38);
      Node node2 = new Node(32, 37, 2);
      String string0 = null;
      node2.srcrefTree(node1);
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 124, 49);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString((-215), "The new child node already has a parent.");
      Node node1 = node0.cloneNode();
      node0.isNew();
      Node node2 = node0.cloneTree();
      Node node3 = new Node(120, node2, node2, 49, 2);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node2.setVarArgs(false);
      Node node4 = Node.newString(2, "The new child node already has a parent.");
      node0.getDirectives();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The new child node already has a parent.");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "originalname");
      node1.getIntProp(40);
      node1.getString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.getBooleanProp(2892);
      node1.isHook();
      Node node5 = node0.useSourceInfoFrom(node1);
      node5.addChildrenToFront(node3);
      Node node6 = node5.getLastSibling();
      node6.isEquivalentToShallow(node5);
      node5.isIn();
      // Undeclared exception!
//      try { 
        node3.addChildBefore(node4, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      String string0 = "3HTN!# <:BO";
      Node node0 = Node.newString(32, "3HTN!# <:BO", 32, (-595));
      Node node1 = new Node(31, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isAssign();
      Node.extractLineno((-1081));
      node1.isVarArgs();
      node2.isHook();
      node1.isRegExp();
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = new Node(0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = node0.cloneTree();
      node1.checkTreeEqualsImpl(node0);
      node0.isUnscopedQualifiedName();
      node0.getChangeTime();
      Node.newNumber((-817.53255711496), 64, (-2258));
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      Node node0 = Node.newString("d@~fZx33i");
      Node node1 = new Node((-113), node0, (-2554), 56);
      int int0 = 0;
      node0.putIntProp(40, 0);
      node0.getDirectives();
      // Undeclared exception!
//      try { 
        node0.addChildToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = new Node(132);
      Node node1 = node0.cloneTree();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      int int0 = Node.INCRDECR_PROP;
      Node node2 = new Node(31, 1070, 1070);
      node0.getQualifiedName();
      Node node3 = node0.srcref(node1);
      node1.isObjectLit();
      node3.isCall();
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(39, node0, node0, node0, 37, 8);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType.toMaybeFunctionType((JSType) null);
      node1.cloneTree();
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString(49, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 49, 56);
      Node node1 = new Node(36, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.isAdd();
      // Undeclared exception!
//      try { 
        node0.addChildAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 2, 38);
      Node node2 = new Node(126, 30, 54);
      node2.setJSDocInfo((JSDocInfo) null);
      node1.isNot();
      node0.isGetElem();
      node0.setSourceEncodedPosition(4095);
      node1.putBooleanProp(44, false);
      node1.isThrow();
      node2.isCast();
      Node.newString("T8GAOe&", 0, 38);
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = new Node(132);
      node0.cloneTree();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      int int0 = Node.INCRDECR_PROP;
      Node node1 = new Node(31, 1070, 1070);
      node0.getQualifiedName();
      node1.isTypeOf();
      node1.srcref(node0);
      node0.isHook();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = Node.newString("iterators");
      Node node1 = new Node(50);
      node1.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter2, false);
      node0.isSetterDef();
      node0.isArrayLit();
      Node node2 = new Node((-216), node0, node1, node1);
      Node node3 = node2.srcref(node0);
      node1.isExprResult();
      node2.isFalse();
      node0.setSourceEncodedPositionForTree(12);
      node1.isArrayLit();
      node2.isGetElem();
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(136, "jtQTc?]T'T3>H#$*TL", 4, 136);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.hasMoreThanOneChild();
      Node node1 = Node.newString(147, "0*JR3G=qko/n}n{}", 1660, 1016);
      node1.isGetterDef();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      Node node0 = Node.newString("originalname");
      Node node1 = Node.newString("InputId: originalname");
      Node node2 = Node.newString("number", 122, (-675));
      Node node3 = new Node(4, node1, node0, node2, node1);
      node3.copyInformationFrom(node1);
      Node node4 = Node.newNumber((double) 55);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.checkTreeTypeAwareEqualsImpl(node3);
      node2.isExprResult();
      node1.isLabelName();
      node4.isThrow();
      Node.newNumber(569.9753, 21, 0);
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newString(46, ".es:3");
      Node node1 = new Node(38, node0, node0, node0);
      node1.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
//      try { 
        node1.isQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.getLength();
      int int0 = Node.INCRDECR_PROP;
      node0.isDelProp();
      Node node1 = Node.newString(42, "qQ?T|tWk]LaLtTu#>Da");
      node0.isParamList();
      node1.isBlock();
      node1.isAssign();
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node(132);
      int int0 = 103;
      Node node1 = Node.newString(16, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 16, 32);
      Node node2 = new Node(8, node0);
      node0.useSourceInfoIfMissingFrom(node2);
      // Undeclared exception!
//      try { 
        node2.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 8
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node(38);
      node0.setIsSyntheticBlock(true);
      Node node1 = new Node(36, node0, node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "StringNode: str is null");
      node1.getChangeTime();
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isLabelName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isAdd();
      node2.isDefaultCase();
      // Undeclared exception!
//      try { 
        node1.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 36
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = new Node(132);
      node0.cloneTree();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      int int0 = Node.INCRDECR_PROP;
      Node node1 = new Node(31, 1070, 1070);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.isComma();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(4095);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got SCRIPT
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6($!PI", 108, 108);
      node0.isGetProp();
      node0.getAncestors();
      Node node1 = Node.newString("R:`.6($!PI", 12, 8);
      Node.extractLineno(4);
      node1.isVarArgs();
      node0.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-759));
      Node node2 = new Node(98, node0, 8388608, 15);
      Node node3 = Node.newNumber((double) 29);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node3);
      node0.isIn();
      Node node4 = Node.newNumber((double) 43);
      node3.checkTreeEquals(node1);
      node3.removeProp(4095);
      node_SideEffectFlags0.setMutatesGlobalState();
      // Undeclared exception!
//      try { 
        node4.setSideEffectFlags((Node.SideEffectFlags) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(31, node0, node0, node0, node0, 29, 38);
      Node node2 = new Node(126, 30, 54);
      node1.cloneTree();
      node2.hasMoreThanOneChild();
      node0.isFromExterns();
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isEquivalentToTyped(node1);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      Node node2 = new Node(31, node1);
      node0.setVarArgs(true);
      InputId inputId0 = new InputId("originalname");
      node1.setInputId(inputId0);
      Node node3 = Node.newString("originalname");
      node2.putIntProp(1, 4095);
      node2.getDirectives();
      node0.addChildToFront(node2);
      node3.getProp(12);
      node1.mayMutateGlobalStateOrThrow();
      node1.getDirectives();
      node2.getAncestor(45);
      StringWriter stringWriter0 = new StringWriter(1881);
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 115, 115);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FH1lNZf%*vC+Q^");
      Node node1 = new Node(31, 30, 2);
      Node node2 = new Node(40, node0, node1, node1, 377, (-2683));
      node0.isEquivalentTo(node2);
      node1.isNoSideEffectsCall();
      node0.isThis();
      InputId inputId0 = new InputId("\"373tkh]1t");
      Node node3 = node1.copyInformationFrom(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.newString(12, "x_1O [d@Lzf8c`u", 310, 30);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.extractCharno(2235);
      node3.isComma();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = Node.newString(108, "", 108, 108);
      node0.isWith();
      Node node1 = Node.newString("", 12, 8);
      Node.extractLineno(4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(152);
      node1.type = 0;
      Node node2 = new Node(37, node0, 37, 32);
      node0.isArrayLit();
      node1.srcref(node0);
      node1.isExprResult();
      node0.isFalse();
      node1.isOptionalArg();
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6($!PI", 108, 108);
      node0.isNot();
      Node node1 = new Node(36, 40, 57);
      node1.isGetElem();
      node0.mayMutateGlobalStateOrThrow();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isDebugger();
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.isFunction();
      node0.isEquivalentTo(node2, false, false, false);
      Node node3 = new Node(130, node2, node0, node0, node0);
      node3.isThis();
      node1.isObjectLit();
      node3.isComma();
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(50, node0);
      node1.srcrefTree(node0);
      node1.isUnscopedQualifiedName();
      node1.copyInformationFrom(node0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-110);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-123);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
//      try { 
        node1.addChildrenToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = new Node((-87), (-2504), (-2285));
      node0.getStaticSourceFile();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(124, node0, 2147483645, 491);
      node0.isAssign();
      node1.hasMoreThanOneChild();
      node0.isFromExterns();
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newString(4, "jtQTc?]T'T3>H#$*TL", 86, 115);
      Node node1 = new Node((-3943), 57, 2517);
      node1.isGetElem();
      node0.isEmpty();
      node0.getLength();
      node0.toString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isIn();
      node1.isBlock();
      Node node2 = node1.srcref(node0);
      node2.isHook();
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newString(87855567, "originalname", 87855567, 147);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FH1lNZf%*vC+Q^");
      Node node1 = new Node(32, node0, node0, node0, node0, 57, 46);
      Node node2 = new Node(2, node1, node1, 15, 21);
      node0.isEquivalentTo(node2);
      node0.isNoSideEffectsCall();
      node2.isThis();
      InputId inputId0 = new InputId(":$ R-~D'vl(I:tQl");
      Node node3 = Node.newString("Ep`FiC");
      Node node4 = node1.copyInformationFrom(node3);
      Node.newString(1901, "r.rkEJX=", 54, (-118));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.extractCharno((-3280));
      node4.isComma();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, 115);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(29, node1, node0, node1, node0);
      node0.isCall();
      node1.isBreak();
      node2.hasOneChild();
//      try { 
        node0.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FOR jtQTc?]T'T3>H#$*TL 4 is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(36, node0);
      node1.isEquivalentToTyped(node1);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      Node node2 = new Node(31, node1);
      node0.setVarArgs(true);
      InputId inputId0 = new InputId("originalname");
      Node node3 = new Node(47, node2);
      Node node4 = node3.copyInformationFrom(node2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      node4.putBooleanProp(56, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node5 = new Node(482, node4, 50, (-1160));
      node1.isScript();
      node1.isOnlyModifiesThisCall();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      node0.getLength();
      Node node1 = new Node(12, node0, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node1.isNE();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setNoCheck(true);
      node1.removeProp(53);
      node2.isTrue();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(0, node0);
      node1.isUnscopedQualifiedName();
      Node node2 = node0.copyInformationFrom(node1);
      node0.wasEmptyNode();
      node2.getAncestors();
      node2.hasMoreThanOneChild();
      node2.isScript();
      node1.isLabelName();
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI", 108, 108);
      node0.isWith();
      Node node1 = Node.newString("R:`.6i$!PI", 12, 8);
      Node.extractLineno(4);
      node1.isVarArgs();
      Node node2 = Node.newString("R:`.6i$!PI");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(152);
      Node node3 = new Node(37, node0, 37, 32);
      node0.isArrayLit();
      Node node4 = node1.srcref(node0);
      node4.addChildrenToFront(node2);
      node1.isFunction();
      node3.isAnd();
      node3.setSideEffectFlags(439);
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      node0.getLength();
      Node node1 = node0.clonePropsFrom(node0);
      node0.isNE();
      node0.getSideEffectFlags();
      Node node2 = new Node(4089, 37, 4);
      node1.getStaticSourceFile();
      Node node3 = node1.cloneTree();
      Node node4 = new Node(141, node3, 39, 16);
      node2.isAssign();
      node3.hasMoreThanOneChild();
      // Undeclared exception!
//      try { 
        node4.removeChild(node1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = Node.newString("Object#Key");
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      node0.siblings();
      node0.setCharno(1959);
      node0.putIntProp(1959, 1959);
      node0.getDirectives();
      Node node1 = new Node(1724, node0, node0, node0, 8, 43);
      node0.addChildToFront(node1);
      node1.getProp(12);
      node1.mayMutateGlobalStateOrThrow();
      node1.getDirectives();
      node0.getAncestor(69);
      node1.isDelProp();
      Node node2 = Node.newString(46, "Object#Element");
      node1.isParamList();
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(126, 30, 54);
      node0.isGetElem();
      Node node2 = new Node(42);
      // Undeclared exception!
//      try { 
        node0.srcref((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI", 108, 108);
      Node node1 = Node.newString("R:`.6i$!PI", 12, 8);
      Node node2 = Node.newString(0, "REFERENCE_ERROR_TYPE", (-300), 40);
      Node node3 = new Node(43, node2, node1, node0, node2, (-1830), 52);
      Node node4 = new Node(1048576, 1679, 42);
      node2.isNot();
      node3.isGetElem();
      node2.setSourceEncodedPosition(12);
      node4.putBooleanProp(55, false);
      node1.isThrow();
      node0.isCast();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node4);
      node_NodeMismatch0.equals(node2);
      // Undeclared exception!
//      try { 
        node3.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newNumber(923.2, 98, 124);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentTo(node0, false, false, false);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      Node node1 = new Node(40, node0, node0, node0, node0, 53, 51);
      Node.newNumber((double) 48);
      node1.cloneTree();
      node0.isUnscopedQualifiedName();
      Node node2 = Node.newNumber(679.858173694, 15, (-252));
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 2, 38);
      Node node2 = new Node(56, 30, 54);
      node1.isNot();
      node0.isGetElem();
      node0.setSourceEncodedPosition(4095);
      node1.putBooleanProp(44, false);
      node1.isThrow();
      node2.isCast();
      node1.getLastSibling();
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = new Node(44, 153, 3027);
      node0.isGetElem();
      node0.isEmpty();
      node0.toString();
      node0.isIn();
      node0.isBlock();
      Node node1 = Node.newString((-1209), "Object#Key");
      Node node2 = node0.srcref(node1);
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI", 108, 108);
      node0.isGetProp();
      Node node1 = Node.newString("R:`.6i$!PI", 12, 8);
      int int0 = Node.POST_FLAG;
      Node node2 = Node.newNumber((double) 52, 4, (-1852));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(152);
      node0.isIf();
      node1.isInstanceOf();
      node1.isDebugger();
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(111, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 111, 111);
      Node node1 = new Node(36, node0);
      node0.checkTreeEquals(node0);
      Node.newString(1, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n");
      node1.removeProp(56);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.putBooleanProp(1, false);
      node0.isInstanceOf();
      node1.isCall();
      node0.isCase();
      Node.newString(64, "qlAV");
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      int int0 = 124;
      Node node0 = Node.newNumber(923.2, 98, 124);
      EvoSuiteFile evoSuiteFile0 = null;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentTo(node0, false, false, false);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) jSTypeRegistry0;
      objectArray0[4] = (Object) node0;
      // Undeclared exception!
//      try { 
        SimpleErrorReporter.getMessage("Object#Element", objectArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // no message resource found for message property Object#Element
//         //
//         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString("EvalError");
      node0.siblings();
      node0.isNumber();
      node0.isTypeOf();
      node0.isAssign();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.srcrefTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newString(132, "jtQTc?]T'T3>H#$*TL", 4, 132);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isCall();
      node0.isBreak();
      node0.hasOneChild();
      node0.isInc();
      node0.isScript();
      Node node1 = Node.newNumber((double) 1, 1155, (-2486));
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isLabel();
      node1.isAnd();
      Node.newNumber(458.09199093);
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 2, 115);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FH1lNZf%*vC+Q^");
      node0.setType(1695);
      node0.isEquivalentTo(node0);
      node0.isQuotedString();
      Node node1 = new Node(37);
      node0.isCatch();
      node0.isInstanceOf();
      node0.putIntProp(1, 51);
      node0.isString();
      node0.isTry();
      node0.removeProp(126);
      node1.isParamList();
      Node node2 = Node.newString(5632, "com.google.javascript.rhino.jstype.UnionTypeBuilder", 42, Integer.MIN_VALUE);
      Node node3 = node2.srcref(node1);
      node1.isRegExp();
      node3.isNew();
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, 115);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FH1lNZf%*vC+Q^");
      node0.isEquivalentTo(node0);
      node0.isNoSideEffectsCall();
      node0.isThis();
      InputId inputId0 = new InputId("InputId: originalname");
      node0.setInputId(inputId0);
      Node node1 = node0.copyInformationFrom(node0);
      Node node2 = Node.newString(57, "3HTN!# <:BO", 37, 55);
      Node.extractCharno(8);
      node2.isComma();
      node1.getInputId();
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 115, 115);
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      node0.siblings();
      node0.setCharno((-1778));
      node0.toString(true, true, true);
      node0.isQualifiedName();
      node0.getChangeTime();
      node0.isQualifiedName();
      node0.getBooleanProp((-4040));
      node0.getQualifiedName();
      node0.isTypeOf();
      Node node1 = Node.newString("qQ?T|tWk]LaLtTu#>Da", 42, 4868);
      node1.setWasEmptyNode(false);
      node0.getString();
      Node node2 = node1.cloneTree();
      node1.isCatch();
      Node node3 = new Node(95, node2, node0, 153, 2900);
      node3.isLabelName();
      node2.isThrow();
      node3.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node.newString(3769, "8g&Ig", (-1693), (-1221));
      Node node0 = new Node(4095, 1, 120);
      Node node1 = Node.newNumber((double) 46, (-1596), 103);
      node1.isGetElem();
      Node node2 = new Node(98, node1);
      node2.isEmpty();
      node1.toString();
      node0.isIn();
      node0.isExprResult();
      node1.isParamList();
      node2.srcref(node0);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(106, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(55, node0, node0, 37, 38);
      Node node2 = new Node(126, 30, 54);
      node1.isNot();
      node2.isString();
      node2.isGetProp();
      Node node3 = Node.newNumber((double) 38, 31, 4601);
      node3.setDouble(50);
      node0.isQualifiedName();
      node1.getJSDocInfo();
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp((-108));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: -108
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(126, 30, 54);
      node0.isGetElem();
      node1.isEmpty();
      node0.toStringTree();
      node0.getString();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(94, nodeArray0);
      node3.getType();
      node3.isLabelName();
      node0.isVoid();
      Node node4 = null;
//      try {
        node4 = new Node((-465), node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI", 108, 108);
      node0.isWith();
      Node node1 = Node.newString("R:`.6i$!PI", 12, 8);
      Node.extractLineno(4);
      node1.isVarArgs();
      Node.newString("R:`.6i$!PI");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node(37, node0, 37, 32);
      node0.isArrayLit();
      Node node3 = node1.srcref(node0);
      node3.setIsSyntheticBlock(true);
      int int0 = Node.COLUMN_MASK;
      node2.isComma();
      node2.addChildAfter(node3, node0);
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = new Node(108, node0, node0, node0, node0, 15, 38);
      Node node2 = new Node(108, node1);
      node2.isEquivalentToTyped(node1);
      Node node3 = new Node(32, 15, 0);
      Node node4 = Node.newNumber((-1.0), (-1242), 2);
      node4.isNot();
      Node node5 = new Node(48, node2, node2, 36, 47);
      node5.isGetElem();
      node3.putBooleanProp(103, false);
      node2.isThrow();
      node5.isCatch();
      Node.newString("W_'o7=yXQ{%", 3933, 31);
      // Undeclared exception!
//      try { 
        node3.getChildAtIndex(36);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(113, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.copyInformationFrom(node1);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.removeFirstChild();
      node1.isQuotedString();
      int int0 = Node.MAX_COLUMN_NUMBER;
      node0.isAdd();
      Node node4 = new Node(42, nodeArray0, 49, 49);
      node4.isWhile();
      node1.getJsDocBuilderForNode();
      Node node5 = Node.newNumber((double) 31);
      node4.hasChild(node5);
      node1.isFunction();
      node1.isAnd();
      Node node6 = new Node((-2210), node1, node4, node3, 0, 37);
      node6.addSuppression("}~#ZdBkq:CgP]>x.s#}");
      node4.srcref(node6);
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "bM8phfW%3C1gz[8sz");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(77, 77, 77);
      node0.toString();
      node0.getIntProp(77);
      node0.setSourceFileForTesting("com.google.common.collect.Iterators$2");
      node0.getDirectives();
      node0.mayMutateArguments();
      node0.getInputId();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isOptionalArg();
      Node node1 = node0.getLastSibling();
      node1.isIf();
      node1.getInputId();
      node1.setChangeTime(4095);
      node1.isBlock();
      // Undeclared exception!
//      try { 
        node1.replaceChild(node0, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newString(43, "A>Fo&-5>v>K", 108, 1812);
      node0.isParamList();
      node0.isNE();
      Node node1 = new Node((-3404));
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node2;
      Node node3 = new Node(127, nodeArray0, 43, 2);
      node3.isLocalResultCall();
      node1.isEmpty();
      node0.toString();
      node2.isDebugger();
      node2.isFor();
      node3.isDebugger();
      node1.useSourceInfoFrom(node0);
      Node node4 = null;
//      try {
        node4 = new Node(55, node0, 55, 101);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]YVE&Og^d?7jaO9<d<");
      Node node0 = Node.newNumber(1.2, 64, 93);
      Node node1 = new Node(64, node0, 56, 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.addSuppression("]YVE&Og^d?7jaO9<d<");
      // Undeclared exception!
//      try { 
        node1.addChildToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "originalname");
      Node node1 = Node.newString("InputId: originalname");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.checkTreeEqualsImpl(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setNoCheck(true);
      Node node2 = new Node(46, node1, node1, node0);
      node1.removeProp((-867));
      node1.setSourceEncodedPositionForTree(1956);
      node0.getIndexOfChild(node2);
      node1.isDebugger();
      node1.isTrue();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("InputId: originalname", true);
      Node node0 = Node.newString(303, "LE", 154, 154);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isDec();
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      node0.isSetterDef();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getJSDocInfo();
      Node node1 = new Node(39, node0, 114, 38);
      node1.isEmpty();
      // Undeclared exception!
//      try { 
        node1.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = Node.newString(21, "ytu:G_nD1#", 21, (-1725));
      node0.isParamList();
      node0.isNE();
      Node node1 = new Node(0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node3 = new Node(57, nodeArray0, (-345), 55);
      node1.isLocalResultCall();
      node2.isEmpty();
      Node node4 = null;
//      try {
        node4 = new Node(37, node2, node2, node2, node0, 15, 12);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      String string0 = "originalname";
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      // Undeclared exception!
//      try { 
        node0.isEquivalentToTyped((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString(4, "qQ?T|tWk]LaLtTu#>Da", 4, 4);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "originalname");
      Node node1 = new Node(126, node0, 16, 34);
      node0.isEquivalentTo(node1);
      node0.isNoSideEffectsCall();
      node1.isThis();
      InputId inputId0 = new InputId("originalname");
      node0.setInputId(inputId0);
      Node node2 = node1.copyInformationFrom(node0);
      node1.removeProp(45);
      node1.putBooleanProp(2665, true);
      node2.isInstanceOf();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = new Node(98);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(".=GQQX7F?(G", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isDec();
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isSetterDef();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getJSDocInfo();
      Node node1 = new Node(54, node0, 38, 50);
      node1.isEmpty();
      node0.toString();
      node0.isDebugger();
      node1.isDo();
      // Undeclared exception!
//      try { 
        node0.replaceChild(node1, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      Node node1 = Node.newString("originalname", 40, 52);
      Node.extractLineno(12);
      node0.isVarArgs();
      Node node2 = Node.newString("3HTN!# <:BO");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2063);
      Node node3 = Node.newString("com.google.javascript.rhino.Node$FileLevelJsDocBuilder", 0, 50);
      Node node4 = new Node(115, node1, node1, node1);
      node3.checkTreeEqualsImpl(node1);
      Node node5 = node2.useSourceInfoFromForTree(node1);
      node4.isVoid();
      Node node6 = null;
      // Undeclared exception!
//      try { 
        node5.copyInformationFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(102, nodeArray0);
      Node node1 = new Node(102, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.copyInformationFrom(node1);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.removeFirstChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isQualifiedName();
      Node node3 = Node.newString(47, "Object#Element", 32, 42);
      node3.hasChildren();
      Node node4 = new Node(2, node2, node2);
      node2.getSideEffectFlags();
      node0.isGetProp();
      Node node5 = Node.newNumber(391.9176669, 727, 12);
      node4.hasChild(node5);
      node0.isFunction();
      node5.isAnd();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(58, nodeArray0, 58, 58);
      Node node1 = new Node(57, nodeArray0, 12, 46);
      Node node2 = new Node(8, node0, node1, node1, node0);
      node2.isCall();
      node0.isObjectLit();
      node2.mayMutateGlobalStateOrThrow();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isInc();
      node0.isLabel();
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newString((-3447), "H");
      Node node1 = new Node((-3447), node0, node0, node0);
      node1.setOptionalArg(false);
      Node node2 = new Node((-3447), node1, (-1399), 51);
      node0.putIntProp(0, (-4350));
      node1.getDirectives();
      node1.addChildToFront(node2);
      node1.getProp((-4350));
      node2.mayMutateGlobalStateOrThrow();
      node1.setSourceEncodedPosition(55);
      node1.getDirectives();
      Node node3 = node1.getAncestor(55);
      node1.isDelProp();
      Node.newString(47, "Node tree inequality:\nTree1:\n");
      node3.isParamList();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      simpleErrorReporter0.error("T$YE#0owy12", "Object#Element", 2689, (-1));
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.cloneNode();
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "originalname");
      Node node1 = Node.newString("InputId: originalname");
      node0.checkTreeEqualsImpl(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = new Node(38, 2, 15);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "InputId: originalname");
      // Undeclared exception!
//      try { 
        node2.getQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME 2 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isGetProp();
      Node node2 = Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node node3 = new Node(42);
      node2.isArrayLit();
      Node node4 = node3.srcref(node1);
      Node.extractCharno(1221);
      node0.isComma();
      node4.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(31, node0, node0, node0, node0, 33, 38);
      Node node2 = new Node(126, 30, 54);
      Node node3 = node1.cloneTree();
      node3.isUnscopedQualifiedName();
//      try { 
        node1.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // DELPROP 33 is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node.newString("originalname");
      Node node0 = Node.newString(116, "", 4095, 43);
      node0.isContinue();
      Node node1 = Node.newNumber((double) 4095, 2, 50);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      Node node2 = new Node((-675), node0, 77, 37);
      node_NodeMismatch0.equals("originalname");
      node2.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, 115);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FH1lNZf%*vC+Q^");
      Node node1 = new Node(53, node0, 31, 42);
      node0.isEquivalentTo(node1);
      node0.isEquivalentTo(node1);
      node0.isThis();
      node1.isThrow();
      node0.isContinue();
      Node node2 = Node.newString(178, "rKXM.[o}J\"V(", 4, 56);
      node1.isScript();
      node2.isLabelName();
      node0.isThrow();
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp(1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 1
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = Node.newString(116, "", 4095, 43);
      node1.isNE();
      Node node2 = Node.newNumber((double) 4095, 2, 50);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
      node1.isBlock();
      Node.mergeLineCharNo(87855567, 38);
      node1.isObjectLit();
      node0.isVarArgs();
      node1.setString("i=q");
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(30);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI", 108, 108);
      Node node1 = Node.newString("R:`.6i$!PI", 12, 8);
      Node.extractLineno(4);
      Node.newNumber((double) 52, 4, (-1852));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(152);
      Node node2 = Node.newString("com.google.javascript.rhino.Node$FileLevelJsDocBuilder", 304, 8388608);
      Node node3 = new Node(4095, node0, node0, node1);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      node1.isVoid();
      node3.getSideEffectFlags();
      Node.newString(54, "R:`.6i$!PI", 1, 304);
      node4.getStaticSourceFile();
      node1.cloneTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isNull();
      node4.isLabel();
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(49, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 49, 56);
      Node node1 = new Node(36, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newString("Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 29, 29);
      node3.checkTreeEquals(node2);
      node0.getQualifiedName();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[3];
      JSTypeNative jSTypeNative0 = JSTypeNative.U2U_CONSTRUCTOR_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.FUNCTION_FUNCTION_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.U2U_FUNCTION_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      JSType[] jSTypeArray0 = new JSType[8];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSTypeArray0[1];
      jSTypeArray0[3] = jSType0;
      jSTypeArray0[4] = jSType0;
      jSTypeArray0[5] = jSType0;
      jSTypeArray0[6] = jSType0;
      jSTypeArray0[7] = jSType0;
      Node node4 = new Node(56, node3);
      node1.isComma();
      node3.isNumber();
      Node.newString("^-<%");
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 51, 38);
      Node node2 = new Node(126, 30, 54);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".s2zC");
      node2.getQualifiedName();
      node2.isCase();
      Node.newString(4, ".s2zC");
      Node.newString("Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n");
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newString(2895, "^-<%", (-2422), (-2198));
      Node node1 = new Node((-2422), node0, node0, node0);
      node0.copyInformationFrom(node1);
      node0.getInputId();
      // Undeclared exception!
//      try { 
        node0.clonePropsFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6++0#", 108, 108);
      Node node1 = Node.newString("R:`.6++0#", 12, 8);
      Node node2 = new Node(40, 57, 154);
      node2.isGetElem();
      Node node3 = Node.newNumber((double) 12, 257, (-3312));
      node3.isEmpty();
      node1.toString();
      node1.isIn();
      node2.isExprResult();
      node0.isParamList();
      node2.srcref(node0);
      node3.isRegExp();
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = new Node(98);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(".=GQQX7F?(G", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isDec();
      node0.isNoSideEffectsCall();
      node0.isThis();
      InputId inputId0 = new InputId(".=GQQX7F?(G");
      node0.setInputId(inputId0);
      Node node1 = Node.newString(48, "InputId: originalname");
      Node node2 = node0.copyInformationFrom(node1);
      node0.removeProp(43);
      node1.putBooleanProp(85, false);
      node1.isInstanceOf();
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(43, "ytu:G_nD1#", 1394, 21);
      node0.isParamList();
      node0.isNE();
      Node node1 = new Node(43);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node3 = new Node(112, nodeArray0, (-2673), 37);
      node1.isLocalResultCall();
      node2.isEmpty();
      node2.toString();
      node2.isDebugger();
      node3.isFor();
      node3.isDebugger();
      node0.useSourceInfoFrom(node1);
      node1.isFunction();
      node1.isEquivalentTo(node2, false, false, false);
      node3.isObjectLit();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(126, 2412, 2552);
      Node node1 = new Node(126, node0, node0, node0);
      Node node2 = node0.cloneTree();
      node1.isUnscopedQualifiedName();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(55);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got LABEL
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = Node.newString((-1852), "s=$eRGu");
      Node node1 = new Node(37, node0, node0, node0);
      node0.setCharno(57);
      node1.isOnlyModifiesThisCall();
      node1.toString(true, true, true);
      node1.isQualifiedName();
      node1.getQualifiedName();
      node1.isEquivalentToShallow(node0);
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node0.isQualifiedName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getSourceOffset();
      node1.setWasEmptyNode(true);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = Node.newString(1148, "~%?VzB4OY/2&;~y$G");
      node0.isWith();
      Node node1 = Node.newString("O'o!39._GV_", 38, 2);
      Node.extractLineno(1350);
      node1.isVarArgs();
      Node.newNumber(782.85079850401, (-2344), 43);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      Node.newString("~%?VzB4OY/2&;~y$G", 51, 42);
      Node node2 = null;
      Node node3 = null;
//      try {
        node3 = new Node(43, (Node) null, node0, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString((-448), "directives");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node1 = new Node(50, node0, node0, node0, node0, 36, 10);
      node0.copyInformationFromForTree(node1);
      node1.srcref(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSDocInfo.Visibility jSDocInfo_Visibility0 = JSDocInfo.Visibility.INHERITED;
      node0.putProp(43, jSDocInfo_Visibility0);
      node1.isVarArgs();
      node1.isFor();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      Node node2 = Node.newString("is_dispatcher", 154, 1487);
      node2.isDefaultCase();
      node2.setLineno(122);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newString("not a StringNode");
      Node node1 = new Node(50);
      node1.isStringKey();
      node0.isParamList();
      node0.mayMutateGlobalStateOrThrow();
      node1.clonePropsFrom(node0);
      Node node2 = new Node(20, node1, 2, 114);
      node0.isObjectLit();
      // Undeclared exception!
//      try { 
        node1.replaceChild(node2, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "originalname");
      Node node1 = Node.newString("InputId: originalname");
      node0.checkTreeEqualsImpl(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = Node.newString("t5}-]A7EDCA R", 29, 8);
      Node node3 = Node.newString(11, "originalname", 1725, 39);
      Node node4 = new Node((-1025), node2, node3, node0);
      Node node5 = Node.newString(89, "t5}-]A7EDCA R");
      node0.checkTreeEqualsImpl(node5);
      node4.useSourceInfoFromForTree(node0);
      node3.isVoid();
      node4.copyInformationFrom(node3);
      node2.isEquivalentToTyped(node4);
      node2.wasEmptyNode();
      node0.toString();
      jSDocInfo0.getAssociatedNode();
      Node node6 = null;
//      try {
        node6 = new Node((-3690), (Node) null, node0, node5);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = new Node(132);
      node0.isAssignAdd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.putBooleanProp(987, true);
      Node node1 = new Node(33);
      node0.isCatch();
      node0.isInstanceOf();
      node1.putIntProp(1327, 39);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isString();
      Node node2 = new Node(36, node1, 2948, 29);
      node2.isTry();
      node1.isBlock();
      node0.getJSType();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newString("iterators");
      Node node1 = new Node(50);
      node1.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("iterators", "D,_3lE:6T68X", 53, 49);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isSetterDef();
      node1.getJSDocInfo();
      Node node2 = new Node(101, node0, 4095, 4);
      node1.isEmpty();
      node0.toString();
      node1.isDebugger();
      node1.isDo();
      node2.addChildBefore(node1, node0);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "yGu:G_nD^#";
      EvoSuiteFile evoSuiteFile0 = null;
      Node node0 = new Node((-3313));
      Node node1 = new Node(1384, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -3313
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(111, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 111, 111);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.newString(2, "LB", (-954), 48);
      node0.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2534);
      Node node1 = new Node(2, node0, 357, (-1470));
      Node node2 = new Node(4095, 15, 43);
      Node node3 = new Node(52, node1);
      node2.checkTreeEqualsImpl(node3);
      node0.isIn();
      Node.newNumber((double) 50);
      Node node4 = Node.newNumber(3927.85233);
      // Undeclared exception!
//      try { 
        node3.checkTreeEquals(node4);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 2
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI", 108, 108);
      Node node1 = Node.newString("R:`.6i$!PI", 12, 8);
      Node.extractLineno(4);
      node1.isVarArgs();
      Node node2 = Node.newNumber((double) 52, 4, (-1852));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(152);
      Node node3 = Node.newString("com.google.javascript.rhino.Node$FileLevelJsDocBuilder", 304, 8388608);
      Node node4 = new Node(4095, node0, node0, node1);
      Node node5 = node4.useSourceInfoFromForTree(node3);
      node1.isVoid();
      node4.getSideEffectFlags();
      Node node6 = new Node(48, 4095, 0);
      node5.getStaticSourceFile();
      node1.cloneTree();
      Node node7 = new Node(89, node2, 52, 42);
      node7.isAssign();
      node3.hasMoreThanOneChild();
      node1.children();
      node7.getInputId();
      node4.addChildBefore(node5, node1);
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = new Node(224);
      Node node1 = new Node(100, node0, node0);
      node1.getLength();
      node1.isNoSideEffectsCall();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "qQ?T|tWk]LaLtTu#>Da");
      node1.isOr();
      // Undeclared exception!
//      try { 
        node1.addChildToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newNumber(782.85079850401);
      Node node1 = new Node(1, node0, node0, node0, node0);
      node0.isSwitch();
      node0.putBooleanProp(27, true);
      node1.isThrow();
      Node[] nodeArray0 = new Node[2];
      Node node2 = Node.newNumber(2.0);
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      Node node3 = new Node(12, nodeArray0, 50, 47);
      node0.isLocalResultCall();
      node1.getInputId();
      node1.getChildAtIndex((-2124));
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Object object0 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.getJSDocInfo();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(113, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node3.removeFirstChild();
      node3.toString(true, true, true);
      node3.isQualifiedName();
      node3.getChangeTime();
      node1.isQualifiedName();
      node0.getQualifiedName();
      node2.isTypeOf();
      node2.isVar();
      node2.isFromExterns();
      node1.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = Node.newString((-3447), "H");
      Node node1 = new Node((-3447), node0, node0, node0);
      node1.setOptionalArg(false);
      Node node2 = new Node((-3447), node1, (-1399), 51);
      node0.putIntProp(0, (-4350));
      node1.getDirectives();
      node1.addChildToFront(node2);
      node1.getProp((-4350));
      node2.isQualifiedName();
      node2.mayMutateGlobalStateOrThrow();
      node1.setSourceEncodedPosition(55);
      node1.getDirectives();
      Node node3 = node1.getAncestor(55);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node3, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node1 = new Node(30, node0, node0, node0, node0, 33, 38);
      Node node2 = new Node(126, 30, 54);
      node1.isNot();
      node0.isGetElem();
      node0.setSourceEncodedPosition(4095);
      node1.putBooleanProp(44, false);
      node1.isThrow();
      node2.isCatch();
      node2.isCast();
      node0.getBooleanProp(30);
      node2.getNext();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(113, node0, node0);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node2.getAncestor(103);
      node1.setCharno((-1046));
      node3.toString(true, true, true);
      node3.isQualifiedName();
      node3.getChangeTime();
      node1.isQualifiedName();
      node0.getQualifiedName();
      node2.isTypeOf();
      node1.isComma();
      node3.isNumber();
      Node.newString("Should not happen\n");
      node3.getLastChild();
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(103, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 103, 103);
      Node node1 = new Node(36, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.checkTreeEquals(node0);
      node0.getQualifiedName();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[0];
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isVar();
      node3.isFromExterns();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node4 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node4.useSourceInfoFrom(node2);
//      try { 
        node2.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // DEC Node tree inequality:
//         // Tree1:
//         // STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]
//         // 
//         // 
//         // Tree2:
//         // NUMBER 0.0
//         // 
//         // 
//         // Subtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]
//         // 
//         // 
//         // Subtree2: NUMBER 0.0
//         //  is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      node0.mayMutateArguments();
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.addChildrenToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(103, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 103, 103);
      Node node1 = new Node(36, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.checkTreeEquals(node0);
      node0.getQualifiedName();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[0];
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isComma();
      node1.isNumber();
      Node.newString("Not declared as a type name");
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 33, 38);
      Node node2 = new Node(126, 30, 54);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Number node not created with Node.newNumber");
      node2.getQualifiedName();
      node0.isDelProp();
      Node.newString(4, "Number node not created with Node.newNumber");
      node0.isParamList();
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node((-2270));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~%fLUvQ^?3a<\"B");
      Node node1 = Node.newNumber(0.7, 21, 46);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "nZ I;HU#EBZpZA,ZBT5");
      Node node2 = Node.newString(1, "nZ I;HU#EBZpZA,ZBT5");
      node0.checkTreeEqualsImpl(node2);
      node0.getJsDocBuilderForNode();
      node0.isCase();
      node1.isCase();
      Node node3 = Node.newString("PT1FArTTwrAv");
      node3.isQualifiedName();
      // Undeclared exception!
//      try { 
        node3.addChildrenAfter(node2, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI", 108, 108);
      node0.isGetProp();
      Node node1 = Node.newString("R:`.6i$!PI", 12, 8);
      Node.extractLineno(4);
      node1.isVarArgs();
      Node.newNumber((double) 52, 4, (-1852));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(152);
      Node.newString("com.google.javascript.rhino.Node$FileLevelJsDocBuilder", 304, 8388608);
      Node node2 = Node.newString(55, "R:`.6i$!PI", 1, 42);
      node1.hasChildren();
      node0.getSideEffectFlags();
      node2.setSourceEncodedPositionForTree((-2637));
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(112, nodeArray0, (-2063), 55);
      node1.getIndexOfChild(node3);
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newString("not a StringNode");
      Node node1 = new Node(50);
      node1.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = new Node(41, node0, node1, node1, node1, 36, 5);
      node1.getIndexOfChild(node2);
      node0.isExprResult();
      Node node3 = new Node(48, node2, 47, 57);
      node2.isIf();
      Object object0 = new Object();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(682);
      node0.setLineno(682);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(50, (-964), 48);
      node0.isNot();
      node0.isGetElem();
      node1.setSourceEncodedPosition(1);
      node0.putBooleanProp(43, false);
      node1.isThrow();
      node0.isCatch();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isEquivalentToTyped(node1);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      Node node2 = new Node(190, node1);
      node0.setVarArgs(true);
      InputId inputId0 = new InputId("originalname");
      node1.setInputId(inputId0);
      Node node3 = Node.newString("originalname");
      Node node4 = node3.copyInformationFrom(node2);
      node4.putBooleanProp(56, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node5 = new Node(440, node4, 50, (-1160));
      node0.isEmpty();
      node4.toString();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = Node.newNumber((-2701.4061438), 8199, 8199);
      node0.isDec();
      Node node1 = new Node(49, node0, node0, node0);
      Node node2 = new Node(154, node1, (-2381), 0);
      node1.isEquivalentTo(node0);
      node0.isThis();
      node1.isThrow();
      Node node3 = Node.newNumber((double) 50, 113, 42);
      node3.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createTemplatizedType((ObjectType) templateType0, (ImmutableList<JSType>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(126, 2412, 2552);
      Node node1 = new Node(126, node0, node0, node0);
      node1.putBooleanProp((-555), false);
      node1.isParamList();
      node0.getLength();
      node1.isTry();
      node1.isDefaultCase();
      node0.isVarArgs();
      node1.removeFirstChild();
      Node.newNumber((double) 2, (-60), 35);
//      try { 
        node1.setDouble(51.0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // LABEL is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = Node.newString(1148, "~%?VzB4OY/2&;~y$G");
      Node node1 = new Node(132);
      node0.isAssignAdd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(108);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.putBooleanProp((-1782), true);
      Node node2 = new Node(56);
      node0.isNumber();
      Node node3 = new Node(57, node1, node1, 46, 103);
      node3.isCatch();
      node2.isInstanceOf();
      node0.putIntProp(8, (-171));
      node1.isString();
      node2.isTry();
      node1.isBlock();
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(103, 103, 103);
      Node node1 = new Node(36, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      Node node2 = Node.newString("com.google.javascript.rhino.Node$FileLevelJsDocBuilder", 2577, 25);
      Node node3 = Node.newString(40, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 30, 56);
      node0.hasChildren();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      Node node4 = Node.newNumber(0.5, 524288, 51);
      Node node5 = new Node(54, node2, (-263), 30);
      node5.hasChild(node3);
      node3.getInputId();
      node5.isFunction();
      node4.isAnd();
      node3.isEmpty();
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(103, node0, node0, node0);
      node0.isQualifiedName();
      Node node2 = Node.newString(4095, "CharMatcher.JAVA_ISO_CONTROL", 49, 568);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      node0.isInc();
      node1.setLineno(155);
      node0.addSuppression("Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n");
      Node.extractCharno(0);
      node0.getLineno();
      node2.isWhile();
      // Undeclared exception!
//      try { 
        node3.setSideEffectFlags(484);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      node0.getLength();
      Node node1 = Node.newNumber((double) 51, 1361, 2927);
      Node node2 = new Node(12, node0, node1, node0, node1);
      Node node3 = node0.clonePropsFrom(node2);
      node2.isNE();
      Node node4 = node2.copyInformationFrom(node1);
      node0.wasEmptyNode();
      node4.getAncestors();
      node3.hasMoreThanOneChild();
      node0.isScript();
      node0.isLabelName();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(113, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^-<%");
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      Node node4 = Node.newNumber((double) 42);
      node4.setCharno(29);
      node3.toString(false, false, false);
      node4.isQualifiedName();
      node4.getChangeTime();
      node4.isQualifiedName();
      node3.getQualifiedName();
      node4.isTypeOf();
      node2.isVar();
      node3.isFromExterns();
      node0.useSourceInfoFrom(node3);
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = Node.newString("OYQW@.=");
      node0.isFalse();
      Node node1 = Node.newString(110, "OYQW@.=");
      node1.getIndexOfChild(node0);
      node0.isExprResult();
      Node node2 = new Node(5405, node0, 2457, (-480));
      node2.isIf();
      Object object0 = new Object();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      String string0 = "jtQTc?]T'T3>H#$*T\\L";
      Node node0 = Node.newString("jtQTc?]T'T3>H#$*TL", 499, 499);
      Node node1 = new Node(115, node0, node0, node0, node0, 15, 15);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = node1.srcref(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSDocInfo.Visibility jSDocInfo_Visibility0 = JSDocInfo.Visibility.INHERITED;
      node2.putProp((-203), "jtQTc?]T'T3>H#$*TL");
      node2.isVarArgs();
      node2.isFor();
      Node node4 = null;
//      try {
        node4 = new Node((-1964), node2, node3, node0, node2, 1411, (-2027));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", (-29), (-203));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FH1lNZf%*vC+Q^");
      Node node1 = Node.newString(742, "free_call", 1775, 57);
      Node node2 = new Node(1493, node0, node0, node0, node1, 2014, 2014);
      node2.checkTreeEqualsImpl(node1);
      node1.isSwitch();
      node0.removeProp(30);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.putBooleanProp(98, false);
      node2.isInstanceOf();
      node0.isName();
      node2.isGetterDef();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-1665), nodeArray0);
      Node node1 = new Node((-1937931022), node0);
      // Undeclared exception!
//      try { 
        node0.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -1665
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = Node.newString("iterators");
      Node node1 = new Node(40, node0, node0, node0);
      node1.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isSetterDef();
      Node node2 = node1.copyInformationFrom(node0);
      node2.removeProp(1264);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.putBooleanProp(4095, true);
      node0.isInstanceOf();
      node1.isCall();
      node2.isObjectLit();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FH1lNZf%*vC+Q^");
      Node node1 = new Node(53, node0, 31, 42);
      node0.isEquivalentTo(node1);
      node0.isThis();
      node1.isThrow();
      node1.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      node0.setJSType(templateType1);
      node0.isNull();
      node0.isLabel();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(28, "ytu:G_nD1#", 1394, 21);
      node0.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4194304);
      Node node1 = new Node(47, node0, 205, 1);
      node0.checkTreeEqualsImpl(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isIn();
      node0.checkTreeEquals(node0);
      node_SideEffectFlags0.setReturnsTainted();
      node1.hasOneChild();
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString(1352, "empty_block");
      node0.getLength();
      Node node1 = node0.cloneTree();
      node0.getIntProp(50);
      node1.isNumber();
      node0.getBooleanProp(96);
      node0.isDo();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node0.isIf();
      node0.getParent();
      node1.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch((Node) null, (Node) null);
      node_NodeMismatch0.equals(node1);
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newString(98, "com.google.common.base.CharMatcher$12");
      Node node1 = new Node(57);
      node0.isAssignAdd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node1.putBooleanProp((-561), true);
      Node node2 = new Node(55);
      node2.isThrow();
      node0.isCatch();
      node2.isInstanceOf();
      Node node3 = Node.newString("G_xHLP[", 28, 30);
      node0.isIn();
      Node node4 = new Node(154, node3, node2);
      node0.checkTreeTypeAwareEqualsImpl(node4);
      node2.isExprResult();
      node4.isWhile();
      node1.cloneNode();
      node1.isVar();
      node3.isNew();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = Node.newString("missing prop: ");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.incrementGeneration();
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[0];
      JSType jSType0 = jSTypeRegistry1.createUnionType(jSTypeNativeArray0);
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = jSType0;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a type name", node0, jSTypeArray0[0]);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      jSTypeArray0[1] = (JSType) enumElementType1;
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs(jSTypeArray0);
      node0.isComma();
      Node node2 = Node.newString("Named type with empty name component", 110, 130);
      // Undeclared exception!
//      try { 
        node1.replaceChild(node2, node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = Node.newString(110, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 33, 38);
      Node node2 = new Node(126, 30, 54);
      node1.isNot();
      node0.isGetElem();
      Node node3 = Node.newString("", 245, 1);
      node3.getStaticSourceFile();
      Node node4 = new Node(245);
      node4.cloneTree();
      Node node5 = new Node((-3340), node2, 15, 15);
      Node node6 = node5.copyInformationFrom(node2);
      Node node7 = new Node(124, node6, 0, 4);
      node7.removeProp(4095);
      node1.isReturn();
      node3.isFunction();
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = Node.newString("missing prop: ");
      node0.getType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) arrayList0);
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      HashSet<InputId> hashSet0 = new HashSet<InputId>();
      ImmutableList.copyOf((Collection<? extends InputId>) hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", true);
      ImmutableList<JSType> immutableList2 = immutableList1.reverse();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList2);
      node0.addChildrenToFront(node1);
      node0.getChildBefore(node1);
      simpleErrorReporter0.warning("s}D", "s}D", 52, 1565);
      node0.setJSType((JSType) null);
      node0.hasChild(node1);
      node0.isFunction();
      node1.isAnd();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 33, 38);
      Node node2 = new Node(126, 30, 54);
      node0.isGetElem();
      node2.isEmpty();
      node0.toString();
      node0.isIn();
      node2.isExprResult();
      node2.isParamList();
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      node0.siblings();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isSetterDef();
      Node node2 = node0.copyInformationFrom(node1);
      node0.removeProp(1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.putBooleanProp(133, false);
      node1.isInstanceOf();
      node0.isCall();
      node2.isObjectLit();
      Node node3 = new Node(16, node0, node2);
      node3.isThrow();
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(50, node0, 28, 112);
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      node1.getAncestor(54);
      node1.setVarArgs(true);
      node0.setInputId(inputId0);
      Node node2 = node0.copyInformationFrom(node1);
      node0.removeProp((-1629));
      node1.putBooleanProp(0, true);
      node1.isInstanceOf();
      node2.isCall();
      node2.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newString("$,&{S&]a]!DFfg1", 1865, 1865);
      Node node1 = Node.newString(2, "originalname");
      node1.type = 4095;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("originalname");
      Locale locale0 = Locale.JAPANESE;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) node1;
      objectArray0[1] = (Object) node0;
      objectArray0[2] = (Object) "$,&{S&]a]!DFfg1";
      objectArray0[3] = (Object) "$,&{S&]a]!DFfg1";
      Node node2 = new Node(52, node1, 38, 29);
      Node node3 = node2.copyInformationFrom(node1);
      node1.removeProp(16);
      node3.isReturn();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = Node.newString("originalname", 42, 42);
      node0.setIsSyntheticBlock(true);
      node0.isQuotedString();
      int int0 = Node.COLUMN_BITS;
      node0.isUnscopedQualifiedName();
      node0.isContinue();
      node0.isGetProp();
      Node node1 = Node.newNumber((double) 57, 1, 51);
      node0.isNew();
      StringWriter stringWriter0 = new StringWriter(1118);
      node0.appendStringTree(stringWriter0);
      node0.siblings();
      node0.isEquivalentToShallow(node1);
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      int int0 = 108;
      Node node0 = new Node(108, 108, 108);
      node0.isUnscopedQualifiedName();
      Object object0 = new Object();
      Node[] nodeArray0 = new Node[1];
      Node node1 = Node.newString(115, "second new child has existing parent", 4095, 57);
      node0.copyInformationFromForTree(node1);
      nodeArray0[0] = node0;
//      try { 
        node0.setDouble(3880);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // IF 4095 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-120);
      byteArray0[1] = (byte) (-126);
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)37;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NX6$");
      Node node0 = Node.newString((-1452), "NX6$");
      node0.putBooleanProp(35, false);
      Node node1 = new Node(35, node0);
      node1.isQuotedString();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.getAncestors();
      node1.removeChild(node0);
      Node node3 = new Node(46);
      Node node4 = Node.newString((-93), "");
      node4.removeProp(28);
      node2.useSourceInfoFromForTree(node3);
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      String string0 = "R:`.6i$!PI";
      Node node0 = Node.newString("R:`.6i$!PI", 108, 108);
      node0.isUnscopedQualifiedName();
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "originalname");
      Node node1 = Node.newString("InputId: originalname");
      node0.checkTreeEqualsImpl(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setNoCheck(true);
      Node node2 = new Node(46, node1, node1, node0);
      node1.removeProp((-867));
      node1.setSourceEncodedPositionForTree(1956);
      node0.getIndexOfChild(node2);
      node1.isDebugger();
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(46, node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType.toMaybeFunctionType((JSType) null);
      node1.cloneTree();
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(55, node0);
      node1.isUnscopedQualifiedName();
      node1.isContinue();
      node1.hasChildren();
      Node.newNumber((double) 4095, 57, 1);
      node1.isNew();
      StringWriter stringWriter0 = new StringWriter(1);
      // Undeclared exception!
//      try { 
        stringWriter0.write("", 1844, 4927);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = Node.newString("missing prop: ");
      node0.getType();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) arrayList0);
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      HashSet<InputId> hashSet0 = new HashSet<InputId>();
      ImmutableList.copyOf((Collection<? extends InputId>) hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", true);
      ImmutableList.of(simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0);
      ImmutableList<JSType> immutableList2 = immutableList1.reverse();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList2);
      node0.addChildrenToFront(node1);
      node0.setJSType((JSType) null);
      node0.hasChild(node1);
      node0.isFunction();
      node1.isAdd();
      node0.isRegExp();
      node0.isTypeOf();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      node0.setIsSyntheticBlock(true);
      node0.isQuotedString();
      node0.getIntProp(154);
      node0.isUnscopedQualifiedName();
      Node.newNumber((double) 40);
      String string0 = "TxzX9'L4pbP";
      Node node1 = Node.newString("TxzX9'L4pbP");
      Node node2 = Node.newString(29, "TxzX9'L4pbP", 100, 57);
      Node node3 = new Node(100, node0, node0, node0, node2);
      Node node4 = null;
      // Undeclared exception!
//      try { 
        node1.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.setSourceFileForTesting("/[");
      node0.getSourceFileName();
      // Undeclared exception!
//      try { 
        node0.setDouble((-3818.9963));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = Node.newNumber(468.0, (-699), (-699));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node((-230));
      node1.isArrayLit();
      node1.srcref(node0);
      Node.extractCharno(6);
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString((-448), "directives");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node1 = new Node(50, node0, node0, node0, node0, 36, 10);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = node1.srcref(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSDocInfo.Visibility jSDocInfo_Visibility0 = JSDocInfo.Visibility.INHERITED;
      node0.putProp(43, jSDocInfo_Visibility0);
      node1.isVarArgs();
      node1.isFor();
      node1.isDec();
      node2.isQuotedString();
      node3.type = 43;
      node3.getChangeTime();
      node3.isAdd();
      node2.isAssign();
      node2.getJsDocBuilderForNode();
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node0.isBlock();
      Node.mergeLineCharNo(9, 46);
      node0.isObjectLit();
      node0.isVarArgs();
//      try { 
        node1.setString("directives");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FALSE 36 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newString("iterators");
      Node node1 = new Node(50);
      node1.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isSetterDef();
      node1.getJSDocInfo();
      Node node2 = new Node(101, node0, 4095, 4);
      node1.isEmpty();
      node0.toString();
      node1.isDebugger();
      node1.isDo();
      node2.replaceChild(node0, node1);
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = Node.newString("xhex.R<</QC[hmK");
      Node node1 = new Node(50);
      node1.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isSetterDef();
      node0.getJSDocInfo();
      Node node2 = Node.newString("");
      node2.isNoSideEffectsCall();
      Node node3 = new Node(1629, node2, 96, 644);
      node3.isEmpty();
      Node node4 = Node.newNumber(1518.11226499052);
      node4.toString();
      node1.isDebugger();
      node3.isFalse();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      node0.getLength();
      Node node1 = new Node(4095, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node1.isSetterDef();
      Node node2 = node1.copyInformationFrom(node0);
      node2.wasEmptyNode();
      Node node3 = Node.newString(38, "originalname");
      node1.removeProp(4096);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.putBooleanProp(52, false);
      node0.isInstanceOf();
      node1.isCall();
      Node node4 = new Node(16, node3, (-633), 2);
      node2.copyInformationFrom(node4);
      node4.removeProp(37);
      node2.isReturn();
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = Node.newNumber((-1021.07143), 4, 1);
      Node node2 = new Node(29, node0, node0, node1, node0);
      Node node3 = node2.clonePropsFrom(node1);
      node3.removeProp(43);
      node0.isNE();
      Node node4 = null;
//      try {
        node4 = new Node(51, node3, node1, node3, node0, 1410, 13);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      node0.siblings();
      node0.setCharno(1959);
      node0.toString(true, false, true);
      node0.isQualifiedName();
      node0.getChangeTime();
      node0.isQualifiedName();
      node0.getQualifiedName();
      node0.isTypeOf();
      node0.setWasEmptyNode(true);
      node0.isFalse();
      node0.getAncestor(301);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.areAllFlagsSet();
//      try { 
        node0.setString("originalname");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // PARAM_LIST [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000338] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = Node.newString(108, "F|/ivsIc'");
      node0.isUnscopedQualifiedName();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)16;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isContinue();
      Node node1 = Node.newNumber((double) 39, 3033, (-1660));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(964);
      Node.newString("Nl@g*Jkk#2qXGHH\"'[5", (-1106), 46);
      node0.isVoid();
      node1.getSideEffectFlags();
      node1.toString(false, false, false);
      Node node2 = Node.newString("", 12, 40);
      node2.getStaticSourceFile();
      Node node3 = node0.cloneTree();
      node0.isAssign();
      node1.children();
      node3.isScript();
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(50, node0, 28, 112);
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      Node.newString("originalname");
      node1.setVarArgs(true);
      node0.setInputId(inputId0);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = Node.newNumber(0.0);
      node0.removeProp((-1629));
      MockFile mockFile0 = new MockFile("InputId: originalname", "InputId: originalname");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Locale locale0 = new Locale("");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) node2;
      objectArray0[2] = (Object) mockFile0;
      objectArray0[0] = (Object) "InputId: originalname";
      objectArray0[4] = (Object) inputId0;
      Object object0 = new Object();
      objectArray0[5] = objectArray0[0];
      mockPrintWriter0.printf(locale0, "originalname", objectArray0);
      // Undeclared exception!
//      try { 
        node3.appendStringTree((Appendable) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = Node.newString(".es:3");
      node0.isQualifiedName();
      node0.isDefaultCase();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      node0.isIn();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = Node.newString(1000, "q0f~g2J5");
      Node node1 = new Node(36, node0, node0, node0);
      node0.isQualifiedName();
      Node node2 = Node.newString(0, ":`.1WH$'50}J8zmFl", 32, (-849));
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node3.isInc();
      node3.setLineno(1);
      node0.addSuppression("com.google.common.base.CharMatcher$12");
      Node.extractCharno(1);
      node3.getLineno();
      node2.isWhile();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(51);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1000
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      node0.getLength();
      Node node1 = Node.newNumber((double) 51, 1361, 2927);
      Node node2 = new Node(12, node0, node1, node0, node1);
      Node node3 = node0.clonePropsFrom(node2);
      node2.isNE();
      node0.isOptionalArg();
      node2.getLastChild();
      node1.checkTreeEquals(node3);
      node3.isLocalResultCall();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      nodeArray0[1] = node3;
      nodeArray0[2] = node3;
      nodeArray0[3] = node3;
      Node node4 = null;
//      try {
        node4 = new Node((-347), nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = Node.newNumber(923.2, 98, 124);
      Node node1 = new Node(4095, 33, 2);
      node1.isNot();
      node1.isGetElem();
      node0.putBooleanProp(32, false);
      node1.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;
      JSTypeNative jSTypeNative1 = JSTypeNative.ARRAY_TYPE;
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      jSTypeRegistry0.incrementGeneration();
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative1;
      jSTypeNativeArray0[2] = jSTypeNative1;
      jSTypeNativeArray0[3] = jSTypeNative0;
      jSTypeNativeArray0[4] = jSTypeNative0;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = jSType0;
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.children();
      node1.isScript();
      node0.isLabelName();
      node1.getLength();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      node1.isContinue();
      node1.isGetProp();
      Node node2 = Node.newNumber(0.0, 30, 43);
      node1.isNew();
      StringWriter stringWriter0 = new StringWriter(52);
      node2.appendStringTree(stringWriter0);
      node0.siblings();
      node0.isEquivalentToShallow(node1);
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      Node node2 = new Node(190, node1);
      node0.setVarArgs(true);
      InputId inputId0 = new InputId("originalname");
      node1.setInputId(inputId0);
      Node node3 = Node.newString("originalname");
      Node node4 = node3.copyInformationFrom(node2);
      node2.removeProp((-1005));
      node4.putBooleanProp(56, true);
      node1.setSourceEncodedPositionForTree(2194);
      node1.setSourceEncodedPositionForTree(32);
      node1.getIndexOfChild(node3);
      node4.isDebugger();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI", 108, 108);
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newString("R:`.6i$!PI", 12, 8);
      Node.extractLineno(4);
      node1.isVarArgs();
      Node node2 = Node.newNumber((double) 52, 4, (-1852));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(152);
      Node node3 = Node.newString("com.google.javascript.rhino.Node$FileLevelJsDocBuilder", 304, 8388608);
      Node node4 = new Node(4095, node0, node0, node1);
      Node node5 = node4.useSourceInfoFromForTree(node3);
      node1.isVoid();
      node4.getSideEffectFlags();
      Node node6 = Node.newString("3HTN!# <:BO", 100, 16);
      node5.getStaticSourceFile();
      node1.cloneTree();
      Node node7 = new Node(89, node2, 52, 42);
      node1.copyInformationFrom(node6);
      node1.removeProp((-4295));
      node0.isReturn();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      node0.siblings();
      node0.isOr();
      node0.isInc();
      jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = Node.newNumber((-1.0), (-895), 30);
      node1.getSourceFileName();
      node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node1.getExistingIntProp((-1320));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: -1320
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      int int0 = 1679;
      Node node0 = Node.newNumber(66.442, 1679, 1679);
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FH1lNZf%*vC+Q^");
      Node node1 = new Node(53, node0, 33, 42);
      node0.isEquivalentTo(node1);
      node0.isThis();
      node1.isThrow();
      node1.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      node0.setJSType(templateType1);
      node0.isNull();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString((-1852), "s=$eRGu");
      Node node1 = new Node(37, node0, node0, node0);
      node0.setCharno(57);
      node1.toString(true, true, true);
      node0.isSetterDef();
      Node node2 = node1.copyInformationFrom(node0);
      node0.removeProp(37);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.putBooleanProp(622, true);
      node1.isInstanceOf();
      node0.isCall();
      node2.isObjectLit();
      Node node3 = new Node(8);
      node3.isThrow();
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newNumber((-5011.3567301));
      node0.isUnscopedQualifiedName();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)16;
      byteArray0[2] = (byte)16;
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)16;
      byteArray0[4] = (byte)16;
      byte[] byteArray1 = new byte[5];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      Node node1 = new Node(4095, node0, (byte)16, (-1556));
      node1.isContinue();
      Node node2 = Node.newNumber((double) 55, (-1320), 98);
      node1.setCharno(388);
//      try { 
        node2.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 55.0 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 33, 38);
      Node node2 = new Node(126, 30, 54);
      node1.isNot();
      node0.isGetElem();
      node0.setSourceEncodedPosition(4095);
      node1.putBooleanProp(44, false);
      node1.isThrow();
      node2.isCatch();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = Node.newString("missing prop: ");
      node0.getType();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) arrayList0);
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      HashSet<InputId> hashSet0 = new HashSet<InputId>();
      ImmutableList.copyOf((Collection<? extends InputId>) hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", true);
      ImmutableList.of(simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0);
      ImmutableList<JSType> immutableList2 = immutableList1.reverse();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList2);
      node0.addChildrenToFront(node1);
      node0.setJSType((JSType) null);
      node0.hasChild(node0);
      node0.isFunction();
      Node.newString("Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n");
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newString("iterators");
      Node node1 = new Node(50);
      String string0 = "HnaHqo9";
      Node node2 = Node.newString(1, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", (-1556), 110);
      int int0 = 155;
      Node node3 = new Node(155, node0);
      node3.useSourceInfoIfMissingFrom(node2);
      // Undeclared exception!
//      try { 
        node3.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 50
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newNumber((-2842.2232817395366), (-699), (-699));
      Node.newNumber((-1082.1447493672));
      node0.getQualifiedName();
      Node node1 = new Node(544, 50, 27);
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(0, node0, 110, 2);
      Node node2 = new Node(42, node1);
      Node node3 = node2.removeFirstChild();
      node3.getLength();
      node2.getLength();
      Node.newNumber((double) 46);
      node2.getQualifiedName();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      node0.getQualifiedName();
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)73;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      nodeArray0[0] = node1;
      node1.isContinue();
      node0.getProp(52);
      InputId inputId0 = new InputId("\"oX9<*qJJ33|u5(z1q");
      node1.putProp(15, inputId0);
      node1.addChildrenAfter(node1, node0);
      Node.newString(8, "free_call");
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI", 108, 108);
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newString("R:`.6i$!PI", 12, 8);
      Node.extractLineno(4);
      node1.isVarArgs();
      Node node2 = Node.newNumber((double) 52, 4, (-1852));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(152);
      Node node3 = Node.newString("com.google.javascript.rhino.Node$FileLevelJsDocBuilder", 304, 8388608);
      Node node4 = new Node(4095, node0, node0, node1);
      Node node5 = node4.useSourceInfoFromForTree(node3);
      node1.isVoid();
      node4.getSideEffectFlags();
      Node node6 = Node.newString("3HTN!# <:BO", 100, 16);
      node5.getStaticSourceFile();
      node1.cloneTree();
      Node node7 = new Node(89, node2, 52, 42);
      node7.isAssign();
      node3.hasMoreThanOneChild();
      Node node8 = new Node(48, node7, node7, (-2470), 102);
      node8.children();
      node6.isScript();
      node8.hasMoreThanOneChild();
      Node.newString(26, "3HTN!# <:BO", 1, 38);
      node6.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
//      try {
        node1 = new Node(2, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6(");
      Node node0 = new Node((-771));
      Node node1 = Node.newString("6(");
      node1.getQualifiedName();
      node1.isVarArgs();
      Node node2 = new Node(50, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node2.addChildrenToFront(node1);
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(113, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.setCharno((-1046));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node2.isEquivalentToShallow(node1);
      node3.putProp(110, jSDocInfo0);
      node2.isCall();
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node3, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      String string0 = "originalname";
      Node[] nodeArray0 = new Node[9];
      Node node0 = null;
//      try {
        node0 = new Node(190, nodeArray0[0]);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = new Node(5169, 5169, 5169);
      node0.type = (-20);
      Node node1 = new Node(16, node0);
      node1.getLength();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n");
      Node node2 = new Node(111, node1, 4726, 4095);
      node0.isEquivalentTo(node2);
      node0.isThis();
      node0.isThrow();
      node0.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      node1.setJSType(templateType1);
      node1.isNull();
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isGetProp();
      Node node1 = Node.newNumber((double) 1, (-478), 0);
      node0.isNE();
      Node node2 = new Node(54);
      node2.useSourceInfoIfMissingFrom(node1);
      Node[] nodeArray0 = null;
      Node node3 = null;
//      try {
        node3 = new Node(133, (Node[]) null, 50, 57);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(28, "ytu:G_nD1#", 1394, 21);
      node0.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4194304);
      Node node1 = new Node(47, node0, 205, 1);
      node0.checkTreeEqualsImpl(node1);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals("ytu:G_nD1#");
      node0.isIn();
      Node node2 = Node.newNumber((double) 38);
      node0.checkTreeEquals(node2);
      node0.isLocalResultCall();
      node_SideEffectFlags0.setReturnsTainted();
      node2.hasOneChild();
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node0, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(":f@", 94, 94);
      node0.isAdd();
      Node.extractLineno(15);
      node0.isVarArgs();
      node0.isHook();
      node0.isRegExp();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = Node.newNumber(782.85079850401);
      Node node1 = new Node(1, node0, node0, node0, node0);
      node1.mayMutateArguments();
      node0.addChildrenToFront(node1);
      node0.isIf();
      node1.isInstanceOf();
      node0.isDebugger();
      // Undeclared exception!
//      try { 
        node0.addChildBefore((Node) null, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(1597, node0, node0, node0, node0, 39, (-663));
      node1.isParamList();
      node1.mayMutateGlobalStateOrThrow();
      node0.isNot();
      node1.isGetElem();
      Node node2 = new Node(8388608);
      node2.putBooleanProp(117, true);
      Node node3 = Node.newString("jtQTc?]T'T3>H#$*TL");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node3;
      nodeArray0[1] = node2;
      nodeArray0[2] = node1;
      Node node4 = new Node(2, nodeArray0, 31, 53);
      Node node5 = node2.copyInformationFrom(node4);
      node3.removeProp(806);
      node2.putBooleanProp(46, true);
      node0.isInstanceOf();
      node3.isName();
      node5.isGetterDef();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isGetElem();
      node2.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(103, 103, 103);
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newString("OYQW.=");
      node0.addChildrenToFront(node1);
//      try { 
        node0.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // DEC 103 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI", 108, 108);
      Node node1 = Node.newString(40, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 48, 15);
      Node node2 = new Node(3196, node0);
      node2.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node2);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3196
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      node0.getLength();
      Node node1 = new Node(93, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node0.hasOneChild();
      node1.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      node0.getJSDocInfo();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newNumber(923.2, 98, 124);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setCharno(98);
      node0.toString(true, true, true);
      node0.isQualifiedName();
      Node node1 = Node.newString("NUMBER 923.2 98", 50, 50);
      node0.addChildrenToFront(node1);
      Node node2 = Node.newString((-699), "NUMBER 923.2 98");
      node2.getString();
      Node node3 = node0.cloneTree();
      node2.isUnscopedQualifiedName();
      node3.getDouble();
      node0.getInputId();
      node2.clonePropsFrom(node3);
      node1.isNE();
      node2.isOptionalArg();
      node3.getLastChild();
      // Undeclared exception!
//      try { 
        node3.checkTreeEquals(node2);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -699
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      String string0 = "originalname";
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(50, node0, 52, 112);
      node1.removeFirstChild();
      int int0 = 2;
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 2, 2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      node0.getLength();
      Node node1 = new Node(93, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node1.isSetterDef();
      Node node2 = node1.copyInformationFrom(node0);
      node2.wasEmptyNode();
      Node.newString(38, "originalname");
      node1.removeProp(4096);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.putBooleanProp(52, false);
      node0.isInstanceOf();
      node1.isCall();
      Node node3 = Node.newString((-87), "{nI|yRv3ugCP", 15, 57);
      node3.isObjectLit();
      node3.isThrow();
      node3.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = Node.newString("missing prop: ");
      node0.getType();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) arrayList0);
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      HashSet<InputId> hashSet0 = new HashSet<InputId>();
      ImmutableList.copyOf((Collection<? extends InputId>) hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", true);
      ImmutableList.of(simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0);
      ImmutableList<JSType> immutableList2 = immutableList1.reverse();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList2);
      node0.addChildrenToFront(node1);
      node0.setJSType((JSType) null);
      node0.hasChild(node1);
      node0.isFunction();
      node0.isOnlyModifiesArgumentsCall();
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(50, node0, 28, 112);
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      Node node2 = Node.newString("originalname");
      node1.setVarArgs(true);
      node0.setInputId(inputId0);
      node0.copyInformationFrom(node1);
      Node node3 = Node.newNumber(0.0);
      node0.removeProp((-1629));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.newString("originalname", 48, 0);
      node2.isIn();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.isExprResult();
      node1.isArrayLit();
      node3.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      node1.isContinue();
      Node node2 = Node.newNumber(0.0, 30, 43);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node node3 = Node.newString("originalname", 38, 37);
      node3.getProp(31);
      node3.useSourceInfoFromForTree(node1);
      node1.isVoid();
      Node.newString("originalname", 35, 38);
      node2.getStaticSourceFile();
      Node node4 = node0.cloneTree();
      node0.isInstanceOf();
      node4.checkTreeEqualsImpl(node2);
      Node.extractCharno((-2863));
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = Node.newString((-1852), "s=$eRGu");
      node0.removeFirstChild();
      Node node1 = new Node(37, node0, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      HashSet<InputId> hashSet0 = new HashSet<InputId>();
      ImmutableList.copyOf((Collection<? extends InputId>) hashSet0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      // Undeclared exception!
//      try { 
        node0.isEquivalentToShallow((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newNumber((-2701.4061438), 8199, 8199);
      node0.isDec();
      Node node1 = Node.newNumber((double) 2);
      node1.isStringKey();
      node1.isParamList();
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(57, node1, 418, (-1339));
      node2.mayMutateArguments();
      node2.isInc();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node((-2796), nodeArray0, 19, 130);
      node3.isScript();
      node1.isIf();
      node3.getProp(28);
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = Node.newString("iterators");
      Node node1 = new Node(50);
      node1.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node(2, node1, node1, node0, node0, 16, 37);
      node2.checkTreeEqualsImpl(node0);
      node1.isSwitch();
      Node node3 = node1.copyInformationFrom(node2);
      node2.removeProp(330);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.putBooleanProp(1263, true);
      node2.isInstanceOf();
      node2.isName();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = new Node(8199);
      node0.isDec();
      Node node1 = Node.newNumber((double) 52);
      node1.isSetterDef();
      node1.isParamList();
      node0.mayMutateGlobalStateOrThrow();
      node1.isNot();
      node1.isGetElem();
      Node node2 = new Node(Integer.MIN_VALUE);
      node2.putBooleanProp(8233, false);
      Node node3 = Node.newString("source_file");
      node1.copyInformationFrom(node2);
      node1.removeProp(46);
      node3.putBooleanProp(105, false);
      node3.isInstanceOf();
      node3.isName();
      node1.isGetterDef();
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newString("iterators");
      Node node1 = new Node(50);
      node1.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isSetterDef();
      node1.getJSDocInfo();
      Node.newNumber((-1.0), 148, 407);
      node1.isNew();
      StringWriter stringWriter0 = new StringWriter(37);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.writeTo(stringWriter0);
      node0.appendStringTree(charArrayWriter0);
      node1.siblings();
      node0.isEquivalentToShallow(node1);
      Node node2 = node1.cloneNode();
      // Undeclared exception!
//      try { 
        node2.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 50
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)73;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      nodeArray0[0] = node1;
      node1.isContinue();
      Node node2 = Node.newNumber(0.0, 30, 43);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node node3 = Node.newString("originalname", 38, 37);
      Node node4 = node3.useSourceInfoFromForTree(node1);
      node1.isVoid();
      node1.getSideEffectFlags();
      Node.newString("originalname", 35, 38);
      node2.getStaticSourceFile();
      node0.cloneTree();
      node4.isAssign();
      node1.hasMoreThanOneChild();
      node1.children();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = Node.newNumber(782.85079850401);
      Node node1 = new Node(1, node0, node0, node0, node0);
      node1.mayMutateArguments();
      node0.addChildrenToFront(node1);
      node0.isOnlyModifiesArgumentsCall();
      node1.isReturn();
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isGetProp();
      Node node1 = Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.clearAllFlags();
      node1.checkTreeEqualsImpl(node0);
      node1.isSwitch();
      Node node2 = node1.copyInformationFrom(node0);
      node1.removeProp(31);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.putBooleanProp(89, false);
      node0.isInstanceOf();
      node2.isName();
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = Node.newNumber((-2701.4061438), 8199, 8199);
      node0.isDec();
      Node node1 = new Node((-1601), node0);
      node0.addChildrenToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.valueOf();
      node0.getIndexOfChild(node1);
      node0.isExprResult();
      node1.isInc();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = new Node(8199);
      node0.isDec();
      Node node1 = Node.newNumber((double) 52);
      node1.isSetterDef();
      node1.isParamList();
      node0.mayMutateGlobalStateOrThrow();
      node1.isNot();
      node1.isGetElem();
      Node node2 = new Node(Integer.MIN_VALUE);
      node2.putBooleanProp(8233, false);
      Node.newString("source_file");
      Node node3 = node1.copyInformationFrom(node2);
      node1.removeProp(46);
      node2.putBooleanProp(8, false);
      node3.setSourceEncodedPositionForTree(36);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node4 = new Node(52, node0, 48, 698);
      node3.isEmpty();
      Node node5 = Node.newString(53, "source_file");
      node5.isEquivalentToShallow(node2);
      // Undeclared exception!
//      try { 
        node5.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 53
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(28, "ytu:G_nD1#", 28, 21);
      node0.isParamList();
      node0.isNE();
      Node node1 = new Node(43);
      Node node2 = new Node(63);
      node1.putBooleanProp(42, false);
      Node node3 = node1.copyInformationFrom(node2);
      node3.removeProp(53);
      node3.putBooleanProp((-1015), false);
      node2.setSourceEncodedPositionForTree(29);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node4 = new Node((-682), node3, 1, 52);
      node2.isEmpty();
      Node node5 = Node.newString((-282), "source_file");
      node3.isEquivalentToShallow(node2);
      node0.toString();
      node1.isDebugger();
      node5.isDo();
      node5.isNot();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(46, node0);
      node0.isUnscopedQualifiedName();
      node0.isContinue();
      node0.hasChildren();
      Node.newNumber((double) 38, 50, 29);
      node1.isNew();
      StringWriter stringWriter0 = null;
//      try {
        stringWriter0 = new StringWriter((-3348));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative buffer size
//         //
//         verifyException("java.io.StringWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.VOID_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.NO_OBJECT_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative3);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, functionType0);
      JSTypeNative jSTypeNative4 = JSTypeNative.NUMBER_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative4;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isComma();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = Node.newString("missing prop: ");
      node0.getType();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) arrayList0);
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      HashSet<InputId> hashSet0 = new HashSet<InputId>();
      ImmutableList.copyOf((Collection<? extends InputId>) hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", true);
      ImmutableList.of(simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0, simpleSourceFile0);
      ImmutableList<JSType> immutableList2 = immutableList1.reverse();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList2);
      node0.addChildrenToFront(node1);
      node0.setJSType((JSType) null);
      node0.isWhile();
      node0.isFunction();
      node1.isQuotedString();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(28, "ytu:G_nD1#", 28, 21);
      node0.isParamList();
      node0.isNE();
      Node node1 = new Node(2);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = node1.copyInformationFromForTree(node2);
      Node.newString("NULL_TYPE");
      node0.setLength(301);
      node2.getIntProp(1126);
      node0.toStringTree();
      node2.getString();
      Node node4 = node2.useSourceInfoFromForTree(node1);
      node1.getType();
      node4.isLabelName();
      node4.isVoid();
      Node node5 = new Node((-3311), node3, node3);
      // Undeclared exception!
//      try { 
        node5.checkTreeTypeAwareEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = Node.newString(98, "com.google.common.base.CharMatcher$12");
      Node node1 = new Node(122, node0, node0, node0);
      node1.isQualifiedName();
      Node node2 = Node.newNumber((double) 57, 36, (-244));
      node2.isGetProp();
      Node node3 = Node.newNumber((double) 55, 41, 57);
      node2.isNew();
      StringWriter stringWriter0 = new StringWriter(0);
      node1.appendStringTree(stringWriter0);
      node1.siblings();
      Node node4 = Node.newString("com.google.common.base.CharMatcher$12");
      node3.isEquivalentToShallow(node4);
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString("originalname", 42, 42);
      node0.setIsSyntheticBlock(true);
      node0.isQuotedString();
      node0.getIntProp(154);
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newNumber((double) 46);
      Node.newString("originalname");
      Node node2 = new Node(40, node1, node0, node0, node1);
      // Undeclared exception!
//      try { 
        node2.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = Node.newString((-1852), "s=$eRGu");
      Node node1 = new Node(53, node0);
      node0.isUnscopedQualifiedName();
      node0.isContinue();
      node0.isGetProp();
      Node node2 = Node.newNumber(0.0, (-678), 124);
      node2.isNew();
      StringWriter stringWriter0 = new StringWriter(52);
      // Undeclared exception!
//      try { 
        node1.appendStringTree(stringWriter0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 53
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = Node.newString("originalname", 42, 42);
      node0.setIsSyntheticBlock(true);
      node0.isQuotedString();
      node0.getIntProp(154);
      double double0 = (-1695.0);
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newNumber((double) 47);
      Node.newString("var_args_name");
      // Undeclared exception!
//      try { 
        node0.removeChild(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.VOID_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.NO_OBJECT_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative3);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, functionType0);
      Node node0 = Node.newString(216, "hM]S+S&U;*8");
      node0.isExprResult();
      node0.isInc();
      node0.getLength();
      Node node1 = Node.newNumber((double) 57);
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = Node.newString((-1852), "s=$eRGu");
      Node node1 = new Node(37, node0, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.isQualifiedName();
      Node node3 = Node.newNumber((double) 42, 49, 4095);
      node2.removeProp((-799));
      node3.putBooleanProp((-2739), false);
      node3.setSourceEncodedPositionForTree((-1760));
      Node node4 = null;
//      try {
        node4 = new Node(57, (Node) null, 4095, 15);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newNumber(923.2, 98, 124);
      Node node1 = new Node(4095, 33, 727);
      node1.isNot();
      node1.isGetElem();
      node0.putBooleanProp(32, false);
      node1.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;
      JSTypeNative jSTypeNative1 = JSTypeNative.NUMBER_STRING;
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      jSTypeRegistry0.incrementGeneration();
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative1;
      jSTypeNativeArray0[2] = jSTypeNative1;
      jSTypeNativeArray0[3] = jSTypeNative0;
      JSTypeNative jSTypeNative2 = JSTypeNative.STRING_OBJECT_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative2;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = jSType0;
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.isComma();
      Node node3 = Node.newString("originalname", 2, 47);
      // Undeclared exception!
//      try { 
        node2.replaceChild(node3, node0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = Node.newString("jtQTc?]T'T3>H#$*TL", 48, 30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.getProp((-2620));
      node1.setLineno(30);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      // Undeclared exception!
//      try { 
        node0.setString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      node1.isContinue();
      Node node2 = Node.newNumber(0.0, 30, 43);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node node3 = Node.newString("originalname", 38, 37);
      Node node4 = node3.useSourceInfoFromForTree(node1);
      node1.isVoid();
      Node node5 = Node.newString("originalname", 35, 38);
      node2.getStaticSourceFile();
      Node node6 = node0.cloneTree();
      node4.isAssign();
      node0.checkTreeEquals(node2);
      node6.isEquivalentTo(node0);
      node5.isArrayLit();
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      Node node2 = new Node(190, node1);
      node0.setVarArgs(true);
      InputId inputId0 = new InputId("originalname");
      node1.setInputId(inputId0);
      Node node3 = Node.newString("originalname");
      Node node4 = node3.copyInformationFrom(node2);
      node2.removeProp((-1005));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node4.setJSDocInfo(jSDocInfo0);
      node4.putBooleanProp(56, true);
      node1.setSourceEncodedPositionForTree(2194);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node5 = new Node(47, node4, 53, 4);
      node4.isEmpty();
      node5.toString();
      node5.isDebugger();
      node1.isDo();
      // Undeclared exception!
//      try { 
        node2.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isGetProp();
      Node node2 = Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node0);
      node_NodeMismatch0.equals((Object) null);
      node0.isIn();
      Node node3 = Node.newNumber(0.0);
      node1.checkTreeEquals(node3);
      node3.isLocalResultCall();
      node_SideEffectFlags1.setReturnsTainted();
      node2.hasOneChild();
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(682);
      node0.setLineno(682);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getSideEffectFlags();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isVar();
      node0.getJSDocInfo();
      Node node1 = node0.cloneTree();
      node1.isAssign();
      Node node2 = new Node(1);
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(113, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.setCharno((-1046));
      node3.toString(true, true, true);
      node3.isQualifiedName();
      node3.getChangeTime();
      node1.isQualifiedName();
      node0.getQualifiedName();
      node2.isTypeOf();
      node2.isVar();
      node2.isFromExterns();
      node1.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      node1.isContinue();
      node1.isGetProp();
      Node node2 = Node.newNumber(0.0, 30, 43);
      node1.isNew();
      StringWriter stringWriter0 = new StringWriter(52);
      node2.appendStringTree(stringWriter0);
      node0.siblings();
      node0.isEquivalentToShallow(node1);
      node2.getCharno();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newNumber((-2701.4061438), 8199, 8199);
      node0.isDec();
      Node node1 = new Node((-1601), node0);
      node1.isContinue();
      Node.newNumber((double) 50, (-1), 55);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(269);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.areAllFlagsSet();
      // Undeclared exception!
//      try { 
        node1.setString("\"D3");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -1601
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(103, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 103, 103);
      Node node1 = new Node(36, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.checkTreeEquals(node0);
      node0.getQualifiedName();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node3 = Node.newString(2, "Node tree inequality:\nTree1:\nSTRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n\n\nSubtree2: NUMBER 0.0\n", 38, (-151));
      node0.getAncestors();
      node3.hasMoreThanOneChild();
      node2.children();
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      Node node1 = Node.newString(55, "P$64>", 0, 122);
      Node.newString(1, "node is not a child");
      node1.isOr();
      node0.getLength();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = Node.newNumber((-2701.4061438), 8199, 8199);
      node0.isDec();
      Node node1 = new Node((-1601), node0);
      node0.addChildrenToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.valueOf();
      node0.getIndexOfChild(node1);
      node0.isExprResult();
      node1.isInc();
      node1.getLength();
      Node node2 = Node.newNumber((double) 37);
      node2.isThis();
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(57, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.setCharno((-1046));
      // Undeclared exception!
//      try { 
        node2.toString(true, true, true);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 57
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      Node node2 = new Node(190, node1);
      node0.setVarArgs(true);
      InputId inputId0 = new InputId("originalname");
      node1.setInputId(inputId0);
      Node node3 = Node.newString("originalname");
      Node node4 = node3.copyInformationFrom(node2);
      node2.removeProp((-1005));
      node4.putBooleanProp(56, true);
      node1.setSourceEncodedPositionForTree(2194);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node5 = new Node(440, node4, 50, (-1160));
      node0.isEmpty();
      node4.toString();
      node0.isDebugger();
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 33, 38);
      Node node2 = new Node(126, 30, 54);
      node1.isNot();
      node0.isGetElem();
      node1.putBooleanProp(44, false);
      node2.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[8];
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.OBJECT_NUMBER_STRING;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.NUMBER_STRING;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.NO_RESOLVED_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSTypeNative jSTypeNative4 = JSTypeNative.OBJECT_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative4;
      JSTypeNative jSTypeNative5 = JSTypeNative.DATE_TYPE;
      jSTypeNativeArray0[5] = jSTypeNative5;
      JSTypeNative jSTypeNative6 = JSTypeNative.VOID_TYPE;
      jSTypeNativeArray0[6] = jSTypeNative6;
      JSTypeNative jSTypeNative7 = JSTypeNative.OBJECT_TYPE;
      jSTypeNativeArray0[7] = jSTypeNative7;
      jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isComma();
      // Undeclared exception!
//      try { 
        node2.replaceChild(node1, node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-4976.5));
      node0.putBooleanProp(217088, true);
      node0.setSourceEncodedPositionForTree(545);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(56, node0, 38, 217088);
      node0.isEmpty();
      // Undeclared exception!
//      try { 
        node0.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 217088
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node.extractLineno(29);
      node0.isVarArgs();
      node0.isHook();
      node0.isRegExp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeNative jSTypeNative0 = JSTypeNative.REGEXP_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      JSTypeNative jSTypeNative1 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      JSType jSType1 = jSTypeRegistry0.getNativeType(jSTypeNative1);
      jSTypeArray0[1] = jSType1;
      Node node1 = new Node(2, node0);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSTypeArray0[1], jSTypeArray0);
      ObjectType objectType0 = jSTypeRegistry0.createObjectType("j=:", node1, (ObjectType) functionType0);
      jSTypeArray0[2] = (JSType) objectType0;
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newNumber((-2701.4061438), 8199, 8199);
      node0.isDec();
      Node node1 = Node.newNumber((double) 2);
      node1.isStringKey();
      node0.hasOneChild();
      Node node2 = new Node(57, node1, 418, (-1339));
      node2.isInc();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node((-2796), nodeArray0, 19, 130);
      node3.isScript();
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      Node node1 = new Node(28, node0, node0);
      node0.addChildrenToFront(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "originalname");
      Node node2 = Node.newString("originalname");
      node0.checkTreeEqualsImpl(node2);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setNoCheck(true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.putBooleanProp(2, false);
      node0.isInstanceOf();
      node0.isCall();
      node0.isAdd();
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "originalname");
      Node node1 = Node.newString("InputId: originalname");
      node0.checkTreeEqualsImpl(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setNoCheck(true);
      Node node2 = new Node(46, node1, node1, node0);
      node1.removeProp((-867));
      node1.setSourceEncodedPositionForTree(1956);
      node0.getIndexOfChild(node2);
      node1.isDebugger();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isQualifiedName();
      node0.isGetProp();
      Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.clearAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isVar();
      node0.getJSDocInfo();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = Node.newString(98, "com.google.common.base.CharMatcher$12");
      Node node1 = new Node(57);
      node0.isAssignAdd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4474);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.putBooleanProp((-561), true);
      Node node2 = new Node(55);
      node2.isThrow();
      node0.isCatch();
      node2.isInstanceOf();
      node2.putIntProp((-60), 57);
      node0.isString();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      node1.isContinue();
      node0.getAncestor(53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.areAllFlagsSet();
//      try { 
        node1.setString("originalname");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // POS is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      Node.newString("originalname");
      node0.setVarArgs(true);
      node0.setInputId(inputId0);
      Node node1 = node0.copyInformationFrom(node0);
      node0.isNew();
      StringWriter stringWriter0 = new StringWriter(2);
      stringWriter0.write("InputId: originalname");
      node1.appendStringTree(stringWriter0);
      node0.siblings();
      node0.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-4976.5));
      Node node1 = Node.newString("5#", 94, 15);
      node0.isAdd();
      Node.extractLineno((-2683));
      node0.isVarArgs();
      node1.isHook();
      node1.isRegExp();
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      node1.isContinue();
      Node node2 = Node.newNumber(0.0, 30, 43);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.setString("originalname");
      node_SideEffectFlags0.valueOf();
      node0.getIndexOfChild(node2);
      node2.isExprResult();
      node2.isInc();
      node1.getLength();
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = new Node(3305, 524288, (-135));
      Node node1 = new Node(2468, node0, node0, node0, 54, 36);
      node1.getStaticSourceFile();
      node0.isFunction();
      node1.mayMutateGlobalStateOrThrow();
      node1.getSourceOffset();
      // Undeclared exception!
//      try { 
        node1.addChildToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(31, nodeArray0, 31, 31);
      Node node1 = new Node(57, nodeArray0, 12, 46);
      Node node2 = new Node(8, node0, node1, node1, node0);
      node2.isCall();
      node0.isBreak();
      node2.hasOneChild();
      node1.isInc();
      node0.isName();
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newString(98, "com.google.common.base.CharMatcher$12");
      Node node1 = new Node(122, node0, node0, node0);
      node1.isQualifiedName();
      node1.setType(122);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Q");
      node1.getInputId();
      node0.putProp(12, (Object) null);
      node0.isIn();
      node1.isExprResult();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 33, 38);
      Node node2 = new Node(126, 30, 54);
      node1.isNot();
      node0.isGetElem();
      node1.putBooleanProp(44, false);
      node2.isEmpty();
      node0.toString();
      node0.isIn();
      // Undeclared exception!
//      try { 
        node1.addChildBefore(node0, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      String string0 = "BANG";
      InputId inputId0 = new InputId("BANG");
      inputId0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newString("BANG");
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.checkTreeEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = Node.newString(4, "v^&yhhw';B70X*K", 4, 4);
      Node node1 = new Node(190, node0, node0, node0, node0, 0, 56);
      node0.setQuotedString();
      Node node2 = new Node((-1209), 54, 32768);
      node0.isEquivalentToTyped(node2);
      node1.isGetElem();
      node0.putBooleanProp((-96), false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("v^&yhhw';B70X*K");
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Node node0 = Node.newString(418, "", (-850), 461845907);
      node0.isVoid();
      node0.hasOneChild();
      Node node1 = new Node(46, node0);
      node0.getString();
      node0.addChildToFront(node1);
      node0.isIn();
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.BooleanType");
      Node node3 = node0.getParent();
      Node node4 = null;
//      try {
        node4 = new Node(12, node3, node2, node2, 8232, 54);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-4976.5));
      node0.isUnscopedQualifiedName();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(28, "ytu:G_nD1#", 1394, 21);
      node0.isParamList();
      node0.isNE();
      Node node1 = new Node(43);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node3 = new Node(112, nodeArray0, (-2673), 37);
      node1.isLocalResultCall();
      node2.isEmpty();
      node2.toString();
      node2.isDebugger();
      node3.isFor();
      node3.isDebugger();
      node0.useSourceInfoFrom(node1);
      node1.isFunction();
      node1.isEquivalentTo(node2, false, false, false);
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(50, node0, 54, 112);
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      Node.newString("originalname");
      node1.setVarArgs(true);
      node0.setInputId(inputId0);
      Node node2 = node0.copyInformationFrom(node1);
      node0.removeProp((-1629));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.putBooleanProp(0, true);
      node1.isInstanceOf();
      node2.isName();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(31, nodeArray0, 31, 31);
      Node node1 = new Node(57, nodeArray0, 12, 46);
      Node node2 = new Node(8, node0, node1, node1, node0);
      node2.isCall();
      node0.isBreak();
      node2.hasOneChild();
      node1.isInc();
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) 682, (-174), 153);
      Node node1 = new Node(565, node0, node0, node0);
      node0.isQualifiedName();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Q");
      node1.isIn();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = Node.newNumber(923.2, 98, 124);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node((-1629));
      node1.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isVar();
      node1.getJSDocInfo();
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(682);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isVar();
      node0.getJSDocInfo();
      node0.isOr();
      Node node1 = new Node(40, 49, (-1274));
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(50, node0, 54, 112);
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      Node node2 = Node.newString("originalname");
      node1.setVarArgs(true);
      node0.setInputId(inputId0);
      Node node3 = node0.copyInformationFrom(node1);
      node0.removeProp((-1629));
      node2.setSourceFileForTesting(",(^N)yHPW+");
      node2.removeProp(170);
      node1.putBooleanProp(2097152, true);
      node2.setSourceEncodedPositionForTree(0);
      node3.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      Node node1 = new Node(91, node0, node0);
      node1.isQualifiedName();
      node0.getChangeTime();
      node1.isQualifiedName();
      node1.getQualifiedName();
      Node node2 = new Node((-2810), node1);
      node2.isTypeOf();
      node1.setWasEmptyNode(false);
      node2.isVar();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((-771));
      Node node1 = Node.newString("6(");
      node1.getQualifiedName();
      node0.mayMutateArguments();
      node1.isOr();
      node0.isString();
      node1.setCharno(32768);
      // Undeclared exception!
//      try { 
        node0.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -771
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2810));
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = new Node(8192);
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(682);
      node0.setLineno(682);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getSideEffectFlags();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isVar();
      node0.getJSDocInfo();
      node0.isCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 682
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = Node.newString((-1977), "prev is not a child of this node.");
      Node node1 = Node.newString(2154, "com.google.javascript.rhino.Node$NumberNode", 1349, 42);
      Node node2 = new Node(15, node0, node0, node1, 2, 16);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.Node$NumberNode");
      Node node3 = node2.useSourceInfoFromForTree(node0);
      node3.getProp(1);
      Node node4 = null;
//      try {
        node4 = new Node(1, node2, node0, node2, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(28, "ytu:G_nD1#", 1394, 21);
      node0.isParamList();
      node0.isNE();
      Node node1 = new Node(43);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node.newString("~g.rgPI%{Lo2");
      node3.setLength(57);
      node0.getIntProp(1394);
      node2.toStringTree();
      node2.getString();
      Node node4 = node0.useSourceInfoFromForTree(node1);
      node1.getType();
      node1.isLabelName();
      node4.isVoid();
      Node node5 = Node.newString("ytu:G_nD1#", 2, 289);
      node0.getStaticSourceFile();
      Node node6 = node4.cloneTree();
      node4.isAssign();
      Node node7 = new Node(4);
      node4.checkTreeEquals(node7);
      node5.isEquivalentTo(node0);
      node1.isArrayLit();
      node6.isNull();
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(682);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString(57, "'2");
      node0.copyInformationFromForTree(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node2 = new Node(4, node0, node0, node0);
      node2.isIn();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(113, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.setCharno((-1046));
      node3.toString(true, true, true);
      node3.isQualifiedName();
      node3.getChangeTime();
      node1.isQualifiedName();
      node0.getQualifiedName();
      node2.isTypeOf();
      node0.setWasEmptyNode(true);
      node2.isVar();
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.isUnscopedQualifiedName();
      node0.getInputId();
      node0.getProp(16);
      node0.setLineno(39);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getAncestor(281);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2737));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.areAllFlagsSet();
//      try { 
        node0.setString("R:`.6i$!PI");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // IF 39 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(682);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isVar();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(113, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.copyInformationFrom(node1);
      node1.useSourceInfoFromForTree(node0);
      node1.setCharno((-1046));
      // Undeclared exception!
//      try { 
        Node.newString(671, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(31, nodeArray0, 31, 31);
      Node node1 = new Node(57, nodeArray0, 12, 46);
      Node node2 = node0.srcrefTree(node1);
      node2.isCall();
      node0.isBreak();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = Node.newNumber((-507.2823927), 179, 179);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      node_SideEffectFlags0.clearAllFlags();
      Node node1 = Node.newString(131072, "missing prop: ");
      Node node2 = new Node((-926), node0, node1, 48, 93);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch0.equals("InputId: originalname");
      node2.isIn();
      Node.newNumber((double) (-478));
      Node node3 = null;
//      try {
        node3 = new Node(1095, node2, node0, node0, 179, 40);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = Node.newNumber((-3498.884066096143), (-3489), 93);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node2 = new Node(15, node0, node1, node0);
      node0.isEquivalentTo(node2, false, false, false);
      Stack<JSType> stack1 = new Stack<JSType>();
      stack1.remove((Object) stack0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node1.getProp(4095);
      node2.setLineno((-3054));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.getAncestor(37);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.areAllFlagsSet();
//      try { 
        node1.setString("");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // PARAM_LIST is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newString(98, "com.google.common.base.CharMatcher$12");
      Node node1 = new Node(122, node0, node0, node0);
      node1.isQualifiedName();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Q");
      node0.isIn();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(28, "ytu:G_nD1#", 1394, 21);
      node0.isParamList();
      node0.isNE();
      Node node1 = new Node(43);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.copyInformationFromForTree(node1);
      Node.newString("~g.rgPI%{Lo2");
      node0.getIntProp(1394);
      node2.toStringTree();
      node2.getString();
      Node node3 = node0.useSourceInfoFromForTree(node1);
      node1.getType();
      node1.isLabelName();
      node3.isVoid();
      Node node4 = Node.newString("ytu:G_nD1#", 2, 289);
      node0.getStaticSourceFile();
      Node node5 = node3.cloneTree();
      node3.isAssign();
      Node node6 = new Node(4);
      node3.checkTreeEquals(node6);
      node4.isEquivalentTo(node0);
      node1.isArrayLit();
      node5.isNull();
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = Node.newNumber(923.2, 98, 124);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = new Node(4095, node0, node0, 40, 40);
      node0.isEquivalentTo(node1, false, false, false);
      stack0.remove((Object) "Object#Key");
      node1.type = 1272;
      node0.getProp(949);
      node0.setLineno(1723);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte)57;
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isObjectLit();
      node1.isOr();
      node0.useSourceInfoIfMissingFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(124);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(113, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.setCharno((-1046));
      node3.toString(true, true, true);
      node3.isQualifiedName();
      node3.getChangeTime();
      node1.isQualifiedName();
      node0.getQualifiedName();
      node2.isTypeOf();
      node0.setWasEmptyNode(true);
      int int0 = 988;
      node2.isFalse();
      // Undeclared exception!
//      try { 
        node0.getAncestor((-1895));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newString("R:`.6i$!PI", 108, 108);
      node0.isUnscopedQualifiedName();
      Object object0 = new Object();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(47, nodeArray0, 46, 1834);
      node0.isLocalResultCall();
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp(39);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 39
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-4976.5));
      node0.isUnscopedQualifiedName();
      node0.setWasEmptyNode(true);
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newString("R:`.6i$!PI", 108, 108);
      node0.isUnscopedQualifiedName();
      node0.getProp(3880);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(47, nodeArray0, 46, 1834);
      node0.isLocalResultCall();
      node0.isEmpty();
      node0.toString();
      node0.isDebugger();
      node1.isFor();
      node1.isDebugger();
      node0.useSourceInfoFrom(node0);
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.VOID_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.NO_OBJECT_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative3);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, functionType0);
      Node node0 = Node.newString("Named type with empty name component", 1, (-1495));
      Node node1 = new Node(366, node0, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node1.addChildrenToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = Node.newNumber(923.2, 98, 124);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isEquivalentTo(node1, false, false, false);
      stack0.remove((Object) "Object#Key");
      node1.type = 1272;
      node0.getProp(949);
      node0.setLineno(1723);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-34);
      node1.getAncestor(29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.areAllFlagsSet();
//      try { 
        node0.setString("var_args_name");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 923.2 1723 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = Node.newString(54, ".es:3");
      Node node1 = Node.newString(29, ".es:3", 56, 42);
      node0.isGetProp();
      node1.isString();
      node0.copyInformationFromForTree(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      node1.isIn();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0);
      Node node1 = new Node(113, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.setCharno((-1046));
      node3.toString(true, true, true);
      node3.isQualifiedName();
      node3.getChangeTime();
      node1.isQualifiedName();
      node0.getQualifiedName();
      node2.isTypeOf();
      int int0 = 988;
      // Undeclared exception!
//      try { 
        node0.getAncestor((-1895));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = Node.newNumber((-2701.4061438), 8199, 8199);
      node0.isDec();
      Node node1 = new Node((-1601), node0);
      node0.addChildrenToBack(node1);
      Node.newString("S)");
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = Node.newString(1334, "originalname");
      node0.wasEmptyNode();
      node0.getDirectives();
      node0.getQualifiedName();
      int int0 = 1;
      Node node1 = new Node(1, node0, node0, node0, (-867), 50);
      node1.putIntProp(112, 46);
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber((-1.0));
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newNumber((-3818.9963), 46, 36);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newString(8, "com.google.javascript.rhino.jstype.JSTypeNative");
      node3.isOnlyModifiesArgumentsCall();
      node0.setLineno(12);
      node3.addSuppression("\"GGXz5A5=#EF");
      node2.isEquivalentToShallow(node0);
      Node.extractCharno(31);
      node1.getLineno();
      node1.isWhile();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(5423);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = Node.newString(".$Ys5{&JcYf5t$=rcUE");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isGetProp();
      Node.newNumber((double) 16, 51, 49);
      node1.isQualifiedName();
      node1.isGetProp();
      Node node2 = Node.newNumber((double) 16, 123, 154);
      node2.isNew();
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter();
      node2.appendStringTree(stringWriter1);
      Node node3 = new Node(154, node1, node2, node2);
      Node node4 = null;
//      try {
        node4 = new Node(37, node0, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = Node.newString(1967, "H8");
      Node node1 = Node.newString(36, "P:");
      Node node2 = new Node(50, node0, node1, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      Node node3 = null;
      Node node4 = null;
//      try {
        node4 = new Node((-1728), (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newNumber(468.0);
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node1.isOnlyModifiesArgumentsCall();
      node1.setChangeTime(52);
      node0.setLineno(0);
      node1.addSuppression("");
      Node.extractCharno(31);
      node1.getLineno();
      node0.isWhile();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(57);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("m");
      Node node1 = new Node(1204, node0, 112, 148);
      InputId inputId0 = new InputId("m");
      inputId0.toString();
      Node node2 = Node.newString("InputId: m");
      node2.setVarArgs(false);
      node0.setInputId(inputId0);
      Node node3 = node2.copyInformationFrom(node1);
      node2.removeProp(43);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.putBooleanProp(0, false);
      node1.isInstanceOf();
      node1.isCall();
      node1.isObjectLit();
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isQualifiedName();
      node0.isGetProp();
      Node node2 = Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node2.putBooleanProp((-277), true);
      node2.isThrow();
      node2.isCatch();
      node1.isInstanceOf();
      node2.putIntProp(40, 29);
      node0.isString();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      String string0 = "ufa;zUqBG7Sp";
      Node node0 = Node.newString((-3703), "ufa;zUqBG7Sp", (-3703), (-3703));
      Node node1 = new Node((-1604), 15, (-600));
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-3261), node1, node0, node1, 52, 8);
      node2.detachChildren();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(node_SideEffectFlags5);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -3261
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node node0 = Node.newString((-3489), "com.google.javascript.rhino.jstype.NoResolvedType");
      Node node1 = new Node(30, node0, node0, 1856, 2057);
      // Undeclared exception!
//      try { 
        node1.replaceChild(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.VOID_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.NO_OBJECT_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative3);
      functionType0.isUnknownType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = new Node((-1397));
      EnumType enumType0 = jSTypeRegistry1.createEnumType("m-CW]", node0, functionType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getPropertyNode("Named type with empty name component");
      Node node1 = null;
//      try {
        node1 = new Node(1, (Node) null, node0, (Node) null, node0, 1834, 46);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isQualifiedName();
      node0.isGetProp();
      Node.newNumber((double) 1, (-478), 0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-2286), nodeArray0, (-567), 37);
      node1.srcrefTree(node0);
      Node node3 = new Node(4, node2, node2, 1, (-3759));
      Node node4 = Node.newString((-3433), "", (-3358), 31);
      Node node5 = Node.newNumber((-2763.67382714557), 54, 32768);
      Node node6 = new Node(1, node3, node0, node5, 55, 4095);
      Node node7 = null;
//      try {
        node7 = new Node(47, node1, node4, node1, node6, 102, 0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.putBooleanProp(17, false);
      node0.isThrow();
      node0.isCatch();
      node0.isInstanceOf();
      node0.putIntProp(1579, 0);
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber((-1.0));
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(40, "", 1723, 102);
      Node node2 = Node.newString(0, "b<2u", 43, 30);
      node0.addChildrenToFront(node2);
      node2.getString();
      Node node3 = node2.cloneTree();
      node0.type = 2057;
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isArrayLit();
      node0.isUnscopedQualifiedName();
      node0.getDouble();
      node0.getInputId();
      Node node4 = node0.clonePropsFrom(node3);
      node0.isNE();
      node1.isOptionalArg();
      node4.getJSDocInfo();
      node2.setType(48);
      Node node5 = node0.getLastChild();
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node5);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 48
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isQualifiedName();
      node0.isGetProp();
      Node node2 = Node.newNumber((double) 1, (-478), 0);
      node0.isQualifiedName();
      node1.isGetProp();
      Node node3 = Node.newNumber((-1.0), 3555, 1086);
      node2.isNew();
      StringWriter stringWriter0 = new StringWriter(50);
      node2.appendStringTree(stringWriter0);
      node2.siblings();
      node3.isEquivalentToShallow(node2);
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.areAllFlagsSet();
      Node node0 = Node.newNumber((-3818.9963), (-1915), 111);
      Node node1 = Node.newNumber(0.0, (-4492), 1204);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=!Rd");
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(148);
      node_SideEffectFlags3.clearAllFlags();
      node1.checkTreeEqualsImpl(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("=!Rd", node1, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      String string0 = "R:`.6i$!PI";
      Node node0 = Node.newString("R:`.6i$!PI", 108, 108);
      node0.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(47, nodeArray0, 51, 55);
      node0.srcrefTree(node0);
      Node node2 = null;
//      try {
        node2 = new Node(1332, node0, (Node) null, 1376, 4095);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI");
      Node node1 = new Node(120, node0, 12, 46);
      InputId inputId0 = new InputId("_IGKB:!&qDg{E3Lq");
      inputId0.toString();
      node0.getAncestor(108);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node2 = Node.newString("R:`.6i$!PI");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch((Node) null, node2);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setNoCheck(false);
      String string0 = "originalname";
      Node node3 = Node.newString("originalname");
      // Undeclared exception!
//      try { 
        node3.addChildrenAfter(node0, (Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      Node node0 = Node.newString("aC<Tta044=QDWeM");
      Node node1 = new Node(39);
      node0.isAssignAdd();
      node1.addChildrenToBack(node0);
      // Undeclared exception!
//      try { 
        node1.setDouble(1.0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      int int0 = 108;
      Node node0 = Node.newString("R:`.6i$!PI", 108, 108);
      node0.isUnscopedQualifiedName();
      Object object0 = new Object();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
//      try { 
        node0.setDouble(3880);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING R:`.6i$!PI 108 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) templateType0);
      NoObjectType noObjectType0 = mock(NoObjectType.class, new ViolatedAssumptionAnswer());
      ImmutableList.of(noObjectType0, noObjectType0, noObjectType0, noObjectType0, noObjectType0, noObjectType0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      templateType0.isPropertyInExterns("Unknown class name");
//      try { 
        node0.setDouble(0.0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // PARAM_LIST is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = Node.newNumber(923.2, 98, 124);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setCharno(98);
      node0.toString(true, true, true);
      node0.isQualifiedName();
      node0.getChangeTime();
      node0.isQualifiedName();
      node0.getQualifiedName();
      node0.isTypeOf();
      node0.setWasEmptyNode(false);
      node0.isFalse();
      // Undeclared exception!
//      try { 
        node0.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = Node.newNumber((-4976.5));
      Node node1 = Node.newString(55, "P$64>", 0, 122);
      node1.isOr();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      Node node2 = new Node(190, node1);
      node0.setVarArgs(true);
      InputId inputId0 = new InputId("originalname");
      node1.setInputId(inputId0);
      Node node3 = Node.newString("originalname");
      Node node4 = node3.copyInformationFrom(node2);
      node2.removeProp((-1005));
      node4.putBooleanProp(56, true);
      node1.setSourceEncodedPositionForTree(2194);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node5 = new Node(440, node4, 50, (-1160));
      node5.getSourcePosition();
      node0.isWhile();
      // Undeclared exception!
//      try { 
        node3.getChildBefore(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-361), nodeArray0);
      node0.setSourceEncodedPosition(322);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      HashSet<NoObjectType> hashSet0 = new HashSet<NoObjectType>();
      NoObjectType noObjectType0 = mock(NoObjectType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(noObjectType0).toString();
      hashSet0.add(noObjectType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) hashSet0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.addChildToBack(node1);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-69);
      simpleErrorReporter0.warning("Not declared as a type name", "Named type with empty name component", 4095, 101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.setSourceEncodedPositionForTree((-361));
      node0.getLength();
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
//      try { 
        node0.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = Node.newString(115, "jtQTc?]T'T3>H#$*TL", 4, (-203));
      Node node1 = new Node(30, node0, node0, node0, node0, 33, 38);
      Node node2 = new Node(126, 30, 54);
      node1.isNot();
      node0.isGetElem();
      node1.putBooleanProp(44, false);
      node1.isThrow();
      node2.isCatch();
      // Undeclared exception!
//      try { 
        node1.getChildAtIndex(51);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isQualifiedName();
      node0.isGetProp();
      Node node2 = Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node2.putBooleanProp((-277), true);
      node2.isThrow();
      node2.isCatch();
      node1.isInstanceOf();
      node2.putIntProp(40, 29);
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      Node node0 = Node.newString((-3450), "H");
      Node node1 = new Node((-3450), node0, node0, node0);
      node1.setOptionalArg(false);
      Node node2 = new Node((-3450), node1, (-1399), 51);
      node0.putIntProp(0, (-4350));
      node1.getDirectives();
      node1.addChildToFront(node2);
      node1.getProp((-4350));
      node2.isQualifiedName();
      node2.mayMutateGlobalStateOrThrow();
      node1.setSourceEncodedPosition(55);
      node1.getDirectives();
      node2.isVar();
      node0.addSuppression("");
      Node node3 = node2.getParent();
      node3.setIsSyntheticBlock(false);
      node1.isUnscopedQualifiedName();
      node3.isIn();
      Node.AncestorIterable node_AncestorIterable0 = node3.getAncestors();
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node node0 = Node.newString("R:`.6i$!PI", 108, 108);
      node0.isUnscopedQualifiedName();
      node0.getProp(3880);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(47, nodeArray0, 46, 1834);
      node0.isAssign();
      node0.isLocalResultCall();
      node0.isEmpty();
      node0.toString();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = new Node(127);
      node0.setVarArgs(false);
      node0.getInputId();
      Object object0 = new Object();
      node0.putProp(127, object0);
      // Undeclared exception!
//      try { 
        node0.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 127
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(50, node0, 28, 112);
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      node1.getAncestor(54);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "originalname");
      Node node2 = Node.newString("InputId: originalname");
      node0.checkTreeEqualsImpl(node2);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setNoCheck(true);
      // Undeclared exception!
//      try { 
        node2.addChildrenAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(28, node0);
      node1.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      node1.isQualifiedName();
      node1.isGetProp();
      Node node2 = Node.newNumber(0.0, 30, 43);
      node1.isNew();
      StringWriter stringWriter0 = new StringWriter(52);
      node2.appendStringTree(stringWriter0);
      node0.siblings();
      node0.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 0);
      Node node1 = new Node(57, nodeArray0, 12, 46);
      Node node2 = new Node(42);
      node2.getSourceFileName();
      int int0 = 849;
      // Undeclared exception!
//      try { 
        Node.newString(15, (String) null, 31, 1055);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      Node node0 = Node.newString((-170), "2.!K1*kk|uJ`M_W[)", (-536870912), 51);
      Node node1 = new Node(0, node0, node0, node0);
      // Undeclared exception!
//      try { 
        node1.addChildrenToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = Node.newNumber((double) (-478), (-478), (-478));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node0.putBooleanProp(0, true);
      node0.isThrow();
      node0.isCatch();
      node0.isInstanceOf();
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber((-3363.40146136), 10, 132);
      node0.removeProp(132);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("StringNode: str is null");
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("%+R7?H$");
      node0.getLineno();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI");
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newString("OYQW.=");
      node0.addChildrenToFront(node1);
      node0.getString();
      node0.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesGlobalState();
      node1.isArrayLit();
      node1.isUnscopedQualifiedName();
//      try { 
        node1.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING OYQW.= is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber((-1.0));
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(40, "", 1723, 102);
      Node node2 = Node.newString(0, "b<2u", 43, 30);
      node0.addChildrenToFront(node2);
      node2.getString();
      Node node3 = node2.cloneTree();
      node0.type = 2057;
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isArrayLit();
      node0.isUnscopedQualifiedName();
      node0.getDouble();
      node0.getInputId();
      node0.clonePropsFrom(node3);
      node0.isNE();
      node1.isOptionalArg();
      node0.getLastChild();
      Node.newNumber(364.67620430682854, 6, 46);
      Node node4 = null;
//      try {
        node4 = new Node(3339, (Node[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isGetProp();
      Node node2 = Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node0);
      node_NodeMismatch0.equals((Object) null);
      node0.isIn();
      Node node3 = Node.newNumber(0.0);
      node1.checkTreeEquals(node3);
      node3.isLocalResultCall();
      node_SideEffectFlags1.setReturnsTainted();
      node2.hasOneChild();
      Node node4 = Node.newString(")wA9MHPor@NiBS");
      node4.isInc();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      String string0 = "v^&yhhw';B70X*K";
      Node node0 = Node.newString(4, "v^&yhhw';B70X*K", 4, 4);
      int int0 = 0;
      Node node1 = new Node(190, node0, node0, node0, node0, 0, 56);
      Node node2 = new Node((-1209), 54, 32768);
      node0.isEquivalentToTyped(node2);
      node1.isGetElem();
      node2.getQualifiedName();
      node0.detachChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(node_SideEffectFlags2);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -1209
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = Node.newString(4, "v^&yhhw';B70X*K", 4, 4);
      Node node1 = new Node(190, node0, node0, node0, node0, 0, 56);
      Node node2 = new Node((-1209), 54, 32768);
      node0.isEquivalentToTyped(node2);
      node1.isGetElem();
      node0.putBooleanProp((-96), false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("v^&yhhw';B70X*K");
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newNumber(468.0, (-699), (-699));
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node1.isOnlyModifiesArgumentsCall();
      node0.setLineno(0);
      node1.addSuppression("");
      Node.extractCharno(31);
      node1.getLineno();
      node0.isWhile();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(57);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(50, node0, 28, 112);
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      node1.getAncestor(54);
      boolean boolean0 = true;
      node1.setVarArgs(true);
      node0.setInputId(inputId0);
      node0.copyInformationFrom(node1);
      Node node2 = new Node(3376, node1);
      // Undeclared exception!
//      try { 
        node2.addChildToBack(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(39, node0);
      node0.isQualifiedName();
      node0.isGetProp();
      Node node2 = Node.newNumber((double) 1, (-478), 0);
      node2.isNew();
      StringWriter stringWriter0 = new StringWriter(15);
      node2.appendStringTree(stringWriter0);
      node2.siblings();
      node1.isEquivalentToShallow(node2);
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      Node node0 = Node.newString("C");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isQualifiedName();
      node0.isGetProp();
      Node node2 = Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node2.putBooleanProp((-277), true);
      node2.isThrow();
      node2.isCatch();
      node1.isInstanceOf();
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(49, "", 337, 337);
      node0.putBooleanProp(49, true);
      node0.setSourceEncodedPositionForTree(5996);
      Node node1 = Node.newNumber((double) 49);
      node1.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(50, node0, 28, 112);
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      node1.getAncestor(54);
      node1.setVarArgs(true);
      node0.setInputId(inputId0);
      node0.copyInformationFrom(node1);
      node0.removeProp((-1629));
      Node node2 = null;
//      try {
        node2 = new Node(111, node0, 39, 2724);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node node0 = Node.newString(46, ".es:3");
      Node node1 = new Node(38, node0, node0, node0);
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
//      try { 
        node1.isQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isArrayLit();
      Node node1 = Node.newString((-1619), "P$_N,k=#$", 4194304, 0);
      node1.isEquivalentToTyped(node0);
      node1.useSourceInfoFrom(node0);
      Node node2 = Node.newString(48, "%PS.$yP;!;f,_yaIsr", 2018, (-2315));
      node0.addChildrenToFront(node2);
      Node node3 = node0.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      // Undeclared exception!
//      try { 
        node3.setSideEffectFlags((-578));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      Node node0 = Node.newString((-1852), "s=$eRGu");
      Node node1 = new Node(37, node0, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.isQualifiedName();
      node2.isGetProp();
      Node node3 = Node.newNumber((double) 42, 49, 4095);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node3.putBooleanProp(54, false);
      node1.isThrow();
      Node node4 = null;
//      try {
        node4 = new Node(52, node0, node1, node1, 56, 57);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isGetProp();
      Node node1 = Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.clearAllFlags();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node0);
      node_NodeMismatch0.equals((Object) null);
      node0.isIn();
      Node.newNumber(0.0);
      Node.newNumber((double) 0, 3920, (-1222));
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isQualifiedName();
      node0.isGetProp();
      Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node1.setSourceEncodedPositionForTree((-2042));
      node1.getIndexOfChild(node0);
      Node node2 = Node.newNumber((-318.58804119543805), 62, 29);
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(node_SideEffectFlags2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString((-1619), "P$_N,k=#$", 4194304, 0);
      node1.isEquivalentToTyped(node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      Node node3 = new Node(4095, node2, node1);
      node3.setLength(39);
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node2, (Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(49, "", 337, 337);
      Node node1 = new Node((-1051), node0, 703, 461845907);
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 0);
      Node node1 = new Node(57, nodeArray0, 12, 46);
      Node node2 = node0.srcrefTree(node1);
      node0.putBooleanProp(29, true);
      node2.setSourceEncodedPosition(52);
      Node node3 = new Node(48, node0, node0, 1979, 50);
      Node node4 = Node.newNumber(0.0, 2, (-450));
      Node node5 = null;
//      try {
        node5 = new Node(39, node4, node3, node3, node0, 32768, 1414);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      Node node0 = Node.newNumber(923.2, 98, 124);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isEquivalentTo(node1, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stack0.remove((Object) "Object#Key");
      node1.type = 1272;
      node0.getProp(949);
      node0.setLineno(1723);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isObjectLit();
      Node node3 = Node.newNumber((-4516.0), 0, (-4492));
      node1.isOr();
      node0.useSourceInfoIfMissingFrom(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(124);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node3.isCall();
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(108, (Node) null, (Node) null, (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      Node node0 = Node.newString((-3450), "H");
      Node node1 = new Node((-3450), node0, node0, node0);
      Node node2 = Node.newString(43, "H");
      node0.isUnscopedQualifiedName();
      node2.isEquivalentToTyped(node1);
      node2.isLocalResultCall();
      Node node3 = null;
//      try {
        node3 = new Node(12, node1, node0, node0, node0, 37, (-1874));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      String string0 = "R:`.6i$!PI";
      Node node0 = Node.newString(108, "R:`.6i$!PI");
      Node node1 = new Node(905, node0, (-3414), 50);
      InputId inputId0 = new InputId("R:`.6i$!PI");
      inputId0.toString();
      node1.getAncestor(2);
      boolean boolean0 = true;
      Node node2 = null;
//      try {
        node2 = new Node(8, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      Node node0 = Node.newString((-867), "c+]*e`qfN0kZ", (-1852), 204);
      node0.putProp((-1359), "c+]*e`qfN0kZ");
      node0.getJsDocBuilderForNode();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      Node node0 = Node.newString(4, "v^&yhhw';B70X*K", 4, 4);
      Node node1 = new Node(190, node0, node0, node0, node0, 0, 56);
      Node node2 = new Node((-1209), 54, 32768);
      node0.isEquivalentToTyped(node2);
      node1.isGetElem();
      node0.putBooleanProp((-96), false);
      node0.hasChild(node1);
      node1.isCatch();
      node2.isAdd();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 0);
      Node node1 = new Node(57, nodeArray0, 12, 46);
      Node node2 = node0.srcrefTree(node1);
      Node node3 = new Node(48, node0, node0, 1979, 50);
      node3.srcref(node2);
      // Undeclared exception!
//      try { 
        node3.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 48
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node node0 = Node.newString((-867), "c+]*e`qfN0kZ", (-1852), 204);
      node0.getJsDocBuilderForNode();
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node1 = null;
//      try {
        node1 = new Node(1645, nodeArray0, 3132, 32);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.checkTreeEqualsImpl(node0);
      node0.getSourceOffset();
      boolean boolean0 = true;
      Node node1 = Node.newNumber(0.0, 49, 113);
      Node node2 = new Node(98, node0, node0, node1, node0, 3, 35);
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test701()  throws Throwable  {
      Node node0 = Node.newNumber(923.2, 98, 124);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isEquivalentTo(node1, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stack0.remove((Object) "Object#Key");
      node1.type = 1272;
      node0.getProp(949);
      node0.setLineno(1723);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isObjectLit();
      Node node3 = Node.newNumber((-4516.0), 0, (-4492));
      node1.isOr();
      node0.useSourceInfoIfMissingFrom(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(124);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test702()  throws Throwable  {
      Node node0 = Node.newString(1749, "D_'Z#?-$3g+<^6Ax&", 1749, 1749);
      // Undeclared exception!
//      try { 
        node0.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1749
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test703()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.extractLineno(1554);
      Node node0 = Node.newString("wH!1ZV[au_=*`Fg");
      Node node1 = Node.newString("com.google.common.collect.Iterators$2", 15, 36);
      node0.isGetElem();
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test704()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI");
      node0.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(43, nodeArray0, 23, 1682);
      node1.getAncestors();
      node0.isEquivalentToTyped(node0);
      node0.isLocalResultCall();
      node0.isEmpty();
      Node node2 = Node.newNumber(3816.73444694);
      Node.newNumber((double) 49, 55, 36);
      node2.toString();
  }

  @Test(timeout = 4000)
  public void test705()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI");
      node0.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isEquivalentToTyped(node0);
      node0.isLocalResultCall();
      Node node1 = new Node(49, node0, node0, node0, node0, 56, 51);
      node1.isEmpty();
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test706()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node0 = null;
//      try {
        node0 = new Node(54, (Node) null, (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test707()  throws Throwable  {
      Node node0 = new Node((-4404));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = new Node(2129, node0, (-1374), 50);
      node_NodeMismatch0.equals(node1);
      node1.getBooleanProp((-1061));
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test708()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newNumber(468.0, (-699), (-699));
      Node node1 = Node.newString(57, "Ls", 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isOnlyModifiesArgumentsCall();
      node1.setLineno(0);
      node2.addSuppression("");
      Node.extractCharno(31);
      node2.getLineno();
      node1.isWhile();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(57);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test709()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber((-1.0));
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(40, "", 1723, 102);
      Node node2 = Node.newString(0, "b<2u", 43, 30);
      node0.addChildrenToFront(node2);
      node2.getString();
      Node node3 = node2.cloneTree();
      node0.type = 2057;
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isArrayLit();
      node0.isUnscopedQualifiedName();
      node0.getDouble();
      node0.getInputId();
      node0.clonePropsFrom(node3);
      node0.isNE();
      node1.isOptionalArg();
      Node node4 = node0.getLastChild();
      // Undeclared exception!
//      try { 
        node1.checkTreeEquals(node4);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test710()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newNumber(468.0, (-699), (-699));
      Node node1 = Node.newString(57, "Ls", 53, 0);
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = new Node((-832), node1, node1, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("Ls", node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test711()  throws Throwable  {
      String string0 = "s=$eRGu";
      Node node0 = Node.newString((-1852), "s=$eRGu");
      Node node1 = new Node(37, node0, node0, node0);
      node0.setOptionalArg(true);
      Node node2 = new Node(56, node1, 77, 40);
      node2.putIntProp((-1852), 37);
      node0.getDirectives();
      // Undeclared exception!
//      try { 
        node0.addChildToFront(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test712()  throws Throwable  {
      Node node0 = Node.newString((-3450), "r 9H2]wM1u1I1`", (-1619), 4);
      Node node1 = new Node(2018, node0, node0, node0, node0, 4095, 2367);
      // Undeclared exception!
//      try { 
        node1.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 2018
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test713()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 0);
      Node node1 = new Node(57, nodeArray0, 12, 46);
      node0.srcrefTree(node1);
      Node node2 = new Node(48, node0, node0, 1844, 50);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test714()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isGetProp();
      Node node2 = Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.clearAllFlags();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node0);
      node_NodeMismatch0.equals((Object) null);
      node0.isIn();
      Node node3 = Node.newNumber((-1.0), 2367, 4);
      Node node4 = new Node(48, node1, node2, node0, node3, 47, 36);
      node4.cloneNode();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test715()  throws Throwable  {
      int int0 = (-2708);
      Node node0 = Node.newNumber(3749.0);
      Node node1 = new Node(0, node0, node0, 112, 50);
      node0.addChildToFront(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node2 = Node.newString("=Z_:Ng}/,<&");
      int int1 = (-348);
      Node node3 = node0.cloneTree();
      node3.getJsDocBuilderForNode();
      Node node4 = new Node(int0, node1, node2, node2, node1, node2.FLAG_ARGUMENTS_UNMODIFIED, int1);
      Node node5 = new Node(int0, node4, node4, node1, node0, node4.COLUMN_MASK, node1.INPUT_ID);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node4, node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags6.clearAllFlags();
      node2.isNew();
      node4.siblings();
  }

  @Test(timeout = 4000)
  public void test716()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.checkTreeEqualsImpl(node0);
      Node node1 = new Node(37, node0, 15, 16);
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test717()  throws Throwable  {
      Node node0 = Node.newString(4, "jtQTc?]T'T3>H#$*TL", 4, 4);
      Node node1 = new Node(190, node0, node0, node0, node0, 0, 56);
      Node node2 = new Node((-1209), 54, 32768);
      node0.isNot();
      node1.isGetElem();
      node0.putBooleanProp((-96), false);
      node0.isThrow();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test718()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI");
      node0.isUnscopedQualifiedName();
      node0.getProp(3880);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(47, nodeArray0, 46, 1834);
      node0.isEquivalentToTyped(node1);
      node0.isLocalResultCall();
      node0.isEmpty();
      node0.toString();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test719()  throws Throwable  {
      String string0 = "&?Uys";
      Node node0 = Node.newString("&?Uys", 1659, 4096);
      Node node1 = Node.newNumber((double) 29, 32, 10);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = (Integer) 8;
      integerArray0[1] = (Integer) 2;
      integerArray0[2] = (Integer) 0;
      integerArray0[3] = (Integer) 32;
      integerArray0[4] = (Integer) 36;
      treeSet0.lower("&?Uys");
      integerArray0[5] = (Integer) 38;
      node1.isEquivalentToTyped(node0);
      integerArray0[6] = (Integer) 56;
      integerArray0[7] = (Integer) 12;
      integerArray0[8] = (Integer) 2;
      treeSet0.toArray(integerArray0);
      node2.setDirectives(treeSet0);
      node0.getSourceOffset();
      int int0 = 124;
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test720()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString((-1619), "P$_N,k=#$", 4194304, 0);
      node1.isEquivalentToTyped(node0);
      node1.useSourceInfoFrom(node0);
      Node node2 = Node.newString(48, "%PS.$yP;!;f,_yaIsr", 2018, (-2315));
      node0.addChildrenToFront(node2);
      Node node3 = node0.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      // Undeclared exception!
//      try { 
        node3.setSideEffectFlags((-578));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test721()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber((double) 0, 464, 0);
      node0.setOptionalArg(false);
      Node node1 = Node.newNumber((double) 31, 50, 36);
      Node node2 = new Node((-2876), node0, node1, node0);
      node2.clonePropsFrom(node0);
      Node node3 = null;
//      try {
        node3 = new Node(15, node0, node0, node0, (-478), 61);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test722()  throws Throwable  {
      Node node0 = Node.newString(4, "v^&yhhw';B70X*K", 4, 4);
      Node node1 = new Node(190, node0, node0, node0, node0, 0, 56);
      Node node2 = new Node((-1209), 54, 32768);
      node0.isEquivalentToTyped(node2);
      node1.isGetElem();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags((-2229));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -1209
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test723()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(1191, 1191, 682);
      Node node1 = new Node((-2398), node0, node0);
      node1.isVarArgs();
      node0.isAssignAdd();
      node1.putBooleanProp(0, true);
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test724()  throws Throwable  {
      Node node0 = Node.newString("synthetic", 93, 11);
      Node node1 = new Node(93, node0, 31, 2466);
      Node node2 = null;
//      try {
        node2 = new Node(30, node1, node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test725()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      node0.isQualifiedName();
      node0.isGetProp();
      Node node1 = Node.newNumber((double) 1, (-478), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node1.isNew();
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test726()  throws Throwable  {
      int int0 = 2302;
      Node node0 = Node.newNumber(1.0, 2302, 0);
      node0.setOptionalArg(false);
      Node node1 = new Node(0, node0, node0, node0);
      node1.clonePropsFrom(node0);
      node0.useSourceInfoFrom(node1);
      String string0 = ";ih3.Q.^}bS";
      File file0 = MockFile.createTempFile(";ih3.Q.^}bS", ";ih3.Q.^}bS");
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter(file0, ";ih3.Q.^}bS");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // ;ih3.Q.^}bS
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test727()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
//      try { 
        Node.newString((String) null, 0, 0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test728()  throws Throwable  {
      Node node0 = Node.newString("", 0, 0);
      node0.removeProp(0);
      node0.mayMutateArguments();
      node0.isVarArgs();
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = new Node(8192, node0, node0, node0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("H", node1, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test729()  throws Throwable  {
      int int0 = (-4404);
      Node node0 = Node.newString((-4404), "1@.J*?z}e}iIF> MnK");
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.removeChildAfter((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test730()  throws Throwable  {
      int int0 = 321;
      int int1 = 61;
      Node[] nodeArray0 = new Node[7];
      String string0 = "";
      Node node0 = Node.newString(256, "");
      nodeArray0[0] = node0;
      Node node1 = Node.newString(";");
      nodeArray0[1] = node1;
      Node node2 = null;
//      try {
        node2 = new Node(457, nodeArray0, 54, 36);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test731()  throws Throwable  {
      Node node0 = Node.newString((-867), "c+]*e`qfN0kZ", (-1852), 204);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("unexpected prop id ");
  }

  @Test(timeout = 4000)
  public void test732()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.VOID_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.NO_OBJECT_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative3);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, functionType0);
      JSTypeNative jSTypeNative4 = JSTypeNative.NUMBER_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative4;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test733()  throws Throwable  {
      int int0 = 115;
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(115, (Node) null, (Node) null, (Node) null, 491, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test734()  throws Throwable  {
      Node node0 = Node.newString((-3703), "mLxDs5*(MEe^");
      node0.isUnscopedQualifiedName();
      node0.mayMutateGlobalStateOrThrow();
      node0.isSyntheticBlock();
      Node node1 = node0.cloneNode();
      node1.children();
      node1.setOptionalArg(true);
      Node node2 = Node.newString("mLxDs5*(MEe^", 12, (-1676));
      node0.isFalse();
      node0.getIntProp((-3703));
      node1.isOnlyModifiesThisCall();
      node2.getSourceFileName();
      // Undeclared exception!
//      try { 
        node0.toString(true, true, false);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -3703
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test735()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string0 = ":nDN45Y";
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("Object#Key", 148, 148);
      Node node1 = new Node(148, node0, node0, node0, node0, 48, 2991);
      nodeArray0[0] = node1;
      Node node2 = new Node(148, nodeArray0, 1, 38);
      Node node3 = null;
//      try {
        node3 = new Node(148, node2, node2, node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test736()  throws Throwable  {
      Node node0 = Node.newString(4, "v^&yhhw';B70X*K", 4, 4);
      Node node1 = new Node(190, node0, node0, node0, node0, 0, 56);
      Node node2 = new Node((-1209), 54, 32768);
      node0.isEquivalentToTyped(node2);
      node1.isGetElem();
      node0.putBooleanProp((-96), false);
      node0.isThrow();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test737()  throws Throwable  {
      int int0 = 42;
      int int1 = 9;
      int int2 = 0;
      Node[] nodeArray0 = new Node[8];
      String string0 = "j6.@";
      Node node0 = Node.newString("j6.@");
      nodeArray0[0] = node0;
      Node node1 = null;
//      try {
        node1 = new Node((-1126), nodeArray0, (-1881), 2173);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test738()  throws Throwable  {
      Node node0 = new Node(1191, 1191, 682);
      Node node1 = new Node((-2398), node0, node0);
      node1.isVarArgs();
      node1.putBooleanProp(0, true);
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test739()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.areAllFlagsSet();
      int int0 = 111;
      Node node0 = Node.newNumber((-3818.9963), (-1915), 111);
      Node node1 = new Node((-1915), node0);
      Node node2 = null;
//      try {
        node2 = new Node((-1915), node1, node0, 0, 2076);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test740()  throws Throwable  {
      Node node0 = new Node(143, 143, 143);
      String string0 = "";
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(154);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 143
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test741()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 0);
      Node node1 = new Node(57, nodeArray0, 12, 46);
      Node node2 = node0.srcrefTree(node1);
      Node node3 = new Node(48, node0, node0, 1979, 50);
      node3.srcref(node2);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test742()  throws Throwable  {
      int int0 = (-2072);
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node((-2072));
      nodeArray0[0] = node0;
      Node node1 = new Node(15, node0, node0, node0, node0);
      nodeArray0[1] = node1;
      Node node2 = null;
//      try {
        node2 = new Node((-2072), nodeArray0, 43, 1270);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test743()  throws Throwable  {
      Node node0 = new Node(0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = new Node(37, node0, 15, 1);
      node_NodeMismatch0.equals(node1);
  }

  @Test(timeout = 4000)
  public void test744()  throws Throwable  {
      int int0 = 1119;
      Node node0 = null;
//      try {
        node0 = new Node(1119, (Node[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test745()  throws Throwable  {
      Node node0 = Node.newString((-3450), "H");
      Node node1 = new Node((-3450), node0, node0, node0);
      node1.setOptionalArg(false);
      Node node2 = new Node((-3450), node1, (-1399), 51);
      node0.putIntProp(0, (-4350));
      node1.getDirectives();
      node1.addChildToFront(node2);
      node1.getProp((-4350));
      node2.isQualifiedName();
      node2.mayMutateGlobalStateOrThrow();
      node1.setSourceEncodedPosition(55);
      node1.getDirectives();
      node2.isVar();
      node0.addSuppression("");
      node2.getParent();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
  }

  @Test(timeout = 4000)
  public void test746()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber((-1.0));
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(40, "", 1723, 102);
      node0.useSourceInfoFrom(node1);
      Node node2 = Node.newString(0, "b<2u", 2756, 30);
      node0.addChildrenToFront(node2);
      node2.getString();
      node2.cloneTree();
      node0.type = 2057;
      node_SideEffectFlags0.setMutatesGlobalState();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(2057);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 2057
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test747()  throws Throwable  {
      Node node0 = new Node((-3874));
      int int0 = 4256;
      String string0 = "=";
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node0.checkTreeEquals(node0);
      Node node1 = null;
//      try {
        node1 = new Node(39, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test748()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      Node node1 = new Node(50, node0, 28, 112);
      InputId inputId0 = new InputId("originalname");
      inputId0.toString();
      node1.getAncestor(54);
      node1.setVarArgs(true);
      node0.setInputId(inputId0);
      node0.copyInformationFrom(node1);
      node0.removeProp((-1629));
      node1.putBooleanProp(0, true);
      node0.setSourceEncodedPositionForTree((-1044));
      node1.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test749()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = null;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) null, jSTypeArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test750()  throws Throwable  {
      Node node0 = new Node(15, (-615), (-615));
      Node node1 = new Node(0, node0, node0, 1, (-1141));
      // Undeclared exception!
//      try { 
        node1.toString(true, true, true);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test751()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(5717);
  }

  @Test(timeout = 4000)
  public void test752()  throws Throwable  {
      Node node0 = Node.newString(108, "R:`.6i$!PI");
      node0.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(47, nodeArray0, 46, 1834);
      node0.isEquivalentToTyped(node1);
      assertTrue(node1.isRegExp());
      assertEquals(190250, node1.getSourcePosition());
      
      boolean boolean0 = node0.isLocalResultCall();
      assertFalse(boolean0);
      
      node0.isEmpty();
      String string0 = node0.toString();
      assertTrue(node0.isIf());
      assertEquals("IF R:`.6i$!PI", string0);
  }

  @Test(timeout = 4000)
  public void test753()  throws Throwable  {
      String string0 = "&?Uys";
      Node node0 = Node.newString("&?Uys", 1659, 4096);
      Node node1 = Node.newNumber((double) 29, 32, 10);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = (Integer) 8;
      integerArray0[1] = (Integer) 2;
      integerArray0[2] = (Integer) 0;
      integerArray0[3] = (Integer) 32;
      integerArray0[4] = (Integer) 36;
      integerArray0[5] = (Integer) 38;
      integerArray0[6] = (Integer) 56;
      integerArray0[7] = (Integer) 12;
      integerArray0[8] = (Integer) 2;
      treeSet0.toArray(integerArray0);
      node2.setDirectives(treeSet0);
      node0.getSourceOffset();
      int int0 = 124;
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test754()  throws Throwable  {
      int int0 = (-1552);
      Node[] nodeArray0 = new Node[8];
      Node node0 = new Node((-1552), (-1552), 0);
      nodeArray0[0] = node0;
      String string0 = null;
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test755()  throws Throwable  {
      Node node0 = new Node(127);
      boolean boolean0 = false;
      node0.setVarArgs(false);
      node0.getInputId();
      Object object0 = new Object();
      node0.putProp(127, object0);
      node0.isQualifiedName();
      Node node1 = new Node(57);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      node0.setLength(4095);
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test756()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node((-572), (Node) null, (Node) null, 93, (-572));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }
}
