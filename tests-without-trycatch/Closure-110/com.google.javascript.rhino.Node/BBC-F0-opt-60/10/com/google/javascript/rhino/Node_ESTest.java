/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 18 08:52:22 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.File;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(0, node0, node0);
      Node node2 = new Node(31, node1, node1);
      node1.getAncestor(37);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isTypeOf();
      node1.addChildrenAfter(node2, node0);
      node2.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      Node node1 = new Node((-1104), 57, 30);
      node0.getJsDocBuilderForNode();
      Node node2 = new Node(813, node0, node1, node1, (-1439), (-103));
      node1.addChildToFront(node2);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newString("COMMA");
      Node node2 = new Node(57);
      Node node3 = new Node(47, node0, node2, node1, node1);
      node3.isNoSideEffectsCall();
      node0.cloneTree();
      node2.isQualifiedName();
      node1.isArrayLit();
      node2.isInstanceOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node3, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Node node0 = new Node(148, 148, 148);
      node0.isNull();
      Node node1 = node0.cloneNode();
      node0.isSetterDef();
      node1.isQualifiedName();
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newNumber((-2923.4295403));
      Node node1 = new Node(49, node0, node0, node0);
      node1.isEquivalentToTyped(node1);
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isNE();
      node0.checkTreeEqualsImpl(node0);
      node0.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node node1 = new Node(48, node0, node0);
      node1.removeChildren();
      // Undeclared exception!
//      try { 
        node1.replaceChild(node0, node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = Node.newString("GLOBA_THIS", 115, 115);
      Node node1 = new Node(153, node0, node0);
      Node node2 = Node.newNumber((-567.38402164826));
      node1.isGetterDef();
      node2.isInstanceOf();
      node1.isDebugger();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(846, 846, 846);
      Node node1 = new Node(38, node0, node0, node0, node0);
      node1.clonePropsFrom(node0);
      node1.setLineno(50);
      node1.isGetElem();
      // Undeclared exception!
//      try { 
        node1.isUnscopedQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME 50 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(37, "beOzD/Qj<6.xn", 15, 155);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThis();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(42, node0, 16, 31);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isNoSideEffectsCall();
      Node node2 = node1.cloneTree();
      node2.isArrayLit();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      Node node1 = new Node(12, node0, node0, node0, 57, 29);
      InputId inputId0 = new InputId("\")");
      node1.setInputId(inputId0);
      node0.useSourceInfoFromForTree(node1);
      node0.isInstanceOf();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.putProp(89, "qJG%$#GrCE");
      node0.isIf();
      node0.setSourceFileForTesting("qJG%$#GrCE");
      node0.setString("f^J");
      node0.getProp(89);
      node0.isSetterDef();
      node0.getLastChild();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = new Node(491);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(4518, nodeArray0);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isAdd();
      Node node1 = node0.cloneTree();
      node1.isFalse();
      node0.isInstanceOf();
      node1.removeFirstChild();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newNumber((-3295.34951434), 1818, 116);
      Node node1 = new Node((-467), node0, (-2262), 2453);
      Node node2 = new Node(26, node1, node1, node1, 1842, 46);
      node2.cloneNode();
      Node node3 = new Node(8, (-3294), 36);
      node3.addChildrenToFront(node2);
      node2.isInstanceOf();
      node1.isOr();
      node0.isStringKey();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Node node0 = new Node(152, 152, 152);
      node0.cloneNode();
      Node node1 = Node.newString(36, "Pj}4s'!", 40, 408);
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String string0 = "7}O9?Y\\6H~pKiE";
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      Node node1 = new Node(39);
      node0.checkTreeEqualsImpl(node1);
      int int0 = Node.SLASH_V;
      Node node2 = new Node(0, node0);
      // Undeclared exception!
//      try { 
        node1.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.isRegExp();
      node0.getBooleanProp(108);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(55, nodeArray0);
      Node node2 = node1.cloneNode();
      node0.isEquivalentTo(node2, true, false, false);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = Node.newString("!&0-tska,ovr?@XGLl");
      node0.removeChildren();
      Node node1 = new Node(38, node0, node0, node0, node0);
      Node node2 = new Node(31, node1, node1);
      Node node3 = node1.cloneTree();
      node1.isArrayLit();
      node3.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(35);
      node0.putIntProp(35, 51);
      Node node1 = new Node(46, node0, 56, 50);
      node1.isSetterDef();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("new child has existing sibling");
      Node node1 = Node.newNumber((double) 29);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = Node.newString(43, "new child has existing sibling");
      Node node3 = new Node(130, node0);
      node3.isScript();
      node3.clonePropsFrom(node1);
      node2.getInputId();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(111, 147, 111);
      Node node1 = node0.cloneNode();
      Node.newNumber((double) 39, 46, 29);
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      Vector<JSType> vector0 = new Vector<JSType>();
      Locale locale0 = Locale.CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      node0.isBlock();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.setMeaning("");
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(116);
      Node node1 = new Node(53, (-159), 691);
      Node node2 = new Node(49, node1);
      Node node3 = node2.cloneNode();
      Node.newNumber((double) 38, 4083, 4095);
      node3.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString((-3519), "g", (-3519), (-3519));
      Node node1 = new Node(43, 93, 55);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Locale locale0 = new Locale("g");
      Node node2 = Node.newString(13, "g");
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node1.isGetterDef();
      node2.isNoSideEffectsCall();
      node2.isNE();
      // Undeclared exception!
//      try { 
        node3.addChildrenAfter(node2, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newString(38, "");
      node0.getQualifiedName();
      node0.isQualifiedName();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node((-2228));
      nodeArray0[0] = node0;
      Node node1 = new Node(47, (-1834), 4095);
      node1.toString();
      node0.setSourceEncodedPosition(12);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = null;
      node1.isVarArgs();
      Node node2 = Node.newString(42, "Object#Key");
      node1.useSourceInfoFromForTree(node2);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      // Undeclared exception!
//      try { 
        modificationVisitor0.caseUnionType((UnionType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newString("unexpected prop id ", 10, 10);
      node0.isQualifiedName();
      node0.isOptionalArg();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      String string0 = "4n)7be";
      linkedHashSet0.add("4n)7be");
      node0.setDirectives(linkedHashSet0);
      node0.getStaticSourceFile();
      node0.getDirectives();
      node0.isOnlyModifiesArgumentsCall();
      node0.setQuotedString();
      // Undeclared exception!
//      try { 
        node0.getChildAtIndex(4793);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Node.newString(103, "", 16, 47);
      node0.isComma();
      node0.isUnscopedQualifiedName();
      node1.addChildToFront(node0);
      // Undeclared exception!
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = new Node(99);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-98);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)11;
      Node node1 = new Node((byte)11, node0, node0);
      node1.getProp(39);
      node1.isSetterDef();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(103);
      node0.getAncestors();
      node0.isNE();
      node0.checkTreeEqualsImpl(node0);
      node0.getBooleanProp(122);
      Node node1 = node0.cloneNode();
      node1.isEquivalentTo(node0, true, false, false);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte) (-57);
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)51;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber((double) 102);
      Node node1 = new Node(47, (-1711), (-965));
      node0.isExprResult();
      node1.isComma();
      Node node2 = node1.cloneNode();
      node2.clonePropsFrom(node0);
      node0.isEquivalentTo(node1, true, false, false);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newString("Ya3{D|A\"<o");
      node0.setChangeTime(114);
      Node node1 = new Node(40, node0, 0, 4);
      Node node2 = new Node(4095, node1, node1);
      node2.removeFirstChild();
      node2.hasOneChild();
      node1.checkTreeEqualsImpl(node0);
      node0.isStringKey();
      Node.newNumber(2100.313, 1336, 119);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString("X-$", (-534), (-1374));
      node0.srcrefTree(node1);
      Node node2 = Node.newNumber((-960.20379), 65536, 1452);
      node2.getChangeTime();
      node0.isDelProp();
      node0.isFor();
      node2.removeProp((-81));
      Node node3 = new Node(593, 4095, 1002);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createParameters(jSTypeArray0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[2];
      JSTypeNative jSTypeNative0 = JSTypeNative.SYNTAX_ERROR_FUNCTION_TYPE;
      node4.useSourceInfoFrom(node3);
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative0;
      jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      node4.isCast();
      node0.isReturn();
      node0.toString(true, true, true);
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = new Node(77);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte) (-109);
      byteArray0[4] = (byte) (-102);
      byteArray0[5] = (byte)32;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)1;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "pp+iLmX:v!<");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isComma();
      Node node1 = node0.cloneNode();
      node0.addChildrenToFront(node1);
      node1.isInstanceOf();
      node1.isOr();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = new Node((-2447));
      // Undeclared exception!
//      try { 
        node0.isQualifiedName();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(846, 846, 846);
      Node node1 = new Node(38, node0, node0, node0, node0);
      node1.isGetElem();
      node1.getLength();
      node1.getFirstChild();
      // Undeclared exception!
//      try { 
        node1.isUnscopedQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node(107);
      Node node1 = new Node(50, node0, node0, node0);
      node1.getBooleanProp(43);
      node0.isRegExp();
      Node node2 = new Node(30);
      node2.toStringTree();
      node2.copyInformationFromForTree(node0);
      node0.isDec();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isEquivalentToShallow(node0);
      Node node1 = new Node(102, node0, node0);
      node0.putIntProp(2674, (-770));
      node1.isNot();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(44, 44, 103);
      node0.getBooleanProp(1);
      Node node1 = node0.cloneNode();
      node0.isComma();
      Node node2 = node1.cloneNode();
      node1.addChildrenToFront(node2);
      node1.isInstanceOf();
      node1.isOr();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'~uyoqwE0LgK[gx`");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("<Zy>'lZ8");
      Node node1 = new Node(126, node0, node0);
      node1.getJSDocInfo();
      Node node2 = node1.cloneTree();
      node2.toStringTree();
      // Undeclared exception!
//      try { 
        node1.getChildAtIndex(115);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      Node node1 = new Node(32);
      node1.cloneTree();
      Node node2 = new Node(36, node0);
      node2.getSourceFileName();
      node2.isArrayLit();
      node2.getSourceOffset();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = Node.newNumber(324.06);
      node0.isEquivalentToShallow(node1);
      Node node2 = new Node(102, node0, node0);
      node0.putIntProp(2674, (-770));
      node2.isAnd();
      node2.isNot();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node.newString("");
      Node node0 = Node.newString("");
      Node node1 = new Node((-1519), node0, node0);
      node1.getProp(54);
      node0.isSetterDef();
      Node node2 = new Node(37, node1);
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newString(38, "qJG%$#GrCE");
      node0.getQualifiedName();
      node0.isQualifiedName();
      // Undeclared exception!
//      try { 
        node0.removeChildAfter((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString((-3519), "g", (-3519), (-3519));
      Node node1 = new Node(43, 93, 55);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Locale locale0 = Locale.FRANCE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node1.setDirectives(set0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSDocInfo0.setMeaning((String) null);
      node1.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
//      try { 
        node1.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FALSE 93 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000007] [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(118, 118, 147);
      Node node1 = node0.cloneNode();
      Node node2 = Node.newNumber((double) 4, 47, 30);
      node2.checkTreeEqualsImpl(node0);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node((-2323));
      node0.getQualifiedName();
      Node node1 = new Node((-2323), node0, node0);
      Node node2 = node0.srcrefTree(node1);
      String string0 = "";
      Node.newString("");
      node2.isLocalResultCall();
      node1.isVar();
      // Undeclared exception!
//      try { 
        node2.setString("Should not happen\n");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -2323
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isLabelName();
      Node node1 = Node.newString(16, "o'0\"rC[", (-2812), 56);
      node1.checkTreeEquals(node0);
      node0.mayMutateArguments();
      Object object0 = new Object();
      node1.isTrue();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newString(",zRm6>%%");
      Node node1 = new Node(49, (-853), (-2386));
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.checkTreeEqualsImpl(node0);
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(44);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<Zy>'lZ8");
      Node node1 = new Node(52, node0, node0, 4, (-1493));
      Node node2 = node0.srcrefTree(node1);
      node2.setLineno(130);
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      Node node1 = new Node(39);
      node0.checkTreeEqualsImpl(node1);
      int int0 = Node.SLASH_V;
      node0.setCharno(2);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node0.setString("X(<]LXe)},omUK");
      Node.newString(47, "7}O9?Y\u0006H~pKiE");
      node1.mayMutateArguments();
      Object object0 = new Object();
      node1.isTrue();
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(46, 46, 103);
      node0.isVoid();
      node0.getBooleanProp(1);
      Node node1 = node0.cloneNode();
      node0.isEquivalentTo(node1, false, true, true);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.valueOf();
      Node node0 = new Node(0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node1 = Node.newString("L,E+e.E$F?(");
      node0.isEquivalentToTyped(node1);
      node_AncestorIterable0.iterator();
      node0.getLastSibling();
      Node.newString("L,E+e.E$F?(", 118, 0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags2.valueOf();
      Node node0 = new Node(105);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.putProp(64, "qJG%$#GrCE");
      Node node1 = new Node(37, 30, (-401));
      node1.checkTreeEqualsImpl(node0);
      node0.isNoSideEffectsCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      ObjectType objectType0 = jSTypeRegistry0.createObjectType("com.google.javascript.rhino.jstype.Property", node1, (ObjectType) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSType jSType0 = jSTypeRegistry0.createFunctionType(objectType0, (JSType) null, (List<JSType>) linkedList0);
      JSType jSType1 = jSTypeRegistry0.createNullableType(jSType0);
      jSTypeArray0[0] = jSType1;
      jSTypeRegistry0.createObjectType((ObjectType) null);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getBooleanProp(2391);
      Node node1 = node0.cloneTree();
      node0.getProp(4);
      node0.getJSType();
      node0.getSourcePosition();
      node1.siblings();
      // Undeclared exception!
//      try { 
        node1.getChildBefore(node0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(40, "Z|$aQs^", (-1244), 40);
      node0.putBooleanProp(40, true);
      Node node1 = new Node(49);
      node1.isDec();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isDo();
      Node node1 = Node.newString("com.google.common.collect.Sets$1", 388, 2625);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newString("GLOBA_THIS", 115, 309);
      Node node1 = new Node(153, node0, node0);
      node1.copyInformationFromForTree(node0);
      node0.getIntProp(115);
      node1.getQualifiedName();
      node1.isCast();
      node1.getJSType();
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString("xslq]LCI^^X_");
      Node node1 = new Node(105, node0, node0);
      node1.getProp(2);
      node0.addChildToFront(node1);
      Node node2 = node0.srcref(node1);
      node2.setIsSyntheticBlock(false);
      node1.isSetterDef();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(147, "Object#Element", 57, 57);
      node0.isNull();
      Node node1 = node0.cloneNode();
      node1.isUnscopedQualifiedName();
      node1.isSetterDef();
      node0.getString();
      Node node2 = new Node(32, node1, node0, node1, node0, 48, 256);
      node0.srcrefTree(node2);
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Node node2 = new Node(52, node1, 56, 15);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
//      try { 
        node3.removeChild(node2);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(147, node0, node0, node0, 16, 16);
      node1.mayMutateArguments();
      node1.setSourceEncodedPosition(1);
      int int0 = Node.MAX_COLUMN_NUMBER;
      node1.isCast();
      Node node2 = Node.newString((-837), ",zk^6l%%");
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node0.isTrue();
      node1.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = new Node(116);
      Node node1 = Node.newString(1172, "0c~bI)", 1069, 4462);
      Node node2 = node0.clonePropsFrom(node1);
      node2.isOptionalArg();
      Node node3 = new Node(0, node2, node1);
      node0.setVarArgs(true);
      node0.isQualifiedName();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = Node.newString("new child has existing parent");
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.isIn();
      node0.isSwitch();
      int int0 = Node.DIRECT_EVAL;
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(122);
      node0.toString();
      Node node1 = new Node(110, node0, node0);
      Node node2 = new Node(13, node1, node1);
      node1.cloneTree();
      node1.isArrayLit();
      node0.isWith();
      node2.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = Node.newString("GLOBA_THIS", 115, 309);
      Node node1 = new Node(153, node0, node0);
      Node node2 = Node.newNumber((-567.38402164826));
      node1.isGetterDef();
      node2.isInstanceOf();
      node1.isDebugger();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("new child has existing sibling");
      Node node1 = Node.newNumber((double) 29);
      Node node2 = new Node(51, node0, node1, node1, 1595, 54);
      node1.mayMutateArguments();
      node1.isVarArgs();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.newString(43, "new child has existing sibling");
      Node node3 = new Node(130, node2);
      node3.isScript();
      node3.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.valueOf();
      Node node0 = new Node(116);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(35, nodeArray0, 35, 35);
      node0.isCase();
      node0.isGetElem();
      node0.wasEmptyNode();
      Node node1 = new Node((-312), node0, node0, node0, node0, 1009, 4095);
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(117, node0, node0, node0, 16, 16);
      node1.mayMutateArguments();
      node1.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      node1.isCast();
      node1.toString(true, true, false);
      Node node2 = Node.newString((-837), ",zk^6l%%");
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node3.cloneNode();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = null;
      Node node2 = new Node(0);
      Node node3 = Node.newNumber((double) 47);
      // Undeclared exception!
//      try { 
        node2.addChildAfter((Node) null, node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(36, "", 57, 15);
      node1.isGetElem();
      node1.wasEmptyNode();
      Node node2 = new Node(47, node1, node1, node1, node1, 2, 31);
      Node node3 = Node.newString(2, "", 4095, 3533);
      Node node4 = new Node(16, node0, node3, 2, 55);
      node2.clonePropsFrom(node4);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(44, 309, 3757);
      node0.isVarArgs();
      node0.isCase();
      node0.isInstanceOf();
      node0.isRegExp();
      node0.isEquivalentToShallow(node0);
      node0.addChildrenToBack(node0);
      node0.getAncestor(39);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(32, 32, 32);
      node0.setChangeTime(32);
      Node node1 = Node.newString("7}O9?Y\u0006H~pKiE");
      Node node2 = new Node(50, node0, node1, node1);
      node1.checkTreeEqualsImpl(node2);
      node0.detachFromParent();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      jSTypeArray0[0] = (JSType) templateType1;
      ImmutableList.of(templateType1, templateType1);
      // Undeclared exception!
//      try { 
        FunctionType.getTopDefiningInterface(templateType1, "B|'l-o");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString((-3519), "g", (-3519), (-3519));
      Node node1 = new Node(43, 93, 55);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSDocInfo0.setMeaning((String) null);
      node1.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
//      try { 
        node1.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FALSE 93 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(108);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Iterator<JSType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.copyInformationFromForTree(node1);
      node0.isIn();
      node0.isSwitch();
      node0.isIn();
      node0.getBooleanProp(36);
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.valueOf();
      Node node0 = new Node((-3868));
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isNoSideEffectsCall();
      node0.setSourceFileForTesting("^?\u0001|Iyd,ff<nk%fDo");
      Node node1 = node0.cloneTree();
      node1.isArrayLit();
      node1.isComma();
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setChangeTime(53);
      Node node1 = new Node(16, node0, 4, 0);
      node1.setSourceFileForTesting("");
      Node node2 = new Node(112);
      Node node3 = node2.cloneNode();
      node2.isVarArgs();
      node0.isTry();
      node2.isWith();
      node2.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node((-130), (-130), (-130));
      node0.setLineno((-130));
      node0.isStringKey();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(34, node0, node0, node0, node0, 98, 4095);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      Node node1 = new Node(39, 1, 4);
      node1.getBooleanProp(0);
      node0.isLocalResultCall();
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(8, node0, node1, node1, 1, 48);
      node2.getChildBefore(node1);
      node1.siblings();
      node0.children();
      node1.isStringKey();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newNumber(8.0);
      node0.getSourcePosition();
      Node node1 = Node.newString("|HD%<rt");
      Node node2 = new Node(50, node1, node0, 152, 12);
      boolean boolean0 = true;
      Node node3 = node2.clonePropsFrom(node0);
      node2.removeFirstChild();
      String string0 = "com.google.common.base.Joiner$MapJoiner";
      // Undeclared exception!
//      try { 
        node1.addChildAfter(node2, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = new Node(114);
      node0.putProp(83, (Object) null);
      node0.getAncestors();
      node0.isNew();
      Node node1 = Node.newNumber((double) 8);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newString("String");
      Node node1 = Node.newString(42, "String", 15, 4);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isStringKey();
      node1.isThis();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      Node node1 = new Node(39, 1, 4);
      node1.getBooleanProp(0);
      node0.isLocalResultCall();
      node0.checkTreeEqualsImpl(node1);
      Node node2 = node0.copyInformationFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node4 = new Node(64, node1, node1, node3, node0, (-2616), 310);
      node4.isDebugger();
      node4.siblings();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node5 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node5.isSetterDef();
      node5.isEquivalentTo(node3, false, false, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node4.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      priorityQueue0.iterator();
      Node node0 = new Node(37, 47, 37);
      Node node1 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node1);
      node1.isNoSideEffectsCall();
      node0.isInc();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setVarArgs(true);
      node0.setIsSyntheticBlock(true);
      node0.toString(true, true, true);
      node0.isQualifiedName();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(38, node1, node1, node1, node1);
      // Undeclared exception!
//      try { 
        node2.setString("");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node(122);
      node0.toString();
      Node node1 = new Node(110, node0, node0);
      Node node2 = new Node(13, node1, node1);
      node1.getProp(2632);
      Node node3 = new Node(2632);
      node2.isStringKey();
      node0.setType(43);
      node3.isVoid();
      node1.isCase();
      Node node4 = new Node(51);
      node4.isParamList();
      node0.getSourceOffset();
      node4.isNoSideEffectsCall();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node(117);
      node0.getAncestors();
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.common.collect.ImmutableList");
      Node node1 = new Node(116, node0, node0, 53, 77);
      node0.srcref(node1);
      node0.isArrayLit();
      node0.isAssign();
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = new Node(99);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isCall();
      node0.isCase();
      Node node1 = new Node(4);
      node1.isDec();
      node0.isThrow();
      node0.useSourceInfoFrom(node1);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(15, node0, 0, 30);
      Node node2 = new Node(31, node1, node1);
      node1.getDirectives();
      node1.cloneNode();
      Node node3 = Node.newString(115, "!,zv?:l~");
      node3.isUnscopedQualifiedName();
      node0.isSetterDef();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(117, node0, node0, node0, 16, 16);
      node1.mayMutateArguments();
      node1.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      node1.isCast();
      Node node2 = Node.newString((-837), ",zk^6l%%");
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node0.isTrue();
      node1.isGetProp();
      node1.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString("GLOBA_THIS", 115, 309);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(153, node0, node0);
      node1.srcrefTree(node0);
      Node.newNumber((-567.38402164826));
      node1.isGetterDef();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString("0O9?Y\u0006HK~p\"iE");
      Node node1 = new Node(32);
      node1.setSourceEncodedPositionForTree(29);
      node1.getAncestors();
      node1.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node node2 = new Node(38, node0, node0);
      node0.isComma();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Ev)@c");
      node0.removeProp(53);
      Node node1 = Node.newString(2832, "Ev)@c");
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-82), nodeArray0, 1001, 0);
      node0.useSourceInfoIfMissingFrom(node2);
      node2.isGetterDef();
      node1.isNoSideEffectsCall();
      node2.isNE();
      node0.isNoSideEffectsCall();
      node2.getLastSibling();
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node node0 = new Node(105, (-1702), 105);
      node0.setLineno((-252));
      node0.isStringKey();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      arrayList0.stream();
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      Node node0 = Node.newString("Object#Element");
      node0.isStringKey();
      node0.setType((-415));
      node0.isVoid();
      Node node1 = new Node(57);
      node0.isParamList();
      node1.getSourceOffset();
      Node node2 = Node.newNumber((-3326.8906502));
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      // Undeclared exception!
//      try { 
        node2.appendStringTree(charBuffer0);
//        fail("Expecting exception: ReadOnlyBufferException");
      
//      } catch(ReadOnlyBufferException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(29, node0, node0, node0, node0, 37, 39);
      Node node2 = new Node(31, node1, node1);
      node1.getDirectives();
      node2.isTypeOf();
      node2.isDelProp();
      node1.addChildrenAfter(node2, node0);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newString((-105), "#B$w>~Ed<&^@R:{'E@&");
      Node node1 = node0.clonePropsFrom(node0);
      Node node2 = new Node((-983), node0, node0);
      Node node3 = new Node(48);
      node0.isUnscopedQualifiedName();
      node0.isStringKey();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)125;
      byteArray0[5] = (byte)39;
      byteArray0[6] = (byte)63;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node2.isVoid();
      node1.isInstanceOf();
      node3.isRegExp();
      node0.isEquivalentToShallow(node0);
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(116);
      Node node1 = Node.newNumber((double) 16, 36, 46);
      node1.setVarArgs(false);
      int int0 = Node.REFLECTED_OBJECT;
      node1.isCast();
      node0.isTrue();
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newString("0O9?Y\u0006HK~p\"iE");
      Node node1 = new Node(32);
      node1.setSourceEncodedPositionForTree(29);
      node1.getAncestors();
      node1.isLabel();
      node1.setCharno(38);
      node1.addChildrenToFront(node0);
      node1.isInstanceOf();
      node0.isOr();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = new Node(116);
      node0.getAncestors();
      Node node1 = new Node(2, node0, node0, node0);
      int int0 = Node.COLUMN_BITS;
      node0.getSourceOffset();
      node1.checkTreeEqualsImpl(node0);
      node1.isStringKey();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = new Node(116);
      node0.removeProp(48);
      Node node1 = Node.newString(1, "Object#Key");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isGetterDef();
      Node node3 = new Node(10, node1, node2, node0, node1);
      node3.isNoSideEffectsCall();
      node0.isNE();
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isIn();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.setDefine(false);
      node0.setJSDocInfo(jSDocInfo0);
      node0.isSwitch();
      node0.isBlock();
      node0.isComma();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = new Node(116);
      node0.getAncestors();
      node0.setSourceFileForTesting("STRING 7}O9?Y\u0006H~pKiE\n");
      Node node1 = node0.cloneTree();
      node0.isArrayLit();
      node0.isComma();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ND .!");
      Node node0 = Node.newString("");
      Node node1 = new Node(29, node0, node0, node0, node0, 37, 39);
      Node node2 = new Node(31, node1, node1);
      node1.getDirectives();
      node2.isTypeOf();
      node2.isTrue();
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString("Ep", (-89), (-89));
      Node node1 = Node.newNumber((double) 48, (-89), 0);
      Node node2 = new Node((-983), node1, node1);
      Node.newNumber((double) 16);
      Node node3 = new Node(57, node2, node2, node2);
      node1.getProp(55);
      node1.getDouble();
      node3.isAssign();
      Node node4 = new Node(125, 0, 46);
      node4.srcrefTree(node1);
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(122);
      node0.toString();
      Node node1 = new Node(110, node0, node0);
      node1.useSourceInfoFromForTree(node0);
      Node node2 = new Node(13, node1, node1);
      node1.getProp(2632);
      Node node3 = new Node(2632);
      node1.setCharno(3609);
      Node node4 = new Node(53);
      node1.addChildrenToFront(node4);
      node2.isInstanceOf();
      node4.isOr();
      node4.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newNumber((double) 105);
      Node node1 = new Node(110, (-2906), 57);
      node0.isExprResult();
      Node node2 = new Node(0, node1, 54, 50);
      node2.isComma();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      node1.cloneNode();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      priorityQueue0.iterator();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)103;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)115;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(37, 47, 37);
      Node node1 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node1);
      node1.isDo();
      node0.isIn();
      node0.getBooleanProp(117);
      node1.setSideEffectFlags((-3238));
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Object#Key");
      node0.putIntProp(31, 1);
      node0.removeProp(0);
      Node node1 = Node.newString(12, "Object#Key");
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isGetterDef();
      node1.isNoSideEffectsCall();
      node2.isNE();
      node1.isNoSideEffectsCall();
      Node node3 = new Node(33, node2);
      node3.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString("je}#s;'&!");
      Node node1 = new Node(105, node0);
      node0.setType(30);
//      try { 
        node1.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FUNCTION <invalid> is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isHook();
      Node node1 = new Node(42, 36, 0);
      node1.cloneNode();
      Node node2 = Node.newNumber((double) 1);
      node2.checkTreeEqualsImpl(node1);
      Node node3 = new Node(12, node0, node2, 4, 37);
      node3.isDo();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(122);
      node0.toString();
      Node node1 = new Node(110, node0, node0);
      Node node2 = new Node(13, node1, node1);
      node1.getProp(2632);
      Node node3 = new Node(2632);
      node2.isStringKey();
      node0.setType(43);
      node3.isVoid();
      node1.isCase();
      Node node4 = new Node(51);
      node0.isInstanceOf();
      node0.getSourceOffset();
      node0.isContinue();
      node1.isTrue();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(29, node0, node0, node0, node0, 37, 39);
      Node node2 = new Node(31, node1, node1);
      node1.getDirectives();
      node2.isTypeOf();
      node0.isName();
      node1.addChildrenAfter(node2, node0);
      node0.getAncestor(47);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = new Node(122, node0, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isQualifiedName();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setSourceFileForTesting("STRING 7}O9?Y\u0006H~pKiE\n");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(910, node0, node0, node0, node0, 38, 50);
      node0.isDelProp();
      Node node2 = node0.copyInformationFrom(node1);
      // Undeclared exception!
//      try { 
        node2.replaceChild(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      priorityQueue0.iterator();
      Node node0 = new Node(37);
      Node node1 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node1);
      node0.isDelProp();
      node0.copyInformationFrom(node1);
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isIn();
      Node node1 = new Node(3193);
      Node node2 = new Node(3555, node0, node1, node1, node0, 115, (-1395));
      node0.isDelProp();
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node(122);
      node0.toString();
      Node node1 = new Node(110, node0, node0);
      node0.cloneTree();
      Node node2 = new Node(13, node1, node1);
      Object object0 = new Object();
      Node node3 = new Node(2632);
      node2.isStringKey();
      node0.setType(43);
      node3.isVoid();
      Node node4 = new Node(51);
      node0.isInstanceOf();
      node3.removeFirstChild();
      node1.isVar();
      node3.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString("0O9?Y\u0006HK~p\"iE");
      Node node1 = new Node(32);
      node1.setSourceEncodedPositionForTree(29);
      node1.getAncestors();
      node1.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node1.isQuotedString();
      Node node2 = new Node(38, node0, node0);
      node2.replaceChild(node0, node1);
      node2.useSourceInfoIfMissingFromForTree(node0);
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = new Node(13, 48, 47);
      Node node1 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node1);
      node1.isDo();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(29, node0, node0, node0, node0, 37, 39);
      Node node2 = new Node(31, node1, node1);
      node1.getDirectives();
      node2.isTypeOf();
      node0.isName();
      node1.addChildrenAfter(node2, node0);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(42, nodeArray0, 35, 2098);
      Node node1 = new Node(35, node0, node0, node0);
      node1.isBlock();
      node0.isComma();
      Object object0 = new Object();
      node1.srcrefTree(node0);
      node0.getLength();
//      try { 
        node1.setDouble(35);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // GETELEM 35 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(42, nodeArray0, 35, 2098);
      node0.isCall();
      node0.isCase();
      node0.putIntProp(35, 2381);
      Node node1 = new Node(15);
      node0.isDec();
      node1.isNew();
      // Undeclared exception!
//      try { 
        node0.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id 35
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(122);
      node0.toString();
      Node node1 = new Node(110, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      int int0 = Node.VAR_ARGS_NAME;
      node0.isWhile();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node1.addChildBefore(node2, node0);
      node0.isInc();
      node1.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(99);
      node0.isHook();
      Node node1 = new Node(52, node0, node0, node0);
      Node node2 = node1.cloneNode();
      node2.useSourceInfoIfMissingFromForTree(node0);
      node0.isVarArgs();
      node0.isCall();
      node1.isCase();
      node1.isEquivalentToShallow(node2);
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node((-131), (-131), (-131));
      node0.setLineno((-131));
      Node node1 = new Node(46, 1083, 51);
      node0.isNull();
      Node node2 = node0.cloneNode();
      node1.isUnscopedQualifiedName();
      Node node3 = new Node((-131), (-648), 52);
      node3.isSetterDef();
      node0.useSourceInfoIfMissingFromForTree(node2);
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = new Node(16);
      Node node2 = new Node(119, node1, node1, node0, node0, 33, 34);
      node0.isDelProp();
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(103);
      node0.getAncestors();
      node0.isNE();
      node0.checkTreeEqualsImpl(node0);
      Node node1 = new Node(56, node0, 46, 306654252);
      node0.useSourceInfoFrom(node1);
      Node node2 = node0.detachFromParent();
      Node.newString(46, "JU8xWyb(Um", 50, (-2212));
      node0.isNew();
      node2.mayMutateArguments();
      node0.getSourceOffset();
      node2.isSwitch();
      node2.isWhile();
      node0.getChildCount();
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isIf();
      node0.isIn();
      node0.isSwitch();
      node0.isBlock();
      node0.isComma();
      node0.cloneTree();
      node0.isVar();
      node0.mayMutateGlobalStateOrThrow();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = new Node(93, (-1663), 93);
      Node node1 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node1);
      node0.toStringTree();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
//      try { 
        node2.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // PARAM_LIST is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      priorityQueue0.iterator();
      Node node0 = new Node(116, 8, 51);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(477, node0, (-234), 30);
      node1.checkTreeEqualsImpl(node2);
      node1.toStringTree();
//      try { 
        node1.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // BREAK 8 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      priorityQueue0.iterator();
      Node node0 = new Node(37, 47, 37);
      Node node1 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node1);
      node0.toStringTree();
//      try { 
        node0.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // CALL 47 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_HI S", 115, 309);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(102);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.valueOf();
      Node node1 = new Node(4, node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Node node2 = node1.getAncestor(0);
      node2.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node(115);
      node0.type = 116;
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSwitch();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = new Node(122);
      node0.toString();
      Node node1 = new Node(110, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(126);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.clearAllFlags();
      int int0 = Node.VAR_ARGS_NAME;
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setIsSyntheticBlock(false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(8);
      Node node3 = new Node(53, node2, node2, node0, node1, 1682, 3865);
      node2.isDelProp();
      node3.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isHook();
      Node node1 = new Node(52, node0, node0, node0);
      node1.removeFirstChild();
      Node node2 = node1.cloneNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.putBooleanProp(15, false);
      node2.mayMutateGlobalStateOrThrow();
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = Node.newNumber((-1.7170390293586355), 42, 30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node2.isWith();
      node2.isEquivalentToShallow(node2);
      node2.isRegExp();
      node0.isWith();
      node0.mayMutateArguments();
      Node node3 = new Node(40);
      Node node4 = node3.srcref(node1);
      node1.isLocalResultCall();
      node0.isEquivalentTo(node4);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(491);
      Node node1 = new Node((-1236));
      Node node2 = new Node(397, node0, node1, node1);
      node1.setCharno(49);
      node1.isLabel();
      node1.addChildrenToFront(node2);
      node2.isInstanceOf();
      node2.isOr();
      node2.isUnscopedQualifiedName();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node((-2285));
      node0.getAncestors();
      node0.getQualifiedName();
      node0.isOptionalArg();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(133, node0, node0);
      node0.addChildrenToBack(node1);
      node1.isIf();
      Node.newString("Object#Key");
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isInc();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node((-1), (-1), 308);
      Node node1 = new Node(93, node0, node0, node0);
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newString("Ya3{D|A\"<o", 86, 86);
      Node node1 = new Node(1, node0, node0);
      node1.setType(46);
      node1.isSwitch();
      node1.isOnlyModifiesArgumentsCall();
      Node.newString(54, "Ya3{D|A\"<o");
      Node node2 = new Node(52);
      node2.isInstanceOf();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isName();
      Node node1 = new Node(52, node0);
      node1.detachChildren();
      Node node2 = Node.newString(237, "WRX6bJ6pkt(_:", 110, (-56));
      node1.srcref(node2);
      node1.isGetterDef();
      Node node3 = new Node(32, node1, node1, 52, 38);
      node3.isInstanceOf();
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(115);
      node0.getAncestors();
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(51, node0, node0, node0, node0);
      Node node2 = new Node(4095);
      node1.removeChildren();
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = new Node(31);
      node0.isHook();
      Node node1 = Node.newNumber((double) 30);
      Node node2 = node0.cloneNode();
      node2.isVarArgs();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.isOnlyModifiesArgumentsCall();
      node1.isCase();
      Node node3 = new Node(43);
      node0.removeFirstChild();
      node0.isDec();
      node0.isCast();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = new Node(115);
      Node.newString(872, "LEAST_FUNCTION_TYPE", 55, 43);
      node0.getAncestors();
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSwitch();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(",", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isNoSideEffectsCall();
      node0.isContinue();
      Node node1 = new Node(32, node0, node0, node0, 302, 50);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node.newString("");
      Node node0 = Node.newString(46, "", 2, 29);
      Node node1 = node0.clonePropsFrom(node0);
      Node node2 = new Node(29);
      node2.isQualifiedName();
      Node node3 = new Node(31, node1, node0);
      node2.toString(false, false, false);
      node3.isQualifiedName();
      node0.putBooleanProp(57, true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte)86;
      byteArray0[2] = (byte) (-31);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-93);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.newNumber((double) 53);
      node1.toStringTree();
      node1.getString();
      // Undeclared exception!
//      try { 
        node1.replaceChildAfter(node0, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = Node.newNumber((-1.7170390293586355), 42, 30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString(57, "M{qi");
      node1.isGetProp();
      node2.isQuotedString();
      Node node3 = new Node(42, node2, node0, node1, node2, 53, 35);
      node3.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      priorityQueue0.iterator();
      Node node0 = new Node(40, 1625, 47);
      node0.isNull();
      Node node1 = node0.cloneNode();
      JSType[] jSTypeArray0 = new JSType[3];
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node1, objectType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.autoboxesTo();
      jSTypeArray0[0] = null;
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) enumElementType0, (Map<TemplateType, JSType>) hashMap0);
      jSTypeArray0[1] = (JSType) templatizedType0;
      enumElementType0.getTypeOfThis();
      jSTypeArray0[2] = null;
      // Undeclared exception!
//      try { 
        templatizedType0.isNumber();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(130);
      node0.getAncestors();
      node0.isAssignAdd();
      Node node1 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node1);
      node1.isLabel();
      int int0 = Node.SLASH_V;
      String string0 = "X(<]LXe)},omUK";
//      try { 
        node1.setString("com.google.common.collect.RegularImmutableTable$Values");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // EXPR_RESULT is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.isGetProp();
      node1.isWhile();
      node0.getSideEffectFlags();
      node0.setString("msg.jsdoc.function.varargs");
      int int0 = Node.FREE_CALL;
      node1.getSourceOffset();
      Node node2 = new Node(4, node1, node0, 57, 57);
      node2.isReturn();
      node2.isDec();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      Node node1 = new Node(32);
      node1.setSourceEncodedPositionForTree(29);
      node1.getAncestors();
      node1.isOptionalArg();
      node0.isNoSideEffectsCall();
      node1.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node node2 = new Node(38, node0, node0);
      node2.replaceChild(node0, node1);
      node2.getChildCount();
      node0.isFromExterns();
      Node node3 = node2.useSourceInfoFrom(node1);
      node3.getJsDocBuilderForNode();
      // Undeclared exception!
//      try { 
        node3.getQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = new Node(134, 134, 134);
      node0.isIf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      JSType jSType1 = jSTypeRegistry0.createDefaultObjectUnion(jSType0);
      jSTypeArray0[0] = jSType1;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Cs:_9,^!3rY", node0, jSTypeArray0[0]);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      jSTypeArray0[1] = (JSType) enumType1;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isFor();
      Node node2 = new Node(12, node1, node1, node1, 49, 0);
      node1.getQualifiedName();
      node0.isVarArgs();
      // Undeclared exception!
//      try { 
        node0.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 134
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(105);
      node0.toString();
      Node node1 = new Node(46, node0, node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2306));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.extractCharno((-3032));
      node1.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) stack0);
      Node node2 = Node.newString(8199, "Object#Element");
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      node0.isIf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      JSType jSType1 = jSTypeRegistry0.createDefaultObjectUnion(jSType0);
      jSTypeArray0[0] = jSType1;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Cs:_9,^!3rY", node0, jSTypeArray0[0]);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      jSTypeArray0[1] = (JSType) enumType1;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isFor();
      jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.getQualifiedName();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      priorityQueue0.iterator();
      Node node0 = Node.newString("{,Rm", 305, (-1603));
      Node node1 = new Node(120, node0, 118, (-7));
      node1.toString(false, false, false);
      node1.isQualifiedName();
      node0.putBooleanProp(0, false);
      Node.newString(1150, "Object#Key", 4095, 305);
      node1.isCatch();
      node1.isLabelName();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(42, nodeArray0, 35, 2098);
      Node node1 = new Node(35, node0, node0, node0);
      int int0 = Node.DIRECTIVES;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node1.removeChild(node0);
      node1.getChangeTime();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = new Node(122);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(53, node0, node0);
      node0.getChangeTime();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node1);
      node0.isString();
      node0.isDo();
      node0.isVoid();
      node1.isCase();
      node1.isWhile();
      node1.isNE();
      Node node2 = node1.getLastSibling();
      // Undeclared exception!
//      try { 
        node2.addChildToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(115);
      node0.getAncestors();
      node0.isDefaultCase();
      node0.setVarArgs(false);
      Node node1 = Node.newString("F<\"jZXQ_7[JS<Y-");
      node1.getProp(40);
      node1.toString(false, false, true);
      node0.isScript();
      node1.putBooleanProp(1509, false);
      Object object0 = new Object();
      node1.isTrue();
      node0.children();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.isNE();
      node0.setQuotedString();
      node0.getDirectives();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.isEquivalentToTyped((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = new Node(35, 4095, 4095);
      node0.isStringKey();
      node0.isThis();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(46, "", 2, 29);
      Node node2 = node1.clonePropsFrom(node1);
      Node node3 = new Node((-914), node1, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1111));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.extractCharno(1);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      // Undeclared exception!
//      try { 
        node3.addChildBefore(node2, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = new Node(12, node0, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = new Node(30);
      node2.isQualifiedName();
      Node node4 = Node.newString("<invalid>");
      node4.toString(false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParameters((List<JSType>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 1, 1, 2568);
      node0.useSourceInfoIfMissingFrom(node1);
      Node node2 = Node.newString(38, "", 1093, (-2360));
      node1.isComma();
      node2.isAnd();
      node2.isComma();
      node0.setChangeTime((-3905));
      node0.isVar();
      node2.isHook();
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = Node.newNumber((-1.7170390293586355), 42, 30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node2.isQualifiedName();
      Node node3 = new Node(50, node2, 1758, 53);
      node3.isEquivalentToShallow(node3);
      // Undeclared exception!
//      try { 
        node1.replaceChild(node2, node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(40, "Z|$aQs^", (-1244), 40);
      node0.putBooleanProp(40, true);
      InputId inputId0 = new InputId("\u0004I{zGx`*:");
      node0.setInputId(inputId0);
      Node node1 = Node.newNumber(1.0, 2, (-843));
      node0.getQualifiedName();
      node0.isVarArgs();
      node1.isAdd();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newString("0");
      node0.children();
      Node node1 = new Node(130, 44, 31);
      Node node2 = new Node(40, node0, node1);
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      Node node1 = Node.newString((-1040), "qJG%$#GrCE", (-2555), 1);
      Node node2 = new Node(85, node0, node0, (-1040), 85);
      node2.isComma();
      node2.isVar();
      node0.isNot();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("side_effect_flags", (-1095), 10);
      node0.setChangeTime(8);
      Node node1 = new Node(52);
      node1.getAncestors();
      node1.isAssignAdd();
      Node node2 = node1.cloneNode();
      node2.checkTreeEqualsImpl(node0);
      node1.isLabel();
      int int0 = Node.SLASH_V;
      String string0 = "X(<]LXe)},omUK";
      String string1 = "9jr&lSXPSfi`%^";
//      try { 
        node2.setString("9jr&lSXPSfi`%^");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // INSTANCEOF is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(16, "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch", 2498, 2498);
      Node node1 = new Node(2498, node0);
      node0.isVarArgs();
      node1.isOnlyModifiesArgumentsCall();
      node1.isAdd();
      node1.getLastSibling();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      int int0 = 1778;
      Node node0 = new Node(1758, 1778, 1758);
      // Undeclared exception!
//      try { 
        node0.srcrefTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.isIf();
      Node node1 = Node.newString(38, "qJG%$#GrCE");
      node1.isGetProp();
      node0.isQuotedString();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isIf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isIn();
      node0.isSwitch();
      node0.isBlock();
      node0.isIn();
      Node node1 = new Node((-3286), node0);
      node1.isCatch();
      node0.isLabelName();
      node0.srcref(node1);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      node_NodeMismatch0.equals(node0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = Node.newNumber(0.0, 8, 54);
      node0.copyInformationFrom(node1);
      node0.isQualifiedName();
      node0.putBooleanProp(122, true);
      node0.isIn();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = new Node(122);
      node0.setChangeTime(10);
      Node node1 = new Node(40);
      node1.isAssignAdd();
      Node node2 = node0.cloneNode();
      node2.checkTreeEqualsImpl(node0);
      node2.isLabel();
      int int0 = Node.SLASH_V;
      String string0 = "X(<]LXe)},omUK";
      // Undeclared exception!
//      try { 
        node1.setString("X(<]LXe)},omUK");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(103);
      node0.getAncestors();
      node0.isFunction();
      node0.isNE();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.checkTreeEqualsImpl(node1);
      node1.isNew();
      node0.isRegExp();
      Node node2 = node0.copyInformationFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      ImmutableList.of();
      Node node3 = new Node(4095, node0, 1047, (-2139));
      node2.isSetterDef();
      Node node4 = new Node(43);
      node2.isFromExterns();
      node3.cloneNode();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
//      try { 
        node1.setString("wb");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // CATCH is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Iterator<JSType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node0 = Node.newString("Object#Element");
      node0.setChangeTime(57);
      Node node1 = Node.newString(54, "Object#Element");
      Node node2 = new Node(32);
      node1.isInstanceOf();
      node0.isBreak();
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = new Node((-96), (-96), (-96));
      node0.setLineno((-96));
      Node node1 = new Node(38, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber(1.0);
      Node node4 = Node.newString((-96), "<Zy>'lZ8");
      node3.getProp(26);
      Node node5 = new Node((-829));
      node0.getDirectives();
      node0.isTypeOf();
      node0.setType(38);
      Node node6 = new Node(50, node4);
      node6.isVoid();
      node2.isCase();
      Node node7 = new Node(57);
      Node node8 = new Node((-2321), node6);
      node8.removeFirstChild();
      node2.isDec();
      node3.isThis();
      node6.getType();
      node8.getLastChild();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newNumber((-561.1300583732465));
      node0.setChangeTime(120);
      node0.getAncestors();
      node0.isIn();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node((-1697), nodeArray0, (-961), 51);
      node1.isString();
      node0.addChildToFront(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.setChangeTime(16);
      node0.removeProp(1);
      Node node2 = Node.newString("Ev)@c", 2925, 54);
      Node node3 = new Node(40, node0, node0, 37, 29);
      node3.useSourceInfoFromForTree(node2);
//      try { 
        node0.setString("Ev)@c");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER -561.1300583732465 2925 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.isFunction();
      node0.isAssignAdd();
      Node node1 = Node.newNumber((double) 54, 1, 39);
      node1.checkTreeEqualsImpl(node1);
      node0.isNew();
      node0.isRegExp();
      node1.copyInformationFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      Node node2 = new Node(153, node0, (-389), (-145));
      node2.isSetterDef();
      Node node3 = new Node(4);
      node3.isFromExterns();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node node2 = new Node(38, node0, node0);
      node1.hasChild(node1);
      // Undeclared exception!
//      try { 
        node2.getQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime((-983));
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.isGetProp();
      Node node2 = node0.cloneNode();
      node0.setString("msg.jsdoc.function.varargs");
      node0.isEquivalentToShallow(node1);
      node2.addChildrenToFront(node1);
      node1.getSideEffectFlags();
      node1.cloneTree();
      node2.getChangeTime();
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isAssignAdd();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(153, node0, node0);
      node0.isTypeOf();
      Node node2 = Node.newNumber((-567.38402164826));
      node0.toString(false, true, true);
      node0.isIn();
      node2.isCatch();
      node1.isLabelName();
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Node node0 = new Node(112);
      node0.getAncestors();
      node0.isNull();
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isSwitch();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.isNE();
      node0.addSuppression("qJG%$#GrCE");
      node0.setQuotedString();
      node0.getDirectives();
      node0.isGetProp();
      node0.isQuotedString();
      node0.getQualifiedName();
      node0.isRegExp();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<Zy>'lZ8");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(1138);
      node0.setVarArgs(false);
      Node node1 = new Node(52, node0, node0, 38, 39);
      Node node2 = node1.cloneTree();
      boolean boolean0 = false;
      node0.isEquivalentTo(node1, true, false, true);
      node0.children();
      node0.getNext();
      node1.useSourceInfoFromForTree(node2);
      // Undeclared exception!
//      try { 
        node0.toString(true, false, false);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1138
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.valueOf();
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0, node0, node0, 4, 38);
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      node0.isDelProp();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = new Node(115);
      node0.getAncestors();
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSwitch();
      node0.isAssignAdd();
      node0.isAssign();
      Node node1 = Node.newNumber((double) 52);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = new Node(53, node0, node0);
      node0.getChangeTime();
      Node node2 = node1.removeChildren();
      node2.getJSDocInfo();
      node0.isEmpty();
      Node node3 = node1.copyInformationFrom(node0);
      node3.checkTreeEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node0 = Node.newString("");
      Node node1 = new Node(7, node0, node0);
      Node node2 = new Node(4096, node1, node1, 55, 43);
      node2.isCatch();
      Node node3 = node2.getFirstChild();
      node3.getInputId();
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("})");
      Node node1 = new Node(98, node0, node0);
      node1.useSourceInfoIfMissingFrom(node0);
      Node node2 = Node.newNumber((double) 55);
      Node node3 = Node.newString(40, "})");
      node3.getProp(54);
      Node node4 = new Node(2);
      node2.isTypeOf();
      node1.setType(54);
      node3.isVoid();
      node2.isCase();
      Node node5 = new Node(1);
      node2.isInstanceOf();
      node2.removeFirstChild();
      node5.isRegExp();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      Node node1 = Node.newNumber((double) 48, (-89), 0);
      node0.isQualifiedName();
      Node node2 = new Node((-983), node1, node1);
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      Node.newNumber((double) 16);
      Node.newString(36, "Ep");
      node1.getProp(55);
      Node node4 = new Node(48);
      node4.getDirectives();
      node2.isTypeOf();
      node1.setType(110);
      Node node5 = Node.newString(51, "Ep", 42, (-1733));
      node5.isIn();
      node3.isCatch();
      node2.isLabelName();
      node5.isNot();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = Node.newNumber(0.0, 8, 54);
      node0.toString(true, false, true);
      node0.isQualifiedName();
      node0.putBooleanProp(122, true);
      Node node2 = Node.newString(306, "VOID", 2, 55);
      node0.isIn();
      node0.isCatch();
      node0.isLabelName();
      node1.srcref(node0);
      node0.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(112, nodeArray0, 112, (-942));
      Node node1 = new Node(112, node0, (-3478), 355);
      node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node1.addChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setChangeTime(1029);
      node0.getAncestors();
      Node node1 = new Node(30, 2845, (-2717));
      node1.isIn();
      Node node2 = node1.cloneNode();
      node0.setString("g");
      node0.isEquivalentToShallow(node2);
      node1.getChangeTime();
      node2.addChildrenToBack(node0);
      // Undeclared exception!
//      try { 
        node1.addChildrenToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      priorityQueue0.iterator();
      Node node0 = new Node(147, 147, 147);
      node0.isNull();
      Node node1 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node1);
      node1.isLabel();
      int int0 = Node.SLASH_V;
//      try { 
        node0.setString("X(<]LXe)},omUK");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // GETTER_DEF 147 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      Node node1 = Node.newNumber((double) 48, (-89), 0);
      node0.isQualifiedName();
      Node node2 = new Node((-983), node1, node1);
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      Node node4 = Node.newNumber((double) 16);
      Node node5 = Node.newString(36, "Ep");
      node1.getProp(55);
      Node node6 = new Node(48);
      Node node7 = new Node((-1493));
      node4.isTypeOf();
      node5.setType((-1379));
      node0.isVoid();
      node3.isCase();
      Node node8 = new Node(54);
      node1.isInstanceOf();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node7;
      Node node9 = new Node(2926, nodeArray0);
      node9.removeFirstChild();
      node2.isRegExp();
//      try { 
        node4.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 16.0 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.isNE();
      node0.addSuppression("Q]\"Kkj(=f");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = Node.newString(52, "Q]\"Kkj(=f", 52, 30);
      node1.setQuotedString();
      node0.addChildrenToBack(node1);
      node1.setSourceFileForTesting("Q]\"Kkj(=f");
      node0.isComma();
      node1.isVar();
      node1.getSourceFileName();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(53, "Z|$aQs^", (-1244), 53);
      node0.putBooleanProp(53, true);
      // Undeclared exception!
//      try { 
        node0.getInputId();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-1037));
      node0.getAncestors();
      node0.isFunction();
      node0.isNE();
      node0.isAssignAdd();
      Node node1 = new Node(46, node0, node0, node0, 4096, 15);
      Node node2 = node0.detachFromParent();
      node1.isNew();
      node1.mayMutateArguments();
      node0.getSourceOffset();
      node2.isSwitch();
      node2.isWhile();
      node1.isSwitch();
      node0.isContinue();
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = new Node(155);
      node0.getAncestors();
      node0.isIn();
      Node node1 = node0.cloneNode();
//      try { 
        node1.setString("AND");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // CAST is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      Node node1 = new Node(48, node0, node0, node0, 39, 1);
      Node node2 = node0.srcref(node1);
      node2.addSuppression("-`L0TeO38|W?%4piI[S");
      Node node3 = node0.getParent();
      // Undeclared exception!
//      try { 
        node3.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 48
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(103);
      node0.getAncestors();
      node0.isFunction();
      node0.isNE();
      node0.isAssignAdd();
      Node node1 = new Node(143, node0, node0, node0, node0, 56, 1);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = node0.detachFromParent();
      node1.isNew();
      node2.mayMutateArguments();
      Node node3 = Node.newString(8233, "NP?TvB\"g{*vUQ", 2, 3312);
      node3.getSourceOffset();
      node1.isSwitch();
      node2.isWhile();
      node2.isSwitch();
      node0.isContinue();
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte) (-109);
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CharMatcher.or(");
      Node node0 = Node.newString((int) (byte)19, "CharMatcher.or(", (int) (byte)126, 132);
      Node node1 = new Node(3906, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("y9[O)(?TS$hktk %zD4");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      mockPrintStream0.print(669);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      // Undeclared exception!
//      try { 
        node2.appendStringTree(mockPrintWriter1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3906
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      Node node1 = Node.newNumber((double) 48, (-89), 0);
      node0.clonePropsFrom(node1);
      node0.isQualifiedName();
      Node node2 = new Node((-983), node1, node1);
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      Node node4 = Node.newNumber((double) 16);
      Node.newString(36, "Ep");
      node4.isAssignAdd();
      node3.checkTreeEqualsImpl(node0);
      node2.isStringKey();
      node0.isRegExp();
      node1.getQualifiedName();
      node2.getType();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 556;
      Node node0 = Node.newString((-2991), "k]p>I_&E]", 494, 556);
      int int1 = 774;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(38, node0, 1, 774);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      InputId inputId0 = new InputId("k]p>I_&E]");
      node2.setInputId(inputId0);
      Node.newString(37, "k]p>I_&E]");
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = Node.newNumber(0.0, 8, 54);
      node0.toString(true, false, true);
      node0.isFromExterns();
      Node node2 = Node.newString("VOID", 47, (-1164));
      Node node3 = new Node(42, node2, node1, 57, 2);
      node2.setString("7}O9?Y\u0006H~pKiE");
      node2.removeChildren();
      node0.srcref(node3);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString("s");
      node0.isNoSideEffectsCall();
      node0.setSourceFileForTesting("STRING 7}O9?Y\u0006H~pKiE\n");
      node0.isParamList();
      node0.mayMutateArguments();
      Node node1 = Node.newString(63, "Obj-ct#Key", 57, 29);
      node1.isIn();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newString(83, "Should not call getLineOffset with line number ", 83, 83);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>(40);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.checkTreeEquals(node1);
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(1979, 1979, 1979);
      Node node1 = new Node((-331), node0, node0, node0, node0, 1979, 124);
      node1.removeChildren();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.addChildToFront(node1);
      Node node2 = node0.srcrefTree(node1);
      node2.siblings();
      String string0 = "X{6BKk4=";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node3 = Node.newString(51, "X{6BKk4=", 29, 154);
      // Undeclared exception!
//      try { 
        node3.getExistingIntProp(15);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 15
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(77);
      Node node1 = Node.newString("this");
      node1.isNull();
      node1.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isInc();
      node0.isSwitch();
      node1.isNoSideEffectsCall();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Iterator<JSType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node2 = Node.newString("qJG%$#GrCE");
      Node.newString(1, "U%4C^%");
      Node node3 = new Node(15);
      Node node4 = new Node(32, node1, node2, 53, 37);
      node4.isInstanceOf();
      node1.detachFromParent();
      node4.addChildrenToBack(node1);
      node1.isFunction();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(115);
      node0.getAncestors();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.isNull();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isRegExp();
      Node node1 = new Node(31);
      Node node2 = node0.copyInformationFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      Node node3 = new Node(1, node2, 15, 4);
      node0.isSetterDef();
      Node node4 = new Node((-862048943), 15, 116);
      node1.isIf();
      node1.isIn();
//      try { 
        node0.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FOR is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node.extractLineno((-1));
      Node node0 = new Node((-1), (-1), (-1));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "Null";
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
//      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Unknown class name");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.isNE();
      node0.setChangeTime((-1688));
      Node node1 = new Node(1495);
      node1.getAncestors();
      node1.isNull();
      Node node2 = new Node(37, node1, 1174, 12);
      Node node3 = node2.cloneNode();
      node0.checkTreeEqualsImpl(node3);
      node1.isLabel();
      int int0 = Node.SLASH_V;
      node0.setString("qJG%$#GrCE");
      Node node4 = Node.newString(30, "qJG%$#GrCE");
      Node node5 = new Node(93, node2, node4, 1577, 1958);
      Node.newNumber((-5291.87347347), 85, (-1545));
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node5);
      node_NodeMismatch0.equals(node0);
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node node1 = Node.newNumber((double) 29, 38, 56);
      node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isNull();
      node0.isDefaultCase();
      node0.wasEmptyNode();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(4, nodeArray0);
      Node node2 = node1.srcrefTree(node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.detachChildren();
      node1.isDelProp();
      Node node3 = node0.copyInformationFrom(node1);
      node1.isDo();
      // Undeclared exception!
//      try { 
        node3.getChildBefore(node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.getAncestors();
      node1.isGetProp();
      node0.setString("msg.jsdoc.function.varargs");
      node0.isEquivalentToShallow(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isSwitch();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(2, nodeArray0);
      node3.isNoSideEffectsCall();
      node3.isContinue();
      node2.isVar();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-3694), nodeArray0);
      node0.wasEmptyNode();
      Node node1 = new Node(35, nodeArray0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.isString();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.detachChildren();
      Node node2 = node0.cloneTree();
      node2.mayMutateGlobalStateOrThrow();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Iterator<JSType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node.newString("Object#Element");
      Node node1 = Node.newString(54, "Object#Element");
      Node node2 = new Node(8);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = null;
      // Undeclared exception!
//      try { 
        node0.checkTreeEquals((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString("moeGq#%n=h_J+N}");
      Node node1 = Node.newNumber((double) 31, (-1966), (-4065));
      node1.putBooleanProp((-1001), false);
      Node node2 = new Node(33, node0, node1, node1, node0, (-528), 4095);
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      Node.newString(32, "", 1, 38);
      node3.isComma();
      node1.isAnd();
      node1.setDirectives((Set<String>) null);
      node2.isUnscopedQualifiedName();
      node0.isIf();
      Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node3.isInc();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS");
      Node node1 = new Node(38);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = new Node(32, node0, (-1791), 51);
      node2.isFalse();
      node0.isTypeOf();
      Node node3 = Node.newString(52, "Object#Element", 30, 31);
      Node node4 = new Node(40, 42, 1162);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node4);
      Node node5 = new Node((-3934), node4, node3);
      node5.isString();
      node1.isDo();
      node5.isVoid();
      node4.isCase();
      node4.isWhile();
      node4.isNE();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.getChildCount();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      immutableList0.toArray();
      String string0 = "";
      Node node0 = Node.newString("", 103, 46);
      Node node1 = new Node(362, node0, node0, 362, (-577));
      node1.isString();
      Node node2 = new Node(556, node1, node1);
      node1.addChildToFront(node2);
      node1.setChangeTime(57);
      Node node3 = Node.newString("", 12, 4);
      Node node4 = null;
//      try {
        node4 = new Node(2, node3, node1, 4095, 51);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString(2326, "+*O(&Xa5r0N,o1", 2326, 2268);
      Node node1 = new Node(2326, node0, node0);
      node1.isFromExterns();
      node1.getIndexOfChild(node0);
      node1.detachChildren();
      Node node2 = new Node(855, node0, node1, node0);
      node0.useSourceInfoIfMissingFrom(node2);
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        node0.addChildToFront(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(105, 105, 105);
      node0.getAncestors();
      node0.isFunction();
      node0.isNE();
      node0.isAssignAdd();
      node0.checkTreeEqualsImpl(node0);
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      vector0.add((JSType) null);
      node0.getAncestor(1329);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isBreak();
      node0.getChangeTime();
      Node node1 = new Node(30);
      node1.isEmpty();
      node1.srcrefTree(node0);
      node0.getStaticSourceFile();
      Node node2 = new Node(12, node1, node0, node1, 0, 46);
      node1.getIndexOfChild(node0);
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = Node.newNumber(0.0, 8, 54);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isBreak();
      node0.getChangeTime();
      node0.isEmpty();
      node0.getStaticSourceFile();
      Node node2 = new Node(43, node1, node0, node0, 40, 40);
      node2.getIndexOfChild(node0);
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node2, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = new Node(487);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.valueOf();
      Node node1 = new Node(31);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node1.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-2570.6704004), 52, 0);
      node1.getDouble();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node node2 = Node.newString(50, "");
      node0.isStringKey();
      node2.isLabel();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.isFunction();
      node0.isNE();
      node0.isAssignAdd();
      Node node1 = Node.newNumber((double) 54, 1, 39);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString(42, "qJG%$#GrCE", 56, 1);
      node0.isNew();
      node0.isRegExp();
      Node node3 = node2.copyInformationFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      Node.newString(4, "qJG%$#GrCE");
      Node.newString(301, "je}#s;'&!");
      Node node4 = new Node(56, node3, node3, node0, node1, 96, 2202);
      node4.isScript();
      node3.getChildCount();
      Node node5 = Node.newNumber((double) 16);
      node4.addChildAfter(node5, node2);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(115);
      node0.setIsSyntheticBlock(true);
      node0.getAncestors();
      node0.isNull();
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSwitch();
      node0.isNoSideEffectsCall();
      Node node1 = Node.newNumber(0.0, (-3387), 15);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(112, 112, 112);
      node0.getAncestors();
      node0.isFunction();
      node0.isNE();
      node0.isAssignAdd();
      node0.checkTreeEqualsImpl(node0);
      Node node1 = new Node(32, node0, node0, node0, 12, 54);
      node0.isFromExterns();
      node0.isNew();
      node0.isRegExp();
      node0.copyInformationFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      node0.isSetterDef();
      Node node2 = null;
//      try {
        node2 = new Node(8, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(115);
      Node node1 = new Node(32, node0);
      node1.toString(true, true, true);
      node0.cloneNode();
      node0.setVarArgs(true);
//      try { 
        node0.setString("node is not a child");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FOR [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(57, node0, 29, 15);
      node0.hasOneChild();
      node0.addChildToFront(node1);
      Node node2 = Node.newNumber((double) 8, 57, 53);
      node2.checkTreeEqualsImpl(node0);
      node2.isLabel();
      // Undeclared exception!
//      try { 
        Node.newString(3298, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(115);
      node0.getAncestors();
      node0.isNull();
      node0.cloneNode();
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSwitch();
      Node node1 = new Node(40, node0, node0, node0);
      node1.isIn();
      node1.isCatch();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      // Undeclared exception!
//      try { 
        node0.addChildToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      node0.setLineno((-89));
      Node node1 = Node.newNumber((double) 48, (-89), 0);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isQualifiedName();
      Node node3 = new Node((-983), node1, node1);
      node3.useSourceInfoIfMissingFrom(node1);
      Node node4 = Node.newNumber((double) 16);
      Node node5 = Node.newString(36, "Ep");
      node1.getProp(55);
      node4.setDouble(38);
      node0.mayMutateArguments();
      node2.getSourceOffset();
      Node node6 = Node.newString(113, "Ep");
      node1.isScript();
      node6.isWhile();
      node5.getJSType();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(122, 122, 122);
      node0.setLineno(38);
      Node node1 = new Node(29, 0, (-6234));
      node1.isAdd();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(2);
      Node node1 = new Node(39);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isNoSideEffectsCall();
      node1.isTypeOf();
      node0.setVarArgs(false);
      node0.setString("=}@de><9}!z-j");
      node0.removeChildren();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      Node node0 = new Node(139);
      node0.isQualifiedName();
      Node node1 = new Node(52, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = Node.newNumber(8.0);
      Node node4 = Node.newString(43, "<Zy>'lZ8");
      node2.getProp(56);
      Node.newNumber((double) 51, 154, 1999);
      Node node5 = null;
//      try {
        node5 = new Node(29, node3, node0, node1, node4, 53, 0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.setChangeTime(32);
      node0.getAncestors();
      node0.isIn();
      Node node1 = new Node(16, node0, 4, 0);
      node1.hasOneChild();
      node0.addChildToFront(node1);
      // Undeclared exception!
//      try { 
        node0.checkTreeEqualsImpl(node0);
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(103);
      Node node1 = Node.newString("`[E_O$Kmkq)OAC]K~", 53, 36);
      Node node2 = node0.clonePropsFrom(node1);
      node2.isQualifiedName();
      Node node3 = new Node(54, node1, node1);
      Node node4 = node3.useSourceInfoIfMissingFrom(node1);
      Node.newNumber((double) 4095);
      Node node5 = Node.newString((-1493), "`[E_O$Kmkq)OAC]K~");
      node2.getProp((-3231));
      Node node6 = new Node(52);
      Node node7 = Node.newNumber((double) 4);
      node4.isTypeOf();
      node7.setType(48);
      node6.isVoid();
      node5.isCase();
      Node node8 = new Node(40);
      node1.isInstanceOf();
      node2.removeFirstChild();
      node4.isRegExp();
      Node node9 = Node.newString("`[E_O$Kmkq)OAC]K~", 53, (-4801));
      node9.getString();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = new Node(122, 1248, 2792);
      Node node1 = Node.newNumber(0.0, 8, 54);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isBreak();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.getChangeTime();
      node0.isEmpty();
      node1.isLabel();
      node1.isScript();
      int int0 = Node.COLUMN_MASK;
      node2.isOnlyModifiesArgumentsCall();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(102, nodeArray0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node2.isString();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("NUMBER 0.0", node0, jSType0);
      jSTypeArray0[0] = (JSType) enumType0;
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.detachChildren();
      node0.isDelProp();
      node2.copyInformationFrom(node1);
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = new Node(115);
      node0.getAncestors();
      Node node1 = new Node(55, node0, 32, 30);
      node1.isEquivalentToTyped(node0);
      node0.detachFromParent();
      node1.addChildrenToBack(node0);
      node0.isFunction();
      Node node2 = null;
//      try {
        node2 = new Node(85, node0, 38, 319);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(115, 115, (-915));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags6.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags7.clearSideEffectFlags();
      Node.extractCharno(54);
      node0.putBooleanProp(115, true);
      node0.hasMoreThanOneChild();
      node0.isGetElem();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable", 287, 0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = Node.newNumber((-745.10992209));
      Node node1 = Node.newNumber(700.7817261095254, 4, 50);
      node1.isBreak();
      node1.getChangeTime();
      node0.isEmpty();
      Node node2 = Node.newNumber((double) 40);
      Node node3 = new Node(116, 101, 39);
      node1.isOptionalArg();
      TreeSet<TemplateType> treeSet0 = new TreeSet<TemplateType>();
      Node node4 = Node.newNumber((double) 47);
      node4.isGetElem();
      node3.useSourceInfoIfMissingFromForTree(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node5 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) stack0);
      // Undeclared exception!
//      try { 
        node3.addChildBefore(node5, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0, node0, 36, 8);
      node1.isNoSideEffectsCall();
      node0.setSourceFileForTesting("STRING 7}O9?Y\u0006H~pKiE\n");
      node1.setOptionalArg(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.isEquivalentTo(node0, true, false, true);
      node1.isIf();
      node1.isFalse();
//      try { 
        node0.setDouble(40);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING  [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(115, 115, (-915));
      node0.isDebugger();
      node0.isExprResult();
      node0.isTypeOf();
      node0.isThrow();
      node0.getSideEffectFlags();
      node0.cloneTree();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newNumber(272.91);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.setCharno(56);
      Node node1 = Node.newNumber((double) 15, 2869, 47);
      node0.getDirectives();
      Node node2 = new Node(49, 57, 32);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.toStringTree();
      node2.isTypeOf();
      node1.isNot();
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = Node.newString("Ya3{D|A\"<o", 90, 301);
      Node node1 = node0.cloneNode();
      node0.getProp(2117);
      Node.newString("Ya3{D|A\"<o");
      node1.putIntProp(51, 32);
      node0.removeProp(32768);
      Node.newString(1098, "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder");
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFrom(node1);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node0.putBooleanProp(16, true);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.Node$SiblingNodeIterable");
      node0.isUnscopedQualifiedName();
      node1.isArrayLit();
      node2.isQualifiedName();
      Node node3 = new Node(30, node1, node2, node2, 36, 57);
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-3694), nodeArray0);
      node0.wasEmptyNode();
      Node node1 = new Node(35, nodeArray0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isString();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.detachChildren();
      node1.isDelProp();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(10);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.isHook();
      node0.cloneNode();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      node1.isLabel();
      node0.getSideEffectFlags();
      node0.setString("X(<]LXe)},omUK");
      Node node2 = Node.newNumber((double) 57, 40, (-1670));
      Node node3 = new Node(133, node2);
      Node node4 = Node.newNumber(40.0, 53, 48);
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      // Undeclared exception!
//      try { 
        node4.replaceChild(node0, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(116, 105, 154);
      Node node1 = new Node(29, node0, node0, node0, node0, (-2183), 1452);
      Node node2 = new Node(55, node1, node1, node1, node1);
      // Undeclared exception!
//      try { 
        node2.addChildToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(93, 1032, (-914));
      node0.getAncestors();
      node0.isFunction();
      node0.isNE();
      node0.isAssignAdd();
      Node node1 = new Node(36, node0, node0, node0, node0);
      node0.checkTreeEqualsImpl(node1);
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = new Node(850, 850, 850);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = Node.newNumber(1520.085964);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.isBlock();
      node0.isEquivalentToShallow(node2);
      node0.setCharno(92);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node_NodeMismatch0.equals(node2);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(4);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 850
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = Node.newString(309, "GLOBAL_THIS");
      node0.setLineno(115);
      Node node1 = new Node(148, (-219), (-3910));
      node0.isAdd();
      Node node2 = new Node(12, node0, node1, node1, node1, (-159), 36);
      node2.isIf();
      node0.isIn();
      node1.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newNumber((-574.202));
      node0.setType(0);
      Node node1 = Node.newString(2, "com.google.javascript.rhino.Node$StringNode", 15, 4095);
      node0.setLineno(1);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node.newNumber(1.0);
      Node node3 = Node.newString((-1655), "@");
      node3.getProp((-1357));
      Node node4 = new Node(49);
      Node.newNumber((-1.0));
      node2.isTypeOf();
      node1.setType(12);
      node0.isVoid();
      node1.isCase();
      Node node5 = new Node(40);
      node1.isInstanceOf();
      node3.removeFirstChild();
      node0.isRegExp();
      // Undeclared exception!
//      try { 
        node5.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // String node not created with Node.newString
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newString(37, "");
      node0.setLength(37);
      node0.getProp(37);
      node0.isOptionalArg();
      node0.isAssignAdd();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(119, node0, 29, 114);
      Node node2 = Node.newNumber((double) 4095, 16, 147);
      Node node3 = new Node(5887, node1, node2);
      InputId inputId0 = new InputId("msg.jsdoc.function.thisnotobject");
      inputId0.toString();
      node3.setInputId(inputId0);
      Node node4 = node0.useSourceInfoIfMissingFromForTree(node3);
      node4.setOptionalArg(true);
      node3.isNE();
      Node.mergeLineCharNo(35, 46);
      node2.isCase();
      Node node5 = node1.useSourceInfoFrom(node3);
      node5.setLineno(51);
      node5.checkTreeTypeAwareEqualsImpl(node4);
      node4.isFalse();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Node node1 = Node.newString("$K,{];q4P2_8CGH");
      Node node2 = new Node(47, node0, node0, node1, 57, 8);
      node2.cloneTree();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(112, 112, 112);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.URI_ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.getCtorImplementedInterfaces();
      jSTypeArray0[0] = (JSType) objectType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.useSourceInfoFromForTree(node1);
      node0.getAncestors();
      node0.isFunction();
      node0.isNE();
      node0.isAssignAdd();
      node0.checkTreeEqualsImpl(node0);
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.valueOf();
      Node node0 = new Node(0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node0.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node1);
      node1.isLabel();
      node0.copyInformationFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node4 = new Node(64, node1, node1, node3, node2, (-2616), 310);
      node4.isDebugger();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node5 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node5.isSetterDef();
      node5.isEquivalentTo(node3, false, false, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node6 = jSTypeRegistry1.createParameters(jSTypeArray0);
      Node node7 = null;
//      try {
        node7 = new Node(40, node4, node6, node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(2);
      Node node1 = new Node(39);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isNoSideEffectsCall();
      Node node2 = new Node(31, node0, node0);
      node1.isTypeOf();
      node2.getProp(36);
      Node node3 = new Node(47);
      Node node4 = Node.newNumber((-942.0));
      node4.isOnlyModifiesArgumentsCall();
      Node node5 = Node.newString("qJG%$#GrCE");
      node5.isSyntheticBlock();
      node1.isThrow();
      node1.isNull();
      Node node6 = new Node(51);
      node6.isInc();
      node6.srcrefTree(node0);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.isFunction();
      node0.isNE();
      Node node1 = Node.newNumber((double) 54, 1, 39);
      Node node2 = Node.newString(42, "qJG%$#GrCE", 56, 1);
      node0.isNew();
      node0.isRegExp();
      node2.copyInformationFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      MockFile mockFile0 = new MockFile("fj", "2L1");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      // Undeclared exception!
//      try { 
        node1.appendStringTree((Appendable) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString("jvx7!&P!F&~");
      node0.setChangeTime((-689));
      Node node1 = new Node(115);
      node1.getAncestors();
      node1.isHook();
      Node node2 = node0.cloneNode();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node0);
      node2.isLabel();
      node2.getSideEffectFlags();
      node2.setString("d}");
      Node.newNumber((-4116.70306199), 53, (-4238));
      Node node3 = new Node(2410, node1);
      Node.newNumber((double) 39, 31, 15);
      Node.NodeMismatch node_NodeMismatch1 = new Node.NodeMismatch(node3, node0);
      InputId inputId0 = new InputId("d}");
      node_NodeMismatch0.equals(inputId0);
      // Undeclared exception!
//      try { 
        node3.replaceChild(node2, node0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(126, node0, node0, 4095, 37);
      node1.isInc();
      node0.isSwitch();
      node1.setCharno(15);
      node1.isLabel();
      node0.isAssignAdd();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(4095, node0, node0, node0);
      node1.mayMutateArguments();
      node1.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      jSTypeNativeArray0[1] = jSTypeNativeArray0[0];
      node1.isCast();
      JSType[] jSTypeArray0 = new JSType[3];
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = new Node(122, 1248, 2792);
      Node node1 = Node.newNumber(0.0, 8, 15);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toString(true, true, false);
      node1.setWasEmptyNode(false);
      Node.extractLineno((-1702));
      node1.setChangeTime(57);
      node0.toStringTree();
      node0.isTypeOf();
      node1.isNot();
      Node node3 = node1.srcref(node2);
      node1.addChildToBack(node3);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      String string0 = "Z|$aQs^";
      Node node0 = Node.newString(40, "Z|$aQs^", (-1244), 40);
      node0.putBooleanProp(40, true);
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node((-1244), 4194304, 4);
      // Undeclared exception!
//      try { 
        node1.copyInformationFromForTree(node0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      String string0 = "GLOBAL_THIS";
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.putIntProp(1, 309);
      Node node1 = new Node(49);
      node0.removeProp(1);
      // Undeclared exception!
//      try { 
        Node.newString((-186), (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newNumber((-745.10992209));
      Node node1 = Node.newNumber(700.7817261095254, 96, 50);
      node1.isBreak();
      node1.getChangeTime();
      node0.isEmpty();
      node1.toStringTree();
      node1.isLabel();
      Node node2 = Node.newNumber((double) 40);
      Node node3 = new Node(116, 101, 39);
      node1.isOptionalArg();
      TreeSet<TemplateType> treeSet0 = new TreeSet<TemplateType>();
      node0.isGetterDef();
      node2.isNoSideEffectsCall();
      node1.isNE();
      node0.isNull();
      node0.isInc();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node4 = new Node(52, node2, node1, node1, 117, 47);
      node4.srcrefTree(node3);
      node4.isBreak();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("J?#Ir96!!BEe");
      node0.putIntProp((-510), 540);
      Node node1 = new Node(119);
      node1.removeProp(93);
      Node node2 = Node.newString((-1523), "Object#Element");
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node1.isThis();
      node1.isGetterDef();
      node3.isNoSideEffectsCall();
      node0.isNE();
      Node node4 = new Node((-2248));
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("is_namespace", node4, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J|qvG0W!<");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-562), (-1871), 49);
      Node node1 = new Node(49, node0, node0, node0, node0, (-4441), 30);
      node0.cloneNode();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isInstanceOf();
      Node node2 = Node.newString("V`4");
      node2.siblings();
//      try { 
        node2.setDouble((-562));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING V`4 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(153, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node.newString(36, "GLOBAL_THIS", 50, 4095);
      node2.isComma();
      node0.isAnd();
      node2.isUnscopedQualifiedName();
      node0.isIf();
      Node.newString("GLOBAL_THIS");
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      String string0 = "\"oZqht=B!gmb";
      Node node0 = Node.newString((-181), "\"oZqht=B!gmb");
      Node node1 = null;
      boolean boolean0 = true;
      boolean boolean1 = false;
      // Undeclared exception!
//      try { 
        node0.addChildBefore((Node) null, (Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node.newString(4, "CharMatcher.SINGLE_WIDTH", 40, 56);
      Node node1 = new Node(64, node0, node0, node0);
      node1.getLength();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.isQualifiedName();
      node1.toString(true, true, true);
      node1.setWasEmptyNode(true);
      Node.extractLineno(2);
      node1.toStringTree();
      Node node3 = Node.newNumber(486.05878564118, 1842, 50);
      node3.isTypeOf();
      node3.isNot();
      node2.srcref(node1);
      node2.isVar();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      int int0 = Node.IS_DISPATCHER;
      node0.isNoSideEffectsCall();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.extractCharno((-889));
      node1.putBooleanProp(3207, false);
      node1.hasMoreThanOneChild();
      node0.isGetElem();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node2.addChildBefore(node3, node0);
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isNull();
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isInc();
      node0.isSwitch();
      node0.setCharno(108);
      node0.isLabel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.isAssignAdd();
      node0.isOr();
      // Undeclared exception!
//      try { 
        node0.addChildToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node(154, 1248, 2792);
      Node node1 = new Node(47, node0, node0);
      node0.isBreak();
      node0.getChangeTime();
      node0.isEmpty();
      node1.isLabel();
      Node node2 = Node.newNumber((double) 132);
      Node node3 = new Node(32, 36, 40);
      node3.isOptionalArg();
      node3.wasEmptyNode();
      Node node4 = new Node(32, node2);
      node4.isDebugger();
      node1.isString();
      Node node5 = node4.copyInformationFrom(node3);
      node1.isDo();
      node0.isSetterDef();
      node5.isLocalResultCall();
      node4.isBreak();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newNumber(272.91);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.setCharno(56);
      Node node1 = Node.newNumber((double) 15, 2869, 47);
      node0.getDirectives();
      Node node2 = new Node(30, 57, 32);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.toStringTree();
      node2.isTypeOf();
      node1.isNot();
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node node1 = Node.newString(4, "CharMatcher.SINGLE_WIDTH", 40, 56);
      Node node2 = new Node(64, node0, node0, node0);
      node2.getLength();
      node0.isTypeOf();
      node0.setType(125);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.extractCharno(3691);
      node2.putBooleanProp(3104, false);
      Node node3 = new Node(0, node2, node1);
      node3.hasMoreThanOneChild();
      node2.isGetElem();
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node4, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setChangeTime(73);
      node0.getAncestors();
      node0.isIn();
      Node node1 = new Node(16, node0, 4, 0);
      node1.hasOneChild();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.isLabel();
      Node node2 = Node.newString(32, "");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("aj#V)S7'52pJ0");
      node2.isAnd();
      node2.isUnscopedQualifiedName();
      node0.getInputId();
      node2.setInputId((InputId) null);
      node2.isNE();
      int int0 = Node.INCRDECR_PROP;
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setChangeTime(40);
      node0.isFor();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(";uXBQ7L");
      node0.isAnd();
      node0.isIf();
      node0.isWith();
      node0.isWhile();
      node0.isQuotedString();
      Node node1 = Node.newString((-654), ";uXBQ7L");
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(64);
      node0.getInputId();
      node0.toString();
      node0.getChildBefore((Node) null);
      Node node1 = Node.newString("OBJECTLIT", (-1949), (-48));
      Node node2 = node0.clonePropsFrom(node1);
      node2.isReturn();
      Node.newNumber((double) 30, (-639), 26);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      Node node0 = Node.newString("NOT_NULL");
      Node node1 = new Node(48, node0, node0, node0, 0, 2010);
      node0.mayMutateArguments();
      node1.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      node1.setSourceFileForTesting("NOT_NULL");
      node1.mayMutateGlobalStateOrThrow();
      node0.isArrayLit();
      node0.mayMutateArguments();
      // Undeclared exception!
//      try { 
        node1.getSourceOffset();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Should not call getLineOffset with line number 0
//         //
//         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
//      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.newString("Object#Element");
      Node node0 = Node.newString("Object#Key", 37, 43);
      node0.mayMutateArguments();
      node0.getSourceOffset();
      node0.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node node1 = new Node(42, 38, 38);
      node1.isQualifiedName();
      node0.getIntProp(37);
      node1.isTypeOf();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      Node node1 = new Node(30, node0, 36, 1);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.toString();
      node0.isVar();
      node2.isThis();
      node2.isWith();
      node2.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 90, 309);
      node0.getProp(2121);
      node0.addSuppression("Q]\"Kkj(=f");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = Node.newString(36, "first new child has existing parent", 73, 40);
      node0.setQuotedString();
      node1.setType(46);
      node1.setOptionalArg(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isEquivalentTo(node1, true, false, true);
      node0.isIf();
      node1.isFalse();
      node0.addSuppression("duplicate child");
//      try { 
        node0.setDouble(2);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING GLOBAL_THIS 90 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000007] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = new Node(154, 154, 2856);
      node0.removeChildren();
      node0.isQuotedString();
      // Undeclared exception!
//      try { 
        node0.srcref((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = new Node(115);
      node0.getAncestors();
      node0.isVarArgs();
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(4095, node0, 4, 8);
      node1.isInc();
      node0.isVoid();
      node1.isDefaultCase();
      node1.isSetterDef();
      Node node2 = Node.newString("<:m]w", 46, (-1256));
      node0.clonePropsFrom(node2);
      node1.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(153, node0, node0);
      node1.cloneTree();
      Node node2 = new Node(37, (-256), 51);
      Node node3 = new Node(49, 48, 8287);
      node0.isOptionalArg();
      node3.isLabelName();
      TreeSet<TemplateType> treeSet0 = new TreeSet<TemplateType>();
      ImmutableList.copyOf((Iterable<? extends JSType>) treeSet0);
      node2.isExprResult();
      node0.getAncestors();
      node1.isInstanceOf();
      node0.getProp(39);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      node0.setLineno((-89));
      Node node1 = new Node(0, 1153, 51);
      node1.type = 15;
      node1.isAdd();
      node0.isInstanceOf();
      Node node2 = new Node(56, node1, node0, node0);
      Node node3 = node2.removeFirstChild();
      node0.isRegExp();
//      try { 
        node3.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // LE 1153 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setChangeTime(40);
      node0.isFor();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(";uXBQ7L");
      node0.isAnd();
      node0.isIf();
      node0.isWith();
      node0.isWhile();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = new Node(154, 1248, 2792);
      Node node1 = Node.newNumber(0.0, 8, 132);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.newString("7}O9?Y\u0006H~pKiE");
      Node node3 = Node.newNumber((double) 2);
      node2.clonePropsFrom(node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParameters((List<JSType>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newString(321, "WITH", 321, 3653);
      Node node1 = new Node(46, 321, 2);
      node0.getJsDocBuilderForNode();
      node0.isBreak();
      node0.getChangeTime();
      node1.isEmpty();
      node0.isLabel();
      Node node2 = Node.newNumber((-1746.0));
      Node node3 = new Node(3514, 131072, 51);
      node2.isOptionalArg();
      node0.isLabelName();
      Node node4 = new Node(38, node1);
      node2.isDebugger();
      node2.isExprResult();
      node3.isDec();
      Node.newString("THROW");
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      String string0 = "GLOBAL_THIS";
      Node node0 = Node.newString("GLOBAL_THIS");
      Node node1 = Node.newNumber(2162.9519118, 55, 56);
      node1.getChangeTime();
      node0.isDelProp();
      node0.isFor();
      node0.getBooleanProp((-786));
      node0.isLocalResultCall();
      Node node2 = node1.cloneNode();
      Node node3 = null;
      // Undeclared exception!
//      try { 
        node2.isEquivalentToShallow((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(153, node0, node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]Tr}");
      int int0 = Node.OPT_ARG_NAME;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = Node.newString(118, "STRING 7}O9?Y\u0006H~pKiE\n", 12, 36);
      node1.isString();
      Node node3 = node2.copyInformationFrom(node1);
      node1.isDo();
      node3.isSetterDef();
      node2.isLocalResultCall();
      node3.isBreak();
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = new Node(64);
      Node node1 = Node.newString(4, "CharMatcher.SINGLE_WIDTH", 40, 56);
      Node node2 = new Node(38, node0, node0, node1, 16, 39);
      node2.getLength();
      node0.isTypeOf();
      node0.setType(125);
      node0.isVoid();
      node0.isCase();
      Node node3 = new Node(46);
      node1.isInstanceOf();
      node2.removeFirstChild();
      node1.isRegExp();
//      try { 
        node2.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME 16 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setChangeTime(40);
      node0.setSourceFileForTesting("@-5m^1GVH9nhz");
      node0.isParamList();
      node0.isArrayLit();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.mayMutateArguments();
      Node node2 = Node.newNumber(2213.24089, 15, 16);
      Node node3 = new Node(53, node2, node2);
      node3.getSourceOffset();
      Node node4 = Node.newString(43, "Object#Key");
      node1.isScript();
      int int0 = Node.INCRDECR_PROP;
      // Undeclared exception!
//      try { 
        node4.addChildAfter(node3, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      Node node1 = new Node(30, node0, 36, 1);
      node0.useSourceInfoIfMissingFrom(node1);
      Node node2 = Node.newString("", 30, 57);
      node2.siblings();
      Node node3 = new Node(48, 57, 2);
      node1.isNew();
      node3.isGetterDef();
      node2.isNoSideEffectsCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      Node node0 = Node.newString(85, "IR7$");
      Node node1 = new Node(85, node0, node0, node0, node0);
      Node node2 = new Node(85, node1, 2282, 1);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      // Undeclared exception!
//      try { 
        modificationVisitor0.caseUnionType(unionType0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(11);
      // Undeclared exception!
//      try { 
        node0.clonePropsFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((-437.9386835858766));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(120, node0, node0, node0, 52, 118);
      node1.checkTreeEqualsImpl(node0);
      node1.getJsDocBuilderForNode();
      Node node2 = new Node(36, 37, (-1664));
      node1.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      Node node1 = Node.newString(29, "Ep", (-736), 48);
      Node node2 = new Node((-736), node0, node0, node0, node1, 15, 12);
      Node node3 = Node.newString(54, "je}#s;'&!");
      node3.addChildrenToFront(node2);
      node0.getSideEffectFlags();
      Node node4 = node3.cloneTree();
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node4, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Iterator<JSType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node(2752, node0, node0, (-966), 40);
      Node node2 = new Node(57, 40, 47);
      node0.isDo();
      node1.setSourceEncodedPositionForTree(52);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      String string0 = "<Zy>'lZ8";
      Node node3 = Node.newString(62, "<Zy>'lZ8");
      node3.getProp(4792);
      node1.isInstanceOf();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "g");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newNumber(272.91);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.getIntProp(359);
      node0.setCharno(26);
      Node node1 = Node.newNumber((double) 26, 2869, 1179);
      node0.getDirectives();
      Node node2 = new Node((-1699), 52, 303);
      node0.toStringTree();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node2.addChildrenAfter(node1, (Node) null);
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("GLOBAL_THIS", 115, 115);
      node0.getProp(37);
      Node node1 = new Node(12, node0, node0, 40, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.putIntProp(29, 54);
      Node.newString(48, "GLOBAL_THIS");
      node1.getJsDocBuilderForNode();
      Node.newNumber(0.5);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      // Undeclared exception!
//      try { 
        node_FileLevelJsDocBuilder0.append("aj#)7'pJ0");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newNumber(272.91);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.getIntProp(359);
      node0.putBooleanProp(359, true);
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(42, node0, node0, node0, 54, (-536870912));
      node1.clonePropsFrom(node0);
      // Undeclared exception!
//      try { 
        node0.getChildBefore(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      Node node1 = new Node(30, node0, 36, 1);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.setSideEffectFlags(83);
      Node node2 = Node.newString(115, "", 30, 16);
      node1.isComma();
      node2.isVar();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Iterator<JSType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.putIntProp(1, 1);
      node0.isOnlyModifiesArgumentsCall();
      node0.isSyntheticBlock();
      node0.isThrow();
      node0.isNull();
      Node node1 = Node.newString(57, "Object#Key");
      node1.isInc();
      Node node2 = node0.srcrefTree(node1);
      Node.newString("Z*O");
      node2.isAssign();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newString("URIError");
      node0.wasEmptyNode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.children();
      Node node1 = new Node(42, node0, node0);
      Node node2 = node0.srcrefTree(node1);
      node2.isUnscopedQualifiedName();
      node2.detachChildren();
      node1.getChildCount();
      node1.getJsDocBuilderForNode();
      node1.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp((-1376));
      node0.isFromExterns();
      node0.setLength((-1376));
      node0.putBooleanProp((-1610), true);
      int int0 = 0;
      Node node1 = new Node(37, node0, node0, node0, 0, 92);
      Node node2 = node1.clonePropsFrom(node0);
      node2.getChangeTime();
      node0.addChildrenToBack(node1);
      node1.isExprResult();
      Node node3 = node1.detachFromParent();
      // Undeclared exception!
//      try { 
        node3.addChildrenToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((-437.9386835858766));
      Node node1 = new Node(120, node0, node0, node0, 52, 118);
      node1.checkTreeEqualsImpl(node0);
      node1.isParamList();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 90, 309);
      node0.getProp(2121);
      node0.addSuppression("Q]\"Kkj(=f");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = Node.newString(36, "first new child has existing parent", 63, 40);
      node0.setQuotedString();
      node1.setType(46);
      node1.setOptionalArg(true);
      node1.isSwitch();
      node1.getSourceOffset();
      node1.toString();
      node0.isGetElem();
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = Node.newString(30, "com.google.javascript.rhino.Node$FileLevelJsD+cBuilder");
      Node node3 = Node.newNumber((double) 51);
      node3.isReturn();
      node2.isNoSideEffectsCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isInc();
      node3.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setLength(1848);
      node0.mayMutateArguments();
      node0.isUnscopedQualifiedName();
//      try { 
        node0.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER -1.0 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(2);
      Node node1 = new Node(39);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isNoSideEffectsCall();
      Node node2 = new Node(31, node0, node0);
      node1.isTypeOf();
      node2.hasOneChild();
      Node node3 = Node.newString("7}O9?Y\u0006H~pKiE", 114, 3938);
      node3.isInc();
      Node node4 = new Node(40);
      Node.newString(21, "J,vFwJY3N7hv/");
      node4.srcrefTree(node2);
      Node node5 = Node.newString("9");
      node3.isBreak();
      node5.isLabelName();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(153, node0, node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]Tr}");
      int int0 = Node.OPT_ARG_NAME;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = Node.newString(118, "STRING 7}O9?Y\u0006H~pKiE\n", 12, 36);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
      node1.isString();
      Node node3 = node2.copyInformationFrom(node1);
      node1.isDo();
      node2.isVoid();
      node3.isSetterDef();
      node2.isLocalResultCall();
      node2.isAssign();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("7OP.`X[76 h", 64, 64);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "";
      Node node1 = Node.newString(103, "", (-1), 2365);
      Node node2 = new Node(32, node0, node1, node0, node1, 36, 2365);
      node2.checkTreeEquals(node0);
      node0.isEquivalentToTyped(node2);
      node0.isParamList();
      node0.isTry();
      // Undeclared exception!
//      try { 
        node1.getChildBefore(node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = new Node(154, 1248, 2792);
      Node node1 = Node.newNumber(0.0, 8, 132);
      Node node2 = Node.newString("LJVg!6`5Z\"#FWC<8Y)");
      node1.getDouble();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.newString(52, "NO_OBJECT_TYPE");
      node0.isGetterDef();
      node1.isNoSideEffectsCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isInc();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.getSideEffectFlags();
      Node node1 = node0.cloneTree();
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("com.google.common.base.Predicates$ContainsPatternPredicate");
      Node node1 = new Node((-3129), node0, node0, node0, node0);
      node1.putIntProp(9, 36);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node1.copyInformationFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(44, "V4s;SXR", 44, 3187);
      Node node1 = new Node(3187, node0);
      node1.setChangeTime(32);
      node0.getAncestors();
      node0.isIn();
      node0.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node1.hasOneChild();
      node2.checkTreeEqualsImpl(node1);
      node2.isLabel();
      node0.setString("V4s;SXR");
      node0.isVar();
      Node node3 = Node.newNumber(Double.POSITIVE_INFINITY);
      node0.isThis();
      node3.isWith();
      // Undeclared exception!
//      try { 
        node3.checkTreeEquals(node1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 3187
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = Node.newString("vI", (-2178), (-2178));
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = new Node((-1), node0, node1, node0, node0, 49, 47);
      node0.isEquivalentTo(node0);
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(103);
      node0.getAncestors();
      node0.isFunction();
      node0.isNE();
      Node node1 = node0.cloneNode();
      node1.isAssignAdd();
      node1.checkTreeEqualsImpl(node0);
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 90, 309);
      node0.getProp(2121);
      node0.addSuppression("Q]\"Kkj(=f");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = Node.newString(36, "first new child has existing parent", 63, 40);
      node0.setQuotedString();
      node1.setType(46);
      node1.setOptionalArg(true);
      node1.isSwitch();
      node1.getSourceOffset();
      node0.isGetElem();
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = Node.newString(30, "com.google.javascript.rhino.Node$FileLevelJsD+cBuilder");
      Node node3 = Node.newNumber((double) 51);
      node3.isReturn();
      node3.isIf();
      Node node4 = new Node(29, node0, node2, node1, node0, 8, 2);
      node0.isContinue();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      int int0 = Node.REFLECTED_OBJECT;
      Node node0 = Node.newString(93, "NOT_NULL");
      int int1 = 24;
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = Node.newNumber(3362.4259466);
      node0.getIntProp(1997);
      node0.toString(true, true, true);
      Node node1 = Node.newString(16, "NUMBER 3362.4259466", 56, 4095);
      node1.isWhile();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node(40, node0, node0, 1547, 33);
      node2.useSourceInfoIfMissingFrom(node1);
      Node.extractCharno(51);
      node1.children();
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newNumber((double) 368759);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(368759, node0);
      node1.getSourcePosition();
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((-960.20379), 65536, 4);
      node1.getChangeTime();
      node0.isDelProp();
      node0.isFor();
      node1.removeProp(4095);
      Node node2 = new Node(593, 4095, 51);
      Node node3 = new Node(38);
      Node node4 = new Node(3116, node2, node1, node3, node1);
      node4.checkTreeEqualsImpl(node2);
      Node node5 = node2.detachFromParent();
      Node node6 = node4.copyInformationFromForTree(node5);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      Node node7 = new Node((-1813), node5, 43, 12);
      node7.isSetterDef();
      Node node8 = new Node(4095, node6);
      node1.isIf();
      Node node9 = Node.newString((-1598), "v", 2024, 39);
      node9.isIn();
      node7.isGetProp();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node node1 = Node.newString("CharMatcher.SINGLE_WIDTH", (-2756), 1794);
      Node node2 = new Node(64, node0, node0, node0);
      node2.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.copyInformationFromForTree(node1);
      Node node3 = Node.newString("CharMatcher.SINGLE_WIDTH", 3002, 48);
      node0.isObjectLit();
      node3.isUnscopedQualifiedName();
      // Undeclared exception!
//      try { 
        node3.setSideEffectFlags(53);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Iterator<JSType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node(2752, node0, node0, (-966), 40);
      Node node2 = Node.newString(54, "Object#Element");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      node2.isComma();
      node0.removeChildren();
      node2.getLineno();
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      String string0 = "\\je}#s;'&!";
      Node node0 = Node.newString(1193, "je}#s;'&!");
      Node node1 = new Node(105, node0);
//      try { 
        node1.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // FUNCTION <invalid> is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      String string0 = "\\je}#s;'&!";
      Node node0 = Node.newString("je}#s;'&!", 33, 33);
      node0.siblings();
      Node node1 = new Node(49, node0, node0, node0, node0);
      node1.getJSDocInfo();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
//      try { 
        node1.removeChildAfter(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no next sibling.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node0 = Node.newString("70`NeLwS'q\"a(U0", 115, 115);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setThrows();
      Node node1 = new Node(51, 52, 31);
      node1.isThrow();
      node0.isNull();
      Node node2 = new Node(36, node0, node1, node1, 43, 31);
      node0.isBreak();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newNumber((-561.1300583732465));
      node0.isDec();
      Node node1 = Node.newString("", 42, 2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.setLineno(55);
      Node node2 = node1.useSourceInfoIfMissingFrom(node1);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.isIf();
      node1.isIn();
//      try { 
        node0.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER -561.1300583732465 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node node1 = Node.newString(4, "CharMatcher.SINGLE_WIDTH", 40, 56);
      Node node2 = new Node(64, node0, node0, node0);
      node2.getLength();
      Node node3 = new Node(41, 4, 89);
      node3.isOnlyModifiesArgumentsCall();
      node3.isSyntheticBlock();
      node1.isThrow();
      node0.isNull();
      node2.isInc();
      node2.srcrefTree(node3);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(139, node0, node0, node0, 16, 16);
      node1.mayMutateArguments();
      node1.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      node0.setChangeTime((-1813));
      node0.isVarArgs();
      Node.newString(93, "NOT_NULL");
      Node node2 = Node.newString(2, "je}#s;'&!");
      node1.isScript();
      node0.getChildCount();
      node1.addChildAfter(node2, node0);
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node.newString("CharMatcher.SINGLE_WIDTH", (-2756), 1794);
      Node node1 = new Node(64, node0, node0, node0);
      node1.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node0.setOptionalArg(false);
      String string0 = "com.google.javascript.rhino.Node";
      Node.newString(675, "CharMatcher.SINGLE_WIDTH");
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node1.isNot();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(83);
      node1.cloneTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType objectType0 = null;
      String string1 = "STRING 7}O9?Y\\6H~pKiE\n";
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createFunctionTypeWithVarArgs((ObjectType) null, (JSType) null, (List<JSType>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      Node node2 = Node.newString(0, "");
      node2.addChildrenToFront(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      node1.setOptionalArg(false);
      node2.getDirectives();
      node2.addChildrenToBack(node1);
      node2.isFunction();
      Node.newNumber((double) 49);
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((-960.20379), 65536, 4);
      node1.getChangeTime();
      Node node2 = Node.newString("d;[Zr_hq*W", (-2643), 47);
      Node node3 = new Node(51, node1, node1, node1);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.copyInformationFromForTree(node2);
      Node node4 = new Node(57, 48, 1);
      node2.isOptionalArg();
      node4.isLabelName();
      node2.isDebugger();
      node1.isExprResult();
      node4.hasMoreThanOneChild();
      Node.extractCharno(0);
      node2.children();
      node3.isAssign();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node0.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node1);
      node1.isLabel();
      node0.copyInformationFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node4 = new Node(64, node1, node1, node3, node2, (-2616), 310);
      node4.isDebugger();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node5 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node5.isSetterDef();
      node5.isEquivalentTo(node3, true, false, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node6 = jSTypeRegistry1.createParameters(jSTypeArray0);
      Node node7 = null;
//      try {
        node7 = new Node(40, node4, node6, node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 115);
      node0.getProp(2121);
      Node node1 = new Node(12, node0, node0, 40, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(29, 54);
      Node node3 = new Node(4);
      node2.getAncestors();
      node3.removeProp(1);
      Node node4 = Node.newString(48, "Node tree inequality:\nTree1:\n");
      Node node5 = node3.useSourceInfoIfMissingFrom(node0);
      node3.isThis();
      node5.isGetterDef();
      node5.isNoSideEffectsCall();
      node5.isNE();
      node3.useSourceInfoIfMissingFromForTree(node4);
      node2.isString();
      node4.isDo();
      node4.detachChildren();
      node3.isNumber();
      node5.getLength();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "NOT_NULL";
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(139, node0, node0, node0, 16, 16);
      node1.mayMutateArguments();
      node1.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      Node node2 = null;
      // Undeclared exception!
//      try { 
        node1.isEquivalentTo((Node) null, true, true, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newNumber((-574.202));
      node0.isBreak();
      node0.setType(0);
      Node node1 = Node.newString(2, "com.google.javascript.rhino.Node$StringNode", 15, 4095);
      node0.setLineno(1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getSourceFileName();
      Node node2 = new Node(56, 4095, 105);
      node1.isOnlyModifiesArgumentsCall();
      Node node3 = node2.copyInformationFromForTree(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = Node.newString(115, "STRING 7}O9?Y\u0006H~pKiE\n", 48, 46);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node4);
      node0.isString();
      node4.isDo();
      node3.isVoid();
      node4.isCase();
      node3.isWhile();
      node1.removeProp(4095);
      node3.getLastSibling();
      node4.getIntProp(152);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((-960.20379), 65536, 4);
      node1.getChangeTime();
      node0.isDelProp();
      node0.isFor();
      node1.removeProp(4095);
      Node node2 = new Node(593, 4095, 1002);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node.mergeLineCharNo(40, 30);
      node3.getSourceOffset();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node3;
      node3.useSourceInfoIfMissingFromForTree(node3);
      nodeArray0[1] = node2;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      nodeArray0[4] = node2;
      Node node4 = null;
//      try {
        node4 = new Node(4095, nodeArray0, 31, 31);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newNumber((double) 124);
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node node1 = new Node(38, node0, node0, node0, node0);
      node1.toString(false, false, false);
      node0.isGetterDef();
      node1.isNoSideEffectsCall();
      int int0 = Node.ORIGINALNAME_PROP;
      node1.hasChild(node0);
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = Node.newString("Ep");
      Node node1 = Node.newString("g", 0, (-957));
      node0.isThrow();
      node0.setSourceFileForTesting("Ep");
      node0.isStringKey();
      Node node2 = Node.newNumber(1304.23046732);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node3 = new Node(48, 2, 108);
      node2.isThrow();
      node3.isNull();
      Node node4 = new Node(91, node1, node3, node3, 51, 102);
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      node0.setLineno((-89));
      Node node1 = Node.newNumber((double) 48, (-89), 0);
      node0.clonePropsFrom(node1);
      node0.isQualifiedName();
      Node node2 = new Node((-983), node1, node1);
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      Node node4 = Node.newNumber((double) 16);
      Node node5 = Node.newString(36, "Ep");
      node1.getProp(55);
      Node node6 = new Node(48);
      Node node7 = Node.newNumber((double) 48);
      node2.isTypeOf();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      node1.setType(110);
      Node.newNumber((-44.83), 55, 1220);
      Node node8 = new Node(55, node5);
      Node node9 = new Node(3156);
      Node node10 = new Node(31, node7, node0, node6, node9, 1, 0);
      Node node11 = new Node((-1167), node10, 1, 57);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node11);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node4.siblings();
      node2.srcref(node10);
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Iterator<JSType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node(108, node0, node0, 4, 9);
      node0.isWhile();
      node1.isVoid();
      node0.isSetterDef();
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-2570.6704004), 52, 0);
      Node node2 = Node.newString("Ot%X~yLrz7qZ46bHO\"q");
      node2.wasEmptyNode();
      node1.isThrow();
      node2.getProp(4095);
      node0.setSourceFileForTesting("STRING 7}O9?Y\u0006H~pKiE\n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "STRING 7}O9?Y\u0006H~pKiE\n");
      node2.isArrayLit();
      node2.mayMutateArguments();
      node0.getSourceOffset();
      node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString((-1264), "^O=IFy*vpS");
      Node node4 = new Node(16, node3, node3, node2);
      node0.copyInformationFromForTree(node4);
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(139, node0, node0, node0, 16, 16);
      node1.mayMutateArguments();
      node1.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      node0.setChangeTime((-1813));
      node0.isVarArgs();
      Node node2 = Node.newString(93, "NOT_NULL");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      node0.isComma();
      node2.removeChildren();
      node1.getLineno();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = new Node(108);
      node0.getAncestors();
      node0.getBooleanProp(108);
      node0.isNull();
      Node node1 = node0.cloneNode();
      node1.isAssignAdd();
      node1.checkTreeEqualsImpl(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node node2 = new Node(54, node1, node0, node1, node1);
      node0.isGetElem();
      node2.isEquivalentTo(node1, false, false, false);
      node1.isUnscopedQualifiedName();
      node0.isIf();
      node1.isIn();
      node0.isNew();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(51, 43, 800);
      node0.setChangeTime(4095);
      node0.isCall();
      node0.siblings();
      node0.isVoid();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Iterator<JSType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node(2752, node0, node0, (-966), 40);
      node1.isWhile();
      node1.isVoid();
      node0.isDefaultCase();
      node0.isSetterDef();
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 90, 309);
      node0.getProp(2121);
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.AllType", 122, 8);
      Node node2 = new Node(49, node0, node0, node0, node0, 30, (-283));
      Node node3 = new Node(1840, node1, node2, node1);
      node2.getLength();
      Node node4 = new Node(39, (-1685), (-1938));
      node1.isOnlyModifiesArgumentsCall();
      node3.isCatch();
      node4.isThrow();
      node2.isNull();
      node2.isCase();
      node1.srcrefTree(node0);
      Node node5 = new Node(1570, 33, (-271));
      node5.getNext();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(108);
      node0.getAncestors();
      node0.getBooleanProp(108);
      node0.isNull();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte) (-41);
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte)31;
      byteArray0[4] = (byte)94;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = node0.cloneNode();
      node1.isAssignAdd();
      node1.checkTreeEqualsImpl(node0);
      node0.isLabel();
      node0.getSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2392);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.isNoSideEffectsCall();
      node2.getIntProp(126);
      node1.isTypeOf();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = new Node(1490);
      Node node1 = new Node(1490, 152, 1114);
      node1.setLineno(12);
      node0.putIntProp((-1223), (-89));
      Node node2 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node.newString("m.QM9FCb}j5@qKdnN", 152, 42);
      node0.wasEmptyNode();
      node0.isThrow();
      node2.setSourceFileForTesting("com.google.common.collect.LinkedHashMultimap$ValueEntry");
      node0.isStringKey();
      Node.newNumber((double) 16);
      Node.newString(52, "<Zy>'lZ8");
      node0.isScript();
      Node.newString((-1020), "93Nc[DZw");
      Node node3 = new Node(2364, node0, node1, 37, 37);
      // Undeclared exception!
//      try { 
        node3.getExistingIntProp(31);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 31
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((-960.20379), 65536, 1418);
      node1.getChangeTime();
      node0.isDelProp();
      node0.isFor();
      node1.removeProp((-81));
      Node node2 = new Node(593, 4095, 1002);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[2];
      JSTypeNative jSTypeNative0 = JSTypeNative.SYNTAX_ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative0;
      jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      node3.isCast();
      node0.isReturn();
      node0.toString(true, true, true);
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node0 = Node.newString("70`NeLwS'q\"a(U0", 115, 115);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      Node node1 = Node.newNumber((double) 57, 4951, 12);
      Node node2 = new Node(55, node1);
      Node node3 = Node.newNumber((double) 2, 1628, 54);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node3);
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeTypeAwareEqualsImpl(node1);
      Object object0 = new Object();
      node_NodeMismatch1.equals(object0);
      Node node4 = new Node(52, node2, node2, node2, node0);
      // Undeclared exception!
//      try { 
        node0.replaceChild(node4, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newString(2196, "7}O9?Y\u0006H~pKiE");
      node0.setLineno(379);
      Node node1 = new Node(2305, (-254), 39);
      Node node2 = new Node(15, node0, node0, node0, 118, 47);
      node2.useSourceInfoIfMissingFrom(node0);
      node2.isAdd();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(139, node0, node0, node0, 16, 16);
      node1.mayMutateArguments();
      node1.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      node0.isVarArgs();
      node1.isContinue();
      node0.isSetterDef();
      Node node2 = new Node(1872);
      Node.newString((-2354), "NOT_NULL");
      node0.isSetterDef();
      Node node3 = Node.newString(2251, "");
      node3.getString();
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node0);
      node0.getJSType();
      node4.isVar();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newNumber((double) 124);
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node node1 = new Node(38, node0, node0, node0, node0);
      node1.isGetElem();
      node0.isEquivalentTo(node1, false, false, false);
      // Undeclared exception!
//      try { 
        node1.isUnscopedQualifiedName();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NAME is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newString(85, "STRING 7}O9?Y\u0006H~pKiE\n", 358, 122);
      node0.isInstanceOf();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
//      try { 
        node0.removeChildAfter((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      node0.getChangeTime();
      node0.isDelProp();
      node0.isFor();
      node0.getBooleanProp(39);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToShallow(node0);
      Node node2 = Node.newString(15, "com.google.javascript.rhino.Node$SiblingNodeIterable");
      node0.getIndexOfChild(node2);
      node2.getNext();
      node2.isOr();
      node0.getStaticSourceFile();
      Node node3 = new Node(15, node1);
      node3.isArrayLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      // Undeclared exception!
//      try { 
        node2.setSideEffectFlags(node_SideEffectFlags0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got LE
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-1955));
      node0.setLineno((-1955));
      node0.putIntProp(4560, 4560);
      Node node1 = Node.newString("Hk; u/S+]]uodD(.");
      Node node2 = Node.newString("com.google.common.collect.LinkedHashMultimap$ValueEntry", 30, 30);
      node2.wasEmptyNode();
      node1.isThrow();
      node1.setSourceFileForTesting("STRING 7}O9?Y\u0006H~pKiE\n");
      node0.isStringKey();
      Node.newNumber((double) 4095);
      Node node3 = Node.newString(54, "STRING 7}O9?Y\u0006H~pKiE\n");
      node3.isScript();
      node1.getStaticSourceFile();
      Node.newNumber(120.0);
      node2.isFromExterns();
      node3.getInputId();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = new Node(154, (-2567), 2792);
      Node node1 = Node.newNumber(0.0, 8, 132);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      Node node2 = new Node(77, node1, node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "length");
      node1.isTypeOf();
      node0.hasOneChild();
      node2.isCase();
      Node node3 = Node.newString("]Tr}", 42, 38);
      node0.isObjectLit();
      node2.detachChildren();
      node0.cloneNode();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node3);
      InputId inputId0 = new InputId("7}O9?Y\u0006H~pKiE");
      node_NodeMismatch0.equals(inputId0);
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-1955));
      node0.setLineno((-1955));
      node0.putIntProp(4560, 4560);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = Node.newString("Hk; u/S+]]uodD(.");
      Node node2 = Node.newString("com.google.common.collect.LinkedHashMultimap$ValueEntry", 30, 30);
      node2.wasEmptyNode();
      node1.isThrow();
      node1.setSourceFileForTesting("STRING 7}O9?Y\u0006H~pKiE\n");
      node0.isStringKey();
      Node node3 = Node.newString(37, "STRING 7}O9?Y\u0006H~pKiE\n", 57, 36);
      node0.isGetElem();
      node2.getString();
      node1.useSourceInfoIfMissingFromForTree(node3);
      node2.isFunction();
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      ListIterator<JSType> listIterator0 = linkedList0.listIterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) listIterator0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 90, 309);
      int int0 = 2121;
      node0.getProp(2121);
      int int1 = 4629;
      // Undeclared exception!
//      try { 
        node0.useSourceInfoFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      int int0 = (-1670);
      Node node1 = new Node(40, node0, (-1670), 51);
      node0.getJSDocInfo();
      // Undeclared exception!
//      try { 
        node1.addChildrenAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      int int0 = (-252);
      Node node2 = Node.newString((-252), "7}O9?Y\u0006H~pKiE");
      Node node3 = new Node(75, node0, node2);
      node1.clonePropsFrom(node3);
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-870));
      Node node4 = null;
//      try {
        node4 = new Node(967, node1, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = new Node(1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      Node node2 = new Node(1576, node1, 47, 40);
      node2.removeFirstChild();
      Node node3 = new Node((-749), node0, node1, 39, 36);
      // Undeclared exception!
//      try { 
        node3.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -749
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(153, node0, node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]Tr}");
      int int0 = Node.OPT_ARG_NAME;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = Node.newString(118, "STRING 7}O9?Y\u0006H~pKiE\n", 12, 36);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
      node1.isString();
      node1.isDo();
      node2.isVoid();
      node0.isCase();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node node1 = Node.newString(42, "WOH[xs:Jg", 16, 536);
      node1.setLineno((-1));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getSourceFileName();
      Node node2 = new Node(40, 36, 113);
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = node2.copyInformationFromForTree(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.newString(36, "com.google.javascript.rhino.Node$StringNode", 152, 1);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node1);
      Node node4 = new Node(48, node3, 37, 48);
      Node node5 = null;
//      try {
        node5 = new Node(51, node3, node0, node4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = new Node(1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, 4095);
      Node node2 = Node.newString(0, "");
      node2.addChildrenToFront(node0);
      Node node3 = Node.newString(1458, "t`B/s7?Qs/n");
      node2.isReturn();
      node2.hasChildren();
      node3.isCase();
      node3.hasChildren();
      node3.getNext();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node0.isLocalResultCall();
      node1.putBooleanProp(1272, false);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.addChildToFront(node1);
      Node.newString(37, "", (-576), 37);
      node2.isExprResult();
      Node node3 = node2.detachFromParent();
      node3.setOptionalArg(false);
      node3.addChildrenToBack(node1);
      node3.isFunction();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-1955));
      node0.setLineno((-1955));
      node0.putIntProp(4560, 4560);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node1 = new Node((-643), 57, 37);
      node0.isThrow();
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.isOptionalArg();
      Node node3 = new Node(16, node1, node1, node2);
      node3.isLabelName();
      node0.isDebugger();
      node2.isWith();
      Node.newString("VKFREHR3 tu4K", 16, (-655));
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      Node node0 = Node.newString(63, "Object#Key", (-1368), (-1368));
      node0.setQuotedString();
      node0.setType(1);
      node0.setOptionalArg(true);
      node0.isSwitch();
      node0.getSourceOffset();
      int int0 = Node.INPUT_ID;
      node0.setChangeTime(63);
      node0.isSetterDef();
      Node node1 = new Node((-1));
      Node node2 = Node.newString(52, "(M\"W+{$");
      node2.getString();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node[] nodeArray0 = new Node[5];
      Node node4 = new Node((-2704), node0, 56, 110);
      nodeArray0[0] = node4;
      nodeArray0[1] = node3;
      nodeArray0[2] = node3;
      nodeArray0[3] = node0;
      Node node5 = Node.newString(15, "(M\"W+{$", 1841, 47);
      nodeArray0[4] = node5;
      Node node6 = null;
//      try {
        node6 = new Node(85, nodeArray0, 2, 54);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(73);
      Node node1 = new Node(39);
      Node.newString(15, "7}O9?Y\u0006H~pKiE", 11, 16);
      Node node2 = new Node(51);
      node2.setLineno(36);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getSourceFileName();
      Node node3 = new Node((-279), 29, (-1473));
      node1.isOnlyModifiesArgumentsCall();
      node2.copyInformationFromForTree(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.newString((-1083), "0c~>2l8FrEg2``=v", (-1365), (-953));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      // Undeclared exception!
//      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // at index 0
//         //
//         verifyException("com.google.common.collect.ObjectArrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newNumber((-574.202));
      node0.isBreak();
      node0.setType(0);
      node0.getAncestors();
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(1066, nodeArray0, 42, (-1914));
      Node node2 = new Node(55, node1, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isCase();
      node0.getQualifiedName();
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node node1 = Node.newString("CharMatcher.SINGLE_WIDTH", (-2756), 1794);
      Node node2 = new Node(64, node0, node0, node0);
      node2.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node3 = node0.copyInformationFromForTree(node1);
      Node node4 = new Node(16777216, 40, 147);
      node3.isOptionalArg();
      node2.isLabelName();
      node1.isDebugger();
      node4.isExprResult();
      node4.hasMoreThanOneChild();
      Node.extractCharno(38);
      node1.children();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(139, node0, node0, node0, 16, 16);
      node1.mayMutateArguments();
      node1.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      node0.setChangeTime((-1813));
      node0.isVarArgs();
      Node node2 = Node.newString(93, "NOT_NULL");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("NOT_NULL");
      node0.isAnd();
      node1.isUnscopedQualifiedName();
      node2.isIf();
      node1.isWith();
      node2.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node.newString("CharMatcher.SINGLE_WIDTH", 50, 50);
      Node node1 = new Node(64, node0, node0, node0);
      node1.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, false, false, false);
      node1.isUnscopedQualifiedName();
      node1.isIf();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-2570.6704004), 52, 0);
      Node node2 = Node.newString("Ot%X~yLrz7qZ46bHO\"q");
      node2.wasEmptyNode();
      node1.isThrow();
      node0.setSourceFileForTesting("STRING 7}O9?Y\u0006H~pKiE\n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "STRING 7}O9?Y\u0006H~pKiE\n");
      node2.isArrayLit();
      node2.mayMutateArguments();
      node0.getSourceOffset();
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-2570.6704004), 52, 0);
      node1.putBooleanProp(13, false);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newString(103, "", 118, 47);
      node0.isComma();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("XQtCw%q$i");
      node_FileLevelJsDocBuilder0.append("");
      node3.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isIf();
      Node node4 = new Node(1802, node2, node2, node1, node0, (-217), 30);
      node2.isString();
      node4.isAdd();
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = new Node(83, 19, 83);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node((-1181), nodeArray0);
      node1.isEquivalentTo(node0, true, true, true);
      Node node2 = node0.srcref(node1);
      node2.setSourceEncodedPositionForTree(36);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      JSType[] jSTypeArray0 = new JSType[5];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) templateType0;
      jSTypeArray0[3] = (JSType) templateType0;
      jSTypeArray0[4] = (JSType) templateType0;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createFunctionType((JSType) templateType0, true, jSTypeArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.extractCharno((-889));
      node1.putBooleanProp(3207, false);
      node0.isGetElem();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.putBooleanProp(2, false);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.addChildToFront(node2);
      Node node3 = Node.newString(8, "", 37, 15);
      node3.isExprResult();
      node0.detachFromParent();
      node1.setOptionalArg(false);
      node1.getDirectives();
      node1.addChildrenToBack(node2);
      node3.isFunction();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.getChangeTime();
      node0.isDelProp();
      node0.isFor();
      node1.getBooleanProp(39);
      node0.isLocalResultCall();
      Node node2 = node1.cloneNode();
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(37, 12, 38);
      Node node4 = new Node(4368, node3, node2, node0, 2390, 0);
      node2.useSourceInfoIfMissingFrom(node4);
      node0.isAdd();
      node3.isIf();
      node3.isIn();
      node0.isCall();
      node3.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(108);
      node0.getAncestors();
      node0.getBooleanProp(108);
      node0.isNull();
      Node node1 = node0.cloneNode();
      node1.isAssignAdd();
      Node node2 = Node.newNumber((double) 36);
      node2.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node node3 = new Node(52, node1, node1, node1, node2);
      node3.isGetElem();
      Node node4 = Node.newString(15, "6w>=}U^W&RAW");
      node4.getString();
      Node node5 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isFunction();
      node5.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 108;
      Node node0 = new Node(108);
      node0.getAncestors();
      node0.getBooleanProp(108);
      node0.isNull();
      Node node1 = node0.cloneNode();
      node1.isAssignAdd();
      node1.checkTreeEqualsImpl(node0);
      node0.isLabel();
      node0.getSideEffectFlags();
      String string0 = null;
//      try { 
        node0.setString((String) null);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // IF is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      node0.getAncestors();
      node0.isIn();
      Node node1 = new Node((-1545), 1, 57);
      Node node2 = Node.newString(55, "CharMatcher.ANY");
      Node node3 = new Node(96, node0, node2, node0);
      node0.addChildrenToFront(node3);
      node3.getSideEffectFlags();
      Node node4 = node1.cloneTree();
      // Undeclared exception!
//      try { 
        node4.addChildAfter(node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node node1 = Node.newString("CharMatcher.SINGLE_WIDTH", (-2756), 1794);
      Node node2 = new Node(64, node0, node0, node0);
      node2.getLength();
      Set<String> set0 = new LinkedHashSet<String>();
      Node node3 = new Node(41, (-2343), 89);
      node3.isOnlyModifiesArgumentsCall();
      node2.isAdd();
      node3.isSyntheticBlock();
      node1.isThrow();
      node3.isNull();
      node2.isInc();
      node2.srcrefTree(node3);
      node3.getNext();
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      node0.setLineno((-89));
      Node node1 = Node.newNumber((double) 48, (-89), 0);
      node0.clonePropsFrom(node1);
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2931));
      Node node2 = new Node((-983), node1, node1);
      node1.siblings();
      Node node3 = new Node(10, 1, 51);
      node3.isNew();
      node3.isGetterDef();
      node1.isNoSideEffectsCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node.newString("CharMatcher.SINGLE_WIDTH", (-2756), 1794);
      Node node1 = new Node(64, node0, node0, node0);
      node1.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.valueOf();
      Node node2 = Node.newNumber((double) 32);
      node2.isQualifiedName();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      node0.getAncestors();
      node0.isIn();
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node1.hasOneChild();
      node0.checkTreeEqualsImpl(node0);
      node0.isLabel();
      int int0 = Node.POST_FLAG;
      node0.setString("X(<]LXe)},omUK");
      node0.isVar();
      node1.isAssign();
      Node node2 = Node.newNumber((double) 55);
      node1.isThis();
      node0.isWith();
      node2.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node node1 = Node.newString("CharMatcher.SINGLE_WIDTH", (-2756), 1794);
      Node node2 = new Node(64, node0, node0, node0);
      node2.getLength();
      node0.getDirectives();
      Node node3 = new Node(41, (-2343), 89);
      node3.isOnlyModifiesArgumentsCall();
      node2.isAdd();
      node3.isSyntheticBlock();
      node1.isThrow();
      node0.isNull();
      node2.isInc();
      node2.srcrefTree(node3);
      node3.getNext();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-1955));
      node0.setLineno((-1955));
      node0.putIntProp(4560, 4560);
      Node node1 = Node.newString("Hk; u/S+]]uodD(.");
      Node node2 = Node.newString("Hk; u/S+]]uodD(.", 30, 30);
      node2.wasEmptyNode();
      node1.isThrow();
      node1.setSourceFileForTesting("Hk; u/S+]]uodD(.");
      node2.isArrayLit();
      node1.mayMutateArguments();
      node2.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      node0.setChangeTime(2560);
      node0.isVarArgs();
      node0.isContinue();
      Node node3 = new Node(31);
      node3.isSetterDef();
      Node node4 = new Node(4095);
      Node node5 = Node.newString(8, "7}O9?Y\u0006H~pKiE");
      node5.getString();
      node3.useSourceInfoIfMissingFromForTree(node2);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node0.getCharno();
      node1.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.extractCharno(48);
      node0.putBooleanProp(117, false);
      node0.hasMoreThanOneChild();
      node0.isGetElem();
      node1.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      // Undeclared exception!
//      try { 
        node0.addChildBefore(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = Node.newNumber((-574.202));
      node0.isBreak();
      Node node1 = Node.newString(2, "com.google.javascript.rhino.Node$StringNode", 15, 4095);
      node0.setLineno(1);
      Node node2 = Node.newNumber((double) 1, 55, 310);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getSourceFileName();
      Node node3 = new Node(56, 4095, 105);
      node2.isOnlyModifiesArgumentsCall();
      node3.copyInformationFromForTree(node0);
      Node node4 = new Node(49, (-616), (-161));
      node4.isOptionalArg();
      node3.isLabelName();
      node4.isDebugger();
      node1.isExprResult();
      node3.hasMoreThanOneChild();
      node2.setSourceEncodedPositionForTree((-5388));
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-1955));
      node0.setLineno((-1955));
      node0.putIntProp(4560, 4560);
      Node node1 = Node.newString("Hk; u/S+]]uodD(.");
      Node node2 = Node.newString("com.google.common.collect.LinkedHashMultimap$ValueEntry", 30, 30);
      node2.wasEmptyNode();
      node1.isThrow();
      node1.setSourceFileForTesting("STRING 7}O9?Y\u0006H~pKiE\n");
      node0.isStringKey();
      Node.newNumber((double) 4095);
      Node node3 = Node.newString(54, "STRING 7}O9?Y\u0006H~pKiE\n");
      node3.isScript();
      Node.newString(2, "[M;\"^P>B");
      // Undeclared exception!
//      try { 
        node2.getExistingIntProp(1550);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: 1550
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(276);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags8.setThrows();
      Node node1 = new Node(4, 37, 4);
      Node node2 = new Node(33, node0, 2869, (-914));
      node2.isThrow();
      Node node3 = node1.copyInformationFromForTree(node0);
      Node node4 = Node.newString("7}O9?Y\u0006H~pKiE", 1632, (-61));
      node4.isOptionalArg();
      node3.isLabelName();
      node4.isDebugger();
      node4.isExprResult();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      int int0 = 2792;
      Node node0 = new Node(154, (-2567), 2792);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.toString(false, true, true);
      node0.isGetterDef();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(2792, node0, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(56, node0, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 90, 309);
      Node node1 = Node.newNumber(3338.537734722832, 10, 1);
      node0.putBooleanProp(837, false);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = Node.newString(11, "GLOBAL_THIS", 53, 57);
      node2.isComma();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(",$Sq`5{>`z[}C=d}:x");
      node2.isEquivalentTo(node1, false, false, true);
      node2.isUnscopedQualifiedName();
      node3.isIf();
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = Node.newNumber((-574.202));
      node0.isBreak();
      Node node1 = Node.newString(2, "com.google.javascript.rhino.Node$StringNode", 15, 4095);
      node0.setLineno(1);
      Node node2 = Node.newNumber((double) 1, 55, 310);
      node0.getSourceFileName();
      Node node3 = new Node(56, 4095, 105);
      node2.isOnlyModifiesArgumentsCall();
      node3.copyInformationFromForTree(node0);
      Node node4 = new Node(49, (-616), (-161));
      node4.isOptionalArg();
      node3.isLabelName();
      node4.isDebugger();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = null;
//      try {
        node0 = new Node((-1244), (Node) null, (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newNumber((double) 120);
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node1.isEquivalentToShallow(node0);
      node1.checkTreeEqualsImpl(node0);
      node1.isNot();
      node1.getSideEffectFlags();
//      try { 
        node0.setString("");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 120.0 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      node0.getProp(2121);
      Node node1 = new Node(12, node0, node0, 40, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(29, 54);
      Node node3 = new Node(4);
      node2.getAncestors();
      node3.removeProp(1);
      Node.newString(48, "Node tree inequality:\nTree1:\n");
      Node node4 = node3.useSourceInfoIfMissingFrom(node0);
      node3.isThis();
      node4.isGetterDef();
      node4.isNoSideEffectsCall();
      node4.isNE();
      node4.isDo();
      node0.detachChildren();
      node3.isNumber();
      node4.isIf();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-1955));
      node0.setLineno((-1955));
      node0.putIntProp(4560, 4560);
      Node node1 = Node.newString("Hk; u/S+]]uodD(.");
      Node node2 = Node.newString("com.google.common.collect.LinkedHashMultimap$ValueEntry", 30, 30);
      node2.wasEmptyNode();
      node1.isThrow();
      node1.setSourceFileForTesting("STRING 7}O9?Y\u0006H~pKiE\n");
      node2.isArrayLit();
      node1.mayMutateArguments();
      node2.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      node0.setChangeTime(4095);
      node0.isVarArgs();
      node0.isContinue();
      node0.isSetterDef();
      Node node3 = new Node(53);
      Node node4 = Node.newString(52, "");
      node4.getString();
      node4.useSourceInfoIfMissingFromForTree(node0);
      node3.isRegExp();
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.toString(true, false, true);
      node0.isQuotedString();
      node0.isOnlyModifiesArgumentsCall();
      Node.newString(0, "qJG%$#GrCE");
      Node node1 = new Node((-1535), (-2571), 2868);
      node1.isIf();
      node1.isIn();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      node0.setLineno((-89));
      Node node1 = Node.newNumber((double) 48, (-89), 0);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2931));
      Node node3 = new Node((-983), node1, node1);
      Node node4 = node3.useSourceInfoIfMissingFrom(node1);
      Node node5 = Node.newNumber((double) 16);
      node5.toString(false, false, false);
      node2.isGetterDef();
      node3.isNoSideEffectsCall();
      node1.getIntProp(42);
      node3.hasChild(node0);
      node5.isHook();
      node4.isNull();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags7.setReturnsTainted();
      node_SideEffectFlags6.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags3.setThrows();
      Node node1 = new Node(41, 1, 42);
      node1.isThrow();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isOptionalArg();
      node0.isLabelName();
      node1.isDebugger();
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node0 = Node.newString("70`NeLwS'q\"a(U0", 115, 115);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setThrows();
      Node node1 = new Node(51, 52, 31);
      node1.isThrow();
      node0.isNull();
      Node node2 = new Node(36, node0, node1, node1, 43, 31);
      node2.getStaticSourceFile();
      Node node3 = Node.newNumber((double) 32);
      node3.isFromExterns();
      node1.isSyntheticBlock();
      jSDocInfo0.getAssociatedNode();
      Node node4 = null;
//      try {
        node4 = new Node(24, (Node) null, 12, 33);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.extractCharno((-889));
      node1.putBooleanProp(3207, false);
      node1.hasMoreThanOneChild();
      node0.isGetElem();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node2.addChildBefore(node3, node0);
      // Undeclared exception!
//      try { 
        node2.replaceChildAfter(node3, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.toStringTree();
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node2.getChildAtIndex((-579));
      node1.getQualifiedName();
      node0.isVar();
      node2.isInstanceOf();
      node1.getBooleanProp(57);
      // Undeclared exception!
//      try { 
        node2.copyInformationFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      int int0 = (-3372);
      Node node0 = new Node((-3372), (-3372), (-3372));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString(1963, "");
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags((-207));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1963
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node0 = Node.newString("70`NeLwS'q\"a(U0", 115, 115);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setThrows();
      Node node1 = new Node(51, 52, 31);
      node1.isThrow();
      node0.isNull();
      Node node2 = new Node(36, node0, node1, node1, 43, 31);
      node2.getStaticSourceFile();
      Node node3 = Node.newNumber((double) 32);
      node3.isFromExterns();
      node3.getInputId();
      node2.isEquivalentTo(node0, false, true, true);
      Node.newNumber((double) 49, 63, 128);
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = new Node(402);
      node0.isHook();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp((-531));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: -531
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newString(64, "CharMatcher.SINGLE_WIDTH", 64, 42);
      Node node1 = Node.newString("CharMatcher.SINGLE_WIDTH", (-2756), 1794);
      Node node2 = new Node(64, node0, node0, node0);
      node2.getLength();
      node0.getDirectives();
      node2.removeChild(node0);
      node1.checkTreeEqualsImpl(node0);
      node0.isComma();
      node1.removeChildren();
      node1.getLineno();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.toStringTree();
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node0.setString("STRING 7}O9?Y\u0006H~pKiE\n");
      node0.removeProp(63);
      Node.mergeLineCharNo(114, 12);
      node1.getSourceOffset();
      node0.isGetElem();
      node0.putBooleanProp((-224), true);
      node1.copyInformationFromForTree(node0);
      node1.isLabelName();
      node1.isDebugger();
      node0.isSwitch();
      // Undeclared exception!
//      try { 
        node0.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // unexpected prop id -224
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.toStringTree();
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      Node node3 = Node.newString("vN-U", (-1223), 130);
      node2.addChildrenToBack(node3);
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getSideEffectFlags();
      node0.setString("STRING 7}O9?Y\u0006H~pKiE\n");
      node2.removeProp(63);
      Node.mergeLineCharNo(114, 12);
      // Undeclared exception!
//      try { 
        node2.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = new Node(1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      Node node2 = Node.newString(0, "");
      node2.addChildrenToFront(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node3.setOptionalArg(false);
      node2.getDirectives();
      node3.addChildrenToBack(node1);
      node3.isNull();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = new Node(154, (-2567), 2792);
      Node node1 = Node.newNumber(0.0, 8, 132);
      node0.isBreak();
      node0.getChangeTime();
      node0.isEmpty();
      node1.isLabel();
      Node node2 = Node.newNumber((double) 132);
//      try { 
        node2.setString(";mK`ANCS&G`s^VI");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 132.0 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(30, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("NOT_NULL");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      arrayList0.add(templateType0);
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      Node node0 = Node.newNumber((double) 0, 83, 83);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Unknown class name", node0, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.getRootNode();
      // Undeclared exception!
//      try { 
        node0.checkTreeEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = new Node(4560);
      node0.setLineno(12);
      node0.putIntProp(0, 0);
      Node.newString("qe280hgDRqp1i3w");
      node0.wasEmptyNode();
      node0.isThrow();
      node0.setSourceFileForTesting(")Ku");
      node0.isArrayLit();
      node0.mayMutateArguments();
      node0.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      node0.setChangeTime(50);
      node0.isVarArgs();
      node0.isContinue();
      node0.isSetterDef();
      Node node1 = new Node(50);
      Node node2 = Node.newString(113, "");
      node2.getString();
      node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
//      try { 
        node2.copyInformationFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(32, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      Node.extractCharno((-889));
      node1.putBooleanProp(3207, false);
      node1.hasMoreThanOneChild();
      node0.isGetElem();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isBreak();
      node1.detachChildren();
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = new Node(154, (-2556), 2792);
      Node node1 = Node.newNumber(0.0, 8, 132);
      node0.isEquivalentToTyped(node1);
      node0.getChangeTime();
      node0.isEmpty();
      node0.isComma();
      Node node2 = Node.newNumber((double) 132);
//      try { 
        node2.setString(";md`|NCS&G`s^NI");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 132.0 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newNumber((double) 124);
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setThrows();
      node0.getSideEffectFlags();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(47, node1, node1, node0, node1);
      // Undeclared exception!
//      try { 
        node1.addChildAfter(node0, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node has siblings.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.toStringTree();
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node0.setString("STRING 7}O9?Y\u0006H~pKiE\n");
      node2.removeProp(63);
      Node.mergeLineCharNo(114, 12);
      // Undeclared exception!
//      try { 
        node2.removeChild((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      Node node1 = new Node(1, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.children();
      node1.isOnlyModifiesArgumentsCall();
      boolean boolean0 = false;
      // Undeclared exception!
//      try { 
        node1.toString(false, true, true);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      node0.setLineno((-89));
      Node node1 = new Node(0, 1153, 51);
      Node node2 = Node.newNumber((double) 0);
      node2.isReturn();
      node2.getProp(39);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node1.getChangeTime();
      Node node3 = Node.newString(0, "Ep", 126, 47);
      node3.isTrue();
      node1.cloneTree();
      node1.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      node0.getAncestors();
      node0.isIn();
      node0.isLocalResultCall();
      Node node1 = node0.cloneNode();
      node1.hasOneChild();
      node0.checkTreeEqualsImpl(node0);
      node0.isLabel();
      node0.getSideEffectFlags();
      node0.setString("X(<]LXe)},omUK");
      node0.isVar();
      node1.isInstanceOf();
      Node node2 = Node.newNumber((double) 55);
      node1.isThis();
      node0.isWith();
      node2.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.valueOf();
      Node node0 = new Node(0);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = Node.newNumber((double) 2, (-304), 98);
      node1.putBooleanProp(8, false);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node.newString(40, "", 6, 1);
      node2.isComma();
      Node node3 = new Node(15, node1, node1, node0, node0, 8, 1555);
      Node node4 = Node.newNumber((double) 49);
      node1.isReturn();
      Node.newString("", 53, 1);
      Node.newString(4, "NUMBER 0.0");
      // Undeclared exception!
//      try { 
        node3.removeChild(node4);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFromExterns();
      node0.setSourceFileForTesting("second new child has existing parent");
      node0.children();
      Node node1 = Node.newNumber((-3335.584588364601), 1262, 30);
      node0.isEquivalentToTyped(node1);
      node0.getChangeTime();
      node0.isEmpty();
      node0.isComma();
      node0.setString("");
      Node.mergeLineCharNo(2, 56);
      Node node2 = Node.newNumber((double) 57, 4, 321);
      Node node3 = new Node(15, node2);
      Node node4 = new Node(2);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node3);
      node_NodeMismatch0.equals(node3);
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      node1.setOptionalArg(false);
      Node node3 = Node.newString(15, "com.google.javascript.rhino.Node");
      node_SideEffectFlags0.setThrows();
      node3.isNot();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      node1.srcrefTree(node2);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(2);
      node3.toString(false, false, false);
      node2.isGetterDef();
      node3.isNoSideEffectsCall();
      node1.getIntProp(0);
      node0.isTypeOf();
      node0.hasOneChild();
      node3.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = Node.newNumber((-574.202));
      node0.isBreak();
      Node.newString(2, "com.google.javascript.rhino.Node$StringNode", 15, 4095);
      node0.setLineno(1);
      Node node1 = Node.newNumber((double) 1, 55, 310);
      node0.getSourceFileName();
      Node node2 = new Node(56, 4095, 105);
      node1.isOnlyModifiesArgumentsCall();
      node0.isAdd();
      node2.isThrow();
      node0.isNull();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = new Node(1771);
      JSType jSType0 = null;
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      Node node2 = Node.newString(0, "");
      node2.addChildrenToFront(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node3.setOptionalArg(false);
      node2.getDirectives();
      node2.removeChildren();
      String string0 = "second new child has existing sibling";
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) jSTypeRegistry0;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) node3;
      objectArray0[3] = (Object) linkedList0;
      // Undeclared exception!
//      try { 
        SimpleErrorReporter.getMessage("second new child has existing sibling", objectArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // no message resource found for message property second new child has existing sibling
//         //
//         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFromExterns();
      node0.setSourceFileForTesting("");
      node0.children();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.isEmpty();
      node0.isComma();
      Node node1 = new Node(25, node0, node0, node0, node0, (-240), 51);
      node0.isParamList();
      Node node2 = Node.newString("", 37, 49);
      node1.copyInformationFrom(node2);
      Node node3 = Node.newString(54, "URI_ERROR_TYPE");
      // Undeclared exception!
//      try { 
        node0.removeChild(node3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.toStringTree();
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node0.setString("STRING 7}O9?Y\u0006H~pKiE\n");
      node2.removeProp(63);
      Node.mergeLineCharNo(114, 12);
      node1.getSourceOffset();
      node0.isGetElem();
      Node node3 = node1.copyInformationFromForTree(node2);
      node3.isOptionalArg();
      node1.isLabelName();
      node0.isDebugger();
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)31;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber(3112.6217688829);
      node0.toString();
      Node node1 = new Node(462, node0, node0);
      node1.isEmpty();
      node1.getStaticSourceFile();
      node0.setType((-1224));
      node0.detachChildren();
      node1.getAncestor(1);
      Node node2 = null;
//      try {
        node2 = new Node(848, node1, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = new Node(0, 0, 4560);
      node0.setLineno(12);
      node0.wasEmptyNode();
      node0.isThrow();
      node0.setSourceFileForTesting(")u");
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(12, nodeArray0);
      File file0 = null;
      node0.setChangeTime(54);
      node1.isOnlyModifiesThisCall();
//      try { 
        node1.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // EQ 0 is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.getChangeTime();
      Node node2 = new Node(42, node0, node0, node0, node0);
      node2.isIn();
      node2.isFor();
      node0.removeProp(46);
      Node node3 = Node.newString(898, "length");
      Node node4 = node0.useSourceInfoIfMissingFrom(node1);
      node4.toString(true, false, true);
      node3.isNull();
      node2.isNoSideEffectsCall();
      node2.isNE();
      node2.getIntProp(1508);
      node2.setCharno(2);
      node4.isTrue();
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newNumber((double) 117);
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setThrows();
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      Node node1 = new Node(38, node0, node0, node0, node0);
      node1.isGetElem();
      Node.newString("Object#Key", 12, (-202));
      Node node2 = new Node((-750), (-1478), (-590));
      Node node3 = null;
//      try {
        node3 = new Node(135, node1, node2, node2, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = new Node(4560);
      node0.setLineno(12);
      node0.putIntProp(0, 0);
      Node.newString("qe280hgDRqp1i3w");
      node0.wasEmptyNode();
      node0.isThrow();
      node0.setSourceFileForTesting(")u");
      node0.isArrayLit();
      node0.mayMutateArguments();
      node0.getSourceOffset();
      int int0 = Node.REFLECTED_OBJECT;
      node0.setChangeTime(50);
      node0.isVarArgs();
      node0.isContinue();
      node0.isThrow();
      node0.isSetterDef();
      Node node1 = new Node(50);
      Node node2 = Node.newString(113, "");
      node2.getString();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node2.getLastSibling();
      Node.extractCharno(1153);
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newString((-89), "Ep");
      node0.setLineno((-89));
      Node node1 = Node.newNumber(0.0, 30, (-4255));
      Node node2 = new Node(0, 1153, 51);
      node2.type = 15;
      node1.addChildrenToBack(node0);
      Node node3 = Node.newString(2018, "StringNode: str is null");
      node3.isFunction();
      // Undeclared exception!
//      try { 
        node3.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      int int0 = 0;
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.isOnlyModifiesArgumentsCall();
      node0.toString(true, false, false);
      node0.isGetterDef();
      node1.copyInformationFromForTree(node2);
      node0.isDebugger();
      node0.isSetterDef();
      node2.setOptionalArg(true);
      Node node3 = new Node((-1502));
      // Undeclared exception!
//      try { 
        node1.addChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.toStringTree();
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node1.setWasEmptyNode(false);
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node2.isRegExp();
      Node node3 = new Node(37, node2, node0, node0, 49, 64);
      node3.setSideEffectFlags(node_SideEffectFlags0);
      // Undeclared exception!
//      try { 
        node2.replaceChild(node3, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.getChangeTime();
      Node node2 = new Node(42, node0, node0, node0, node0);
      node2.isIn();
      node2.isFor();
      node0.removeProp(46);
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node3.toString(true, false, true);
      node2.isGetterDef();
      node2.isNoSideEffectsCall();
      node2.isNE();
      node2.getIntProp(1508);
      node2.setCharno(2);
      node0.detachChildren();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      node0.getProp(2121);
      Node node1 = new Node(12, node0, node0, 40, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.setChangeTime(40);
      Node node3 = new Node(2);
      node2.getAncestors();
      node3.removeProp(1);
      Node.newString(48, "Node tree inequality:\nTree1:\n");
      Node node4 = node3.useSourceInfoIfMissingFrom(node0);
      node3.isSyntheticBlock();
      node4.isGetterDef();
      node4.isNoSideEffectsCall();
      node4.isNE();
      node4.isDo();
      node0.detachChildren();
      node3.isNumber();
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      node0.getProp(2121);
      Node node1 = new Node(12, node0, node0, 40, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.setChangeTime(40);
      Node node3 = new Node(2);
      node3.getAncestors();
      node2.isFor();
      node3.removeProp(1);
      Node.newString(48, "Node tree inequality:\nTree1:\n");
      node3.useSourceInfoIfMissingFrom(node0);
      Node node4 = Node.newString("je}#s;'&!");
      Node.mergeLineCharNo(4095, 37);
      node3.isCall();
      node2.cloneNode();
      node4.removeChildren();
      node2.isBreak();
      node3.isHook();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.getChangeTime();
      node0.isDelProp();
      node0.isFor();
      node1.getBooleanProp(39);
      node0.isLocalResultCall();
      Node node2 = node1.cloneNode();
      node0.isEquivalentToShallow(node1);
      node1.checkTreeEqualsImpl(node2);
      node1.getSideEffectFlags();
      node0.setString("kNYJPHBR;/$#r,");
      Node.mergeLineCharNo(39, 40);
      node1.isCall();
      Node node3 = node2.cloneNode();
      node3.removeChildren();
      node3.isBreak();
      Node node4 = new Node(52, node2, 47, 48);
      node4.isHook();
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 90, 309);
      node0.getProp(2121);
      node0.addSuppression("Q]\"Kkj(=f");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = Node.newString(36, "first new child has existing parent", 63, 40);
      node0.setQuotedString();
      node1.setType(46);
      node1.setOptionalArg(true);
      node1.isSwitch();
      node1.getSourceOffset();
      node0.isGetElem();
      node1.isOnlyModifiesArgumentsCall();
      Node.newString(30, "com.google.javascript.rhino.Node$FileLevelJsD+cBuilder");
      Node node2 = Node.newNumber((double) 51);
      node2.isReturn();
      node1.getProp(2);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node2.getChangeTime();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.isGetProp();
      Node node2 = node0.cloneNode();
      node0.setString("msg.jsdoc.function.varargs");
      node0.isEquivalentToShallow(node1);
      node0.setString("msg.jsdoc.function.varargs");
      Node.mergeLineCharNo(4, 12);
      node1.getSourceOffset();
      node0.isGetElem();
      node0.isFalse();
      Node node3 = Node.newString(1, "");
      node3.isReturn();
      node0.toString(false, false, false);
      node0.isCase();
      node2.hasChildren();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      immutableList0.toArray();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newNumber(40.0);
      node0.isThis();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplateType((JSType) null);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(29, nodeArray0, 1080, 127);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.extractLineno(54);
      node0.isOnlyModifiesArgumentsCall();
      node1.toStringTree();
      // Undeclared exception!
//      try { 
        Node.newString(49, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(49, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node1.isVar();
      node0.isFromExterns();
      node1.getBooleanProp(63);
      Node node2 = node0.detachFromParent();
      Node node3 = node2.copyInformationFromForTree(node0);
      node1.isDebugger();
      node3.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.extractLineno((-492));
      node_SideEffectFlags1.areAllFlagsSet();
      node2.toStringTree();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = Node.newNumber((double) 487);
      Node node1 = new Node(37, node0);
      Node node2 = new Node(487, node1, node1, node1, node1, 623, 1048576);
      Node node3 = new Node(487, node2, 56, 8);
      node0.removeFirstChild();
      node0.getDouble();
      node3.setSourceEncodedPosition((-131));
      Node node4 = null;
//      try {
        node4 = new Node(630, node3, node3, node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.newString("Object#Element", 124, 124);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setThrows();
      Node node0 = new Node((-2603));
      node0.mayMutateArguments();
      node0.isDelProp();
      String string0 = " is not a number node";
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
//      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Not declared as a type name");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node.newString("vI", (-2178), (-2178));
      Node node0 = Node.newNumber((double) 16);
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = Node.newNumber(3362.4259466);
      node0.getIntProp(1997);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setAllFlags();
      Node node1 = Node.newString("=mvm7+Mvx63kv", 49152, 0);
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node0.isLabel();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(53);
      Node[] nodeArray0 = new Node[1];
      node1.isFromExterns();
      nodeArray0[0] = node0;
      Node node2 = new Node((-1255), nodeArray0, 4095, 42);
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      node0.toString(false, false, false);
      node0.isGetterDef();
      node0.isNoSideEffectsCall();
      node0.getIntProp((-384));
      node3.isTypeOf();
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.valueOf();
      Node node0 = new Node(0);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      Node node1 = Node.newNumber((double) 4095);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      int int0 = 40;
      Node node0 = Node.newString(40, "Z|$aQs^", (-1244), 40);
      node0.putBooleanProp(40, true);
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestor(41);
//      try { 
        node0.setDouble((-1.0));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING Z|$aQs^ [originalname: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      int int0 = 2121;
      Object object0 = new Object();
      Node node1 = new Node(55);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = new Node(29, node1, node0, node0);
      node2.setChangeTime(40);
      Node node3 = new Node(2);
      node3.getAncestors();
      node2.isFor();
      node3.removeProp(1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = Node.newString(4, "GLOBAL_THIS", 111, 147);
      node4.isGetElem();
      node0.getString();
      Node node5 = node2.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node3, node5);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = new Node(1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, 4095);
      Node node2 = Node.newString(0, "");
      node2.addChildrenToFront(node0);
      Node node3 = Node.newString(1458, "t`B/s7?Qs/n");
      node2.isReturn();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.isCase();
      node3.hasChildren();
      node3.getNext();
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      node0.getProp(2121);
      Node node1 = new Node(12, node0, node0, 40, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.setChangeTime(40);
      Node node3 = new Node(2);
      node3.getAncestors();
      node3.removeProp(1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = Node.newString(1, "", 1, 37);
      node1.isGetElem();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node4);
      node4.isString();
      node2.isDo();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node4.detachChildren();
      node2.isNumber();
      node4.getLastChild();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = node1.getAncestor(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node1.replaceChild(node0, node2);
      node1.removeChildren();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.newNumber(2357.8584);
      node2.isBreak();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newString(">yS7yMmRpG/");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node2.isTypeOf();
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node0.setString("X(<]LXe)},omUK");
      Node.mergeLineCharNo(0, 16);
      node1.isCall();
      node2.isScript();
      Node node3 = new Node(54, node1, node0, 54, 55);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = Node.newString(48, ">yS7yMmRpG/", 1, (-389));
      node4.isGetElem();
      node4.isQualifiedName();
      node3.getBooleanProp(77);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node4);
      node0.isDo();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node3.detachChildren();
      node3.isNumber();
      node1.getJSDocInfo();
      node1.isIn();
      // Undeclared exception!
//      try { 
        node4.getChildBefore(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = new Node(154, (-2556), 2792);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append((String) null);
      node0.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isIf();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = new Node(1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      Node node2 = Node.newString(0, "");
      node2.addChildrenToFront(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node.newString("Object#Key", 40, 4095);
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newString(0, "");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) arrayList0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.addChildrenToFront(node1);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.setOptionalArg(false);
      Set<String> set0 = new LinkedHashSet<String>(42);
      // Undeclared exception!
//      try { 
        node2.addChildrenToBack((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      node0.setLineno((-5072));
      Node node1 = Node.newNumber(1.0, 54, 54);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = Node.newString(130, "NUMBER 0.0", 53, 0);
      node0.isGetElem();
      Node node3 = new Node((-283), 38, 92);
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node3.isString();
      node2.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node3.detachChildren();
      Node node4 = new Node(21);
      node4.mayMutateArguments();
      node0.isDelProp();
      Node node5 = new Node(0, node3, node3, 2, 102);
      Node node6 = node2.useSourceInfoFrom(node5);
      node6.isGetterDef();
      node6.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NUMBER 0.0");
      Node node1 = new Node(1, node0, node0, node0, node0, 54, 29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = node1.getAncestor(0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node1.replaceChild(node0, node2);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.newNumber(2357.8584);
      node2.isBreak();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = new Node((-574), (-574), 2292);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplateType((JSType) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-54);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(30, nodeArray0, 55, 2);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[5];
      jSTypeArray0[0] = null;
      jSTypeArray0[4] = (JSType) null;
      jSTypeArray0[2] = null;
      jSTypeArray0[3] = null;
      jSTypeArray0[4] = (JSType) null;
      node0.setOptionalArg(false);
      Node node2 = new Node(310);
      node2.toString();
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node((-565), (Node) null, (Node) null, (-565), (-565));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = node1.getAncestor(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      jSTypeRegistry0.hasNamespace("NUMBER 0.0");
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node3.setOptionalArg(true);
      node0.getDirectives();
      node2.addChildrenToBack(node1);
      node1.isFunction();
      node1.detachFromParent();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.error("(p=a`", "(p=a`", (-2371), (-2371));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      immutableList0.toArray();
      Node node0 = Node.newString("<Zy>'lZ8", 46, 46);
      Node node1 = node0.cloneNode();
      node0.setString("je}#s;'&!");
      node1.isEquivalentToShallow(node0);
      Node node2 = Node.newString("je}#s;'&!", 1364, (-312));
      node2.getSideEffectFlags();
      node1.setString("<Zy>'lZ8");
      Node.mergeLineCharNo(47, 15);
      node1.getSourceOffset();
      node0.isGetElem();
      Node node3 = Node.newString(40, "com.google.javascript.rhino.SourcePosition");
      node3.isReturn();
      node1.toString(true, true, false);
      node3.isCase();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newNumber((double) 124);
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setThrows();
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      Node node1 = Node.newString(2, "Object#Key", 2, 52);
      node1.isGetElem();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      node0.isString();
      node1.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.detachChildren();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = Node.newString((-98), "p!");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.setLineno((-98));
      Node node1 = Node.newNumber(0.0, 30, (-4255));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = Node.newString(48, "p!", 40, 57);
      node1.isGetElem();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isString();
      node0.isDo();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.detachChildren();
      node0.mayMutateArguments();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = new Node((-574), (-574), 2292);
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplateType((JSType) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-54);
      byteArray0[1] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(328, "P@P4EzZ/nP/c*", 308, 3653);
      Node node1 = new Node((-805), 328, 2);
      node1.getLength();
      node0.getJsDocBuilderForNode();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.useSourceInfoFrom(node0);
      Node node2 = Node.newString("P@P4EzZ/nP/c*");
      Node node3 = Node.newNumber((-1125.9407));
      node3.clonePropsFrom(node2);
      node3.isFromExterns();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals("P@P4EzZ/nP/c*");
      node1.isNull();
      node1.isDo();
      node1.getIndexOfChild(node2);
      node0.getNext();
      node0.isOr();
      node0.getStaticSourceFile();
      Node.newString("P@P4EzZ/nP/c*");
      node1.isArrayLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(node_SideEffectFlags1);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -805
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.isGetProp();
      Node node2 = node0.cloneNode();
      node0.setString("msg.jsdoc.function.varargs");
      Node node3 = Node.newString(39, "qF9OmG/,po]!&XDF{");
      node3.addChildrenToFront(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node2.setOptionalArg(false);
      node1.getDirectives();
      // Undeclared exception!
//      try { 
        node2.addChildrenToBack(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      Node node1 = new Node(306654252);
      node1.getAncestors();
      node0.getBooleanProp(31);
      node0.isEquivalentToShallow(node1);
      node1.checkTreeEqualsImpl(node0);
      node1.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(428);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.setOptionalArg(true);
      node0.isSwitch();
      Node.newString(993, "7}O9?Y\u0006H~pKiE");
      node1.isNot();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags((-466));
      node_SideEffectFlags2.setThrows();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.newString(36, "7}O9?Y\u0006H~pKiE", 2, 43);
      node0.isGetElem();
      // Undeclared exception!
//      try { 
        node1.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 306654252
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = new Node(1771, 1771, 1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      Node node2 = Node.newString(0, "");
      node2.addChildrenToFront(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.setOptionalArg(false);
      node3.getDirectives();
      node2.addChildrenToBack(node3);
      node1.isFunction();
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = Node.newNumber((-453.83697983), 3087, 98);
      node0.setLength(98);
      node0.getChangeTime();
      node0.isCase();
      node0.getQualifiedName();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.isGetProp();
      node0.cloneNode();
      node0.setString("msg.jsdoc.function.varargs");
      node0.isEquivalentToShallow(node1);
      node0.getSideEffectFlags();
      node0.setString("msg.jsdoc.function.varargs");
      Node.mergeLineCharNo(4, 12);
      node1.getSourceOffset();
      node0.isGetElem();
      Node node2 = Node.newString(1, "");
      node2.isReturn();
      node0.toString(false, false, false);
      node0.isCase();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(47, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = node1.getAncestor(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node1.replaceChild(node0, node2);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.newNumber(2357.8584);
      node2.isBreak();
      Node.extractLineno(100);
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("Object#Key");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.getObjectElementKey();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(15, nodeArray0, 1117, (-1));
      node1.getBooleanProp(1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter1);
      Node node2 = jSTypeRegistry2.createOptionalParameters(jSTypeArray0);
      Node node3 = node0.srcref(node2);
      node3.getQualifiedName();
      node0.isIn();
      node0.hasChild(node0);
      node0.isHook();
      node0.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType((String) null);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) templateType0, (Map<TemplateType, JSType>) hashMap0);
      TemplatizedType templatizedType1 = templatizedType0.toMaybeTemplatizedType();
      JSType jSType0 = templatizedType1.getPropertyType("com.google.javascript.rhino.Node$NodeMismatch");
      templateType0.getTypesUnderShallowInequality(jSType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(15, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      Node node2 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.isAnd();
      node0.addChildrenToFront(node2);
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      node0.setChangeTime(32);
      Node node1 = Node.newNumber((double) 8, 309, 57);
      Node node2 = new Node(1, 1, 46);
      node1.isNew();
      Node node3 = new Node(30, node2, node0, 51, (-13));
      node0.isThrow();
      Node node4 = Node.newString(98, "NUMBER 0.0", 8, 1073741823);
      node4.isNull();
      Node node5 = new Node(87855567);
      Node.newString(1876, "second new child has existing parent");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node6 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node5.useSourceInfoIfMissingFromForTree(node6);
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newNumber((double) 124);
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setThrows();
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      Node node1 = Node.newString(2, "Object#Key", 2, 52);
      node1.isGetElem();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isString();
      node1.isDo();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.detachChildren();
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.setOptionalArg(false);
      node0.isSwitch();
      Node node2 = Node.newString(15, "com.google.javascript.rhino.Node");
      node2.isNot();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(2);
      node_SideEffectFlags2.setThrows();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.newString(307, "com.google.javascript.rhino.Node", 614, 41);
      node1.isGetElem();
      // Undeclared exception!
//      try { 
        node1.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("NOT_NULL");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      arrayList0.add(templateType0);
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1, true);
      Node[] nodeArray0 = new Node[1];
      EnumType enumType0 = jSTypeRegistry1.createEnumType("Not declared as a constructor", node0, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.getOwnPropertyJSDocInfo("");
      node0.setJSDocInfo((JSDocInfo) null);
      nodeArray0[0] = node0;
      Node node1 = new Node((-1265), nodeArray0, (-1), 43);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = jSTypeRegistry2.createOptionalParameters(jSTypeArray0);
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.toString(false, false, false);
      node1.isGetterDef();
      node0.isNoSideEffectsCall();
      node1.getIntProp(42);
      node1.isTypeOf();
      node0.hasOneChild();
      node2.getChildCount();
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = new Node(0, 0, 4560);
      node0.setLineno(12);
      node0.wasEmptyNode();
      node0.isThrow();
      node0.setSourceFileForTesting(")u");
      node0.isArrayLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isVar();
      Node node1 = new Node((-1149), node0, node0, 32, 0);
      node1.isInstanceOf();
      node1.getBooleanProp((-1459));
      // Undeclared exception!
//      try { 
        node1.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newNumber((-574.202));
      node0.isDec();
      String string0 = "";
      Node node1 = Node.newString("");
      node1.removeChildren();
      node1.setString("");
      node1.addChildrenToBack(node0);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      node0.getProp(2121);
      Node node1 = new Node(12, node0, node0, 40, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.setChangeTime(40);
      Node node3 = new Node(2);
      node3.getAncestors();
      node3.removeProp(1);
      Node.newString(48, "Node tree inequality:\nTree1:\n");
      Node node4 = node3.useSourceInfoIfMissingFrom(node0);
      node3.isSyntheticBlock();
      node4.isGetterDef();
      node4.isNoSideEffectsCall();
      node4.isNE();
      node3.getIntProp(152);
      node0.setCharno((-1139));
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(57);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node0.setString("X(<]LXe)},omUK");
      Node.mergeLineCharNo(0, 16);
      node1.isCall();
      node0.isNumber();
      node0.isLabel();
      node1.setLineno(1);
      node2.isFromExterns();
      node2.getType();
      Node.newNumber((-3335.584588364601));
      node2.detachChildren();
      Node node3 = Node.newString(4, "X(<]LXe)},omUK");
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node1.addChildToBack(node2);
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.toString(true, false, false);
      node0.isGetterDef();
      node0.isNoSideEffectsCall();
      node0.getIntProp((-5109));
      node1.isTypeOf();
      node1.hasOneChild();
      node2.isCase();
      Node node3 = Node.newString(53, "NUMBER 0.0");
      // Undeclared exception!
//      try { 
        node3.checkTreeTypeAwareEqualsImpl((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = new Node(1771);
      Node node1 = Node.newString(56, "i.'!B):TlF0%K[IP");
      node0.setLineno(32);
      Node node2 = new Node(2808);
      node2.getAncestors();
      node1.getBooleanProp(16);
      node1.isLocalResultCall();
      Node node3 = node0.cloneNode();
      node3.isEquivalentToShallow(node0);
      node0.checkTreeEqualsImpl(node3);
      node1.isOnlyModifiesArgumentsCall();
      node1.getSideEffectFlags();
      // Undeclared exception!
//      try { 
        node0.setString("i.'!B):TlF0%K[IP");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1771
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newNumber((double) 124);
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setThrows();
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      Node node1 = Node.newString(2, "Object#Key", 2, 52);
      node1.isGetElem();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getProp(12);
      node_NodeMismatch0.equals(node_SideEffectFlags2);
      node1.isThis();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = null;
//      try {
        node0 = new Node(548, (Node) null, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newString((-2162), "", 747, (-2162));
      node0.isParamList();
      node0.getInputId();
      node0.getJsDocBuilderForNode();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.extractLineno(105);
      Node node0 = null;
//      try {
        node0 = new Node(93, (Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = new Node(1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      Node node2 = Node.newString(0, "");
      node2.addChildrenToFront(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node3.setOptionalArg(false);
      node2.getDirectives();
      node3.addChildrenToBack(node1);
      node3.isFunction();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      node0.setCharno(1989);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo1);
      Node.newNumber((-3326.8906502), 56, 4560);
      Node.mergeLineCharNo(2736, 50);
      Node node2 = Node.newNumber((double) 1);
      node2.isDo();
      // Undeclared exception!
//      try { 
        node0.getChildAtIndex(1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      node0.getProp(2121);
      Node node1 = new Node(12, node0, node0, 40, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.setChangeTime(40);
      Node node3 = new Node(2);
      node3.getAncestors();
      node2.isFor();
      node3.removeProp(1);
      Node.newString(48, "Node tree inequality:\nTree1:\n");
      Node node4 = node3.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
//      try { 
        node4.toString(true, true, true);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 2
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newString((-98), "p!");
      node0.setLineno((-98));
      Node node1 = new Node(523, node0, node0, node0, node0);
      node1.isEquivalentToShallow(node0);
      node1.checkTreeEqualsImpl(node0);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node0.setString(";VK!uL");
      Node.mergeLineCharNo(4836, 48);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType.cast((JSType) null);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0, 47, 55);
      node1.getChangeTime();
      node0.putBooleanProp(43, true);
      Node node2 = Node.newNumber((double) 56);
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      node1.toString(true, false, true);
      Node node4 = new Node(49, node3, node3, node3, 98, 112);
      Node node5 = Node.newString("");
      Node node6 = null;
//      try {
        node6 = new Node(1146, node3, node2, node5);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node0.isLocalResultCall();
      node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isLabel();
      node0.getSideEffectFlags();
      node0.setString("X(<]LXe)},omUK");
      Node.mergeLineCharNo(0, 16);
      Node node2 = Node.newNumber((double) 57, 40, (-1670));
      Node node3 = new Node(133, node2);
      Node node4 = new Node(40);
      Node node5 = Node.newNumber(40.0, 53, 48);
      node4.getProp(13);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node5, node2);
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = new Node(1771);
      Node node1 = Node.newString(56, "i.'!B):TlF0%K[IP");
      node0.setLineno(32);
      Node node2 = Node.newNumber(1.0, 38, (-4255));
      Node node3 = new Node(40, 43, 1178);
      node1.isAdd();
      node3.isThrow();
      node3.isNull();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      Node node4 = new Node(995);
      nodeArray0[4] = node3;
      nodeArray0[5] = node0;
      nodeArray0[6] = node2;
      nodeArray0[7] = node2;
      nodeArray0[8] = node0;
      node1.setOptionalArg(true);
      // Undeclared exception!
//      try { 
        node4.toString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 995
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.getChangeTime();
      Node node2 = new Node(42, node0, node0, node0, node0);
      node0.isDelProp();
      node2.isFor();
      node0.removeProp(46);
      Node.newString(898, "length");
      Node node3 = new Node(42, 1, 39);
      node1.isCast();
      Node node4 = null;
//      try {
        node4 = new Node(1477, node1, node0, 51, 31);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 31, 47, 55);
      node1.getChangeTime();
      node0.putBooleanProp(43, true);
      Node node2 = Node.newNumber((double) 56);
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      node1.toString(true, false, true);
      node3.setWasEmptyNode(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node4 = node2.useSourceInfoFromForTree(node0);
      // Undeclared exception!
//      try { 
        node4.clonePropsFrom(node0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Node has existing properties.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.toStringTree();
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node0.setString("EjJ1`^_:0");
      Node.mergeLineCharNo(114, 12);
      node1.getSourceOffset();
      node0.isGetElem();
      node0.isReturn();
      node0.toString(true, true, true);
      node2.getChildAtIndex(0);
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = node1.getAncestor(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node1.replaceChild(node0, node2);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.newNumber(2357.8584);
      node2.isBreak();
      node2.detachChildren();
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      Node node2 = node0.cloneNode();
      node2.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node1.toString(false, true, true);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Number node not created with Node.newNumber
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newNumber(272.91);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesThis();
      Node node1 = new Node(50, node0, node0, 4095, 0);
      node0.checkTreeEqualsImpl(node1);
      node_SideEffectFlags5.setMutatesArguments();
      node1.isNew();
      node0.isSyntheticBlock();
      node0.isLabel();
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(node_SideEffectFlags5);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 50
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.toString(false, false, false);
      node0.isQuotedString();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString(0, "qJG%$#GrCE");
      Node node2 = node0.clonePropsFrom(node1);
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node node3 = new Node(0, node0, node1);
      node3.useSourceInfoIfMissingFrom(node2);
      // Undeclared exception!
//      try { 
        node3.toString(false, false, true);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.toString(true, false, false);
      node0.isGetterDef();
      node0.isNoSideEffectsCall();
      node0.getIntProp((-5109));
      node1.isTypeOf();
      node1.hasOneChild();
      node2.isCase();
      node2.isObjectLit();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node1);
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("Object#Key");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.getObjectElementKey();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(15, nodeArray0, 1117, (-1));
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter1);
      Node node2 = jSTypeRegistry2.createOptionalParameters(jSTypeArray0);
      Node node3 = node0.srcref(node2);
      node3.getQualifiedName();
      node0.isIn();
      node0.hasChild(node0);
      Node.newString(56, "", 111, 1928);
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = new Node(1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      Node node2 = new Node((-792), node1, node0);
      // Undeclared exception!
//      try { 
        node2.addChildrenToFront(node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = Node.newNumber(3362.4259466);
      node0.getIntProp(1997);
      node0.toString(true, true, true);
      Node node1 = Node.newString(16, "NUMBER 3362.4259466", 56, 4095);
      node0.isExprResult();
      node0.setOptionalArg(false);
      node1.getDirectives();
      node0.addChildrenToBack(node1);
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = new Node(0, 0, 4560);
      node0.setLineno(12);
      node0.wasEmptyNode();
      node0.isThrow();
      node0.setSourceFileForTesting(")u");
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(12, nodeArray0);
      Node node2 = new Node(0, 31, 49);
      Node node3 = new Node((-899), node2, node2, node0, 38, 46);
      node3.useSourceInfoFromForTree(node1);
      Node.newString(")u");
      node1.getProp(57);
      node0.getProp(399);
      node0.getSourceFileName();
      node3.isSyntheticBlock();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("Object#Key");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      jSTypeRegistry0.getObjectElementKey();
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-788), nodeArray0, 57, 7);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      Node node2 = new Node(15);
      node0.srcref(node2);
      // Undeclared exception!
//      try { 
        node1.setSideEffectFlags(823);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.extractCharno((-889));
      node1.putBooleanProp(3207, false);
      node1.hasMoreThanOneChild();
      node0.isGetElem();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isBreak();
      node1.detachChildren();
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = Node.newString("vI", (-2178), (-2178));
      Node node1 = Node.newNumber((double) 16);
      node0.getProp(48);
      MockPrintStream mockPrintStream0 = new MockPrintStream("vI");
      node1.appendStringTree(mockPrintStream0);
      node1.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
//      try { 
        node0.replaceChild(node1, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      node0.getProp(2121);
      node0.addSuppression("Q]\"Kkj(=f");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      node0.setInputId(inputId0);
      jSDocInfo0.setConsistentIdGenerator(true);
      node0.getSideEffectFlags();
//      try { 
        node0.setDouble(115);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING GLOBAL_THIS 115 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000008] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = new Node(1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      File file0 = null;
      node1.setChangeTime(1393);
      // Undeclared exception!
//      try { 
        node0.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1771
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = new Node(0, 0, 4560);
      node0.setLineno(12);
      node0.wasEmptyNode();
      node0.isThrow();
      node0.setSourceFileForTesting(")u");
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(12, nodeArray0);
      File file0 = null;
      node0.setChangeTime(54);
//      try { 
        node1.getDouble();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // EQ 0 is not a number node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = Node.newString((-98), "p!");
      node0.setLineno((-98));
      Node node1 = Node.newNumber(0.0, 30, (-4255));
      Node node2 = new Node(0, 1151, 51);
      node2.type = 15;
      node2.isAdd();
      node0.isEquivalentTo(node1, false, true, false);
      node2.isThrow();
      node0.isNull();
      Node node3 = new Node(57, node1, node1, node1, 1151, 42);
      node3.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("NOT_NULL");
      Node node0 = new Node(32);
      Node node1 = new Node((-2772), node0, node0, 83, 1198);
      node0.setChangeTime(83);
      node1.getAncestors();
      node1.setChangeTime(36);
      Node node2 = new Node(39);
      node2.isInstanceOf();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1, true);
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node3 = null;
//      try {
        node3 = new Node(2, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("Object#Key");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node node0 = new Node(32);
      Node node1 = new Node(32, node0, node0, 53, 1198);
      node1.setChangeTime(29);
      node1.removeFirstChild();
      Node node2 = new Node(57);
      node2.getAncestors();
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1, false);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node3 = new Node(31, nodeArray0, 30, 108);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      Node node4 = Node.newString(55, "", (-2182), 556);
      Node node5 = node4.srcref(node0);
      node5.isUnscopedQualifiedName();
      // Undeclared exception!
//      try { 
        node3.removeChild(node4);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = new Node(4560, 155, 4560);
      node0.setLineno(155);
      node0.putIntProp(3915, (-1265));
      node0.wasEmptyNode();
      node0.isThrow();
      node0.setSourceFileForTesting("M{zn");
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
//      try {
        node1 = new Node(57, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = new Node(1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(47);
      node_SideEffectFlags3.setAllFlags();
      Node node2 = new Node(57, 86, 15);
      Node node3 = node2.useSourceInfoFromForTree(node0);
      Node node4 = Node.newString("02O\"*q_b(263hS");
      node1.getProp(2111);
      node4.getProp(43);
      node4.getSourceFileName();
      node4.isSyntheticBlock();
      node0.srcref(node3);
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node2);
      node2.checkTreeEqualsImpl(node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      String string0 = "X(<]LXe)},omUK";
      // Undeclared exception!
//      try { 
        node2.setString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      node_SideEffectFlags0.setMutatesThis();
      node0.setDouble(0.5);
      Node node2 = node1.cloneNode();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      Node.newString(1552, "NUMBER 0.0", 33, 49);
      Node node4 = node0.copyInformationFrom(node3);
      node0.detachFromParent();
      node0.getDouble();
      node2.siblings();
      node3.setLength(2999);
      // Undeclared exception!
//      try { 
        node4.removeChildAfter(node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setLength(1848);
      node0.hasChildren();
      node0.isUnscopedQualifiedName();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.getChangeTime();
      node0.type = (-987);
      node0.isNoSideEffectsCall();
      node0.children();
      node0.setDouble(1339.7758425866116);
      Node node1 = node0.cloneNode();
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = Node.newString(954, "", 1, 0);
      node2.copyInformationFrom(node0);
      // Undeclared exception!
//      try { 
        node2.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFromExterns();
      node0.setSourceFileForTesting("second new child has existing parent");
      node0.children();
      node0.getChangeTime();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.getString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags0.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags7.clearSideEffectFlags();
      Node.extractCharno((-2951));
      node0.putBooleanProp((-578), true);
      node0.hasMoreThanOneChild();
      node0.isGetElem();
      // Undeclared exception!
//      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      node_SideEffectFlags0.setMutatesThis();
      node1.isEmpty();
      node1.isComma();
      Node node2 = null;
//      try {
        node2 = new Node((-835), node1, node0, node0, node1, 40, 4095);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.extractCharno((-889));
      node1.putBooleanProp(3207, false);
      node1.hasMoreThanOneChild();
      node0.isGetElem();
      Node node2 = node1.copyInformationFrom(node0);
      Node node3 = null;
//      try {
        node3 = new Node(42, node0, node2, node1, 54, 1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = new Node(0, 0, 4560);
      node0.setLineno(12);
      node0.putIntProp(0, 0);
      node0.wasEmptyNode();
      node0.isThrow();
      node0.setSourceFileForTesting(")u");
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node((-3698), nodeArray0);
      File file0 = null;
      node0.setChangeTime(54);
      // Undeclared exception!
//      try { 
        node1.getDouble();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -3698
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = Node.newString(38, "", 747, 38);
      node0.isParamList();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.children();
      node0.isFromExterns();
      node0.setSourceFileForTesting("second new child has existing parent");
      node0.children();
      node0.getChangeTime();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.getString();
      node0.isWhile();
      node0.isComma();
      Node node1 = new Node(25, node0, node0, node0, node0, (-240), 51);
      node0.isParamList();
      // Undeclared exception!
//      try { 
        node0.getBooleanProp(51);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node0.setString("X(<]LXe)},omUK");
      Node.mergeLineCharNo(0, 16);
      Node node2 = Node.newNumber((double) 57, 40, (-1670));
      Node node3 = new Node(133, node2);
      Node node4 = new Node(40);
      Node node5 = Node.newNumber(40.0, 53, 48);
      node4.getProp(13);
      Node.NodeMismatch node_NodeMismatch1 = new Node.NodeMismatch(node5, node2);
      node_NodeMismatch1.equals(node_NodeMismatch0);
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("NOT_NULL");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      arrayList0.add(templateType0);
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isCall();
      Node node1 = Node.newNumber(1267.430761);
      node1.isScript();
      Node node2 = new Node(50, node0, node1, 57, 4095);
      node0.isLabel();
      node2.setLineno(15);
      node0.isFromExterns();
      node2.useSourceInfoFrom(node0);
      node0.getType();
      Node node3 = Node.newNumber((double) 36);
      node3.detachChildren();
      Node.newString(53, "NOT_NULL");
      Node node4 = null;
//      try {
        node4 = new Node(0, node2, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.copyInformationFrom(node0);
      node1.isGetProp();
      node0.cloneNode();
      node0.setString("msg.jsdoc.function.varargs");
      node0.isEquivalentToShallow(node1);
      node0.getSideEffectFlags();
      node0.setString("msg.jsdoc.function.varargs");
      Node.mergeLineCharNo(4, 12);
      node1.getSourceOffset();
      node0.isGetElem();
      Node node2 = Node.newString(1, "");
      // Undeclared exception!
//      try { 
        node2.removeChild(node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = new Node(0, 0, 4560);
      node0.setLineno(12);
      node0.putIntProp(0, 0);
      node0.wasEmptyNode();
      node0.isThrow();
      node0.setSourceFileForTesting(")u");
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node((-3698), nodeArray0);
      MockFileWriter mockFileWriter0 = null;
//      try {
        mockFileWriter0 = new MockFileWriter((File) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.File", e);
//      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("Object#Key");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node node0 = new Node(32);
      Node node1 = new Node(32, node0, node0, 53, 1198);
      node1.setChangeTime(29);
      Node node2 = new Node(57);
      node2.getAncestors();
      node0.setChangeTime((-3855));
      node2.isInstanceOf();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newNumber(926.55384);
      Node node1 = new Node((-1866), node0, 37, 461845907);
      Node node2 = null;
//      try {
        node2 = new Node(1, node0, node0, node0, node1, (-1575), 62);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = Node.newNumber(0.0);
      Node node2 = new Node(2, node0, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      int int0 = Node.COLUMN_MASK;
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      node2.isVar();
      node2.isInstanceOf();
      node2.getBooleanProp(63);
      Node node3 = node0.detachFromParent();
      Node node4 = node3.copyInformationFromForTree(node0);
      node2.isDebugger();
      node4.isSetterDef();
      node3.setOptionalArg(false);
      Node node5 = new Node(43);
      // Undeclared exception!
//      try { 
        node3.addChildAfter(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node.extractLineno(3266);
      Node node0 = null;
      Node node1 = null;
//      try {
        node1 = new Node(0, (Node) null, (Node) null, (Node) null, (Node) null, 0, 1345);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      int int0 = 495;
      Node node0 = Node.newNumber((-87.941107926), 37, 1001);
      Node node1 = new Node(4199, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(4199, node1, node1, node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFromExterns();
      node0.setSourceFileForTesting("second new child has existing parent");
      node0.children();
      node0.getChangeTime();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.getString();
      node0.isEmpty();
      node0.isComma();
      Node node1 = new Node(25, node0, node0, node0, node0, (-240), 51);
      node0.isParamList();
      Node.newString("second new child has existing parent", 37, 49);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.getChangeTime();
      Node node2 = new Node(42, node0, node0, node0, node0);
      node2.isIn();
      node2.isFor();
      node0.removeProp(46);
      Node.newString(898, "length");
      node0.useSourceInfoIfMissingFrom(node1);
      node1.isCast();
      Node node3 = null;
//      try {
        node3 = new Node(1477, node1, node0, 51, 31);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 115, 309);
      node0.getProp(2121);
      node0.addSuppression("Q]\"Kkj(=f");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setConsistentIdGenerator(true);
//      try { 
        node0.setDouble(115);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING GLOBAL_THIS 115 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newNumber(3362.4259466);
      node0.getIntProp(1997);
      node0.toString(true, true, true);
      Node node1 = node0.cloneNode();
      node1.removeChildren();
      node0.isBreak();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("Object#Key");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node node0 = new Node(32);
      Node node1 = new Node(32, node0, node0, 53, 1198);
      node1.setChangeTime(29);
      Node node2 = new Node(57);
      node2.getAncestors();
      node1.isFor();
      node2.removeProp((-1518));
      Node node3 = Node.newString(1437, "length");
      Node node4 = node0.useSourceInfoIfMissingFrom(node2);
      node0.toString(true, false, true);
      node4.isGetterDef();
      node0.isNoSideEffectsCall();
      node4.isNE();
      node3.getIntProp(4095);
      node2.setCharno(29);
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.getChangeTime();
      Node node2 = new Node(42, node0, node0, node0, node0);
      node2.isIn();
      node2.isFor();
      node0.removeProp(46);
      Node.newString(898, "length");
      node0.useSourceInfoIfMissingFrom(node1);
      boolean boolean0 = false;
      node1.addSuppression("");
      // Undeclared exception!
//      try { 
        Node.newString(49, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        Node.newString((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.extractCharno((-889));
      node1.putBooleanProp(3207, false);
      node1.hasMoreThanOneChild();
      node0.isGetElem();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      InputId inputId0 = new InputId("");
      node2.cloneTree();
      node3.setInputId(inputId0);
      node2.addChildBefore(node3, node0);
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setLength(1848);
      Node node1 = new Node(1848, node0, node0, node0);
      node1.isNumber();
      node0.isNE();
      node1.getIntProp(2608);
      // Undeclared exception!
//      try { 
        node1.toString(false, false, false);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1848
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setLength(1848);
      Node node1 = Node.newNumber((double) 29, 54, 31);
      node1.isDebugger();
      node0.isUnscopedQualifiedName();
//      try { 
        node1.getString();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // NUMBER 29.0 54 is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node0.setString("X(<]LXe)},omUK");
      Node.mergeLineCharNo(0, 16);
      node1.isCall();
      node2.isScript();
      Node node3 = new Node(54, node1, node0, 54, 55);
      node3.isLabel();
      node3.setLineno(1);
      node2.isFromExterns();
      node1.useSourceInfoFrom(node0);
      node3.getType();
      Node.newNumber((-3335.584588364601));
      node2.detachChildren();
      Node node4 = Node.newString(4, "X(<]LXe)},omUK");
      node4.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      node1.isVar();
      node1.isInstanceOf();
      node1.getBooleanProp(63);
      Node node2 = node0.detachFromParent();
      Node node3 = node2.copyInformationFromForTree(node0);
      node1.isDebugger();
      node3.isSetterDef();
      node2.setOptionalArg(false);
      Node node4 = new Node(43);
      // Undeclared exception!
//      try { 
        node2.addChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node[] nodeArray0 = new Node[0];
      Node node0 = Node.newString("Object#Key");
      node0.isGetElem();
      Node node1 = new Node(4, node0, node0, node0, node0, 36, 38);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node3 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) stack0);
      // Undeclared exception!
//      try { 
        node2.addChildBefore(node0, node3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.extractCharno((-889));
      node1.putBooleanProp(3207, false);
      node1.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[4];
      JSTypeNative jSTypeNative0 = JSTypeNative.TYPE_ERROR_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      ObjectType objectType1 = ObjectType.cast(objectType0);
      jSTypeArray0[0] = (JSType) objectType1;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      jSTypeArray0[1] = jSType0;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("+D=|`g? H/?7`9FPE", node0, jSType0);
      jSTypeArray0[2] = (JSType) enumType0;
      JSType jSType1 = jSTypeRegistry0.createOptionalNullableType(objectType1);
      jSTypeArray0[3] = jSType1;
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node2.srcref(node1);
      node2.setIsSyntheticBlock(false);
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setLength(1848);
      Node node1 = new Node(1848, node0, node0, node0);
      node0.mayMutateArguments();
      node1.isDebugger();
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
//      try { 
        node1.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1848
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = new Node((-2178), (-2178), (-2178));
      Node node1 = Node.newNumber((double) 16);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      Node node3 = new Node(4, node2, node2, node1, node2, (-305), (-3268));
      Node node4 = Node.newString((-2079), ":RJc>qf$l", 31, 932);
      node4.setQuotedString();
      node3.setType(11);
      node4.setOptionalArg(false);
      node3.isSwitch();
      node1.isNot();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setThrows();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node5 = Node.newString(4095, ":RJc>qf$l", 16, 55);
      node2.isGetElem();
      node5.getString();
      Node node6 = node4.useSourceInfoIfMissingFromForTree(node3);
      // Undeclared exception!
//      try { 
        node5.addChildBefore(node0, node6);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The existing child node of the parent should not be null.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFromExterns();
      node0.setSourceFileForTesting("second new child has existing parent");
      node0.children();
      node0.getChangeTime();
      Set<String> set0 = new HashSet<String>();
      node0.getString();
      node0.isWhile();
      node0.isComma();
      Node node1 = new Node(25, node0, node0, node0, node0, (-240), 51);
      node0.isParamList();
      Node.newString(2195, "iZvLz|G8(Z6;q#(%m");
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.getChangeTime();
      Node node2 = new Node(42, node0, node0, node0, node0);
      node2.isIn();
      node2.isFor();
      node0.removeProp(46);
      Node.newString(898, "length");
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node3.toString(true, false, true);
      node2.isGetterDef();
      node2.isNoSideEffectsCall();
      node2.isNE();
      node2.getIntProp(1508);
      node2.setCharno(2);
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.isQuotedString();
      Node node2 = node0.cloneNode();
      node0.setString("msg.jsdoc.function.varargs");
      node0.mayMutateGlobalStateOrThrow();
      node2.addChildrenToFront(node1);
      node1.getSideEffectFlags();
      Node node3 = null;
//      try {
        node3 = new Node(4095, node0, node1, 51, 51);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // second new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("9w");
      // Undeclared exception!
//      try { 
        node0.detachFromParent();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.extractCharno((-889));
      node1.putBooleanProp(3207, false);
      node1.hasMoreThanOneChild();
      node0.isGetElem();
      node1.copyInformationFrom(node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node2.addChildBefore(node3, node0);
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      Node node2 = node1.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.getAncestor(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.valueOf();
      Node node3 = new Node(1561, node2, node0, node0, node0, 47, 801);
      int int0 = 8;
      // Undeclared exception!
//      try { 
        node1.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = Node.newNumber(3362.4259466);
      node0.getIntProp(1997);
      node0.toString(true, true, true);
      Node node1 = node0.cloneNode();
      node1.removeChildren();
      node0.isBreak();
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = new Node(1771);
      Node node1 = Node.newString(56, "i.'!B):TlF0%K[IP");
      node0.setLineno(32);
      Node node2 = Node.newNumber(1.0, 38, (-4255));
      Node node3 = new Node(40, 43, 1178);
      node1.isAdd();
      node3.isThrow();
      node3.isNull();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      Node node4 = new Node(995);
      nodeArray0[3] = node4;
      nodeArray0[4] = node3;
      nodeArray0[5] = node0;
      nodeArray0[6] = node2;
      nodeArray0[7] = node2;
      nodeArray0[8] = node0;
      Node node5 = null;
//      try {
        node5 = new Node(1191, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = new Node(1178, 1178, 1178);
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      node0.setCharno(1178);
      Node node1 = new Node(16, 51, 49);
      node0.isReturn();
      // Undeclared exception!
//      try { 
        node0.toString(false, false, false);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 1178
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFromExterns();
      node0.setSourceFileForTesting("second new child has existing parent");
      node0.children();
      node0.getChangeTime();
      node0.getDirectives();
      node0.getString();
      node0.isCall();
      node0.isComma();
      Node node1 = new Node(25, node0, node0, node0, node0, (-240), 51);
      node0.isParamList();
      Node.newString(2195, "iZvLz|G8(Z6;q#(%m");
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      int int0 = (-1398);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-1398), nodeArray0, 53, (-636));
      Node node1 = new Node(30, node0, node0);
      node0.isEquivalentToShallow(node1);
      // Undeclared exception!
//      try { 
        node0.setDouble(0.7);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -1398
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("NOT_NULL");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      arrayList0.add(templateType0);
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node0 = Node.newNumber(0.0, 3422, 557);
      Node node1 = new Node(54, node0);
      Node node2 = new Node(36);
      Node node3 = Node.newNumber((double) 51, 15, 101);
      node0.getProp(112);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node3);
      node_NodeMismatch0.equals(node3);
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.getChangeTime();
      node1.putBooleanProp(2, false);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toString(true, false, true);
      node2.setWasEmptyNode(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(116);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.extractLineno(4096);
      node_SideEffectFlags3.areAllFlagsSet();
      node0.toStringTree();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      int int0 = 924;
      Node node0 = null;
//      try {
        node0 = new Node(924, (Node) null, (Node) null, (Node) null, 1913, 108);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("Object#Key");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      Node node0 = new Node(32);
      Node node1 = new Node(32, node0, node0, 53, 1198);
      node1.setChangeTime(29);
      Node node2 = new Node(57);
      node2.getAncestors();
      node1.getBooleanProp((-216));
      node1.cloneNode();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
//      try { 
        node3.setString(":>3KD,cJf R1@-CNw%");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // PARAM_LIST is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = Node.newString((-98), "p!");
      node0.setLineno((-98));
      Node node1 = Node.newNumber(0.0, 30, (-4255));
      Node node2 = new Node(0, 1153, 51);
      node2.type = 15;
      node2.isAdd();
      node2.isThrow();
      node0.isNull();
      node2.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      node0.setString("X(<]LXe)},omUK");
      Node.mergeLineCharNo(0, 16);
      node1.isCall();
      node2.isScript();
      Node node3 = new Node(54, node1, node0, 54, 55);
      node3.isLabel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dHlhq[,");
      node3.setLineno(1);
      node2.isFromExterns();
      node1.useSourceInfoFrom(node0);
      node3.getType();
      Node.newNumber((-3335.584588364601));
      node2.detachChildren();
      Node.newString(4, "X(<]LXe)},omUK");
      node_AncestorIterable0.iterator();
      node3.isNull();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      JSType[] jSTypeArray0 = new JSType[1];
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      node_SideEffectFlags3.setThrows();
      Node node0 = new Node((-1921));
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node0 = Node.newNumber((double) 124);
      node0.isBreak();
      node0.detachChildren();
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node1.isLocalResultCall();
      node0.cloneNode();
      node0.setString("msg.jsdoc.function.varargs");
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node0.setString("X(<]LXe)},omUK");
      Node.mergeLineCharNo(114, 12);
      node1.getSourceOffset();
      node0.isGetElem();
      node0.isReturn();
      node0.toString(true, true, true);
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.isGetProp();
      Node node2 = node0.cloneNode();
      node0.setString("msg.jsdoc.function.varargs");
      node0.isEquivalentToShallow(node1);
      node2.addChildrenToFront(node1);
      node1.getSideEffectFlags();
      node1.cloneTree();
      node2.getChangeTime();
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node2, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = new Node(1771);
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      Node node2 = Node.newString(0, "");
      node1.checkTreeEqualsImpl(node2);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      Node.mergeLineCharNo((-1654), (-649));
      node0.getSourceOffset();
      node2.isGetElem();
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.toString(false, false, false);
      node0.isQuotedString();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString(0, "qJG%$#GrCE");
      Node node2 = node0.clonePropsFrom(node1);
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.mayMutateGlobalStateOrThrow();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.getChangeTime();
      node2.addChildrenToBack(node1);
      node2.getChildCount();
      // Undeclared exception!
//      try { 
        node0.getChildAtIndex(113);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = Node.newNumber(272.91);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.getIntProp(359);
      node0.setCharno(26);
      Node node1 = Node.newNumber((double) 26, 2869, 1179);
      Node node2 = new Node(30, 15, 32);
      node0.toStringTree();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.addChildrenAfter(node1, (Node) null);
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = Node.newString("first new child has existing sibling");
      Node node1 = Node.newString("first new child has existing sibling");
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node1;
      nodeArray0[6] = node1;
      nodeArray0[7] = node1;
      Node node2 = null;
//      try {
        node2 = new Node(4095, nodeArray0, (-207), (-1294));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // duplicate child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("NOT_NULL");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      arrayList0.add(templateType0);
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1, true);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node((-1265), nodeArray0, (-1), (-293));
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = jSTypeRegistry2.createOptionalParameters(jSTypeArray0);
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      Node node2 = node0.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.getAncestor(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.valueOf();
      Node node3 = new Node(1561, node2, node0, node0, node0, 47, 801);
      int int0 = 8;
      // Undeclared exception!
//      try { 
        node1.setQuotedString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // not a StringNode
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = Node.newString("7}O9?Y\u0006H~pKiE");
      node0.setChangeTime(32);
      Node node1 = new Node(39);
      node1.getAncestors();
      node1.getBooleanProp(0);
      node0.cloneNode();
      node0.setString("msg.jsdoc.function.varargs");
      node0.isEquivalentToShallow(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      Node.mergeLineCharNo(114, 12);
      node1.getSourceOffset();
      node0.isGetElem();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      int int0 = 26;
      Node node0 = null;
//      try {
        node0 = new Node(26, (Node[]) null, 26, 152);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(354);
      node0.getBooleanProp(1145);
      node0.isThrow();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node((-2228));
      nodeArray0[0] = node0;
      Node node1 = new Node(35, node0, (-293), (-1834));
      node1.toString();
      node0.setSourceEncodedPosition(12);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = null;
      node1.isVarArgs();
      Node node2 = Node.newString(42, "Object#Key");
      node1.useSourceInfoFromForTree(node2);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      // Undeclared exception!
//      try { 
        modificationVisitor0.caseUnionType((UnionType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFromExterns();
      node0.setSourceFileForTesting("second new child has existing parent");
      node0.getChangeTime();
      node0.getDirectives();
      node0.getString();
      node0.isCall();
      node0.setDirectives((Set<String>) null);
      node0.isComma();
      Node node1 = new Node(25, node0, node0, node0, node0, (-240), 51);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newString("[");
      node0.isFromExterns();
      node0.setSourceFileForTesting("second new child has existing parent");
      node0.getChangeTime();
      node0.getDirectives();
      node0.getString();
      node0.isCall();
      node0.isComma();
      Node node1 = new Node(25, node0, node0, node0, node0, (-240), 51);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      int int0 = (-407);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-407));
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node node0 = new Node((-2178));
      Node node1 = null;
//      try {
        node1 = new Node(1175, (Node) null, (Node) null, node0, node0, (-2178), 40);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = new Node(0, 0, 4560);
      node0.setLineno(12);
      node0.putIntProp(0, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node0.setCharno(0);
      Node node1 = new Node(2712, 8, (-696));
      // Undeclared exception!
//      try { 
        node1.useSourceInfoFromForTree((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = new Node(354, (-82), 354);
      node0.getDirectives();
      // Undeclared exception!
//      try { 
        node0.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 354
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFromExterns();
      node0.setSourceFileForTesting("second new child has existing parent");
      node0.getChangeTime();
      node0.setSourceFileForTesting("");
      Node node1 = new Node(32, node0, node0);
      node1.getJsDocBuilderForNode();
//      try { 
        node1.setString("");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // TYPEOF is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("%QIC] S^}49L)Dp`z", false);
      node0.setVarArgs(true);
      Node node1 = new Node(4, node0);
      node1.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("%QIC] S^}49L)Dp`z", false);
      node0.putProp(1939, simpleSourceFile0);
      node0.isBreak();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.toString(true, false, false);
      node0.isGetterDef();
      node0.isNoSideEffectsCall();
      node0.getIntProp((-5109));
      node1.isTypeOf();
      node1.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-674));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = new Node(279);
      // Undeclared exception!
//      try { 
        Node.newString((String) null, (-2178), 56);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("NOT_NULL");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      arrayList0.add(templateType0);
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = Node.newNumber(0.0, 3422, 557);
      Node node2 = new Node(54, node1);
      Node node3 = new Node(36);
      Node.newNumber((double) 51, 15, 101);
      Node[] nodeArray0 = new Node[4];
      node1.children();
      nodeArray0[0] = node3;
      nodeArray0[1] = node0;
      nodeArray0[2] = node2;
      nodeArray0[3] = node3;
      Node node4 = null;
//      try {
        node4 = new Node(55, nodeArray0, 2, 52);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = Node.newNumber((-3326.8906502));
      node0.getIntProp(42);
      node0.setCharno(56);
      Node node1 = Node.newNumber((double) 40, 57, 0);
      Node node2 = new Node(52, 1023, (-3688));
      node1.toStringTree();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
//      try { 
        node0.addChildrenAfter((Node) null, node2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = Node.newNumber(272.91);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node node1 = new Node(50, node0, node0, 4095, 0);
      node0.checkTreeEqualsImpl(node1);
      node1.isNew();
      node0.isSyntheticBlock();
      node0.isLabel();
      node_SideEffectFlags2.setMutatesThis();
      node0.getSideEffectFlags();
      // Undeclared exception!
//      try { 
        node1.setDouble(0.0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 50
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = new Node(0, 0, 4560);
      node0.setLineno(12);
      node0.putIntProp(0, 0);
      Node node1 = null;
      node0.wasEmptyNode();
      node0.isThrow();
      node0.setSourceFileForTesting(")u");
      node0.isArrayLit();
      node0.mayMutateArguments();
      node0.getSourceOffset();
      int int0 = 50;
      // Undeclared exception!
//      try { 
        node0.getExistingIntProp((-2147479553));
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // missing prop: -2147479553
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString("hVwo#MB");
      Node node1 = new Node(1023, node0, node0, node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node((-2220), node1, node0, node1, 37, (-2259));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = new Node(1178, 1178, 1178);
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setAllFlags();
      node0.setCharno(1178);
      Node node1 = new Node(16, 51, 49);
      node0.useSourceInfoFromForTree(node1);
      assertEquals(49, node0.getCharno());
      
      Node node2 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      node2.getProp((-314));
      node1.getSourceFileName();
      boolean boolean0 = node1.isSyntheticBlock();
      assertFalse(boolean0);
      
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("9w");
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = Node.newString("", 1023, 1023);
      node0.isIf();
      Node node1 = node0.cloneTree();
      node1.getJSDocInfo();
      node0.isTry();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      // Undeclared exception!
//      try { 
        node1.getAncestor((-2922));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(2, node0, node0);
      node0.addChildrenToBack(node1);
      Node node2 = null;
//      try {
        node2 = new Node(114, node1, 48, 388);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node((-2228));
      nodeArray0[0] = node0;
      Node node1 = new Node(35, node0, (-293), (-1834));
      node1.toString();
      node0.setSourceEncodedPosition(12);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = null;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
//      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newString("", 1023, 1023);
      Node node1 = new Node(0, node0, 2, 16);
      node1.clonePropsFrom(node0);
      Node node2 = node1.removeFirstChild();
      node2.getBooleanProp(1323);
      node1.isLocalResultCall();
      node1.setLineno(0);
      node2.cloneTree();
      // Undeclared exception!
//      try { 
        node1.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(922);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.clearAllFlags();
      node0.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.extractCharno((-889));
      node1.putBooleanProp(3207, false);
      node1.hasMoreThanOneChild();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node_SideEffectFlags4.valueOf();
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.getChangeTime();
      node1.putBooleanProp(2, false);
      Node node2 = new Node(42, node0, node0, node0, node0);
      node2.isIn();
      node2.isFor();
      node0.removeProp(46);
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node3.toString(true, false, true);
      node2.isGetterDef();
      node2.isNoSideEffectsCall();
      Node node4 = null;
//      try {
        node4 = new Node(85, (Node) null, (Node) null, node0, node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      int int0 = 2291;
      Node node0 = null;
//      try {
        node0 = new Node(0, (Node[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString("Q4]2C");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      // Undeclared exception!
//      try { 
        node0.replaceChild(node1, node1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = new Node(40, 40, 1589);
      InputId inputId0 = new InputId("com.google.javascript.rhino.jstype.FunctionType");
      node0.setInputId(inputId0);
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      int int0 = 49;
      int int1 = 2435;
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newNumber(0.0);
      nodeArray0[0] = node0;
      Node node1 = Node.newString(53, "");
      nodeArray0[1] = node1;
      Node node2 = new Node(50, node1, 0, (-2922));
      nodeArray0[2] = node2;
      node0.isEquivalentToTyped(node0);
      Node node3 = null;
//      try {
        node3 = new Node(29, node1, node0, (-1072), (-193));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // first new child has existing parent
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = new Node(0, 0, 4539);
      node0.setLineno(0);
      node0.putIntProp(0, 0);
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.isEquivalentTo((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = Node.newNumber(476.84280638929, 86, 86);
      node0.isRegExp();
      Node node1 = new Node(4);
      node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node node0 = Node.newNumber(272.91);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      // Undeclared exception!
//      try { 
        node0.setSideEffectFlags(node_SideEffectFlags4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFromExterns();
      node0.setSourceFileForTesting("second new child has existing parent");
      node0.getChangeTime();
      node0.getDirectives();
      node0.getString();
      node0.isCall();
      node0.isComma();
      Node node1 = new Node(25, node0, node0, node0, node0, (-240), 51);
      // Undeclared exception!
//      try { 
        node0.replaceChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      immutableList0.toArray();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.mayMutateGlobalStateOrThrow();
      node0.getProp(3636);
      node0.putProp(3636, (Object) null);
      node0.putBooleanProp(3025, true);
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = Node.newNumber((-2923.4295403), 49, 0);
      node1.getChangeTime();
      node1.putBooleanProp(2, false);
      Node node2 = new Node(42, node0, node0, node0, node0);
      node2.isIn();
      node2.isFor();
      node0.removeProp(46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node1.getCharno();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.extractCharno((-1711));
      node2.putBooleanProp(30, true);
      node2.hasMoreThanOneChild();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node_SideEffectFlags0.valueOf();
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = new Node(1026);
      Node node1 = Node.newString(0, "", 29, 31);
      node0.isEquivalentTo(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      // Undeclared exception!
//      try { 
        node1.addChildAfter(node0, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = Node.newNumber((-2272.0413694352));
      Node node1 = null;
      // Undeclared exception!
//      try { 
        node0.addChildrenToFront((Node) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node node0 = Node.newString("qJG%$#GrCE");
      node0.toString(false, false, false);
      node0.isQuotedString();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString(0, "qJG%$#GrCE");
      node0.clonePropsFrom(node1);
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node0.mayMutateGlobalStateOrThrow();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node node2 = Node.newString(0, "STRING qJG%$#GrCE");
      // Undeclared exception!
//      try { 
        node0.removeChild(node2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node node0 = Node.newNumber(746.020135);
      node0.getStaticSourceFile();
      // Undeclared exception!
//      try { 
        Node.newString(26, (String) null, 4, 43);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // StringNode: str is null
//         //
//         verifyException("com.google.javascript.rhino.Node$StringNode", e);
//      }
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node node0 = Node.newString(1206, "msg.jsdoc.function.varargs");
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      int int0 = 14;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[6];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseNullType();
      jSTypeArray0[0] = jSType0;
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      JSType jSType1 = node0.getJSType();
      jSTypeArray0[1] = null;
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createFunctionTypeWithVarArgs(jSType1, jSTypeArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS", 2152, 309);
      node0.getProp(2121);
      node0.addSuppression("Q]\"Kkj(=f");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType("com.google.javascript.rhino.jstype.NoObjectType", node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      int int0 = 111;
      Node[] nodeArray0 = new Node[5];
      Node node0 = Node.newString("DICT", 111, 1124);
      nodeArray0[0] = node0;
      Node node1 = Node.newNumber((-1.0), 703, 30);
      nodeArray0[1] = node1;
      Node node2 = new Node(33, node1);
      nodeArray0[2] = node2;
      Node node3 = new Node(40);
      nodeArray0[3] = node3;
      Node node4 = Node.newNumber((double) 50, 44, (-1714));
      nodeArray0[4] = node4;
      Node node5 = null;
//      try {
        node5 = new Node(111, nodeArray0, 148, 48);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = Node.newString("first new child has existing sibling");
      int int0 = (-3970);
//      try { 
        node0.setDouble(3939.824281751811);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // STRING first new child has existing sibling is not a string node
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = Node.newString("", 1023, 1023);
      Node node1 = new Node(0, node0, 2, 16);
      Node node2 = node1.removeFirstChild();
      node2.getBooleanProp(1323);
      node1.isLocalResultCall();
      node1.setLineno(0);
      // Undeclared exception!
//      try { 
        node1.getString();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 0
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString(0, "%\"p", 0, 0);
      Node node1 = new Node((-1389), node0, node0);
      Node node2 = null;
//      try {
        node2 = new Node(0, node1, node1, node0, 31, 0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node node0 = new Node((-2613), 175, 1095);
      Node node1 = new Node(4572, 50, 2399);
      node0.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("%QIC] S^}49L)Dp`z", false);
      node0.putProp(1939, simpleSourceFile0);
      node0.isBreak();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node((-2228));
      nodeArray0[0] = node0;
      Node node1 = new Node(35, node0, (-293), (-1834));
      Node node2 = new Node(1040, node1);
      nodeArray0[1] = node2;
      Node node3 = Node.newString((-3756), "first new child has existing sibling", (-1069), 9);
      nodeArray0[2] = node3;
      Node node4 = null;
//      try {
        node4 = new Node((-2228), nodeArray0, (-2612), 2761);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp((-1376));
      node0.toString(true, false, true);
      node0.isFromExterns();
      node0.setLength((-1376));
      node0.putBooleanProp((-1610), true);
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(37, node0, node0, node0, 0, 92);
      Node node2 = node1.clonePropsFrom(node0);
      // Undeclared exception!
//      try { 
        node2.getChildBefore(node1);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // node is not a child
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString();
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.toString(true, false, false);
      node0.isGetterDef();
      node0.isNoSideEffectsCall();
      node0.getIntProp((-5109));
      node2.setCharno(0);
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = new Node(1771);
      JSType jSType0 = null;
      node0.setJSType((JSType) null);
      Node node1 = new Node(1, 47, (-792));
      String string0 = "";
      Node node2 = Node.newString(0, "");
      node2.addChildrenToFront(node0);
      node2.getSideEffectFlags();
      Node node3 = node2.cloneTree();
      node3.getChangeTime();
      // Undeclared exception!
//      try { 
        node0.addChildAfter(node1, node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(2, node0, node0);
      node0.addChildrenToBack(node1);
      node0.isIf();
      // Undeclared exception!
//      try { 
        node0.cloneTree();
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node node0 = new Node(355, 355, 355);
      node0.setSourceFileForTesting("");
      node0.getJsDocBuilderForNode();
      // Undeclared exception!
//      try { 
        node0.setString("<invalid>");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // 355
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = Node.newNumber((-3326.8906502));
      node0.getIntProp(570);
      node0.setCharno(570);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node.newNumber((double) 57, 4095, 2);
      node0.setWasEmptyNode(true);
      Node.mergeLineCharNo(1, 2012);
      node1.isDo();
      node1.setDouble(3323.73468560255);
      // Undeclared exception!
//      try { 
        node1.getChildAtIndex(310);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node node0 = Node.newNumber((-936.0));
      Node node1 = new Node((-2167), node0, node0, node0);
      node0.setType(43);
      node1.wasEmptyNode();
      node1.setChangeTime(53);
      node1.isInstanceOf();
      node0.setLength(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      jSDocInfo1.getThisType();
      jSDocInfo0.setReturnType((JSTypeExpression) null);
      node1.getAncestors();
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      jSDocInfo0.setExport(false);
      // Undeclared exception!
//      try { 
        node2.replaceChild(node1, node0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The new child node already has a parent.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      Node node0 = Node.newNumber((-1503.1269180479));
      boolean boolean0 = true;
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(38, node0, node0, node0, (-1398), 36);
      // Undeclared exception!
//      try { 
        node0.removeChildAfter(node1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // prev is not a child of this node.
//         //
//         verifyException("com.google.common.base.Preconditions", e);
//      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.areAllFlagsSet();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[5];
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 0);
      JSType.toMaybeFunctionType((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
//      try { 
        jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
//      }
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = Node.newString((-98), "");
      node0.setLineno((-98));
      Node.newNumber(0.0, 30, (-4255));
      Node node1 = new Node(0, 1153, 51);
      node1.type = 15;
      // Undeclared exception!
//      try { 
        node0.toStringTree();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // -98
//         //
//         verifyException("com.google.javascript.rhino.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("NOT_NULL");
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      arrayList0.add(templateType0);
      jSTypeRegistry0.setTemplateTypeNames(arrayList0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.getStaticSourceFile();
      node0.isDefaultCase();
      node0.siblings();
      node0.getLength();
      TemplateType templateType1 = jSTypeRegistry0.getObjectElementKey();
      TemplateType templateType2 = jSTypeRegistry0.getObjectIndexKey();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType1, templateType1, templateType1, templateType1, templateType1, templateType2, templateType1, templateType2, templateType2, templateType2);
      TemplateType templateType3 = templateType2.toMaybeTemplateType();
      // Undeclared exception!
//      try { 
        immutableList0.add(templateType3);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.common.collect.ImmutableCollection", e);
//      }
  }
}
