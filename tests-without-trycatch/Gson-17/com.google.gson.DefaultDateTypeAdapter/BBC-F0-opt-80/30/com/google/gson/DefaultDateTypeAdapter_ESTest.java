/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 04:41:49 GMT 2021
 */

package com.google.gson;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.DefaultDateTypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.JsonPrimitive;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.CharArrayWriter;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.nio.CharBuffer;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.time.format.DateTimeParseException;
import java.util.Date;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultDateTypeAdapter_ESTest extends DefaultDateTypeAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = null;
//      try {
        defaultDateTypeAdapter0 = new DefaultDateTypeAdapter((Class<? extends Date>) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Date type must be one of class java.util.Date, class java.sql.Timestamp, or class java.sql.Date but was null
//         //
//         verifyException("com.google.gson.DefaultDateTypeAdapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<Timestamp> class0 = Timestamp.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "2029");
      Boolean.valueOf("2029");
      Boolean.valueOf(false);
      JsonPrimitive jsonPrimitive0 = new JsonPrimitive("2029");
      Class<java.sql.Date> class1 = java.sql.Date.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter1 = new DefaultDateTypeAdapter(class1, "2029");
      defaultDateTypeAdapter1.fromJsonTree(jsonPrimitive0);
      DefaultDateTypeAdapter defaultDateTypeAdapter2 = new DefaultDateTypeAdapter(class0);
      StringReader stringReader0 = new StringReader("2029");
      JsonReader jsonReader0 = new JsonReader(stringReader0);
      // Undeclared exception!
//      try { 
        defaultDateTypeAdapter2.read(jsonReader0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // The date should be a string value
//         //
//         verifyException("com.google.gson.DefaultDateTypeAdapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Boolean boolean0 = new Boolean("");
      MockDate mockDate0 = new MockDate(0, 0, (-1970));
      Class<java.sql.Date> class0 = java.sql.Date.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0);
      MockDate.UTC(2198, 0, (-125), 988, 0, 239);
      defaultDateTypeAdapter0.toJsonTree(mockDate0);
      DefaultDateTypeAdapter defaultDateTypeAdapter1 = null;
//      try {
        defaultDateTypeAdapter1 = new DefaultDateTypeAdapter(class0, 2198, 39);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal time style 39
//         //
//         verifyException("java.text.DateFormat", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Timestamp> class0 = Timestamp.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "2029");
      Boolean boolean0 = new Boolean("");
      MockDate mockDate0 = new MockDate((-1970), (-1970), 0);
      Class<java.sql.Date> class1 = java.sql.Date.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter1 = new DefaultDateTypeAdapter(class1);
      MockDate.UTC((-1970), 1, 0, 2198, (-1970), 0);
      JsonElement jsonElement0 = defaultDateTypeAdapter1.toJsonTree(mockDate0);
      Date date0 = defaultDateTypeAdapter1.fromJsonTree(jsonElement0);
      assertNotNull(date0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Timestamp> class0 = Timestamp.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "2029");
      Boolean boolean0 = new Boolean("");
      Boolean.valueOf(false);
      JsonPrimitive jsonPrimitive0 = new JsonPrimitive("2029");
      defaultDateTypeAdapter0.fromJsonTree(jsonPrimitive0);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      JsonReader jsonReader0 = new JsonReader(pipedReader0);
      JsonReader jsonReader1 = new JsonReader(pipedReader0);
      DefaultDateTypeAdapter defaultDateTypeAdapter1 = null;
//      try {
        defaultDateTypeAdapter1 = new DefaultDateTypeAdapter((-1952), (-1952));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal time style -1952
//         //
//         verifyException("java.text.DateFormat", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(1, 1);
      JsonPrimitive jsonPrimitive0 = new JsonPrimitive("ukz4xlZhT55r%");
      MockDate mockDate0 = new MockDate(0, 0, 1);
      JsonElement jsonElement0 = defaultDateTypeAdapter0.toJsonTree(mockDate0);
      Date date0 = defaultDateTypeAdapter0.fromJsonTree(jsonElement0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = null;
//      try {
        defaultDateTypeAdapter0 = new DefaultDateTypeAdapter((Class<? extends Date>) null, "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Date type must be one of class java.util.Date, class java.sql.Timestamp, or class java.sql.Date but was null
//         //
//         verifyException("com.google.gson.DefaultDateTypeAdapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'");
      Class<Timestamp> class0 = Timestamp.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "\u2029");
      Boolean boolean0 = new Boolean("'");
      DefaultDateTypeAdapter defaultDateTypeAdapter1 = null;
//      try {
        defaultDateTypeAdapter1 = new DefaultDateTypeAdapter(class0, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.text.SimpleDateFormat", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = null;
//      try {
        defaultDateTypeAdapter0 = new DefaultDateTypeAdapter((Class<? extends Date>) null, (DateFormat) null, dateFormat0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Date type must be one of class java.util.Date, class java.sql.Timestamp, or class java.sql.Date but was null
//         //
//         verifyException("com.google.gson.DefaultDateTypeAdapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Timestamp> class0 = Timestamp.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "\u2029");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Boolean boolean0 = new Boolean("");
      Class<java.sql.Date> class1 = java.sql.Date.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter1 = null;
//      try {
        defaultDateTypeAdapter1 = new DefaultDateTypeAdapter(class1, (-54));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal date style -54
//         //
//         verifyException("java.text.DateFormat", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(0, 0);
      StringReader stringReader0 = new StringReader("Expected a string but was ");
      JsonReader jsonReader0 = new JsonReader(stringReader0);
//      try { 
        defaultDateTypeAdapter0.read(jsonReader0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
//         //
//         verifyException("com.google.gson.stream.JsonReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<java.sql.Date> class0 = java.sql.Date.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "");
      String string0 = "";
      Boolean boolean0 = new Boolean("+w!N\"");
      JsonPrimitive jsonPrimitive0 = new JsonPrimitive("");
      MockFileWriter mockFileWriter0 = new MockFileWriter("+w!N\"", false);
      JsonWriter jsonWriter0 = new JsonWriter(mockFileWriter0);
      JsonWriter jsonWriter1 = jsonWriter0.beginArray();
      JsonWriter jsonWriter2 = jsonWriter1.nullValue();
      JsonWriter jsonWriter3 = jsonWriter2.value(false);
      JsonWriter jsonWriter4 = jsonWriter3.value((-922337203685477580L));
      MockDate mockDate0 = new MockDate(867L);
      defaultDateTypeAdapter0.write(jsonWriter4, (Date) mockDate0);
      jsonPrimitive0.getAsJsonPrimitive();
      // Undeclared exception!
//      try { 
        defaultDateTypeAdapter0.fromJsonTree(jsonPrimitive0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // 
//         //
//         verifyException("com.google.gson.DefaultDateTypeAdapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<Timestamp> class0 = Timestamp.class;
      String string0 = "Y:L} 6";
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "Y:L} 6");
      Boolean boolean0 = new Boolean("Y:L} 6");
      boolean boolean1 = true;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append('\\');
      JsonWriter jsonWriter0 = new JsonWriter(charArrayWriter1);
      JsonWriter jsonWriter1 = jsonWriter0.name("");
      java.sql.Date date0 = new java.sql.Date((-1L));
      // Undeclared exception!
//      try { 
        defaultDateTypeAdapter0.write(jsonWriter1, (Date) date0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Nesting problem.
//         //
//         verifyException("com.google.gson.stream.JsonWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<java.sql.Date> class0 = java.sql.Date.class;
      String string0 = "\\u2029";
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "\u2029");
      MockDate mockDate0 = new MockDate(1, (-1144), 1, 0, 0, (-2753));
      // Undeclared exception!
//      try { 
        defaultDateTypeAdapter0.write((JsonWriter) null, (Date) mockDate0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.gson.DefaultDateTypeAdapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<java.sql.Date> class0 = java.sql.Date.class;
      MockDateFormat.getDateTimeInstance();
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "");
      StringReader stringReader0 = new StringReader("");
      JsonReader jsonReader0 = new JsonReader(stringReader0);
//      try { 
        defaultDateTypeAdapter0.read(jsonReader0);
//        fail("Expecting exception: EOFException");
      
//      } catch(EOFException e) {
//         //
//         // End of input at line 1 column 1 path $
//         //
//         verifyException("com.google.gson.stream.JsonReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(0, 0);
      // Undeclared exception!
//      try { 
        defaultDateTypeAdapter0.read((JsonReader) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.gson.DefaultDateTypeAdapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<java.sql.Date> class0 = java.sql.Date.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "\u2029");
      Boolean boolean0 = new Boolean("7r`<+gJ_O,%");
      JsonPrimitive jsonPrimitive0 = new JsonPrimitive(boolean0);
      // Undeclared exception!
//      try { 
        defaultDateTypeAdapter0.fromJsonTree(jsonPrimitive0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // The date should be a string value
//         //
//         verifyException("com.google.gson.DefaultDateTypeAdapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(2, 0);
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 2);
      defaultDateTypeAdapter0.toJsonTree(mockDate0);
      // Undeclared exception!
//      try { 
        defaultDateTypeAdapter0.read((JsonReader) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.gson.DefaultDateTypeAdapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 2;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(2, 0);
      PipedReader pipedReader0 = new PipedReader();
      JsonReader jsonReader0 = new JsonReader(pipedReader0);
      jsonReader0.close();
      // Undeclared exception!
//      try { 
        defaultDateTypeAdapter0.read(jsonReader0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // JsonReader is closed
//         //
//         verifyException("com.google.gson.stream.JsonReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<java.sql.Date> class0 = java.sql.Date.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "\u2029");
      int int0 = (-2392);
      DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
      DateFormat dateFormat1 = MockDateFormat.getDateInstance();
      DefaultDateTypeAdapter defaultDateTypeAdapter1 = new DefaultDateTypeAdapter(class0, dateFormat0, dateFormat1);
      DefaultDateTypeAdapter defaultDateTypeAdapter2 = null;
//      try {
        defaultDateTypeAdapter2 = new DefaultDateTypeAdapter((-2392), (-2392));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal time style -2392
//         //
//         verifyException("java.text.DateFormat", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(2, 0);
      JsonReader jsonReader0 = null;
      Class<Timestamp> class0 = Timestamp.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter1 = null;
//      try {
        defaultDateTypeAdapter1 = new DefaultDateTypeAdapter(class0, "fn`.a4Wg@");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal pattern character 'f'
//         //
//         verifyException("java.text.SimpleDateFormat", e);
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<Timestamp> class0 = Timestamp.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, 0, 0);
      Writer writer0 = null;
      CharBuffer charBuffer0 = CharBuffer.allocate(40);
      // Undeclared exception!
//      try { 
        MockLocalDate.parse((CharSequence) charBuffer0);
//        fail("Expecting exception: DateTimeParseException");
      
//      } catch(DateTimeParseException e) {
//         //
//         // Text '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000' could not be parsed at index 0
//         //
//         verifyException("java.time.format.DateTimeFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<Date> class0 = Date.class;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DateFormat dateFormat0 = MockDateFormat.getDateInstance(0, locale0);
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, dateFormat0, dateFormat0);
      defaultDateTypeAdapter0.toString();
      Date date0 = null;
      defaultDateTypeAdapter0.toJson((Date) null);
      PipedReader pipedReader0 = new PipedReader();
      JsonReader jsonReader0 = new JsonReader(pipedReader0);
//      try { 
        defaultDateTypeAdapter0.read(jsonReader0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Pipe not connected
//         //
//         verifyException("java.io.PipedReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<java.sql.Date> class0 = java.sql.Date.class;
      String string0 = "\\u2029";
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "\u2029");
      int int0 = (-2392);
      StringWriter stringWriter0 = null;
//      try {
        stringWriter0 = new StringWriter((-2392));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative buffer size
//         //
//         verifyException("java.io.StringWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<Date> class0 = Date.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, (DateFormat) null, (DateFormat) null);
      // Undeclared exception!
//      try { 
        defaultDateTypeAdapter0.toString();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.gson.DefaultDateTypeAdapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(2, 0);
      // Undeclared exception!
//      try { 
        defaultDateTypeAdapter0.read((JsonReader) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.gson.DefaultDateTypeAdapter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Class<Timestamp> class0 = Timestamp.class;
      DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, dateFormat0, dateFormat0);
      String string0 = defaultDateTypeAdapter0.toString();
      assertEquals("DefaultDateTypeAdapter(SimpleDateFormat)", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<java.sql.Date> class0 = java.sql.Date.class;
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, dateFormat0, dateFormat0);
      // Undeclared exception!
//      try { 
        defaultDateTypeAdapter0.fromJson((Reader) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // in == null
//         //
//         verifyException("com.google.gson.stream.JsonReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Class<Timestamp> class0 = Timestamp.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0);
      String string0 = "";
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter("");
//        fail("Expecting exception: FileNotFoundException");
      
//      } catch(Throwable e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Class<Date> class0 = Date.class;
      DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, 0);
      MockPrintStream mockPrintStream0 = null;
//      try {
        mockPrintStream0 = new MockPrintStream("n", "");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // 
//         //
//         verifyException("java.io.PrintStream", e);
//      }
  }
}
