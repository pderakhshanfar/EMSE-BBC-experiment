/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 15:02:57 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.NoSuchElementException;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding((-284));
      helpFormatter0.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix((String) null);
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      int int0 = 0;
      helpFormatter0.defaultWidth = 0;
      helpFormatter0.defaultLongOptPrefix = "";
      PrintWriter printWriter0 = null;
      Options options0 = new Options();
      // Undeclared exception!
      helpFormatter0.printHelp("}gT", options0, false);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("-");
      Options options0 = new Options();
      helpFormatter0.renderOptions(stringBuffer0, 1070, options0, 2381, 1070);
      helpFormatter0.defaultLongOptPrefix = null;
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "-";
      helpFormatter0.defaultLongOptPrefix = "-";
      helpFormatter0.setLeftPadding(0);
      Options options0 = new Options();
      Option option0 = new Option((String) null, "-", false, "arg");
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      helpFormatter0.printOptions((PrintWriter) null, 0, options1, 0, 2370);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasShortOption((String) null);
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOption((String) null, "arg", false, "arg");
      options0.addOption((String) null, true, "CPn;tVAFyKCPi~t\t5");
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultOptPrefix = "";
      helpFormatter0.rtrim("");
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Option option0 = new Option("VC0O1Q2k", true, "--");
      optionGroup0.addOption(option0);
      Option option1 = new Option("", true, "");
      OptionGroup optionGroup1 = optionGroup0.addOption(option1);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) null, 3, "", options1);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName((String) null);
      helpFormatter0.rtrim("k(zIJLx'kKj.(FA'n4");
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = null;
      String string0 = "3,e";
      helpFormatter0.setLeftPadding(2019);
      helpFormatter0.printHelp(1076, "3,e", "PlH", options0, "PlH");
      helpFormatter0.getNewLine();
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter("it)tz", "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. 
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[2}8<+.Q8");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("4>0u8b=&hu:*`vlCO<");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "4>0u8b=&hu:*`vlCO<";
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) "4>0u8b=&hu:*`vlCO<";
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) "4>0u8b=&hu:*`vlCO<";
      objectArray0[5] = (Object) helpFormatter0;
      objectArray0[6] = (Object) "[2}8<+.Q8";
      objectArray0[7] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.format("[2}8<+.Q8", objectArray0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printOptions(printWriter0, 683, (Options) null, 683, 64);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      options0.getOptions();
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 63, 63, " :: ");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(";hPSES{}-:FF_~kYXh");
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 345, "IA}]FPUzjm]/vcr<1q", "--", options0, 74, 74, (String) null, false);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qVLc");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 69, "qVLc", "", options0, 1, 1, "r4", false);
      Options options1 = options0.addOption((String) null, "\n", false, "--");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 3, "-", options0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printOptions(mockPrintWriter0, 1, options1, 69, 4862);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setDescPadding((-1980));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp(74, "\n", "arg", options0, "arg");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "--", true, "arg");
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      optionGroup0.setRequired(true);
      option0.toString();
      MockPrintStream mockPrintStream0 = new MockPrintStream(" ");
      option0.setArgName("");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1), "-", options1);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("", (Options) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Options options0 = new Options();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = false;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qVLc");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, 0, "qVLc");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix("<%XpY");
      helpFormatter0.setWidth(0);
      helpFormatter0.getWidth();
      MockFile mockFile0 = null;
//      try {
        mockFile0 = new MockFile((URI) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.File", e);
//      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      Option option0 = new Option("arg", ":c|r2fxjnA3U.dS|4", true, "arg");
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      String string0 = HelpFormatter.DEFAULT_LONG_OPT_SEPARATOR;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("A");
      StringBuffer stringBuffer0 = new StringBuffer(3);
      // Undeclared exception!
//      try { 
        helpFormatter1.renderOptions(stringBuffer0, 3, options1, 1, 1);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setDescPadding((-1998));
      helpFormatter0.getDescPadding();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-1998), (-1998), "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("*P=6");
      File file0 = MockFile.createTempFile("*P=6", "--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      int int0 = 64;
      String string0 = "";
      helpFormatter0.setWidth(64);
      String string1 = "+r _P3>pJ~UbidV";
      Options options0 = null;
      int int1 = 44;
      String string2 = "";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("org.apache.commons.cli.Options", "+r _P3>pJ~UbidV", (Options) null, "");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.toString();
      Option option0 = new Option("arg", ":c|r2fxjnA3U.dS|4", true, "arg");
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      option0.toString();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("A");
      option0.setArgName("");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.printHelp(563, "arg", "--", options1, "--");
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", ":c|r2fxjnA3U.dS|4", true, "arg");
      optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup0);
      option0.toString();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("A");
      option0.setArgName("");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 13, "dO", options0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-567);
      helpFormatter0.setSyntaxPrefix("5#>al?;H)");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)123;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)50;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((-567), "=*_j", "1h ", (Options) null, "_o-[S3", true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(3);
      helpFormatter0.defaultSyntaxPrefix = "--";
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 3466, "\n");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.defaultSyntaxPrefix = "";
      helpFormatter0.printHelp(1127, "6q&S\"1=.HP1<i 8`-,=", (String) null, options0, "arg");
      helpFormatter0.getArgName();
      helpFormatter0.getSyntaxPrefix();
      // Undeclared exception!
//      try { 
        helpFormatter1.createPadding((-1443));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("mf", "");
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption("?", true, "");
      helpFormatter0.printHelp(74, " ", "usage: ", options2, "usage: ");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", ":c|r2fxjnA3U.dS|4", true, (String) null);
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      option0.setArgName("usage: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      helpFormatter0.printHelp(40, "JS", "arg", options1, "HS-MONQbs(v");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "arg", true, "arg");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("--");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      option0.setArgName(" [_~ Q$&");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0);
      // Undeclared exception!
//      try { 
        helpFormatter2.printUsage((PrintWriter) mockPrintWriter0, 3, "", options1);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("EU", (String) null);
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(659, "--", "[ option: ", options1, "usage: ");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.defaultLeftPad = 4041;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      PrintWriter printWriter0 = null;
      helpFormatter0.setLeftPadding(4041);
      int int0 = 9;
      Options options0 = new Options();
      helpFormatter0.renderOptions((StringBuffer) null, 9, options0, 9, 32);
      helpFormatter0.setNewLine("-");
      String string0 = "";
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) null, (-2758), "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      OptionGroup optionGroup0 = new OptionGroup();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("h~a9+`<juLGM'");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptSeparator("v'j9GN`aXiPC@f");
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "");
      options1.addOption("arg", "56$Dk!:#Nl", true, "--");
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 3, "-", options0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      mockPrintWriter0.print((double) 74);
      StringBuffer stringBuffer0 = new StringBuffer(3);
      stringBuffer0.append((CharSequence) "-");
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, "Illegal option name '");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptSeparator("arg");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter2.printHelp((PrintWriter) mockPrintWriter0, 74, (String) null, "arg", options0, 74, 74, "]", false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Locale locale0 = Locale.FRANCE;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 521, "org.apache.commons.cli.HelpFormatter", (String) null, options0, 1675, 2, "-", false);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1675, "usage: ", (Options) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qVLc");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter0.printHelp(0, "2", "p%I e^`-B]Gc1A,w", options0, "C(Ij4j+[6fr</N");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      String string0 = null;
      Option option0 = new Option((String) null, false, "\n");
      optionGroup0.addOption(option0);
      String string1 = "GW9BY";
      Option option1 = new Option("GW9BY", "-");
      OptionGroup optionGroup1 = optionGroup0.addOption(option1);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(1879, "VR %w\"rxEZ+3#D*74'", "EU", options1, "\n");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptSeparator("arg");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 13, "\n", "\n", options0, 1, 3, "--", false);
      HelpFormatter helpFormatter3 = new HelpFormatter();
      helpFormatter3.getLeftPadding();
      helpFormatter0.printOptions(mockPrintWriter0, 74, options0, 1, 64);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Options options0 = new Options();
      options0.getOption("YiM");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      helpFormatter0.renderOptions(stringBuffer0, 35, options0, 35, 35);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((-897), "", "usage: ", options0, "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "kb");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.getNewLine();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, true);
      Locale locale0 = Locale.UK;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) helpFormatter0;
      Object object0 = new Object();
      objectArray0[5] = object0;
      objectArray0[6] = (Object) pipedOutputStream0;
      objectArray0[7] = (Object) locale0;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, " ", objectArray0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage(printWriter0, (-887), "[");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptSeparator(" | ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("usage: ");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 74, "qVLc", "usage: ", options0, 1, 74, "", false);
      helpFormatter1.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", true, "-");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(1, "sf[;/pI4v\"uBao", "sf[;/pI4v\"uBao", options1, "sf[;/pI4v\"uBao", true);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1200, options0, 1200, 62);
      helpFormatter1.renderWrappedText(stringBuffer1, 1, 1, "\n");
      helpFormatter0.setLongOptSeparator(">To>_c8)O!$Bs)K");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(32);
      helpFormatter0.renderOptions(stringBuffer0, 74, options0, 3, 74);
      helpFormatter1.setLongOptSeparator("org.apache.commons.cli.HelpFormatter$");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = new Options();
      helpFormatter0.printHelp(1879, "EU", "EU", options1, "EU", true);
      Option option0 = new Option("GW9BY", "-");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp(1879, "VR %w\"rxEZ+3#D*74'", "EU", options2, "");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(3);
      int int0 = 0;
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, "");
      helpFormatter0.setNewLine("_,-#");
      int int1 = (-465);
      File file0 = null;
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter((File) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.File", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      String string0 = "Illegal option name '";
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 1, (-267), "Illegal option name '");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[9];
      locale0.toLanguageTag();
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) locale0;
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = (Object) locale0;
      objectArray1[1] = (Object) mockPrintWriter0;
      objectArray1[2] = (Object) locale0;
      objectArray1[3] = (Object) mockPrintWriter0;
      objectArray1[4] = (Object) helpFormatter0;
      objectArray1[5] = (Object) mockPrintWriter0;
      mockPrintWriter0.printf(locale0, "-", objectArray1);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 10, "wF^plAv2z]z=");
      helpFormatter0.findWrapPos("Illegal option name '", 10, 9);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter1.findWrapPos("\n", (-1726), 10);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[9];
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) locale0;
      objectArray0[5] = (Object) locale0;
      objectArray0[6] = (Object) locale0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-");
      objectArray0[7] = (Object) "arg";
      objectArray0[8] = (Object) "\n";
      mockPrintWriter0.printf(locale0, "-", objectArray0);
      Options options0 = new Options();
      helpFormatter0.getLeftPadding();
      helpFormatter0.rtrim((String) null);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("[");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("}/l^;DBx&5IX");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("z`(UVFgiuqDQfc&b*u");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((-2), "\n", "-", options0, "org.apache.commons.cli.HelpFormatter$1");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptSeparator("\n");
      Options options1 = new Options();
      helpFormatter1.getLeftPadding();
      helpFormatter0.rtrim("\n");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Locale locale0 = Locale.KOREA;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      options0.addOption((String) null, "--", true, "usage: ");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1979), " [ARG]", " [ARG]", options0, 100, 1414, "arg", true);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.getOptions();
      helpFormatter0.printHelp("arg", "p", options0, "S0m`JF>+/)/;s", true);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      options0.addOption("arg", "9Wr'8<d?ft[M.Vm@!", true, "&T");
      helpFormatter0.setLongOptSeparator(">A19BD^,j9!Q2tM");
      helpFormatter0.printHelp(43, "9Wr'8<d?ft[M.Vm@!", "--", options0, "RN");
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("[");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("}/l^;DBx&5IX");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("z`(UVFgiuqDQfc&b*u");
      helpFormatter2.printHelp((PrintWriter) mockPrintWriter0, 1630, "-", "&A", options0, 1221, 34, "PgV8f)j]J:ar7-awQ+", false);
      HelpFormatter helpFormatter3 = new HelpFormatter();
      HelpFormatter helpFormatter4 = new HelpFormatter();
      helpFormatter4.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("mL/Y9(vGYWJ*2)");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1879, "VR %w\"rxEZ+3#D*74'");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1879, "mL/Y9(vGYWJ*2)", "mL/Y9(vGYWJ*2)", options0, 3060, 1879, "mL/Y9(vGYWJ*2)");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.setLongOptSeparator("\n");
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.setLongOptSeparator("\n");
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 74, "org.apache.commons.cli.HelpFormatter$OptionComparator", "-", (Options) null, (-1196), 45, " ", false);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2199, " ", options0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qVLc");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("h");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptSeparator("*W,h");
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter1, 34, " ", " ", options0, (-1196), 1, "usage: ", false);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("");
      // Undeclared exception!
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 0, " ", "--", options0, 42, 42, "1!KUXc5P^}fxCN", true);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.defaultLeftPad = 1087;
      helpFormatter0.printHelp(1087, "\n", "VR %w\"rxEZ+3#D*74'", options0, "VR %w\"rxEZ+3#D*74'");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("[");
      Locale locale0 = Locale.PRC;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) helpFormatter0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) options0;
      objectArray0[3] = (Object) locale0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) options0;
      objectArray0[6] = (Object) options0;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "", objectArray0);
      helpFormatter0.printWrapped(printWriter0, 31, 1035, "y:n8]<,]_EKm=yUZ~Q/");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "@HW)8Fs=C:";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "", objectArray0);
      helpFormatter0.printUsage(printWriter0, 10, "");
      int int0 = (-2);
      helpFormatter0.findWrapPos("1q%Nj6", (-2), 32);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 9, "1q%Nj6");
      Options options0 = null;
      List<Locale.LanguageRange> list0 = null;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
//      try { 
        linkedList0.removeFirst();
//        fail("Expecting exception: NoSuchElementException");
      
//      } catch(NoSuchElementException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.LinkedList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Options options0 = null;
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) mockPrintWriter0;
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("h");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("eF7>ccr<A");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 10, "-", "", (Options) null, 1, 13, "--", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)76;
      byte byte0 = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)41;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-");
      Options options0 = new Options();
      options0.hasOption(" ");
      options0.hasOption("NY6x_");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((int) (byte)41, "", "", options0, "", true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options1 = options0.addOption((String) null, "VR %w\"rxEZ+3#D*74'", false, "B7xGke{{J?");
      helpFormatter2.setLongOptSeparator(" :: ");
      helpFormatter1.printHelp(" ", options1, true);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("arg", "   ", options0, "S0m`JF>+/)/;s", true);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options1 = options0.addOption((String) null, true, "A CloneNotSupportedException was thrown: ");
      HelpFormatter helpFormatter3 = new HelpFormatter();
      helpFormatter3.printHelp(39, "--", "", options1, "org.apache.commons.cli.OptionGroup");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((-3550), "--", "", options0, "-");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      helpFormatter0.getArgName();
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer("x%dS!Bi4)r-U+G");
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 63, 63, "6#WTi~c\"");
      stringBuffer1.codePoints();
      helpFormatter0.getOptPrefix();
      stringBuffer1.append(stringBuffer0);
      // Undeclared exception!
//      try { 
        helpFormatter0.renderOptions(stringBuffer1, 63, (Options) null, 9, 13);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 0, " ", " ", (Options) null, 0, 0, "");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("arg");
      String string0 = "";
      Options options0 = new Options();
      Option option0 = new Option("", "die)b!97$5nvhic");
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) null, 0, "", options1);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      List list0 = new LinkedList<Object>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("@qVLco");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) optionGroup0;
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("1!KUXc5P^}fxCN");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1, "1!KUXc5P^}fxCN", "e$L6DMirhH&", options0, 34, 1, "", true);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "arg");
      Options options1 = new Options();
      MockFile mockFile0 = new MockFile("usage: ");
      MockFile mockFile1 = new MockFile(mockFile0, " ");
      MockFile mockFile2 = new MockFile("arg", "--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile2);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      helpFormatter0.createPadding(3364);
      boolean boolean0 = false;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1), "'\"NG:Cf=&{3/]K", "'\"NG:Cf=&{3/]K", options1, (-484), (-2), "org.apache.commons.cli.HelpFormatter$OptionComparator", false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(3);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      mockPrintWriter0.append((CharSequence) " ", 0, 0);
      Options options0 = new Options();
      Options options1 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.toString();
      options0.addOptionGroup(optionGroup0);
      Options options2 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, (-981), "", "~p[wt~o4", options2, 12, 0, "-");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "arg");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      option0.setArgs(1);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("", "", options1, "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      MockFile mockFile0 = new MockFile((String) null, "Y<7[F_N4rn)Z5h");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Locale locale0 = Locale.ITALIAN;
      String string1 = "";
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) mockFile0;
      helpFormatter0.defaultLeftPad = (-6758);
      objectArray0[2] = (Object) helpFormatter0;
      objectArray0[3] = (Object) locale0;
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) locale0;
      objectArray0[6] = (Object) locale0;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "", objectArray0);
      int int0 = 2;
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped(printWriter0, 2, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultLongOptPrefix = "-";
      helpFormatter0.setLeftPadding(0);
      helpFormatter0.findWrapPos("-", 0, 13);
      helpFormatter0.defaultWidth = (-1308);
      Options options0 = new Options();
      String string0 = " nl";
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter("", " nl");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         //  nl
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Options options0 = new Options();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("usage: ");
      Options options1 = options0.addOption("", false, "usage: ");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1, "", "", options1, (-623), (-1700), "", false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.defaultWidth = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      String string0 = "";
      Options options0 = new Options();
      boolean boolean0 = false;
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 3952, "", "SUDU`", options0, 0, (-1), "-", false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      helpFormatter0.getDescPadding();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("fSAt3IAE;?cLu", (String) null, (Options) null, "^iJTx&", true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      boolean boolean0 = true;
      String string0 = "arg";
      helpFormatter0.printHelp("arg", "vnwPFQ", options0, "\n", true);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      // Undeclared exception!
//      try { 
        helpFormatter1.renderWrappedText(stringBuffer0, 1, 1, "#YH%gc");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 21, "");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, " ", " ", (Options) null, 3, 3, "");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "@HW)8Fs=C:";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) locale0;
      objectArray0[5] = (Object) locale0;
      objectArray0[6] = (Object) locale0;
      objectArray0[7] = (Object) "@HW)8Fs=C:";
      objectArray0[8] = (Object) "@HW)8Fs=C:";
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "-", objectArray0);
      helpFormatter0.printUsage(printWriter0, 10, "@HW)8Fs=C:");
      helpFormatter0.findWrapPos("@HW)8Fs=C:", 10, 32);
      int int0 = (-959);
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped(printWriter0, (-959), "J$s8");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.defaultWidth = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, " ", " ", (Options) null, 3, 3, "");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("VLic");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      options0.addOption((String) null, "\n", true, "--");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 22, "org.apache.commons.cli.O6tKons", options0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "arg");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      option0.setArgs(1);
      options0.addOptionGroup(optionGroup1);
      helpFormatter0.setSyntaxPrefix((String) null);
      String string0 = "";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((String) null, "", options0, "y=}Fa1mG2", true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "e$L6DMirhH&";
      Options options0 = new Options();
      helpFormatter0.rtrim("");
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.File", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      // Undeclared exception!
//      try { 
        helpFormatter0.findWrapPos((String) null, 19, 19);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(3);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      mockPrintWriter0.append((CharSequence) " ", 0, 0);
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("-", "--", options0, "arg", false);
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "vnwPFQ";
      Options options0 = new Options();
      Options options1 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.toString();
      options1.addOptionGroup(optionGroup0);
      int int0 = 320;
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) null, 320, "", options1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "-";
      helpFormatter0.defaultLongOptPrefix = "-";
      int int0 = HelpFormatter.DEFAULT_LEFT_PAD;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.defaultWidth = (-1324);
      int int1 = 10;
      String string1 = "1F>kNN";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      Option option0 = null;
//      try {
        option0 = new Option("\n", (String) null, false, "-");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal option name '
//         // '
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(3);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      mockPrintWriter0.append((CharSequence) " ", 0, 0);
      Options options0 = new Options();
      Option option0 = new Option("j", true, "-");
      options0.addOption(option0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-2), 3, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("--", "--");
      MockFile mockFile1 = new MockFile(mockFile0, "usage: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-3650), "yK_w[!", "yK_w[!", options0, (-3650), (-3650), "iEd.y^>");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "-";
      helpFormatter0.setLeftPadding(0);
      int int0 = 0;
      String string0 = "r,!sZ";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("r,!sZ");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 16, "5csnH_", "-", (Options) null, 1494, (-2113), "5csnH_");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "?Wh6(N`q&WK";
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      helpFormatter0.defaultWidth = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1790), "?Wh6(N`q&WK", "?Wh6(N`q&WK", (Options) null, (-1790), (-1790), "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.findWrapPos("?Wh6FN`q&WK", 74, 74);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(74, "?Wh6FN`q&WK", "?Wh6FN`q&WK", (Options) null, "0c7Vs\"J");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("Vwk$(GbM");
      helpFormatter0.rtrim("org.apache.commons.cli.HelpFormatter$OptionComparator");
      helpFormatter0.defaultLeftPad = 0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Vwk$(GbM");
      mockPrintWriter0.append(':');
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "Sf'Rf`2M+", false, "Vwk$(GbM");
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.printHelp("Sf'Rf`2M+", "org.apache.commons.cli.HelpFormatter$OptionComparator", options1, "org.apache.commons.cli.HelpFormatter$OptionComparator", false);
      helpFormatter0.setLongOptSeparator("a)]O9w2upN0c-S^?uis");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Options options0 = new Options();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qVLc");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((String) null, options0, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.findWrapPos("", 0, 747);
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", false, "7Lz!8:53 gPnb");
      options0.addOption("", "\n", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, "-");
      optionGroup0.addOption(option0);
      options1.addOptionGroup(optionGroup0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("", options1, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      helpFormatter0.getDescPadding();
      int int0 = (-818);
      // Undeclared exception!
//      try { 
        helpFormatter0.createPadding((-818));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[9];
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) locale0;
      objectArray0[5] = (Object) locale0;
      objectArray0[6] = (Object) locale0;
      objectArray0[7] = (Object) "arg";
      objectArray0[8] = (Object) "\n";
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "-", objectArray0);
      helpFormatter0.printUsage(printWriter0, 10, "\n");
      helpFormatter0.findWrapPos("\n", 10, 32);
      int int0 = (-959);
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped(printWriter0, (-959), "J$s8");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      Options options0 = new Options();
      helpFormatter0.printHelp("arg", "vnwPFQ", options0, "\n", true);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setLongOptSeparator("--");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("arg", (Options) null, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      helpFormatter0.getDescPadding();
      Options options0 = new Options();
      helpFormatter0.printHelp("^iJTx&", options0);
      // Undeclared exception!
//      try { 
        helpFormatter0.findWrapPos("^iJTx&", 3, 0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      HelpFormatter helpFormatter2 = new HelpFormatter();
      HelpFormatter helpFormatter3 = new HelpFormatter();
      int int0 = (-1);
      Options options0 = new Options();
      Options options1 = options0.addOption("", (String) null, false, "8GC:2bD");
      Option option0 = new Option("", false, "[");
      Options options2 = options1.addOption(option0);
      Options options3 = options2.addOption((String) null, false, "Q'");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("-", options3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter$OptionComparator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("arg", "   ", options0, "S0m`JF>+/)/;s", true);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Options options1 = options0.addOption("arg", "9Wr'8<d?ft[M.Vm@!", true, "&T");
      helpFormatter0.setLongOptSeparator(">A19BD^,j9!Q2tM");
      helpFormatter1.printHelp("-", options1, true);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      String string0 = "";
      helpFormatter1.printHelp("usage: ", "", options1, "--");
      helpFormatter0.setSyntaxPrefix("\n");
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter((OutputStream) null, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.Writer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Option option0 = new Option("arg", "arg");
      option0.setArgs(1);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("", "", options0, "", false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("arg");
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, "");
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) " ");
      StringWriter stringWriter2 = stringWriter1.append('J');
      stringWriter0.append((CharSequence) " ");
      StringBuffer stringBuffer0 = stringWriter2.getBuffer();
      // Undeclared exception!
//      try { 
        helpFormatter0.renderOptions(stringBuffer0, 0, (Options) null, 0, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("vnwPFQ", "vnwPFQ", options0, "", true);
      helpFormatter0.setLongOptSeparator((String) null);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptionComparator((Comparator) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      String string0 = "";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1979), "", "", (Options) null, 0, (-1979), "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      // Undeclared exception!
//      try { 
        helpFormatter0.findWrapPos("?Wh6(N`q&WK", (-1109), (-1109));
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "arg");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      option0.setArgs(1);
      Options options1 = options0.addOptionGroup(optionGroup1);
      helpFormatter0.printHelp("e$L6DMirhH&", "e$L6DMirhH&", options1, "e$L6DMirhH&");
      helpFormatter0.setSyntaxPrefix((String) null);
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter((OutputStream) null, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.Writer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      Options options0 = new Options();
      options0.getOptions();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(4482, "", "", options1, "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 4376;
      helpFormatter0.setLeftPadding(4376);
      String string0 = "ZJQ;7c2PF3pz";
      helpFormatter0.setLongOptPrefix("ZJQ;7c2PF3pz");
      String string1 = "+^^XCa";
      MockFile mockFile0 = new MockFile("+^^XCa", "\n");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      mockPrintWriter0.print((long) 4376);
      String string2 = "O&m5";
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1274), "O&m5");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(74);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      PrintWriter printWriter0 = mockPrintWriter1.append('0');
      helpFormatter0.defaultWidth = 944;
      Options options0 = new Options();
      Options options1 = options0.addOption("", "arg", true, "\n");
      dataOutputStream0.flush();
      // Undeclared exception!
//      try { 
        helpFormatter0.printOptions(printWriter0, 1845, options1, (-1762), 1151);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Options options0 = new Options();
      options0.hasShortOption((String) null);
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      Options options1 = options0.addOption((String) null, true, "CPn;tVAFyKCPi~t\t5");
      // Undeclared exception!
//      try { 
        helpFormatter0.renderOptions(stringBuffer0, 0, options1, 0, (-1194));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("usage: ");
      helpFormatter0.rtrim(")v4+M?PZPy|b+#^");
      helpFormatter0.setOptPrefix("mk");
      Options options0 = new Options();
      String string0 = "org.apache.commons.cli.HelpFormatter";
      // Undeclared exception!
//      try { 
        options0.addOption("org.apache.commons.cli.HelpFormatter", (String) null, true, "[");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The option 'org.apache.commons.cli.HelpFormatter' contains an illegal character : '.'
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qVLc");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("1!KUXc5P^}fxCN");
      options0.addOption((String) null, "\n", true, "--");
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 3, "", options0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getNewLine();
      helpFormatter0.getDescPadding();
      // Undeclared exception!
//      try { 
        helpFormatter0.findWrapPos("^iJTx&", 3, 0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      String string0 = "xew~RU?Rp?zn";
      Options options0 = null;
      File file0 = MockFile.createTempFile("xew~RU?Rp?zn", "usage: ");
//      try { 
        MockFile.createTempFile("xew~RU?Rp?zn", "--", file0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(3);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      int int0 = 0;
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) " ", 0, 0);
      String string0 = "";
      Options options0 = new Options();
      String string1 = "j";
      Option option0 = new Option("j", true, "-");
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      helpFormatter0.printUsage(printWriter0, 0, "", options1);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(0);
      helpFormatter0.defaultLeftPad = 694;
      helpFormatter0.setDescPadding(694);
      helpFormatter0.setArgName("");
      helpFormatter0.getArgName();
      helpFormatter0.getNewLine();
      helpFormatter0.getWidth();
      String string0 = "fLThCUUA21]+v";
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        options0.addOption("org.apache.commons.cli.AlreadySelectedException", "", true, "\n");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The option 'org.apache.commons.cli.AlreadySelectedException' contains an illegal character : '.'
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter0.findWrapPos("", 0, (-1673));
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = helpFormatter0.getLeftPadding();
      assertEquals(1, int0);
      
      helpFormatter0.setOptPrefix("Ae'fP:V@!:/E@d}@q");
      Options options0 = new Options();
      helpFormatter0.printHelp(596, "' was specified but an option from this group ", "' was specified but an option from this group ", options0, "0c7Vs\"J");
      assertEquals(74, helpFormatter0.defaultWidth);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(0);
      String string0 = "\"%t\"";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      options0.toString();
      Options options1 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-628), "\"%t\"", options1);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("IfH(,DoR2tW2#0KJk9");
      helpFormatter0.setWidth(1499);
      helpFormatter0.setArgName("");
      assertEquals("IfH(,DoR2tW2#0KJk9", helpFormatter0.getSyntaxPrefix());
  }
}
