/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 09:48:21 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.util.Comparator;
import java.util.Locale;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = (-1);
      Options options0 = new Options();
      options0.getOptionGroups();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("arg", "\n", options0, " ");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = (-1);
      helpFormatter0.rtrim("WwEtr`");
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.getNewLine();
      assertEquals("\n", string0);
      assertEquals("-", helpFormatter0.getOptPrefix());
      assertEquals("--", helpFormatter0.getLongOptPrefix());
      assertEquals(1, helpFormatter0.defaultLeftPad);
      assertEquals(" ", helpFormatter0.getLongOptSeparator());
      assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
      assertEquals(3, helpFormatter0.defaultDescPad);
      assertEquals("arg", helpFormatter0.getArgName());
      assertEquals(74, helpFormatter0.defaultWidth);
      
      helpFormatter0.setArgName("\n");
      helpFormatter0.rtrim("9R5e!vET@k')^ M");
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 1, (-2072), "9R5e!vET@k')^ M");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = (-2832);
      helpFormatter0.getDescPadding();
      helpFormatter0.getArgName();
      String string0 = null;
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter((String) null, "-");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // -
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F2ULyKi]RU^cxz+W80");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("org.apache.commons.cli.Options");
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.setArgName("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "twP`mOY");
      helpFormatter0.defaultOptPrefix = "<";
      helpFormatter0.defaultNewLine = null;
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparator0).toString();
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.getLongOptSeparator();
      FileSystemHandling.shouldAllThrowIOExceptions();
      helpFormatter0.getLeftPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      Locale locale0 = new Locale("<");
      PrintWriter printWriter0 = mockPrintWriter1.format(locale0, "-", (Object[]) null);
      helpFormatter0.printUsage(printWriter0, 10, "org.apache.commons.cli.HelpFormatter");
      helpFormatter0.getArgName();
      helpFormatter0.getNewLine();
      helpFormatter0.getOptionComparator();
      helpFormatter0.getDescPadding();
      helpFormatter0.findWrapPos("", 1, 3);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-905);
      helpFormatter0.setLeftPadding((-905));
      int int1 = (-2499);
      String string0 = "";
      String string1 = null;
      Options options0 = null;
      StringBuffer stringBuffer0 = null;
      int int2 = 45;
      String string2 = "~#NN(xaT";
      String string3 = "vAMo.~H]LwM08`b%";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("arg", (Options) null);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix("");
      Options options0 = new Options();
      helpFormatter0.getLongOptPrefix();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter1.printHelp(" ", "org.apache.commons.cli.HelpFormatter$OptionComparator", options0, "Dm");
      helpFormatter1.rtrim("-${fVP3dj\"?@8yp");
      helpFormatter1.createPadding(0);
      Options options1 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp(3, "-${fVP3dj\"?@8yp", "", options1, "\"", false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("   ");
      helpFormatter0.getLeftPadding();
      helpFormatter0.defaultOptPrefix = "+";
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getNewLine();
      helpFormatter0.findWrapPos("   ", 1, 1);
      helpFormatter0.getWidth();
      StringBuffer stringBuffer0 = new StringBuffer("+");
      int int0 = 65;
      helpFormatter0.renderWrappedText(stringBuffer0, 2, 65, "+");
      helpFormatter0.getOptPrefix();
      MockFile mockFile0 = new MockFile("--", "\n");
      mockFile0.getCanonicalFile();
      // Undeclared exception!
//      try { 
        MockFile.createTempFile("--", (String) null, (File) mockFile0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Prefix string too short
//         //
//         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(115, (String) null, (String) null, (Options) null, "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.defaultArgName = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      helpFormatter0.defaultLongOptPrefix = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      helpFormatter0.rtrim("");
      helpFormatter0.getDescPadding();
      helpFormatter0.getSyntaxPrefix();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(3, "&?8?F3N/w[UU>", "usage: ", (Options) null, (String) null, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter1.findWrapPos((String) null, 74, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      StringWriter stringWriter0 = new StringWriter(74);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) mockPrintWriter1;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) mockPrintWriter0;
      objectArray0[5] = (Object) stringWriter0;
      objectArray0[6] = (Object) mockPrintWriter0;
      objectArray0[7] = (Object) locale0;
      PrintWriter printWriter0 = mockPrintWriter1.printf(locale0, "-", objectArray0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp(printWriter0, 3, "KVW5w~<on;U", "d:#^2nhm90L6?ump", options0, 854, (-2758), "0odH?/_Xr,m?<E");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.rtrim("");
      helpFormatter0.renderOptions((StringBuffer) null, 1411, options0, 1411, 0);
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, 25, 524, "");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.defaultNewLine = null;
      options0.addOption("arg", "--", true, "--");
      helpFormatter0.printHelp("arg", options0, true);
      // Undeclared exception!
//      try { 
        helpFormatter0.renderOptions((StringBuffer) null, 1345, options0, 1345, 1345);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Option option0 = new Option("", "arg");
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.setOptPrefix("");
      helpFormatter0.printHelp("k* ", options1, true);
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultArgName = "";
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Option option0 = new Option("", "arg");
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("^", options0, true);
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-550);
      helpFormatter0.defaultWidth = (-550);
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Options options0 = new Options();
      String string0 = "]yfk\"B}z";
      String string1 = "'";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("]yfk\"B}z", "", options0, "'", true);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("usage: ");
      StringBuffer stringBuffer0 = new StringBuffer(1157);
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1157, 1157, "usage:");
      Options options0 = new Options();
      Options options1 = options0.addOption("", "--", false, "arg");
      Options options2 = options1.addOption("", false, "1");
      helpFormatter0.renderOptions(stringBuffer1, 80, options2, 80, 7);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.defaultLongOptPrefix = "-";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((-2511), "Hj", "2]xmV;\".MrNPNT", options0, "[");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      PrintWriter printWriter0 = null;
      String string0 = "";
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printOptions((PrintWriter) null, (-862), options1, 1079, 1079);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 613, 613, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix("");
      String string0 = "U<q. V$4jK{)dFfPnMC";
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 2, "", "", (Options) null, (-435), 2, "%iYm4!w<W[zuB");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter2.getLongOptPrefix();
      helpFormatter1.getLongOptSeparator();
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((-2878), "--", "arg", options0, "\n", false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "--", true, "--");
      MockFile mockFile0 = new MockFile("\n");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Locale locale0 = Locale.JAPAN;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) helpFormatter0;
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) mockPrintWriter0;
      objectArray0[3] = (Object) options1;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "--", objectArray0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printOptions(printWriter0, (-1273), options1, (-1273), 4);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "-EZEP7?!nUeD:J";
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn("-EZEP7?!nUeD:J", "=l7@Hl {nE&").when(comparator0).toString();
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      String string1 = "q";
      Option option0 = new Option("q", "");
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      int int0 = (-1560);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) null, (-1560), "", options1);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      options1.addOptionGroup(optionGroup0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3081, "'V", "", options0, 3081, 70, "org.apache.commons.cli.Util", false);
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      options1.addOptionGroup(optionGroup0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      options0.addOption("", "", true, "fj-`.u52\"fDu");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      Locale locale0 = Locale.KOREAN;
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ".22-H/YQ@wx_F{]&", options1);
      helpFormatter0.rtrim(".22-H/YQ@wx_F{]&");
      helpFormatter0.getArgName();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      String string0 = "[";
      options0.addOption((String) null, "arg", false, "[");
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ryRAD9,0'=w1W\"A5U*G");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      Locale locale0 = Locale.KOREAN;
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2031, (String) null, options0);
      int int0 = helpFormatter0.defaultDescPad;
      helpFormatter0.getDescPadding();
      helpFormatter0.getOptionComparator();
      helpFormatter0.getOptionComparator();
      int int1 = 0;
      // Undeclared exception!
      helpFormatter0.printHelp(0, "ryRAD9,0'=w1W\"A5U*G", "^pP5I", options0, "ryRAD9,0'=w1W\"A5U*G", true);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("-", "-", options0, " ");
      Options options1 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      String string0 = "1bCS,ZBnY%MhD";
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 0, "]", "1bCS,ZBnY%MhD", options0, 64, 47, "%8wQ^i#/CI4ha;3N", false);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultNewLine;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      MockFile mockFile0 = new MockFile(" ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFile0);
      Options options0 = new Options();
      options0.addOption((String) null, true, "\n");
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.printHelp("usage: ", "NO_ARGS_ALLOWED", options0, "usage: ");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      boolean boolean0 = true;
      String string0 = null;
      Options options1 = options0.addOption((String) null, (String) null, true, "arg");
      int int0 = (-2998);
      helpFormatter0.setWidth((-2998));
      String string1 = "/n\"E^5";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("/n\"E^5", options1, true);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultNewLine;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      MockFile mockFile0 = new MockFile(" ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFile0);
      int int0 = 1;
      Options options0 = new Options();
      options0.addOption((String) null, true, "\n");
      OptionGroup optionGroup0 = new OptionGroup();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 64, "|~", (String) null, options0, (-1804), 1, "\n", true);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      optionGroup0.setRequired(false);
      Options options2 = options1.addOption("iTKY", false, "Q(;@)dZ");
      Options options3 = options2.addOption("", "iTKY", false, (String) null);
      helpFormatter0.printHelp("iTKY", "<DU#^ D:6&=", options3, "");
      Options options4 = new Options();
      int int0 = HelpFormatter.DEFAULT_LEFT_PAD;
      helpFormatter0.rtrim("tA@qR947 ");
      Options options5 = new Options();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultNewLine;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      MockFile mockFile0 = new MockFile(" ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFile0);
      Options options0 = new Options();
      Options options1 = options0.addOption((String) null, false, "\n");
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "usage: ");
      optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("<7GG", options1, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter(1765);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 13, (String) null, (Options) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultOptPrefix;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
      File file0 = MockFile.createTempFile("Cannot add value, list full.", "--");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(file0);
      Options options0 = new Options();
      Options options1 = options0.addOption((String) null, false, "-");
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, "--");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup1.setRequired(true);
      Options options2 = options1.addOptionGroup(optionGroup1);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 1, "-", "[ARG...]", options2, (-1), (-2), "-", true);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String string0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getWidth();
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = 103;
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 115, 103, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultNewLine;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      File file0 = MockFile.createTempFile("Cannot add value, list full.", "--");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(file0);
      Options options0 = new Options();
      Options options1 = options0.addOption((String) null, false, "\n");
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, "--");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 1, "\n", "[ARG...]", options2, (-1), (-2), "\n", true);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("^9rH", "_xJR{gp|X", options0, "gRH=3\"");
      PrintWriter printWriter0 = null;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) null, 101, "^9rH", "", options0, 101, (-1976), "BhhalT", true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", true, "");
      OptionGroup optionGroup0 = new OptionGroup();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("' was specified but an option from this group ", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      PrintWriter printWriter0 = mockPrintWriter0.printf("usage: ", (Object[]) null);
      helpFormatter0.printHelp(printWriter0, 74, "FS];CjoZ0", "[ option: ", options0, 110, 74, "[ option: ", false);
      helpFormatter0.printUsage(printWriter0, 110, "FS];CjoZ0");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      options1.addOptionGroup(optionGroup0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("[ARG...]");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      Locale locale0 = Locale.KOREAN;
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter1.printf(locale0, "usage: ", objectArray0);
      helpFormatter0.printWrapped(printWriter0, 110, "");
      Options options2 = new Options();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 375, "ryRAD9,0'=w1W\"A5U*G", (String) null, options0, 1, 1, "", true);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 375, "[ARG...]");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(1);
      String string0 = null;
      helpFormatter0.rtrim((String) null);
      int int0 = 291;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption((String) null, false, " ");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((String) null, ")u)3+ 9", options2, (String) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = HelpFormatter.DEFAULT_LONG_OPT_PREFIX;
      helpFormatter0.rtrim("--");
      StringWriter stringWriter0 = new StringWriter(1);
      String string1 = HelpFormatter.DEFAULT_OPT_PREFIX;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      Locale locale0 = new Locale("M<}nE[6S[#~Ie7", "");
      Object object0 = new Object();
      Object object1 = new Object();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(stringWriter0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) stringWriter0;
      objectArray0[2] = (Object) "--";
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "--";
      objectArray0[5] = (Object) "--";
      objectArray0[6] = (Object) "-";
      objectArray0[7] = (Object) "--";
      PrintWriter printWriter0 = mockPrintWriter1.format(locale0, "usage: ", objectArray0);
      helpFormatter0.printWrapped(printWriter0, 81, "M<}nE[6S[#~Ie7");
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printOptions(mockPrintWriter0, 110, options0, 32, 6);
      helpFormatter1.printUsage(printWriter0, 3183, "-", options0);
      helpFormatter0.getWidth();
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((PrintWriter) mockPrintWriter1, 3, "usage: ", "usage: ", options0, 1, 3183, "U", false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.rtrim("arg");
      helpFormatter0.rtrim(", ");
      StringWriter stringWriter0 = new StringWriter(1);
      String string0 = HelpFormatter.DEFAULT_OPT_PREFIX;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      Locale locale0 = Locale.US;
      Object object0 = new Object();
      Object object1 = new Object();
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1, "");
      String string1 = helpFormatter0.defaultOptPrefix;
      // Undeclared exception!
//      try { 
        helpFormatter0.findWrapPos(", ", (-5044), (-5044));
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("-", "");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      helpFormatter0.setOptPrefix("Ff0M.L,UGk");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      helpFormatter0.setWidth(0);
      helpFormatter0.setLongOptPrefix("");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
      helpFormatter0.printHelp("Oa9C", options1, true);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "^9rH";
      Options options0 = new Options();
      helpFormatter0.setLeftPadding((-1));
      String string1 = "";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("1+G2jLMx5&FFS\"", "_xJR{gp|X", options0, "gRH=3\"");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      helpFormatter0.printHelp("\boSmc?N", "", options0, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.cli.HelpFormatter$1");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 101, "", "\boSmc?N", options0, 101, 4, ".z3-A`7R=1", true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultNewLine;
      String string1 = HelpFormatter.DEFAULT_OPT_PREFIX;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.cli.HelpFormatter");
      mockPrintWriter0.checkError();
      int int0 = (-1);
      int int1 = 838;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1), (String) null, "-", (Options) null, 838, 838, "org.apache.commons.cli.AlreadySelectedException", false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      options1.addOptionGroup(optionGroup0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("[ARG...]");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      Locale locale0 = Locale.KOREAN;
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter1.printf(locale0, "usage: ", objectArray0);
      helpFormatter0.printWrapped(printWriter0, 110, "");
      Options options2 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 110, ".22-H/YQ@wx_F{]&", options1);
      int int0 = helpFormatter0.defaultDescPad;
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) " ");
      Options options0 = new Options();
      helpFormatter0.printHelp(printWriter0, 31, "k)", "0N9g", options0, 35, 35, "0N9g");
      helpFormatter0.findWrapPos("org.apache.commons.cli.ParseException", 31, 63);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("1+G2jLMx5&FFS\"", "_xJR{gp|X", options0, "gRH=3\"");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
      int int0 = 64;
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 4, "3<3\"{-&iu!C Qf_-X+", "^9rH", options0, 4, 64, "", false);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "^9rH";
      StringBuffer stringBuffer0 = new StringBuffer();
      stringBuffer0.ensureCapacity(74);
      String string1 = "";
      helpFormatter0.renderWrappedText(stringBuffer0, 1, 26, "");
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter("usage: ", "X&@o");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // X&@o
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Object object0 = new Object();
      StringBuffer stringBuffer0 = new StringBuffer(3);
      helpFormatter0.renderOptions(stringBuffer0, 3, options0, 3, 3);
      Comparator<Option> comparator0 = (Comparator<Option>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", true, "");
      Locale locale0 = Locale.KOREA;
      Object object0 = new Object();
      Object object1 = new Object();
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 4, "");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = HelpFormatter.DEFAULT_LONG_OPT_PREFIX;
      helpFormatter0.rtrim("--");
      StringWriter stringWriter0 = new StringWriter(1);
      String string1 = HelpFormatter.DEFAULT_OPT_PREFIX;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options0 = new Options();
      Option option0 = new Option("AR", true, " | ");
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup0);
      options1.hasShortOption("--");
      helpFormatter0.setWidth(11);
      helpFormatter0.setLongOptPrefix(" | ");
      helpFormatter0.printHelp("_TSRL0|FJz", options2, false);
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter$1", options1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", true, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(110);
      helpFormatter0.setLongOptPrefix("ryRAD9,0'=w1W\"A5U*G");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("-", options1, true);
      helpFormatter0.printHelp("--", options0);
      MockFile mockFile0 = new MockFile(")}%bH76~", "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      PrintWriter printWriter0 = mockPrintWriter0.append('X');
      helpFormatter0.printWrapped(printWriter0, 3, 1, "arg");
      helpFormatter1.printHelp(1623, "\n", "arg", options2, "--", true);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = HelpFormatter.DEFAULT_LONG_OPT_PREFIX;
      helpFormatter0.rtrim("--");
      StringWriter stringWriter0 = new StringWriter(1);
      String string1 = HelpFormatter.DEFAULT_OPT_PREFIX;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      Locale locale0 = new Locale("M<}nE[6S[#~Ie7", "");
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) locale0;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "\n", objectArray0);
      helpFormatter0.printWrapped(printWriter0, 81, "FbmYh");
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage(printWriter0, (-1), "", options0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator comparator0 = helpFormatter0.getOptionComparator();
      helpFormatter0.optionComparator = comparator0;
      // Undeclared exception!
//      try { 
        helpFormatter0.createPadding((-2));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("^9rH", "^9rH", options0, "zYy.g0ce.V@J");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 101, "]", "3<3\"{-&iu!C Qf_-X+", options0, 4, 4, (String) null, false);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1257), "3<3\"{-&iu!C Qf_-X+");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("^9rH", "^9rH", options0, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      String string0 = "3<3\"{-&iu!C Qf_-X+";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 101, "]", "3<3\"{-&iu!C Qf_-X+", options0, (-1), (-1), (String) null, true);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("-", "");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "");
      Options options0 = new Options();
      Options options1 = options0.addOption("", "X16t2", false, "");
      String string0 = "";
      Options options2 = options1.addOption("", "--", false, "\n");
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", false, "usage: ");
      Options options3 = options0.addOption(option0);
      options3.addOptionGroup(optionGroup0);
      helpFormatter0.setLongOptPrefix("");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("", options2, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)12;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((-2), "", "eP~]~4", options0, "", true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = HelpFormatter.DEFAULT_LONG_OPT_PREFIX;
      helpFormatter0.rtrim("--");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter(1);
      String string1 = HelpFormatter.DEFAULT_OPT_PREFIX;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      Locale locale0 = new Locale("M<}nE[6S[#~Ie7", "");
      Object object0 = new Object();
      Object object1 = new Object();
      char[] charArray0 = new char[5];
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 64, 74, "T.%p':EpM");
      charArray0[0] = 'q';
      charArray0[1] = '=';
      charArray0[2] = '\"';
      charArray0[3] = 'T';
      charArray0[4] = '?';
      // Undeclared exception!
//      try { 
        stringWriter0.write(charArray0, 616, 616);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.StringWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.rtrim("--");
      StringWriter stringWriter0 = new StringWriter();
      MockFile mockFile0 = new MockFile("--");
      helpFormatter0.setOptPrefix("s TT8q?|e`");
      PrintWriter printWriter0 = null;
      int int0 = 7;
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) null, 7, "--");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("-", "");
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, " ");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("", "", options1, "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(3);
      int int0 = 412;
      helpFormatter0.createPadding(412);
      int int1 = (-1);
      Options options0 = new Options();
      String string0 = "org.apache.commons.cli.OptionGroup";
      helpFormatter0.defaultOptPrefix = "org.apache.commons.cli.OptionGroup";
      boolean boolean0 = false;
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int2 = 74;
      // Undeclared exception!
//      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-1), options0, (-1), 74);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getWidth();
      String string0 = "vH_lX";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Options options0 = new Options();
      String string1 = "";
      options0.getOptions();
      options0.hasLongOption("");
      String string2 = "ms7U";
      Options options1 = options0.addOption("", false, "ms7U");
      String string3 = "";
      options0.hasOption("");
      options1.getOptions();
      helpFormatter0.printHelp("vH_lX", "vH_lX", options1, "vH_lX", false);
      helpFormatter0.createPadding(74);
      helpFormatter0.printHelp(1846, "ms7U", ">", options1, ">");
      File file0 = null;
      File file1 = MockFile.createTempFile("   ", "--", (File) null);
      MockFile mockFile0 = new MockFile(file1, "   ");
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0);
//        fail("Expecting exception: FileNotFoundException");
      
//      } catch(Throwable e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.rtrim("--");
      StringWriter stringWriter0 = new StringWriter();
      MockFile mockFile0 = new MockFile("--", "--");
      mockFile0.toURL();
      MockFile mockFile1 = new MockFile(mockFile0, "\n");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 3, "--");
      helpFormatter1.setOptPrefix("-");
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 3, "");
      Options options0 = new Options();
      Option option0 = new Option("arg", false, "usage: ");
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption((String) null, false, "");
      helpFormatter1.getOptionComparator();
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((String) null, options2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.rtrim("--");
      StringWriter stringWriter0 = new StringWriter();
      MockFile mockFile0 = new MockFile("--", "--");
      MockFile mockFile1 = new MockFile(mockFile0, "\n");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 3, "--");
      helpFormatter1.setOptPrefix("-");
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 3, "");
      Options options0 = new Options();
      Option option0 = new Option("arg", false, "usage: ");
      options0.addOption(option0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter1, 1269, "");
      Options options1 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp("arg", (Options) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.rtrim("--");
      StringWriter stringWriter0 = new StringWriter();
      MockFile mockFile0 = new MockFile("--", "--");
      MockFile mockFile1 = new MockFile(mockFile0, "\n");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      StringBuffer stringBuffer0 = new StringBuffer(3);
      int int0 = 1;
      helpFormatter0.renderWrappedText(stringBuffer0, 1269, 1, "9q<6k|eV-Z~Xqx|T,;");
      String string0 = "C:_GTy*:Is";
      MockPrintWriter mockPrintWriter1 = null;
//      try {
        mockPrintWriter1 = new MockPrintWriter("--", "C:_GTy*:Is");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // C:_GTy*:Is
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", true, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      helpFormatter0.setWidth(110);
      helpFormatter0.setLongOptPrefix("arg");
      helpFormatter0.printHelp("ryRAD9,0'=w1W\"A5U*G", options1, true);
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((String) null, options2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("$3*p8G@6a[>e%CO?vn", "$3*p8G@6a[>e%CO?vn", (Options) null, "", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("-", "");
      String string0 = "";
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      int int0 = 0;
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "");
      helpFormatter0.setOptPrefix("Ff0M.L,UGk");
      String string1 = "'";
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("'", "", (Options) null, (String) null, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-550);
      helpFormatter0.setWidth((-550));
      helpFormatter0.defaultWidth = (-550);
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("usage: ", options0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("-", "");
      String string0 = "-K";
      MockFile mockFile1 = new MockFile(mockFile0, "-K");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      int int0 = 0;
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "-K");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultNewLine;
      helpFormatter0.getArgName();
      String string1 = "%1!9zi";
      StringBuffer stringBuffer0 = new StringBuffer("%1!9zi");
      stringBuffer0.ensureCapacity((-1450));
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 0, (-33), "\n");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      String string0 = "";
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", true, "");
      StringBuffer stringBuffer0 = new StringBuffer(74);
      int int0 = 881;
      // Undeclared exception!
      helpFormatter0.renderOptions(stringBuffer0, 0, options1, 0, 881);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = helpFormatter0.defaultNewLine;
      helpFormatter0.rtrim("\n");
      StringWriter stringWriter0 = new StringWriter();
      String string1 = HelpFormatter.DEFAULT_OPT_PREFIX;
      // Undeclared exception!
//      try { 
        stringWriter0.append((CharSequence) "-", 71, 3);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.rtrim("--");
      StringWriter stringWriter0 = new StringWriter();
      MockFile mockFile0 = new MockFile("--", "--");
      MockFile mockFile1 = new MockFile(mockFile0, "\n");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 3, "--");
      helpFormatter1.setOptPrefix("-");
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 3, "");
      Options options0 = new Options();
      Option option0 = new Option("arg", false, "usage: ");
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption((String) null, false, "");
      // Undeclared exception!
//      try { 
        helpFormatter1.printHelp((String) null, options2);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", true, "");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("usage: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      PrintWriter printWriter0 = mockPrintWriter1.append('E');
      helpFormatter0.printWrapped(printWriter0, 36, "");
      helpFormatter0.setOptPrefix("Ff0M.L,UGk");
      helpFormatter0.printUsage(printWriter0, 3824, "");
      Options options2 = new Options();
      Option option0 = new Option("", false, "F8a'C>8w");
      options0.addOption(option0);
      // Undeclared exception!
//      try { 
        options1.addOption(" ", " ", true, " ");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal option name ' '
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.rtrim("--");
      StringWriter stringWriter0 = new StringWriter();
      String string0 = HelpFormatter.DEFAULT_OPT_PREFIX;
      int int0 = 44;
      // Undeclared exception!
//      try { 
        stringWriter0.append((CharSequence) "-", 44, 3);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("+5>!cTah8}%K");
      helpFormatter0.getOptPrefix();
      helpFormatter0.rtrim("");
      helpFormatter0.defaultDescPad = 10;
      helpFormatter0.defaultNewLine = "";
      helpFormatter0.setNewLine("VE[dkNN=(x$.");
      int int0 = (-2978);
      StringBuffer stringBuffer0 = new StringBuffer("+5>!cTah8}%K");
      stringBuffer0.delete(10, 74);
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-1841), 642, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp((-1821), (String) null, "UAsqn-)E~)-", (Options) null, "UAsqn-)E~)-", false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // cmdLineSyntax not provided
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      helpFormatter0.getArgName();
      String string0 = "%1!9zi";
      StringBuffer stringBuffer0 = new StringBuffer("%1!9zi");
      stringBuffer0.ensureCapacity((-1450));
      // Undeclared exception!
//      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, "-");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth((-529));
      helpFormatter0.defaultWidth = (-529);
      String string0 = "--";
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("--", options0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "Y0";
      Options options0 = new Options();
      helpFormatter0.printHelp("Y0", options0);
      String string1 = "42lP.G!t:gpTjG";
      helpFormatter0.setOptPrefix("42lP.G!t:gpTjG");
      helpFormatter0.getLeftPadding();
      String string2 = "";
      helpFormatter0.rtrim("");
      Options options1 = new Options();
      // Undeclared exception!
//      try { 
        options1.addOptionGroup((OptionGroup) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.Options", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      String string0 = "ryRAD9,0'=w1W\"A5U*G";
      Options options1 = options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", true, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      Option option0 = new Option("", "\n");
      Options options3 = options2.addOption(option0);
      helpFormatter0.printHelp("arg", "", options3, "arg");
      helpFormatter0.setLeftPadding((-1));
      helpFormatter0.setWidth(110);
      helpFormatter0.setLongOptPrefix("arg");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("ryRAD9,0'=w1W\"A5U*G", options1, true);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth((-550));
      helpFormatter0.defaultWidth = (-550);
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      String string0 = "--";
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("--", options0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      int int0 = (-2274);
      int int1 = 367;
      // Undeclared exception!
//      try { 
        helpFormatter0.printWrapped((PrintWriter) null, (-2274), 367, "3\"-9Rp1");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getWidth();
      helpFormatter0.getSyntaxPrefix();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("-", "");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "");
      helpFormatter0.setOptPrefix("Ff0M.L,UGk");
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "");
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = null;
      helpFormatter0.setSyntaxPrefix((String) null);
      String string1 = null;
      MockFile mockFile0 = null;
//      try {
        mockFile0 = new MockFile((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.File", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getArgName();
      String string0 = "";
      Options options0 = new Options();
      Options options1 = options0.addOption("arg", "ryRAD9,0'=w1W\"A5U*G", true, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      Option option0 = new Option("", "\n");
      Options options3 = options2.addOption(option0);
      helpFormatter0.printHelp("arg", "", options3, "arg");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      // Undeclared exception!
//      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, (-1), "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("l'&BQ~Vbmyz:^'Cgba");
      Options options0 = null;
      helpFormatter0.setNewLine("l'&BQ~Vbmyz:^'Cgba");
      // Undeclared exception!
//      try { 
        helpFormatter0.printHelp("l'&BQ~Vbmyz:^'Cgba", "l'&BQ~Vbmyz:^'Cgba", (Options) null, "l'&BQ~Vbmyz:^'Cgba");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.HelpFormatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptSeparator("[ARG...]");
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter((File) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.File", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      assertEquals("\n", helpFormatter0.getNewLine());
      
      helpFormatter0.defaultNewLine = " ";
      helpFormatter0.getOptPrefix();
      helpFormatter0.getArgName();
      helpFormatter0.getArgName();
      helpFormatter0.getDescPadding();
      helpFormatter0.getLeftPadding();
      helpFormatter0.setLeftPadding(1);
      helpFormatter0.setArgName("");
      helpFormatter0.getNewLine();
      String string0 = helpFormatter0.getNewLine();
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptionComparator((Comparator) null);
      int int0 = 518;
      String string0 = null;
      Options options0 = new Options();
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        options0.addOption("-", "-", true, "\n");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal option name '-'
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      String string0 = "u(x?.'i-";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("u(x?.'i-");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      int int0 = 0;
      String string1 = "[ARG...]";
      Options options0 = new Options();
      options0.hasOption(")M+{22Jj#'|n");
      // Undeclared exception!
//      try { 
        options0.addOptionGroup((OptionGroup) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.Options", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      assertEquals("-", helpFormatter0.getOptPrefix());
      
      helpFormatter0.setOptPrefix("");
      assertEquals("", helpFormatter0.getOptPrefix());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp("^9rH", "^9rH", options0, "");
      String string0 = "5r0";
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter("usage: ", "5r0");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // 5r0
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getWidth();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("_})45ih=//");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      int int0 = (-177);
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        options0.addOption("--", "org.apache.commons.cli.AlreadySelectedException", false, "arg");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The option '--' contains an illegal character : '-'
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setDescPadding(0);
      String string0 = "187kejv";
      String string1 = "Cannot add value, list full.";
      Options options0 = new Options();
      // Undeclared exception!
//      try { 
        options0.addOption("usage: ", "187kejv", true, "usage: ");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The option 'usage: ' contains an illegal character : ':'
//         //
//         verifyException("org.apache.commons.cli.OptionValidator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "Uv";
      MockPrintWriter mockPrintWriter0 = null;
//      try {
        mockPrintWriter0 = new MockPrintWriter(" ", "Uv");
//        fail("Expecting exception: UnsupportedEncodingException");
      
//      } catch(Throwable e) {
//         //
//         // Uv
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
//      }
  }
}
