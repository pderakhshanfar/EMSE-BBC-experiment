/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 19 10:36:10 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang3.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      List<Locale> list0 = LocaleUtils.countriesByLanguage("8YuMG");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocaleUtils.languagesByCountry("SI");
      LocaleUtils.languagesByCountry("SI");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      LocaleUtils.isAvailableLocale(locale0);
      LocaleUtils.availableLocaleList();
      LocaleUtils.localeLookupList(locale0);
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      LocaleUtils.localeLookupList((Locale) null, locale0);
      LocaleUtils.languagesByCountry("l.85{ ;R`?j$w1y/");
      locale1.getExtensionKeys();
      LocaleUtils.availableLocaleList();
      LocaleUtils.isAvailableLocale(locale1);
      LocaleUtils localeUtils0 = new LocaleUtils();
      LocaleUtils.countriesByLanguage("5tia7JNI@/VB");
      LocaleUtils.countriesByLanguage(";Z3");
      Locale locale2 = Locale.ROOT;
      Locale locale3 = new Locale("l.85{ ;R`?j$w1y/", "CH", "org.apache.commons.lang3.LocaleUtils$SyncAvoid");
      LocaleUtils.localeLookupList(locale3, locale2);
      LocaleUtils.toLocale((String) null);
      Locale locale4 = Locale.US;
      LocaleUtils.localeLookupList(locale3);
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("s8i~PZ=hVM'wL.?2^");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: s8i~PZ=hVM'wL.?2^
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List<Locale> list0 = LocaleUtils.countriesByLanguage((String) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List<Locale> list0 = LocaleUtils.languagesByCountry((String) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      List<Locale> list0 = LocaleUtils.localeLookupList(locale0, locale0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("rq_WDh=");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: rq_WDh=
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("rq_WD=");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: rq_WD=
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("rq_WD");
      assertNotNull(locale0);
      assertEquals("rq_WD", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("rq_O=");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: rq_O=
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("rq_}O=");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: rq_}O=
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("rr__^");
      assertNotNull(locale0);
      assertEquals("^", locale0.getVariant());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("ef:3;");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: ef:3;
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("rq_WD_=");
      assertNotNull(locale0);
      assertEquals("WD", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("it");
      assertEquals("ita", locale0.getISO3Language());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("DO");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: DO
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: 
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("lbWb");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: lbWb
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LocaleUtils.SyncAvoid localeUtils_SyncAvoid0 = new LocaleUtils.SyncAvoid();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Set<Locale> set0 = LocaleUtils.availableLocaleSet();
      assertEquals(160, set0.size());
  }
}
