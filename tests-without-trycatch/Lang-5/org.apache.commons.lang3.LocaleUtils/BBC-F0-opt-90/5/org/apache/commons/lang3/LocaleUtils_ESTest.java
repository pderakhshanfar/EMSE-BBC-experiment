/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 19 10:35:40 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import org.apache.commons.lang3.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      List<Locale> list0 = LocaleUtils.countriesByLanguage("");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List<Locale> list0 = LocaleUtils.countriesByLanguage((String) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List<Locale> list0 = LocaleUtils.languagesByCountry("14Y");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List<Locale> list0 = LocaleUtils.availableLocaleList();
      Locale locale0 = new Locale("uk");
      locale0.getDisplayCountry((Locale) null);
      LocaleUtils.localeLookupList(locale0, locale0);
      Locale locale1 = LocaleUtils.toLocale("uk");
      LocaleUtils.availableLocaleSet();
      LocaleUtils.languagesByCountry("uk");
      LocaleUtils localeUtils0 = new LocaleUtils();
      LocaleUtils.localeLookupList((Locale) null, locale1);
      LocaleUtils.countriesByLanguage("");
      LocaleUtils.languagesByCountry("D=h4xp)Q$P!K");
      List<Locale> list1 = LocaleUtils.availableLocaleList();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      List<Locale> list0 = LocaleUtils.languagesByCountry((String) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = new Locale(";Zw^c&H%tY@9!", ";Zw^c&H%tY@9!");
      Locale locale1 = new Locale("!L2&oYxd#G", ";ZW^C&H%TY@9!", "und");
      List<Locale> list0 = LocaleUtils.localeLookupList(locale1, locale0);
      assertEquals(4, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("kq_SE8Bj<<3");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: kq_SE8Bj<<3
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("kq_SEj");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: kq_SEj
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("kq_SE");
      assertEquals("SE", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("kq_EOc8B<<3I");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: kq_EOc8B<<3I
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("kq_Okc8Y~3vI|");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: kq_Okc8Y~3vI|
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("bg_XG_k`F");
      assertEquals("bg", locale0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("pd__qyv/");
      assertEquals("qyv/", locale0.getVariant());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("wu'");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: wu'
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("f)");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: f)
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("!L2&oYxd#G");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: !L2&oYxd#G
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: 
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("org.apache.commons.lang3.LocaleUtils$SyncAvoid");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: org.apache.commons.lang3.LocaleUtils$SyncAvoid
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LocaleUtils.SyncAvoid localeUtils_SyncAvoid0 = new LocaleUtils.SyncAvoid();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Locale locale0 = new Locale("");
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Locale locale0 = new Locale(";Zw^c&H%tY@9!", ";Zw^c&H%tY@9!");
      List<Locale> list0 = LocaleUtils.localeLookupList(locale0);
      assertEquals(2, list0.size());
  }
}
