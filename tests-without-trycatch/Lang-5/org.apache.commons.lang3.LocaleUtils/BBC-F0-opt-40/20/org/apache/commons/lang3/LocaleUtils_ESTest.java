/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 02:52:10 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import org.apache.commons.lang3.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      LocaleUtils.countriesByLanguage("omL]o63cu");
      Locale locale1 = new Locale("German", "F{Zy4>m", "omL]o63cu");
      locale1.getDisplayLanguage();
      locale0.clone();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      LocaleUtils.localeLookupList(locale1, locale0);
      Locale locale2 = Locale.KOREAN;
      List<Locale.LanguageRange> list0 = null;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      // Undeclared exception!
//      try { 
        Locale.LanguageRange.mapEquivalents((List<Locale.LanguageRange>) null, hashMap0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = new Locale("gu(s}YU+V,xZ!6~SV1e");
      List<Locale> list0 = LocaleUtils.localeLookupList(locale0, locale0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List<Locale> list0 = LocaleUtils.countriesByLanguage((String) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List<Locale> list0 = LocaleUtils.countriesByLanguage("");
      LocaleUtils.availableLocaleSet();
      LocaleUtils.availableLocaleSet();
      LocaleUtils.availableLocaleSet();
      LocaleUtils.languagesByCountry((String) null);
      LocaleUtils.availableLocaleList();
      LocaleUtils localeUtils0 = new LocaleUtils();
      Locale locale0 = Locale.JAPANESE;
      Locale locale1 = Locale.JAPAN;
      locale1.toLanguageTag();
      locale0.getDisplayScript(locale1);
      LocaleUtils.localeLookupList(locale0);
      LocaleUtils.languagesByCountry("");
      Locale locale2 = Locale.CANADA_FRENCH;
      locale0.getDisplayScript(locale2);
      LocaleUtils.languagesByCountry("");
      LocaleUtils.availableLocaleList();
      LocaleUtils.languagesByCountry("");
      LocaleUtils.localeLookupList(locale0, locale0);
      LocaleUtils.localeLookupList(locale0, locale0);
      List<Locale> list1 = LocaleUtils.languagesByCountry("0Dy&H[");
      assertTrue(list1.equals((Object)list0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = new Locale("de", "de", "de");
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      List<Locale> list0 = LocaleUtils.localeLookupList((Locale) null, locale0);
      assertFalse(list0.contains(locale0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("mi_CP5");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: mi_CP5
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("mi_CP");
      assertEquals("mi_CP", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("mi_C?");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: mi_C?
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("mi_@C?");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: mi_@C?
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("jk__d'f<M5");
      assertEquals("jk__d'f<M5", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("mi_CP05");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: mi_CP05
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("und");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: und
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("zh");
      assertEquals("zh", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("zZen9O; ApfzC:4");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: zZen9O; ApfzC:4
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("B7o^{,MBkgW#");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: B7o^{,MBkgW#
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: 
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
//      try { 
        LocaleUtils.toLocale("dr1%#;");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid locale format: dr1%#;
//         //
//         verifyException("org.apache.commons.lang3.LocaleUtils", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LocaleUtils.SyncAvoid localeUtils_SyncAvoid0 = new LocaleUtils.SyncAvoid();
  }
}
