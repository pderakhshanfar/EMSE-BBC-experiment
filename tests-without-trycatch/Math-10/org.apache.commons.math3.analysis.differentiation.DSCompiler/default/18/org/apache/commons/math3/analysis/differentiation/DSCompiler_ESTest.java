/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 30 14:03:36 GMT 2021
 */

package org.apache.commons.math3.analysis.differentiation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.math3.analysis.differentiation.DSCompiler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DSCompiler_ESTest extends DSCompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.linearCombination((double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      DSCompiler.getCompiler(3, 1);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 25);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 25;
      doubleArray0[1] = (double) 25;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (double) 25;
      doubleArray0[4] = 1379.0;
      doubleArray0[5] = (double) 3;
      doubleArray0[6] = (double) 25;
      doubleArray0[7] = (double) 1;
      doubleArray0[8] = (double) 3;
      // Undeclared exception!
//      try { 
        dSCompiler1.atanh(doubleArray0, 3, doubleArray0, 25);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 25
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 5);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 5;
      doubleArray0[1] = (double) 5;
      doubleArray0[2] = (double) 5;
      doubleArray0[3] = (double) 5;
      // Undeclared exception!
//      try { 
        dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 5);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 5
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 7);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 7;
      doubleArray1[3] = (double) 7;
      doubleArray1[4] = (double) 7;
      doubleArray1[5] = (double) 7;
      doubleArray1[6] = (double) 0;
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray1, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.tanh(doubleArray1, (-2675), doubleArray1, 1309);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -2675
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.getPartialDerivativeOrders(0);
      // Undeclared exception!
      DSCompiler.getCompiler(1, 4918);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int int0 = 0;
      int int1 = 1379;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1379, 0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 1379;
      doubleArray0[1] = (double) 1379;
      doubleArray0[2] = (double) 1379;
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      int int2 = 12;
      int int3 = 892;
      // Undeclared exception!
//      try { 
        dSCompiler0.cos(doubleArray0, 12, doubleArray0, 892);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 12
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      int int0 = 4032;
      int int1 = Integer.MAX_VALUE;
      // Undeclared exception!
//      try { 
        DSCompiler.getCompiler(4032, Integer.MAX_VALUE);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 355);
      double[] doubleArray0 = null;
      int int0 = 1083;
      // Undeclared exception!
//      try { 
        dSCompiler0.cosh((double[]) null, 1083, (double[]) null, 1083);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.getPartialDerivativeIndex((int[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.taylor((double[]) null, 31, (double[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 0;
      dSCompiler0.remainder(doubleArray0, 2, doubleArray0, 0, doubleArray0, 2);
      dSCompiler0.multiply(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 14;
      intArray0[4] = 0;
      intArray0[5] = 0;
//      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 6 != 0
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination((double) 0, (double[]) null, 0, 0.5, doubleArray0, 0, (double) 0, doubleArray0, 0, (double) 0, (double[]) null, 0, doubleArray1, 673);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = (double) 0;
      int int1 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      int int2 = 46;
      // Undeclared exception!
//      try { 
        dSCompiler0.divide(doubleArray0, 3, doubleArray0, 3, doubleArray0, 326);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 9
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(13, 2);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 13;
      doubleArray0[1] = (double) 2;
      // Undeclared exception!
//      try { 
        dSCompiler0.sin(doubleArray0, 0, (double[]) null, 2);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 31);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 31;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 31;
      doubleArray1[3] = (double) 31;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = (double) 31;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = (double) 0;
      doubleArray1[8] = (double) 31;
      dSCompiler0.atan(doubleArray1, 0, doubleArray1, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.tanh(doubleArray0, 31, doubleArray1, 3);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 31
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      int int1 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      double[] doubleArray1 = null;
      // Undeclared exception!
//      try { 
        dSCompiler0.atan(doubleArray0, 3, (double[]) null, 3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      dSCompiler0.atan(doubleArray0, 3, doubleArray0, 3);
      DSCompiler.getCompiler(3, 3);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      int int0 = 3;
      double[] doubleArray1 = new double[6];
      doubleArray1[1] = (double) 3;
      doubleArray1[3] = (double) 3;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 3;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 3);
      double[] doubleArray3 = new double[2];
      doubleArray3[0] = 0.3443927764892578;
      doubleArray3[1] = 0.0;
      dSCompiler1.taylor(doubleArray3, 0, doubleArray2);
      // Undeclared exception!
//      try { 
        dSCompiler0.tanh(doubleArray0, 3, doubleArray2, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      double[] doubleArray0 = new double[16];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.sin(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.getOrder();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      dSCompiler0.getOrder();
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = 0.0;
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, (-1078), 0.0, doubleArray0, (-1078));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1078
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 55);
      double[] doubleArray0 = null;
      // Undeclared exception!
//      try { 
        dSCompiler0.add((double[]) null, 55, (double[]) null, 55, (double[]) null, 74);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.4216561713555547E276;
      doubleArray0[1] = 1773.914686;
      doubleArray0[2] = 1773.914686;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 3;
      doubleArray0[6] = (double) 0;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 3;
      doubleArray1[1] = 1773.914686;
      doubleArray1[2] = (double) 3;
      doubleArray1[3] = (double) 3;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = 1773.914686;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 3;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = 0.0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = 771.687009458169;
      doubleArray2[5] = (double) 2;
      doubleArray2[6] = 0.0;
      doubleArray2[7] = 4.4216561713555547E276;
      doubleArray2[8] = (double) 2;
      dSCompiler0.acosh(doubleArray1, 2, doubleArray2, 0);
      doubleArray1[7] = 4.4216561713555547E276;
      doubleArray1[8] = (-2467.0);
      dSCompiler0.remainder(doubleArray0, 0, doubleArray1, 3, doubleArray0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.add((double[]) null, 3, doubleArray1, 51, doubleArray0, (-686));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.sin((double[]) null, (-1350), (double[]) null, (-606));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(3, 0);
      int int0 = (-3458);
      dSCompiler1.pow(doubleArray0, 1, (-3458), doubleArray0, 3);
      // Undeclared exception!
//      try { 
        dSCompiler0.tan(doubleArray0, 0, doubleArray0, (-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int[] intArray0 = new int[3];
      intArray0[1] = 0;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.checkCompatibility(dSCompiler1);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      dSCompiler0.linearCombination((double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, doubleArray0, 0);
      intArray0[2] = 0;
      int int1 = 36;
      // Undeclared exception!
//      try { 
        dSCompiler0.multiply(doubleArray0, 0, doubleArray0, 0, doubleArray0, 36);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 36
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DSCompiler.getCompiler(3, 3);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 3);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = null;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.exp((double[]) null, 0, doubleArray0, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.acos(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 55);
      double[] doubleArray0 = null;
      int int0 = 126;
      // Undeclared exception!
//      try { 
        dSCompiler0.pow((double[]) null, 55, (double[]) null, 126, (double[]) null, 55);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 3, 36.235571344252925, doubleArray0, 3);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 7
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      double[] doubleArray0 = new double[13];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      // Undeclared exception!
//      try { 
        dSCompiler0.tan(doubleArray0, 3, doubleArray0, (-1225));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1225
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = 2;
      double[] doubleArray0 = new double[14];
      doubleArray0[0] = (double) 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      // Undeclared exception!
//      try { 
        dSCompiler0.rootN(doubleArray0, 2, 2, doubleArray0, 1215);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1215
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.multiply(doubleArray0, 20, doubleArray0, 0, doubleArray0, 20);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 20
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      double[] doubleArray0 = null;
      // Undeclared exception!
//      try { 
        dSCompiler0.sinh((double[]) null, 0, (double[]) null, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[13];
      dSCompiler0.log(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[0] = (double) 0;
      dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.atan(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination(0.0, doubleArray0, 48, 0.0, doubleArray0, 0, (double) 0, doubleArray0, (-2065), 0.0, doubleArray0, (-2150), doubleArray0, (-2065));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 48
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 561);
      // Undeclared exception!
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 1824);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[5] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1552);
      // Undeclared exception!
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 3);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      double[] doubleArray1 = null;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.log((double[]) null, 53, doubleArray0, 330);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 800;
      doubleArray1[1] = (double) 800;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      dSCompiler0.pow(doubleArray0, 800, 0, doubleArray1, 0);
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = (-2151.5);
      doubleArray2[2] = (double) 38;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 0;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = (double) 800;
      dSCompiler0.tanh(doubleArray1, 0, doubleArray3, 0);
      doubleArray2[5] = (double) 38;
      // Undeclared exception!
//      try { 
        dSCompiler0.tanh(doubleArray0, (-3722), doubleArray2, 540);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -3722
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.log1p((double[]) null, 6, (double[]) null, 6);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = 55;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 55);
      double[] doubleArray0 = null;
      // Undeclared exception!
//      try { 
        dSCompiler0.multiply((double[]) null, 0, (double[]) null, 4683, (double[]) null, 55);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      int int0 = 0;
      int int1 = 55;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 55);
      double[] doubleArray0 = null;
      // Undeclared exception!
//      try { 
        dSCompiler0.multiply((double[]) null, 0, (double[]) null, 4683, (double[]) null, 55);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[13];
      dSCompiler0.remainder(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (double) 3;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (double) 3;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 3;
      doubleArray2[4] = 0.0;
      doubleArray2[5] = 1773.914686;
      doubleArray2[6] = (double) 0;
      doubleArray2[7] = 0.0;
      doubleArray2[8] = (double) 0;
      dSCompiler0.remainder(doubleArray1, 3, doubleArray1, 3, doubleArray2, 2);
      doubleArray1[4] = 2645.21;
      doubleArray1[5] = (double) 3;
      // Undeclared exception!
//      try { 
        dSCompiler0.tanh(doubleArray0, 0, doubleArray1, (-1705));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1705
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int int1 = (-983);
      // Undeclared exception!
//      try { 
        dSCompiler0.divide((double[]) null, 2, (double[]) null, (-983), (double[]) null, (-263));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = null;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination(0.0, (double[]) null, 0, 0.0, (double[]) null, 689, 0.0, doubleArray0, 550, (double[]) null, 550);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = null;
      // Undeclared exception!
//      try { 
        dSCompiler0.pow((double[]) null, 0, 0.0, doubleArray0, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[3] = (double) 0;
      dSCompiler0.pow(doubleArray0, 0, 995, doubleArray0, 0);
      // Undeclared exception!
//      try { 
        DSCompiler.getCompiler(995, (-2));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[4] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 434);
      // Undeclared exception!
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, 8);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 632);
      // Undeclared exception!
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, (-983));
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.atanh((double[]) null, 0, (double[]) null, 3);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler1 = null;
      // Undeclared exception!
//      try { 
        dSCompiler0.log10((double[]) null, 569, (double[]) null, 569);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.acosh((double[]) null, 12, doubleArray0, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.compose(doubleArray0, 0, doubleArray0, (double[]) null, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getFreeParameters();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int int1 = 338;
      // Undeclared exception!
//      try { 
        dSCompiler0.getPartialDerivativeOrders(338);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 338
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int[] intArray0 = new int[0];
      dSCompiler0.getPartialDerivativeIndex(intArray0);
      dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      dSCompiler0.getPartialDerivativeIndex(intArray0);
      int int1 = (-1557);
      // Undeclared exception!
//      try { 
        dSCompiler0.getPartialDerivativeOrders((-1557));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1557
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 1552;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 3;
      doubleArray1[3] = (double) 3;
      dSCompiler0.asinh(doubleArray1, 0, doubleArray0, 0);
      int int1 = (-2065);
      int int2 = 13;
      // Undeclared exception!
//      try { 
        DSCompiler.getCompiler((-2065), 13);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 469.0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (-2.0);
      doubleArray1[2] = 469.0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = 469.0;
      doubleArray1[6] = 469.0;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 469.0;
      dSCompiler0.asinh(doubleArray2, 0, doubleArray2, 3);
      dSCompiler0.sin(doubleArray0, 0, doubleArray1, 0);
      dSCompiler0.compose(doubleArray2, 3, doubleArray2, doubleArray1, 3);
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination((-2.0), doubleArray0, 3, (-2296.02319806109), doubleArray1, (-1391), doubleArray2, 1018);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1391
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[9];
      // Undeclared exception!
//      try { 
        dSCompiler0.cos((double[]) null, 92, doubleArray0, 55);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = 3689;
      int int1 = 977;
      // Undeclared exception!
      DSCompiler.getCompiler(3689, 977);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.compose(doubleArray0, 2, doubleArray0, doubleArray0, 2);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.compose(doubleArray0, 0, doubleArray0, doubleArray0, (-664));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -664
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 230);
      DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.tan((double[]) null, 230, (double[]) null, 230);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 0;
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      int int1 = 230;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 230);
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 0, 230, doubleArray0, 230);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 230
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 234);
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 0, 23, doubleArray0, 23);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 23
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[9];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray1 = null;
      // Undeclared exception!
//      try { 
        dSCompiler0.asinh((double[]) null, 0, doubleArray0, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      dSCompiler0.acos(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      int int1 = 843;
      int int2 = 2544;
      dSCompiler0.pow(doubleArray1, 0, (double) 843, doubleArray1, 2);
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination(0.0, doubleArray1, 0, 0.0, doubleArray0, (-2500), (-2403.68), doubleArray0, 0, doubleArray0, 2544);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -2500
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1121.4295);
      dSCompiler0.exp(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      dSCompiler0.cos(doubleArray0, 0, doubleArray0, 0);
      int int1 = 702;
      // Undeclared exception!
//      try { 
        dSCompiler0.acosh(doubleArray0, (-97), doubleArray0, 702);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -97
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      int int0 = 1552;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1552);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 168;
      intArray0[3] = 0;
      intArray0[4] = 0;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 168);
//      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 1,552 != 168
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      dSCompiler0.pow(doubleArray0, 0, (double) 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      int int0 = 1552;
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 0, 0.0, doubleArray0, 1552);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1552
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1257);
      // Undeclared exception!
//      try { 
        dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 1257);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1257
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (double) 0;
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (-740.84398477);
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 3);
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.log10(doubleArray0, 3, doubleArray0, 0);
      double[] doubleArray1 = new double[1];
      dSCompiler0.log(doubleArray0, 0, doubleArray1, 0);
      doubleArray0[9] = (double) 0;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 3;
      doubleArray2[2] = (double) 409;
      doubleArray2[3] = (-740.84398477);
      // Undeclared exception!
//      try { 
        dSCompiler0.subtract(doubleArray1, (-3272), doubleArray2, 0, doubleArray1, (-3272));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -3272
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      // Undeclared exception!
//      try { 
        dSCompiler0.tan(doubleArray0, 35, doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 35
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[0] = (double) 0;
      dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[1] = (double) 0;
      int int1 = 179;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 179);
      DSCompiler dSCompiler2 = DSCompiler.getCompiler(4, 4);
//      try { 
        dSCompiler2.checkCompatibility(dSCompiler1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 4 != 0
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(1316, 0);
//      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 0 != 1,316
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[3] = (double) 0;
      dSCompiler0.acosh(doubleArray0, 1, doubleArray0, 3);
      // Undeclared exception!
//      try { 
        dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 1875);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1875
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      int int0 = 17;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 17);
      // Undeclared exception!
//      try { 
        dSCompiler0.cos(doubleArray0, 0, doubleArray0, (-4575));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -4575
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = 0;
      int int1 = 31;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 31);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 31;
      doubleArray0[1] = (double) 31;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 31;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 31;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 31;
      double double0 = 1.0033721426962048E-8;
      int int2 = 524;
      // Undeclared exception!
//      try { 
        dSCompiler0.cos(doubleArray0, 0, doubleArray0, 524);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 524
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.tanh((double[]) null, (-3494), (double[]) null, (-3494));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      dSCompiler0.pow(doubleArray0, 0, 0.0, doubleArray0, 1);
      // Undeclared exception!
//      try { 
        dSCompiler0.tan(doubleArray0, 3, doubleArray0, 901);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 901
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (double) 0;
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (-740.84398477);
      int int0 = 3;
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 3);
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[1];
      dSCompiler0.log(doubleArray0, 0, doubleArray1, 0);
      doubleArray0[9] = (double) 0;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 3;
      doubleArray2[2] = (double) 409;
      doubleArray2[3] = (-740.84398477);
      // Undeclared exception!
//      try { 
        dSCompiler0.tanh((double[]) null, 3, doubleArray2, 76);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[9];
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 469.0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (-2.0);
      doubleArray1[2] = 469.0;
      doubleArray1[2] = (double) 0;
      doubleArray1[5] = 469.0;
      doubleArray1[6] = 469.0;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 260);
//      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 0 != 260
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-3576.29774176);
      dSCompiler0.rootN(doubleArray0, 0, 6, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.cos(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.atanh(doubleArray0, 1, doubleArray0, 20);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = (double) 0;
      doubleArray1[8] = (double) 0;
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray1, 0);
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.rootN(doubleArray0, 0, (-927), doubleArray0, 4995);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 4995
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.pow((double[]) null, 0, 227, (double[]) null, 1227);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 0, 0, (double[]) null, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 0, 0, doubleArray0, (-793));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -793
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 2840;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1106, 0);
      double[] doubleArray2 = new double[1];
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 1106;
      intArray0[2] = 1106;
      intArray0[3] = 2840;
//      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 4 != 1,106
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[1];
      // Undeclared exception!
//      try { 
        dSCompiler0.taylor(doubleArray0, 107, doubleArray1);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 107
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[0] = (double) 0;
      dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      double double0 = 469.0;
      // Undeclared exception!
//      try { 
        DSCompiler.getCompiler((-1452), (-1452));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1219);
      // Undeclared exception!
      dSCompiler0.asin(doubleArray0, 0, doubleArray0, 283);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2816);
      // Undeclared exception!
//      try { 
        dSCompiler0.rootN((double[]) null, 0, 44, (double[]) null, (-208));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DSCompiler.getCompiler(1, 1);
      int int0 = 3;
      int int1 = 4911;
      // Undeclared exception!
      DSCompiler.getCompiler(3, 4911);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      double[] doubleArray0 = new double[11];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int int0 = (-288);
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination((double) 0, doubleArray0, 0, (-1716.68924), doubleArray0, 0, (double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, doubleArray0, (-288));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -288
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      dSCompiler0.linearCombination((double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, doubleArray0, 0);
      intArray0[2] = 0;
//      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 3 != 0
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = 0;
      int int1 = 2840;
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (double) 2840;
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 2840;
      int int2 = 0;
      int int3 = 1106;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1106, 0);
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 0;
      double[] doubleArray3 = new double[4];
      doubleArray3[0] = (double) 1106;
      doubleArray3[1] = (double) 2840;
      doubleArray3[2] = 0.0;
      doubleArray3[3] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination((-1281.87148), doubleArray2, 0, 1429.22, doubleArray2, (-835), 0.0, doubleArray3, 4911, (-2.0), doubleArray0, (-1104), doubleArray2, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -835
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 0;
      dSCompiler0.linearCombination((double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 0.0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (-2.0);
      doubleArray1[2] = 0.0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 0.0;
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 32, (-191), doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 32
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-3576.29774176);
      dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
      int int0 = (-1091);
      double[] doubleArray1 = new double[0];
      int int1 = 855;
      // Undeclared exception!
//      try { 
        dSCompiler0.sinh(doubleArray0, (-1091), doubleArray1, 855);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1091
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = (double) 0;
      doubleArray0[3] = (double) 0;
      int int0 = 1231;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1231);
      // Undeclared exception!
      dSCompiler0.asinh(doubleArray0, 3, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      // Undeclared exception!
//      try { 
        dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 201);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 201
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 0;
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[3] = (double) 0;
      int int1 = 3;
      int int2 = 1231;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1231);
      // Undeclared exception!
      dSCompiler0.asinh(doubleArray0, 3, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (double) 1;
      // Undeclared exception!
//      try { 
        dSCompiler0.asin(doubleArray0, 1, doubleArray0, (-664));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -664
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
//      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 1 != 0
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
//      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 8 != 0
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[9];
      int int1 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.divide(doubleArray0, 0, doubleArray0, 904, doubleArray0, (-1593));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1593
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      int int0 = 0;
      int int1 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      int int2 = 31;
      int int3 = (-623);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) (-623);
      int int4 = 868;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 31;
      doubleArray1[2] = (double) 0;
      dSCompiler0.sin(doubleArray1, 0, doubleArray1, 0);
      doubleArray1[3] = 1869.693311838;
      doubleArray1[4] = (double) 3;
      doubleArray1[5] = (double) (-205);
      int int5 = 1316;
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination(575.08288128, doubleArray0, 868, 575.08288128, doubleArray1, 3, 31.0, doubleArray1, 1316, doubleArray1, 24);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 868
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 469.0;
      dSCompiler0.sin(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (-2.0);
      doubleArray1[2] = 469.0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = 469.0;
      doubleArray1[6] = 469.0;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 469.0;
      doubleArray2[1] = 1605.149751;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = 469.0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = 469.0;
      dSCompiler0.acos(doubleArray1, 0, doubleArray2, 1);
      dSCompiler0.atanh(doubleArray0, 0, doubleArray1, 1);
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (-2.0);
      doubleArray3[1] = (double) 1;
      doubleArray3[2] = (double) 1;
      dSCompiler0.checkCompatibility(dSCompiler0);
      doubleArray3[3] = 469.0;
      // Undeclared exception!
//      try { 
        dSCompiler0.add(doubleArray1, 3520, doubleArray2, (-33), doubleArray1, (-30));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3520
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.checkCompatibility((DSCompiler) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 469.0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (-2.0);
      doubleArray1[2] = 469.0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = 469.0;
      doubleArray1[6] = 469.0;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 469.0;
      doubleArray2[1] = 1605.149751;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = 469.0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = 469.0;
      dSCompiler0.acos(doubleArray1, 0, doubleArray2, 1);
      dSCompiler0.atanh(doubleArray0, 0, doubleArray1, 1);
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (-2.0);
      doubleArray3[1] = (double) 1;
      doubleArray3[2] = (double) 1;
      dSCompiler0.checkCompatibility(dSCompiler0);
      doubleArray3[3] = 469.0;
      dSCompiler0.add(doubleArray1, 0, doubleArray3, 1, doubleArray3, 1);
      // Undeclared exception!
//      try { 
        dSCompiler0.checkCompatibility((DSCompiler) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.acos((double[]) null, 0, (double[]) null, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[0];
      int int1 = 33;
      dSCompiler0.getSize();
      int int2 = (-2361);
      // Undeclared exception!
//      try { 
        dSCompiler0.asin(doubleArray0, 1113, doubleArray0, 1596);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1113
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.asin((double[]) null, 0, (double[]) null, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 0, 230, doubleArray0, 230);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 230
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[0];
      int int0 = (-1521);
      int int1 = 597;
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 33, 597, doubleArray0, 3);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 33
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      // Undeclared exception!
      DSCompiler.getCompiler(0, 4902);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
//      try { 
        dSCompiler0.acos(doubleArray0, 12, doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 12
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.cos(doubleArray0, (-1), doubleArray0, (-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(34, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.asin(doubleArray0, 34, doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 34
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 30);
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination(0.0, (double[]) null, (-1677), 1611.8181849, (double[]) null, 0, (double[]) null, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[13];
      // Undeclared exception!
//      try { 
        dSCompiler0.sin(doubleArray0, 985, doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 985
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      dSCompiler0.asinh(doubleArray0, 3, doubleArray0, 0);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 3;
      // Undeclared exception!
//      try { 
        dSCompiler0.sin(doubleArray1, (-2461), doubleArray0, (-2461));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -2461
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 469.0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (-2.0);
      doubleArray1[2] = 469.0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = 469.0;
      doubleArray1[6] = 469.0;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 469.0;
      doubleArray2[1] = 1605.149751;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = 469.0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = 469.0;
      dSCompiler0.acos(doubleArray1, 0, doubleArray2, 1);
      dSCompiler0.atanh(doubleArray0, 0, doubleArray1, 1);
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (-2.0);
      doubleArray3[1] = (double) 1;
      doubleArray3[2] = (double) 1;
      dSCompiler0.checkCompatibility(dSCompiler0);
      doubleArray3[3] = 469.0;
      doubleArray3[4] = 469.0;
      double[] doubleArray4 = new double[3];
      doubleArray4[0] = 469.0;
      doubleArray4[1] = (double) 1;
      doubleArray4[2] = (double) (-1);
      // Undeclared exception!
//      try { 
        dSCompiler0.add(doubleArray4, (-1), doubleArray4, (-30), doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.acos(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      double[] doubleArray0 = new double[14];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.log10(doubleArray0, (-219), doubleArray0, (-219));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -219
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1989);
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.add(doubleArray0, 0, doubleArray0, 1989, doubleArray0, 2714);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1989
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[8];
      int int1 = 4;
      dSCompiler0.asin(doubleArray0, 1, doubleArray0, 4);
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 1;
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = 0.0;
      int int2 = 25;
      int int3 = 110;
      // Undeclared exception!
//      try { 
        dSCompiler0.asinh(doubleArray0, 25, doubleArray0, 110);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 25
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = 4;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(4, 4);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 4;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 4;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 4;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      int int1 = 26;
      // Undeclared exception!
//      try { 
        dSCompiler0.asin(doubleArray0, 0, doubleArray1, 26);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 26
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (-740.84398477);
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 3);
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[1];
      dSCompiler0.log(doubleArray0, 0, doubleArray1, 0);
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      int int1 = 0;
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = 1.4322981952798675E-8;
      doubleArray2[5] = (double) 0;
      doubleArray2[6] = (double) 0;
      dSCompiler0.divide(doubleArray2, 0, doubleArray0, 1044, doubleArray0, 0);
      dSCompiler0.asin(doubleArray2, 0, doubleArray0, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.log10(doubleArray0, 2, doubleArray2, 1413);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1413
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      dSCompiler0.asin(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      // Undeclared exception!
//      try { 
        dSCompiler0.remainder((double[]) null, 0, (double[]) null, 0, (double[]) null, 2316);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DSCompiler.getCompiler(0, 2840);
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (double) 2840;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2840, 0);
      // Undeclared exception!
//      try { 
        dSCompiler0.atan((double[]) null, (-1947), (double[]) null, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.atan2(doubleArray0, 0, (double[]) null, 0, doubleArray0, 17);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      // Undeclared exception!
      DSCompiler.getCompiler(0, 4907);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      dSCompiler0.acos(doubleArray0, 3, doubleArray0, 1);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1552);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(1552, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
      dSCompiler0.acos(doubleArray0, 0, doubleArray0, 1552);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-3576.29774176);
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(1, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {(-1.0)}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1080);
      assertEquals(1080, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) (-1);
      doubleArray0[1] = (double) (-1);
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 6.710424255583952E192;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (-579.0373338499242);
      doubleArray0[7] = (double) (-1);
      doubleArray0[8] = (double) 1080;
      // Undeclared exception!
      dSCompiler0.acosh(doubleArray0, 2, doubleArray0, 1080);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      int int0 = 0;
      int int1 = 2840;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2840);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(2840, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 2840;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 2840;
      doubleArray0[5] = (double) 2840;
      doubleArray0[6] = (double) 0;
      // Undeclared exception!
      dSCompiler0.acosh(doubleArray0, 3, doubleArray0, (-3249));
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 64);
      assertFalse(dSCompiler1.equals((Object)dSCompiler0));
      assertEquals(1, dSCompiler1.getSize());
      assertEquals(64, dSCompiler1.getOrder());
      assertEquals(0, dSCompiler1.getFreeParameters());
      assertNotSame(dSCompiler1, dSCompiler0);
      assertNotNull(dSCompiler1);
      
      // Undeclared exception!
//      try { 
        dSCompiler1.tanh(doubleArray0, 0, doubleArray0, 1716);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1716
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double double0 = 3200.278369534;
      int int1 = 1064;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(1064, 0);
      assertFalse(dSCompiler1.equals((Object)dSCompiler0));
      assertEquals(1, dSCompiler1.getSize());
      assertEquals(1064, dSCompiler1.getFreeParameters());
      assertEquals(0, dSCompiler1.getOrder());
      assertNotSame(dSCompiler1, dSCompiler0);
      assertNotNull(dSCompiler1);
      
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 1064;
      doubleArray0[1] = 3537.5;
      doubleArray0[2] = (double) 1064;
      doubleArray0[3] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler1.tanh(doubleArray0, 0, doubleArray0, 1064);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1064
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[9];
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(9, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.tanh(doubleArray0, (-2284), doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -2284
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 182.809916;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      double[] doubleArray1 = new double[9];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = 182.809916;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.tanh(doubleArray0, 279, doubleArray1, 279);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 279
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int int0 = 0;
      int int1 = 1048;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1048);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1048, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[7];
      int int2 = 2;
      dSCompiler0.log(doubleArray0, 2, doubleArray0, 0);
      assertEquals(7, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1048, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {Double.NEGATIVE_INFINITY, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      double double0 = (-3736.11);
      doubleArray0[0] = (-3736.11);
      doubleArray0[1] = (double) 1048;
      doubleArray0[2] = (double) 1048;
      doubleArray0[3] = (double) 1048;
      doubleArray0[4] = (double) 1048;
      doubleArray0[5] = (double) 1048;
      double double1 = 0.0;
      doubleArray0[6] = 0.0;
      // Undeclared exception!
//      try { 
        dSCompiler0.rootN(doubleArray0, 1048, 2, doubleArray0, 773);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1048
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[5] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.subtract(doubleArray0, (-983), doubleArray0, 0, doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -983
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-3576.29774176);
      double[] doubleArray1 = new double[1];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      dSCompiler0.pow(doubleArray0, 0, doubleArray1, 0, doubleArray1, 0);
      assertEquals(6, doubleArray0.length);
      assertEquals(1, doubleArray1.length);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {(-3576.29774176), 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {Double.NaN}, doubleArray1, 0.01);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      
      dSCompiler0.rootN(doubleArray0, 0, 6, doubleArray0, 0);
      assertEquals(6, doubleArray0.length);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {Double.NaN, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertNotSame(doubleArray0, doubleArray1);
      
      double[] doubleArray2 = new double[3];
      assertFalse(doubleArray2.equals((Object)doubleArray1));
      assertFalse(doubleArray2.equals((Object)doubleArray0));
      
      doubleArray2[0] = (double) 5;
      doubleArray2[1] = (double) 5;
      doubleArray2[2] = (-3576.29774176);
      // Undeclared exception!
//      try { 
        dSCompiler0.atan2(doubleArray0, 5, doubleArray1, 0, doubleArray2, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 5
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler1.getOrder());
      assertEquals(0, dSCompiler1.getFreeParameters());
      assertEquals(1, dSCompiler1.getSize());
      assertSame(dSCompiler1, dSCompiler0);
      assertNotNull(dSCompiler1);
      
      double[] doubleArray1 = new double[3];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      double double0 = (-1891.525604331613);
      doubleArray1[0] = (-1891.525604331613);
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = 0.0;
      int int1 = 33;
      // Undeclared exception!
//      try { 
        dSCompiler1.subtract(doubleArray0, 0, doubleArray0, 0, doubleArray1, 33);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 33
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.subtract(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      assertEquals(9, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.atan2(doubleArray0, (-1), doubleArray0, 2049, doubleArray0, (-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2049
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      int int0 = 62;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 62);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(62, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 62;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 62;
      doubleArray0[3] = (double) 62;
      doubleArray0[4] = (double) 62;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 62;
      // Undeclared exception!
//      try { 
        dSCompiler0.atan2(doubleArray0, 35, doubleArray0, 0, (double[]) null, (-3242));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 35
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      int int1 = 1552;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1552);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(1552, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 1552);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1552
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (-740.84398477);
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 3);
      assertEquals(5, doubleArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {0.0, 0.0, (-740.84398477), 0.0, 0.0}, doubleArray0, 0.01);
      
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      assertEquals(5, doubleArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {0.0, 0.0, (-740.84398477), 0.0, 0.0}, doubleArray0, 0.01);
      
      double[] doubleArray1 = new double[0];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      // Undeclared exception!
//      try { 
        dSCompiler0.log(doubleArray0, 0, doubleArray1, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      assertEquals(8, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[9];
      // Undeclared exception!
//      try { 
        dSCompiler0.sinh(doubleArray0, 0, doubleArray0, (-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      assertEquals(2, dSCompiler0.getFreeParameters());
      assertEquals(6, dSCompiler0.getSize());
      assertEquals(2, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.acos(doubleArray0, 2, doubleArray0, 2);
      assertEquals(8, doubleArray0.length);
      assertEquals(2, dSCompiler0.getFreeParameters());
      assertEquals(6, dSCompiler0.getSize());
      assertEquals(2, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {0.0, 0.0, 1.5707963267948966, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(3, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(1, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(3, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(7, doubleArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(7, doubleArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {0.7615941559557649, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      double[] doubleArray1 = new double[5];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 1356.0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = 1394.4;
      dSCompiler0.linearCombination((double) 0, doubleArray0, 0, (double) 0, doubleArray0, 0, (double) 0, doubleArray1, 0, doubleArray1, 0);
      assertEquals(7, doubleArray0.length);
      assertEquals(5, doubleArray1.length);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {0.7615941559557649, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {0.0, 1356.0, 0.0, 0.0, 1394.4}, doubleArray1, 0.01);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2923, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(2923, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination((double) 0, doubleArray0, 21, (double) 2923, doubleArray0, 21, (double) 0, doubleArray0, 2923, doubleArray0, 321);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 21
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (double) 2840;
      double[] doubleArray1 = new double[1];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 2840;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1106, 0);
      assertEquals(1106, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray2 = new double[1];
      assertFalse(doubleArray2.equals((Object)doubleArray1));
      assertFalse(doubleArray2.equals((Object)doubleArray0));
      
      doubleArray2[0] = (double) 0;
      double double0 = 4179.19;
      int int2 = 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination((double) 0, doubleArray2, 0, (double) 0, doubleArray0, 1106, 4179.19, doubleArray1, 0, doubleArray1, 1106);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1106
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[5] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1552);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(1552, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.rootN(doubleArray0, 0, 0, doubleArray0, 0);
      assertEquals(8, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(1552, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      // Undeclared exception!
      dSCompiler0.acos(doubleArray0, 0, doubleArray0, 1552);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      assertEquals(1, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
//      try { 
        dSCompiler0.rootN(doubleArray0, 0, 2027, doubleArray0, 2027);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2027
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.multiply(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      assertEquals(8, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      assertEquals(4, doubleArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {Double.NaN, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.rootN(doubleArray0, 0, (-927), doubleArray0, 4995);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 4995
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 18, doubleArray0, 18, doubleArray0, 18);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 18
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1121.4295);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 331, doubleArray0, 331, doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 331
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      double double0 = dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
      assertEquals(1, doubleArray0.length);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.exp(doubleArray0, 8, doubleArray0, (-344));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 8
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = 2.3547754287719727;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.exp(doubleArray0, 0, doubleArray0, (-597));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -597
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      assertEquals(1, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      
      double double0 = dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
      assertEquals(1, doubleArray0.length);
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.atanh(doubleArray0, 3592, doubleArray0, 3592);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3592
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[4];
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      assertEquals(4, doubleArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      doubleArray0[0] = (double) 0;
      dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(4, doubleArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      doubleArray0[1] = (double) 0;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(145, 0);
      assertFalse(dSCompiler1.equals((Object)dSCompiler0));
      assertEquals(145, dSCompiler1.getFreeParameters());
      assertEquals(1, dSCompiler1.getSize());
      assertEquals(0, dSCompiler1.getOrder());
      assertNotSame(dSCompiler1, dSCompiler0);
      assertNotNull(dSCompiler1);
      
//      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 0 != 145
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[7];
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler1.getOrder());
      assertEquals(0, dSCompiler1.getFreeParameters());
      assertEquals(1, dSCompiler1.getSize());
      assertSame(dSCompiler1, dSCompiler0);
      assertNotNull(dSCompiler1);
      
      dSCompiler0.checkCompatibility(dSCompiler1);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler1.getOrder());
      assertEquals(0, dSCompiler1.getFreeParameters());
      assertEquals(1, dSCompiler1.getSize());
      assertSame(dSCompiler0, dSCompiler1);
      assertSame(dSCompiler1, dSCompiler0);
      
      dSCompiler0.pow(doubleArray0, 0, (double) 0, doubleArray0, 0);
      assertEquals(7, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertSame(dSCompiler0, dSCompiler1);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.taylor(doubleArray0, 52, doubleArray0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 52
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 9);
      assertFalse(dSCompiler1.equals((Object)dSCompiler0));
      assertEquals(0, dSCompiler1.getFreeParameters());
      assertEquals(1, dSCompiler1.getSize());
      assertEquals(9, dSCompiler1.getOrder());
      assertNotSame(dSCompiler1, dSCompiler0);
      assertNotNull(dSCompiler1);
      
//      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 0 != 9
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 469.0;
      double[] doubleArray1 = new double[7];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      double double0 = (-2.0);
      doubleArray1[1] = (-2.0);
      doubleArray1[2] = 469.0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = 469.0;
      doubleArray1[6] = 469.0;
      int int1 = 1;
      dSCompiler0.atanh(doubleArray0, 0, doubleArray1, 1);
      assertEquals(4, doubleArray0.length);
      assertEquals(7, doubleArray1.length);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 469.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {0.0, 0.0, 469.0, 0.0, 0.0, 469.0, 469.0}, doubleArray1, 0.01);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      
      double[] doubleArray2 = new double[6];
      assertFalse(doubleArray2.equals((Object)doubleArray0));
      assertFalse(doubleArray2.equals((Object)doubleArray1));
      
      doubleArray2[0] = (-2.0);
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 1;
      int int2 = (-2024);
      dSCompiler0.checkCompatibility(dSCompiler0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      
      doubleArray2[3] = 469.0;
      doubleArray2[4] = 469.0;
      double[] doubleArray3 = new double[3];
      assertFalse(doubleArray3.equals((Object)doubleArray1));
      assertFalse(doubleArray3.equals((Object)doubleArray0));
      assertFalse(doubleArray3.equals((Object)doubleArray2));
      
      doubleArray3[0] = 469.0;
      doubleArray3[1] = (double) 1;
      doubleArray3[2] = (double) (-1);
      int int3 = (-30);
      // Undeclared exception!
//      try { 
        dSCompiler0.add(doubleArray3, (-1), doubleArray3, (-30), doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
//      try { 
        dSCompiler0.atan(doubleArray0, 1040, doubleArray0, 1040);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1040
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.atan(doubleArray0, 0, doubleArray0, 0);
      assertEquals(9, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = new double[2];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.atan(doubleArray1, 0, doubleArray1, 3397);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3397
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.asinh(doubleArray0, 501, doubleArray0, 501);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 501
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1552);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1552, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.log(doubleArray0, 0, doubleArray0, 0);
      assertEquals(2, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1552, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {Double.NEGATIVE_INFINITY, 0.0}, doubleArray0, 0.01);
      
      // Undeclared exception!
      dSCompiler0.acos(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      int int0 = 0;
      int int1 = 1048;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1048);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1048, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[7];
      int int2 = 2;
      dSCompiler0.log(doubleArray0, 2, doubleArray0, 0);
      assertEquals(7, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1048, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {Double.NEGATIVE_INFINITY, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      double double0 = (-3736.11);
      doubleArray0[0] = (-3736.11);
      doubleArray0[1] = (double) 1048;
      doubleArray0[2] = (double) 1048;
      doubleArray0[3] = (double) 1048;
      doubleArray0[4] = (double) 1048;
      doubleArray0[5] = (double) 1048;
      double double1 = 0.0;
      doubleArray0[6] = 0.0;
      // Undeclared exception!
//      try { 
        dSCompiler0.asinh(doubleArray0, 1048, doubleArray0, 1048);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1048
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(20, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(20, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination((double) 20, doubleArray0, 20, (double) 0, doubleArray0, 1541, doubleArray0, 1541);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 20
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(3, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.linearCombination(0.0, doubleArray0, 1, 0.37035053968429565, doubleArray0, 0, doubleArray0, 3);
      assertEquals(8, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(3, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.cos(doubleArray0, (-1173), doubleArray0, 3);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1173
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.cos(doubleArray0, 0, doubleArray0, 0);
      assertEquals(9, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.linearCombination((double) 0, doubleArray0, 0, 215.93138022656674, doubleArray0, 0, doubleArray0, 0);
      assertEquals(8, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1121.4295);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      dSCompiler0.cos(doubleArray0, 0, doubleArray0, 0);
      assertEquals(8, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {(-0.9929186679167614), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      int int1 = 1708;
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination(0.0, doubleArray0, 0, 0.0, doubleArray0, 1708, doubleArray0, 707);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1708
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.log(doubleArray0, 0, doubleArray0, (-1779));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1779
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      assertEquals(20, dSCompiler0.getSize());
      assertEquals(3, dSCompiler0.getOrder());
      assertEquals(3, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[5];
      // Undeclared exception!
//      try { 
        dSCompiler0.log(doubleArray0, (-692), doubleArray0, 907);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -692
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      double double0 = dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
      assertEquals(1, doubleArray0.length);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.linearCombination((double) (-365), doubleArray0, 634, (-1204.543625334), doubleArray0, 3894, doubleArray0, 2586);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 634
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      assertEquals(20, dSCompiler0.getSize());
      assertEquals(3, dSCompiler0.getOrder());
      assertEquals(3, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      // Undeclared exception!
//      try { 
        dSCompiler0.taylor(doubleArray0, 3, doubleArray0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 22
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      assertEquals(1, dSCompiler0.getFreeParameters());
      assertEquals(2, dSCompiler0.getSize());
      assertEquals(1, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[2];
      // Undeclared exception!
//      try { 
        dSCompiler0.taylor(doubleArray0, 4913, doubleArray0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 4914
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
//      try { 
        dSCompiler0.acosh(doubleArray0, 270, doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 270
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 27);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(27, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.0;
      // Undeclared exception!
//      try { 
        dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 27);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 27
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.acosh(doubleArray0, 0, doubleArray0, (-97));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -97
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      int int1 = 22;
      // Undeclared exception!
//      try { 
        dSCompiler0.expm1((double[]) null, 22, (double[]) null, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(1, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      dSCompiler0.asinh(doubleArray0, 3, doubleArray0, 0);
      assertEquals(6, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 0);
      assertEquals(1, doubleArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {Double.NEGATIVE_INFINITY}, doubleArray0, 0.01);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.add(doubleArray0, 0, doubleArray0, (-686), doubleArray0, (-686));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -686
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 182.809916;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      double[] doubleArray1 = new double[9];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = 182.809916;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = 182.809916;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = 182.809916;
      doubleArray1[8] = (-848.5520822822579);
      // Undeclared exception!
//      try { 
        dSCompiler0.add(doubleArray0, 0, doubleArray1, 0, doubleArray0, (-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 0);
      assertEquals(8, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {Double.NEGATIVE_INFINITY, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      dSCompiler0.add(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      assertEquals(8, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {Double.NEGATIVE_INFINITY, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1695, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1695, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
//      try { 
        dSCompiler0.pow(doubleArray0, 1695, (double) 0, doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1695
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      assertEquals(3, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.linearCombination(0.0, doubleArray0, 1, 13.576584866360722, doubleArray0, 0, doubleArray0, 3);
      assertEquals(8, doubleArray0.length);
      assertEquals(3, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      int int0 = 4171;
      double double0 = 413.43283048166;
      // Undeclared exception!
//      try { 
        dSCompiler0.atanh(doubleArray0, 1, doubleArray0, 2719);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2719
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(8, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      double double0 = 469.0;
      doubleArray0[3] = 469.0;
      double[] doubleArray1 = new double[7];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (-2.0);
      doubleArray1[2] = 469.0;
      doubleArray1[3] = 469.0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = 469.0;
      doubleArray1[6] = 469.0;
      int int0 = 1;
      dSCompiler0.atanh(doubleArray0, 0, doubleArray1, 1);
      assertEquals(4, doubleArray0.length);
      assertEquals(7, doubleArray1.length);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 469.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {0.0, 0.0, 469.0, 469.0, 0.0, 469.0, 469.0}, doubleArray1, 0.01);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      
      double[] doubleArray2 = new double[6];
      assertFalse(doubleArray2.equals((Object)doubleArray0));
      assertFalse(doubleArray2.equals((Object)doubleArray1));
      
      doubleArray2[0] = (-2.0);
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 1;
      // Undeclared exception!
//      try { 
        DSCompiler.getCompiler(2, (-2024));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      int int0 = 2;
      int int1 = 1698;
      // Undeclared exception!
      DSCompiler.getCompiler(2, 1698);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
      assertEquals(3, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.expm1(doubleArray0, 1668, doubleArray0, (-629));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1668
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      int int0 = 356;
      int int1 = 4940;
      // Undeclared exception!
      DSCompiler.getCompiler(356, 4940);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      assertEquals(8, doubleArray0.length);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[9];
      // Undeclared exception!
//      try { 
        dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 12);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 12
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (-740.84398477);
      double[] doubleArray1 = new double[0];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      // Undeclared exception!
//      try { 
        dSCompiler0.log1p(doubleArray1, 0, doubleArray1, 3);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-3576.29774176);
      dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(1, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {Double.NEGATIVE_INFINITY}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(8, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      // Undeclared exception!
//      try { 
        DSCompiler.getCompiler((-10), (-10));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      // Undeclared exception!
//      try { 
        dSCompiler0.remainder(doubleArray0, 1, doubleArray0, 0, doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      assertEquals(3, dSCompiler0.getFreeParameters());
      assertEquals(20, dSCompiler0.getSize());
      assertEquals(3, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      // Undeclared exception!
//      try { 
        dSCompiler0.cosh(doubleArray0, 25, doubleArray0, 6);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 25
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      assertEquals(20, dSCompiler0.getSize());
      assertEquals(3, dSCompiler0.getOrder());
      assertEquals(3, dSCompiler0.getFreeParameters());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 3;
      // Undeclared exception!
//      try { 
        dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      int int0 = (-3263);
      // Undeclared exception!
//      try { 
        DSCompiler.getCompiler(5288, (-3263));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      int int0 = 2840;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2840);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(2840, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 2840;
      // Undeclared exception!
//      try { 
        dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 2840);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2840
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[8];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (-1156.1);
      doubleArray1[7] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.cosh(doubleArray1, 0, doubleArray1, 1624);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1624
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      int int0 = 45;
      double[] doubleArray1 = new double[4];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = 601.3949164;
      doubleArray1[3] = (double) 0;
      // Undeclared exception!
//      try { 
        dSCompiler0.remainder(doubleArray0, 0, doubleArray0, 45, doubleArray1, 45);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 45
//         //
//         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
//      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(7, doubleArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(7, doubleArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertNotNull(dSCompiler0);
      
      dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(8, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {Double.NaN, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      // Undeclared exception!
      DSCompiler.getCompiler(3117, 3117);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          int int0 = 2123;
          // Undeclared exception!
          DSCompiler.getCompiler(2123, 2123);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      int int0 = 3117;
      // Undeclared exception!
      DSCompiler.getCompiler(3117, 3117);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      // Undeclared exception!
      DSCompiler.getCompiler(7, 7);
  }
}
