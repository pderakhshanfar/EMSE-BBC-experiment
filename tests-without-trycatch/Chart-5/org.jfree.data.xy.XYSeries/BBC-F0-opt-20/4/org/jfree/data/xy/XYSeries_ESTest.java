/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 12:07:41 GMT 2021
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.TimeZone;
import javax.swing.DefaultListModel;
import javax.swing.JDesktopPane;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.time.Day;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.SpreadsheetDate;
import org.jfree.data.time.TimeSeriesDataItem;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XYDataItem;
import org.jfree.data.xy.XYDatasetTableModel;
import org.jfree.data.xy.XYSeries;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XYSeries_ESTest extends XYSeries_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.addOrUpdate((double) (-9999), (double) (-9999));
      xYSeries0.add((-615.136), (Number) (-9999));
      xYSeries0.addOrUpdate(0.0, 0.0);
      xYSeries0.add((-1629.401749028), (Number) (-9999));
      xYSeries0.add((-4444.5631902812), (Number) 9999);
      xYSeries0.hashCode();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPo+}", false, false);
      XYSeries xYSeries1 = xYSeries0.createCopy(45, 45);
      xYSeries1.setMaximumItemCount(0);
      boolean boolean0 = xYSeries1.equals(xYSeries0);
      assertEquals(0, xYSeries1.getMaximumItemCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.US;
      Week week0 = new Week(mockDate0, timeZone0, locale0);
      XYSeries xYSeries0 = new XYSeries(week0);
      xYSeries0.setMaximumItemCount(1);
      xYSeries0.addOrUpdate((double) 2269, (-1236.46247469988));
      assertEquals(1, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.addOrUpdate((double) 0, 0.0);
      xYSeries0.addOrUpdate((double) 0, 0.0);
      assertEquals(2, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      Short short0 = new Short((short) (-3800));
      xYSeries0.update(integer0, short0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.add((-1562.33997158869), (Number) integer0);
      xYSeries0.update(integer0, integer0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      Short short0 = new Short((short) (-3800));
      // Undeclared exception!
//      try { 
        xYSeries0.update(integer0, short0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // No observation for x = 0
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0L);
      XYSeries xYSeries0 = new XYSeries(fixedMillisecond0);
      // Undeclared exception!
//      try { 
        xYSeries0.delete((-1), (-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SpreadsheetDate spreadsheetDate0 = new SpreadsheetDate(1179);
      XYSeries xYSeries0 = new XYSeries(spreadsheetDate0);
      xYSeries0.add((double) (-1), Double.NaN, false);
      // Undeclared exception!
//      try { 
        xYSeries0.delete(0, 1024);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("-sj'WI");
      xYSeries0.add(0.8, (Number) (-9999), false);
      xYSeries0.add((double) 2958465, (Number) (-9999), true);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.add((Number) (-9999), (Number) (-9999), true);
      xYSeries0.addOrUpdate((double) 9999, (double) (-9999));
      xYSeries0.add((double) 9999, (Number) (-9999));
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      XYSeries xYSeries0 = new XYSeries(mockDate0, true, true);
      xYSeries0.addOrUpdate((double) 53, (double) 1);
      xYSeries0.addOrUpdate((double) (-26), 1.0);
      Number number0 = xYSeries0.getX(1);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertEquals(53.0, number0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      XYDataItem xYDataItem0 = new XYDataItem((double) (-9999), 0.0);
      xYSeries0.add(xYDataItem0, false);
      xYSeries0.updateByIndex(0, 9999);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("There is no database to execute the query.");
      xYSeries0.add((double) (-9999), (-3184.706), false);
      assertTrue(xYSeries0.getAutoSort());
      
      XYDataItem xYDataItem0 = xYSeries0.remove((Number) (-9999));
      assertEquals((-3184.706), xYDataItem0.getYValue(), 0.01);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Integer integer0 = new Integer(254);
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      XYDataItem xYDataItem0 = new XYDataItem((Number) integer0, (Number) integer0);
      xYSeries0.add(xYDataItem0, false);
      xYSeries0.remove((Number) integer0);
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.remove(0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertFalse(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPo+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) null);
      XYDataItem xYDataItem0 = xYSeries0.remove(0);
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertEquals(Double.NaN, xYDataItem0.getYValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPo+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) null);
      XYDataItem xYDataItem0 = xYSeries0.remove(0);
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(Double.NaN, xYDataItem0.getYValue(), 0.01);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Year year0 = new Year();
      Week week0 = new Week((-9999), year0);
      XYSeries xYSeries0 = new XYSeries(week0);
      xYSeries0.addOrUpdate(Double.NEGATIVE_INFINITY, (double) (-9999));
      XYDataItem xYDataItem0 = xYSeries0.remove(0);
      assertEquals(Double.NEGATIVE_INFINITY, xYDataItem0.getXValue(), 0.01);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertEquals((-9999.0), xYDataItem0.getYValue(), 0.01);
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Integer integer0 = new Integer(253);
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add((double) 253, 0.0, true);
      Double double0 = new Double(0.0);
      XYDataItem xYDataItem0 = new XYDataItem((Number) double0, (Number) double0);
      xYSeries0.add(xYDataItem0, false);
      int int0 = xYSeries0.indexOf(double0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      xYSeries0.setMaximumItemCount(0);
      int int0 = xYSeries0.getMaximumItemCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYDataItem xYDataItem0 = new XYDataItem((Number) integer0, (Number) integer0);
      XYSeries xYSeries0 = new XYSeries(xYDataItem0, true);
      xYSeries0.add(xYDataItem0, false);
      xYSeries0.getItemCount();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPo+}", false, false);
      xYSeries0.add((double) (-3800), (Number) integer0, true);
      XYDataItem xYDataItem0 = xYSeries0.getDataItem(0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertEquals(300.0, xYDataItem0.getYValue(), 0.01);
      assertEquals((-3800.0), xYDataItem0.getXValue(), 0.01);
      assertFalse(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.getDataItem(0);
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.add((Number) (-9999), (Number) (-9999), true);
      xYSeries0.addOrUpdate((double) 9999, (double) (-9999));
      assertEquals(2, xYSeries0.getItemCount());
      
      XYDataItem xYDataItem0 = xYSeries0.getDataItem(1);
      assertEquals(9999.0, xYDataItem0.getXValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0L);
      XYSeries xYSeries0 = new XYSeries(fixedMillisecond0);
      boolean boolean0 = xYSeries0.getAutoSort();
      assertTrue(boolean0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Week week0 = new Week((-1513), (-1513));
      XYSeries xYSeries0 = new XYSeries(week0, false, true);
      xYSeries0.getAllowDuplicateXValues();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertFalse(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, true, true);
      xYSeries0.setNotify(false);
      XYSeries xYSeries1 = xYSeries0.createCopy((-2029), (-9999));
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
      assertTrue(xYSeries1.getAutoSort());
      assertNotSame(xYSeries1, xYSeries0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Integer integer0 = new Integer(22);
      XYSeries xYSeries0 = new XYSeries(integer0, false);
      xYSeries0.setMaximumItemCount(0);
      xYSeries0.createCopy(22, 0);
      assertEquals(0, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      xYSeries0.addOrUpdate((Number) 9999, (Number) (-9999));
      xYSeries0.addOrUpdate((Number) 9999, (Number) (-9999));
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, true, false);
      xYSeries0.addOrUpdate((Number) (-9999), (Number) (-9999));
      xYSeries0.addOrUpdate((double) (-9999), (double) 9999);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, true, false);
      xYSeries0.addOrUpdate((Number) (-9999), (Number) 9999);
      xYSeries0.addOrUpdate((double) (-9999), (double) 9999);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false);
      // Undeclared exception!
//      try { 
        xYSeries0.updateByIndex((-1490), (-9999));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.update((-9999), (-9999));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      // Undeclared exception!
//      try { 
        xYSeries0.update((Number) null, (Number) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'x' argument.
//         //
//         verifyException("org.jfree.data.xy.XYDataItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.toArray();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.add((Integer) 9999);
      xYSeries0.data = (List) linkedList0;
      // Undeclared exception!
//      try { 
        xYSeries0.toArray();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.Integer cannot be cast to org.jfree.data.xy.XYDataItem
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      Stack<Integer> stack0 = new Stack<Integer>();
      xYSeries0.data = (List) stack0;
      // Undeclared exception!
//      try { 
        xYSeries0.setMaximumItemCount((-9999));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // Array index out of range: 0
//         //
//         verifyException("java.util.Vector", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, true);
      JList<XYSeries> jList0 = new JList<XYSeries>();
      List<XYSeries> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      // Undeclared exception!
//      try { 
        xYSeries0.remove((Number) integer0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.AbstractList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2910, 2910, (-2634));
      Millisecond millisecond0 = new Millisecond(mockDate0);
      TimeSeriesDataItem timeSeriesDataItem0 = new TimeSeriesDataItem((RegularTimePeriod) millisecond0, (Number) 0);
      XYSeries xYSeries0 = new XYSeries(timeSeriesDataItem0, true, true);
      LinkedList<JDesktopPane> linkedList0 = new LinkedList<JDesktopPane>();
      xYSeries0.data = (List) linkedList0;
      // Undeclared exception!
//      try { 
        xYSeries0.remove((Number) 0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: -1, Size: 0
//         //
//         verifyException("java.util.LinkedList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0L);
      XYSeries xYSeries0 = new XYSeries(fixedMillisecond0);
      // Undeclared exception!
//      try { 
        xYSeries0.remove((Number) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'x' argument.
//         //
//         verifyException("org.jfree.data.xy.XYDataItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      Stack<XYDatasetTableModel> stack0 = new Stack<XYDatasetTableModel>();
      JList<XYDatasetTableModel> jList0 = new JList<XYDatasetTableModel>(stack0);
      List<XYDatasetTableModel> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      // Undeclared exception!
//      try { 
        xYSeries0.remove(9999);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.AbstractList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPo+}", true, true);
      XYSeries xYSeries1 = xYSeries0.createCopy(22, 22);
      xYSeries1.data = null;
      // Undeclared exception!
//      try { 
        xYSeries1.remove(335);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      XYSeries xYSeries0 = new XYSeries(quarter0, false);
      // Undeclared exception!
//      try { 
        xYSeries0.remove((-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.indexOf(9999);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("-", true, false);
      // Undeclared exception!
//      try { 
        xYSeries0.indexOf((Number) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'x' argument.
//         //
//         verifyException("org.jfree.data.xy.XYDataItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.hashCode();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPo+}", true, true);
      XYSeries xYSeries1 = xYSeries0.createCopy(22, 22);
      xYSeries1.data = null;
      // Undeclared exception!
//      try { 
        xYSeries1.getY(Integer.MAX_VALUE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Integer integer0 = new Integer((-7));
      XYSeries xYSeries0 = new XYSeries(integer0, true);
      // Undeclared exception!
//      try { 
        xYSeries0.getY((-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      // Undeclared exception!
//      try { 
        xYSeries0.getX(29);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 29, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.getItems();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Collections$UnmodifiableCollection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.getItemCount();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.getDataItem((-82));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, true);
      // Undeclared exception!
//      try { 
        xYSeries0.getDataItem(9999);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 9999, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false);
      // Undeclared exception!
//      try { 
        xYSeries0.getDataItem((-9999));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.delete((-9999), (-5236));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.createCopy(9999, (-9999));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPsmO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      // Undeclared exception!
//      try { 
        xYSeries0.createCopy(0, 2677);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1, Size: 1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      // Undeclared exception!
//      try { 
        xYSeries0.createCopy((-3800), 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.clone();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'collection' argument.
//         //
//         verifyException("org.jfree.chart.util.ObjectUtilities", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Second second0 = new Second();
      XYSeries xYSeries0 = new XYSeries(second0, false);
      java.util.Vector<Integer> vector0 = new java.util.Vector<Integer>();
      xYSeries0.data = (List) vector0;
      vector0.add((Integer) second0.LAST_SECOND_IN_MINUTE);
//      try { 
        xYSeries0.clone();
//        fail("Expecting exception: CloneNotSupportedException");
      
//      } catch(CloneNotSupportedException e) {
//         //
//         // Failed to clone.
//         //
//         verifyException("org.jfree.chart.util.ObjectUtilities", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Day day0 = new Day();
      XYSeries xYSeries0 = new XYSeries(day0);
      xYSeries0.addOrUpdate(1.0, (-3114.07));
      List list0 = xYSeries0.getItems();
      xYSeries0.data = list0;
      // Undeclared exception!
//      try { 
        xYSeries0.clear();
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Collections$UnmodifiableCollection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.clear();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      Stack<XYDatasetTableModel> stack0 = new Stack<XYDatasetTableModel>();
      JList<XYDatasetTableModel> jList0 = new JList<XYDatasetTableModel>(stack0);
      List<XYDatasetTableModel> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      // Undeclared exception!
//      try { 
        xYSeries0.addOrUpdate((Number) 9999, (Number) (-9999));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.AbstractList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.addOrUpdate((Number) 9999, (Number) (-9999));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("There is no database to execute the query.");
      xYSeries0.add((Number) (-9999), (Number) 9999);
      // Undeclared exception!
//      try { 
        xYSeries0.addOrUpdate((Number) (-9999), (Number) (-9999));
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: -1, Size: 1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.addOrUpdate((double) 9999, (double) (-9999));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, true, true);
      java.util.Vector<XYSeries> vector0 = new java.util.Vector<XYSeries>();
      vector0.add(xYSeries0);
      xYSeries0.data = (List) vector0;
      // Undeclared exception!
//      try { 
        xYSeries0.addOrUpdate((-1.0), (-517.5));
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, true);
      Stack<String> stack0 = new Stack<String>();
      xYSeries0.data = (List) stack0;
      xYSeries0.add((Number) (-9999), (Number) 9999);
      // Undeclared exception!
//      try { 
        xYSeries0.addOrUpdate((double) (-9999), (double) 9999);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      DefaultListModel<XYDatasetTableModel> defaultListModel0 = new DefaultListModel<XYDatasetTableModel>();
      JList<XYDatasetTableModel> jList0 = new JList<XYDatasetTableModel>(defaultListModel0);
      List<XYDatasetTableModel> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      XYDataItem xYDataItem0 = new XYDataItem((double) (-9999), 1959.812566361126);
      // Undeclared exception!
//      try { 
        xYSeries0.add(xYDataItem0, false);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.AbstractList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Integer integer0 = new Integer(253);
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      XYDataItem xYDataItem0 = xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      // Undeclared exception!
//      try { 
        xYSeries0.add(xYDataItem0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // X-value already exists.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      XYDataItem xYDataItem0 = new XYDataItem(2.0, (-1024.99048));
      // Undeclared exception!
//      try { 
        xYSeries0.add(xYDataItem0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      // Undeclared exception!
//      try { 
        xYSeries0.add((XYDataItem) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'item' argument.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Integer integer0 = new Integer(253);
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      // Undeclared exception!
//      try { 
        xYSeries0.add((Number) integer0, (Number) integer0, true);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // X-value already exists.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPo+}", false, false);
      BigInteger bigInteger0 = BigInteger.ONE;
      xYSeries0.add((Number) bigInteger0, (Number) bigInteger0, false);
      // Undeclared exception!
//      try { 
        xYSeries0.add((Number) bigInteger0, (Number) bigInteger0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // X-value already exists.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.add((Number) 9999, (Number) 9999);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      // Undeclared exception!
//      try { 
        xYSeries0.add((Number) null, (Number) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'x' argument.
//         //
//         verifyException("org.jfree.data.xy.XYDataItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, true);
      Stack<String> stack0 = new Stack<String>();
      xYSeries0.data = (List) stack0;
      stack0.add("=Knm{Js :,Tc{`a)D2v");
      // Undeclared exception!
//      try { 
        xYSeries0.add((Number) (-9999), (Number) 9999);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.add(848.8655278879359, (Number) (-9999), true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Integer integer0 = new Integer(2585);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPo+}", false, false);
      xYSeries0.addOrUpdate((double) 0, (double) 2585);
      // Undeclared exception!
//      try { 
        xYSeries0.add(0.0, (Number) integer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // X-value already exists.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries(integer0, true);
      JList<XYSeries> jList0 = new JList<XYSeries>();
      List<XYSeries> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      // Undeclared exception!
//      try { 
        xYSeries0.add(0.0, (Number) integer0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.AbstractList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.data = null;
      // Undeclared exception!
//      try { 
        xYSeries0.add((-1327.639), (Number) 9999);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      Stack<Integer> stack0 = new Stack<Integer>();
      stack0.add((Integer) (-9999));
      xYSeries0.data = (List) stack0;
      // Undeclared exception!
//      try { 
        xYSeries0.add((double) 9999, (Number) 9999);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.Integer cannot be cast to org.jfree.data.xy.XYDataItem
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      xYSeries0.addOrUpdate((double) (-9999), (double) 9999);
      // Undeclared exception!
//      try { 
        xYSeries0.add((double) (-9999), (double) 9999, false);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // X-value already exists.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      DefaultListModel<XYDatasetTableModel> defaultListModel0 = new DefaultListModel<XYDatasetTableModel>();
      JList<XYDatasetTableModel> jList0 = new JList<XYDatasetTableModel>(defaultListModel0);
      List<XYDatasetTableModel> list0 = jList0.getSelectedValuesList();
      xYSeries0.data = list0;
      // Undeclared exception!
//      try { 
        xYSeries0.add((double) 9999, (double) (-9999));
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.AbstractList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) xYSeries0);
      xYSeries0.data = (List) arrayList0;
      // Undeclared exception!
//      try { 
        xYSeries0.add((double) 9999, (double) (-9999));
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XYSeries xYSeries0 = null;
//      try {
        xYSeries0 = new XYSeries((Comparable) null, true, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'key' argument.
//         //
//         verifyException("org.jfree.data.general.Series", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XYSeries xYSeries0 = null;
//      try {
        xYSeries0 = new XYSeries((Comparable) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'key' argument.
//         //
//         verifyException("org.jfree.data.general.Series", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XYSeries xYSeries0 = null;
//      try {
        xYSeries0 = new XYSeries((Comparable) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'key' argument.
//         //
//         verifyException("org.jfree.data.general.Series", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Integer integer0 = new Integer(253);
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      Double double0 = new Double(0.0);
      XYDataItem xYDataItem0 = new XYDataItem((Number) double0, (Number) double0);
      xYSeries0.add(xYDataItem0, false);
      int int0 = xYSeries0.indexOf(double0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertEquals(0, int0);
      assertFalse(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Integer integer0 = new Integer(253);
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add((double) 253, 0.0, true);
      Double double0 = new Double(0.0);
      int int0 = xYSeries0.indexOf(double0);
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPo+}", false, false);
      xYSeries0.setMaximumItemCount(0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      assertEquals(0, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, true, false);
      xYSeries0.addOrUpdate((Number) (-9999), (Number) 9999);
      xYSeries0.addOrUpdate((Number) (-9999), (Number) (-9999));
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Integer integer0 = new Integer(253);
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add((double) 253, 0.0, false);
      XYDataItem xYDataItem0 = xYSeries0.addOrUpdate((double) 253, 0.8);
      // Undeclared exception!
//      try { 
        xYSeries0.add(xYDataItem0, false);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // X-value already exists.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false);
      XYDataItem xYDataItem0 = new XYDataItem((Number) 9999, (Number) (-9999));
      xYSeries0.add(xYDataItem0, false);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAllowDuplicateXValues());
      assertFalse(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Year year0 = new Year();
      Week week0 = new Week((-2817), year0);
      XYSeries xYSeries0 = new XYSeries(week0);
      xYSeries0.add(1.0, (double) (-9999), false);
      XYDataItem xYDataItem0 = new XYDataItem((Number) 1, (Number) 53);
      xYSeries0.add(xYDataItem0, false);
      assertEquals(2, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries(integer0, true, false);
      XYDataItem xYDataItem0 = new XYDataItem((Number) integer0, (Number) integer0);
      xYSeries0.add(xYDataItem0, true);
      xYSeries0.getY(0);
      assertFalse(xYSeries0.getAllowDuplicateXValues());
      assertTrue(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      // Undeclared exception!
//      try { 
        xYSeries0.add((Number) null, (Number) (-9999), false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'x' argument.
//         //
//         verifyException("org.jfree.data.xy.XYDataItem", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      XYDataItem xYDataItem0 = new XYDataItem(2.0, (-1024.99048));
      xYSeries0.add(xYDataItem0);
      assertTrue(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0L);
      XYSeries xYSeries0 = new XYSeries(fixedMillisecond0);
      // Undeclared exception!
//      try { 
        xYSeries0.getX((-26));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries(integer0, true, false);
      // Undeclared exception!
//      try { 
        xYSeries0.getY(0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Year year0 = new Year();
      Week week0 = new Week((-9999), year0);
      XYSeries xYSeries0 = new XYSeries(week0);
      // Undeclared exception!
//      try { 
        xYSeries0.remove(0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Year year0 = new Year();
      Week week0 = new Week((-9999), year0);
      XYSeries xYSeries0 = new XYSeries(week0);
      xYSeries0.getItemCount();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Year year0 = new Year();
      Week week0 = new Week((-9999), year0);
      XYSeries xYSeries0 = new XYSeries(week0);
      xYSeries0.hashCode();
      assertTrue(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.addOrUpdate((double) 0, 0.0);
      xYSeries0.add(44.07359079727107, (Number) integer0);
      xYSeries0.hashCode();
      assertEquals(3, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.addOrUpdate((double) 0, 0.0);
      xYSeries0.hashCode();
      assertEquals(2, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, true);
      XYSeries xYSeries1 = xYSeries0.createCopy((-9999), 0);
      assertTrue(xYSeries1.equals((Object)xYSeries0));
      
      xYSeries1.add(1.0, 1.0, true);
      boolean boolean0 = xYSeries1.equals(xYSeries0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      XYSeries xYSeries1 = new XYSeries(year0, true, false);
      boolean boolean0 = xYSeries0.equals(xYSeries1);
      assertFalse(boolean0);
      assertTrue(xYSeries1.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPo+}", false, false);
      XYSeries xYSeries1 = new XYSeries("~l+#PgIo!NFPo+}", true);
      boolean boolean0 = xYSeries1.equals(xYSeries0);
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
      assertFalse(boolean0);
      assertTrue(xYSeries1.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      XYSeries xYSeries1 = xYSeries0.createCopy(9999, (-9999));
      xYSeries1.setMaximumItemCount(31);
      boolean boolean0 = xYSeries0.equals(xYSeries1);
      assertEquals(31, xYSeries1.getMaximumItemCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, true);
      XYDataItem xYDataItem0 = new XYDataItem((Number) 9999, (Number) 9999);
      XYSeries xYSeries1 = new XYSeries(xYDataItem0, false, true);
      boolean boolean0 = xYSeries0.equals(xYSeries1);
      assertTrue(xYSeries1.getAllowDuplicateXValues());
      assertFalse(boolean0);
      assertFalse(xYSeries1.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      XYSeries xYSeries1 = xYSeries0.createCopy(9999, (-9999));
      boolean boolean0 = xYSeries0.equals(xYSeries1);
      assertTrue(xYSeries1.getAutoSort());
      assertNotSame(xYSeries1, xYSeries0);
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
      XYSeries xYSeries0 = new XYSeries(fixedMillisecond0);
      boolean boolean0 = xYSeries0.equals(xYSeries0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAutoSort());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      XYDataItem xYDataItem0 = xYSeries0.addOrUpdate((double) 9999, (double) (-9999));
      boolean boolean0 = xYSeries0.equals(xYDataItem0);
      assertEquals(1, xYSeries0.getItemCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      XYSeries xYSeries1 = xYSeries0.createCopy(334, 120);
      xYSeries1.data = null;
      // Undeclared exception!
//      try { 
        xYSeries1.add((double) 9999, (double) 120);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) null);
      xYSeries0.toArray();
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.add((Number) (-9999), (Number) 9999);
      // Undeclared exception!
//      try { 
        xYSeries0.addOrUpdate((double) (-9999), (double) 9999);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: -1, Size: 1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0L);
      XYSeries xYSeries0 = new XYSeries(fixedMillisecond0);
      // Undeclared exception!
//      try { 
        xYSeries0.addOrUpdate((Number) null, (Number) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'x' argument.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.remove((Number) integer0);
      // Undeclared exception!
//      try { 
        xYSeries0.update(integer0, integer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // No observation for x = 0
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Day day0 = new Day();
      XYSeries xYSeries0 = new XYSeries(day0);
      xYSeries0.addOrUpdate(1.0, (-3114.07));
      assertEquals(1, xYSeries0.getItemCount());
      
      xYSeries0.clear();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.clear();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Second second0 = new Second();
      XYSeries xYSeries0 = new XYSeries(second0, false);
      xYSeries0.delete(121, 0);
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertTrue(xYSeries0.getAllowDuplicateXValues());
      assertFalse(xYSeries0.getAutoSort());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      xYSeries0.add((double) (-9999), (Number) (-9999));
      // Undeclared exception!
//      try { 
        xYSeries0.add((double) (-9999), (double) 9999);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // X-value already exists.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      xYSeries0.addOrUpdate((double) 9999, (double) (-9999));
      xYSeries0.add((double) (-9999), (Number) (-9999));
      XYDataItem xYDataItem0 = xYSeries0.getDataItem(0);
      xYSeries0.add(xYDataItem0, true);
      assertEquals(3, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, true, false);
      xYSeries0.add((double) (-9999), (double) 9999, false);
      XYDataItem xYDataItem0 = new XYDataItem((Number) (-9999), (Number) 9999);
      // Undeclared exception!
//      try { 
        xYSeries0.add(xYDataItem0, true);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // X-value already exists.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      // Undeclared exception!
//      try { 
        xYSeries0.add((XYDataItem) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'item' argument.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries(integer0, true, true);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      assertEquals(1, xYSeries0.getItemCount());
      
      xYSeries0.setMaximumItemCount(0);
      assertTrue(xYSeries0.getAllowDuplicateXValues());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      // Undeclared exception!
//      try { 
        xYSeries0.setMaximumItemCount((-9999));
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("GMT+00:00", false, false);
      xYSeries0.setMaximumItemCount(1);
      XYDataItem xYDataItem0 = new XYDataItem((-1627.00865692), (double) 2);
      xYSeries0.add((double) 0L, (double) 1);
      xYSeries0.add(xYDataItem0, false);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Integer integer0 = new Integer(254);
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      boolean boolean0 = xYSeries0.getAutoSort();
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
      assertFalse(boolean0);
      assertFalse(xYSeries0.getAllowDuplicateXValues());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false, false);
      boolean boolean0 = xYSeries0.getAllowDuplicateXValues();
      assertFalse(boolean0);
      assertFalse(xYSeries0.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries0.getMaximumItemCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2910, 2910, (-2634));
      Millisecond millisecond0 = new Millisecond(mockDate0);
      TimeSeriesDataItem timeSeriesDataItem0 = new TimeSeriesDataItem((RegularTimePeriod) millisecond0, (Number) 0);
      XYSeries xYSeries0 = new XYSeries(timeSeriesDataItem0, true, true);
      // Undeclared exception!
//      try { 
        xYSeries0.remove((Number) 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.createCopy(0, 0);
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0, false);
      // Undeclared exception!
//      try { 
        xYSeries0.updateByIndex(2539, (-9999));
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 2539, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Integer integer0 = new Integer(0);
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
      xYSeries0.toArray();
      assertEquals(1, xYSeries0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      XYSeries xYSeries0 = new XYSeries(integer0, false, false);
      xYSeries0.add(0.0, 1.0, false);
      // Undeclared exception!
//      try { 
        xYSeries0.add(0.0, (Number) integer0, false);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // X-value already exists.
//         //
//         verifyException("org.jfree.data.xy.XYSeries", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XYSeries xYSeries0 = new XYSeries("~l+#PgIo!NFPO+}", false, false);
      int int0 = xYSeries0.getMaximumItemCount();
      assertEquals(Integer.MAX_VALUE, int0);
      assertFalse(xYSeries0.getAutoSort());
      assertFalse(xYSeries0.getAllowDuplicateXValues());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Second second0 = new Second();
      XYSeries xYSeries0 = new XYSeries(second0, false);
      XYSeries xYSeries1 = (XYSeries)xYSeries0.clone();
      assertNotSame(xYSeries1, xYSeries0);
      assertFalse(xYSeries1.getAutoSort());
      assertEquals(Integer.MAX_VALUE, xYSeries1.getMaximumItemCount());
      assertTrue(xYSeries1.getAllowDuplicateXValues());
  }
}
