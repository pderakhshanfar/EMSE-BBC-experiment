/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 22:17:09 GMT 2021
 */

package org.mockito.internal.configuration.injection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.util.LinkedHashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import org.mockito.internal.configuration.injection.PropertyAndSetterInjection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PropertyAndSetterInjection_ESTest extends PropertyAndSetterInjection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PropertyAndSetterInjection propertyAndSetterInjection0 = new PropertyAndSetterInjection();
      MockThrowable mockThrowable0 = new MockThrowable("");
      InvocationTargetException invocationTargetException0 = new InvocationTargetException(mockThrowable0);
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      // Undeclared exception!
//      try { 
        propertyAndSetterInjection0.processInjection((Field) null, invocationTargetException0, linkedHashSet0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.util.reflection.AccessibilityChanger", e);
//      }
  }
}
