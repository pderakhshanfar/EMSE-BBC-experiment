/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 12:38:56 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "", "", "");
      Object object0 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>("", "", multiKey0, "", object0);
      MultiKey<MultiKey<Object>> multiKey2 = new MultiKey<MultiKey<Object>>(multiKey1, multiKey1, multiKey1, multiKey1);
      multiKey2.toString();
      multiKey1.toString();
      Object object1 = multiKey2.getKey(1);
      boolean boolean0 = multiKey1.equals(object1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "gD";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "^YK+jeHS";
      stringArray0[5] = "Ve2G'$~";
      stringArray0[6] = "9]S.]'W:";
      stringArray0[7] = "_%Hl;\"j0QiO";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, false);
      MultiKey<Object> multiKey1 = new MultiKey<Object>((Object[]) stringArray0, false);
      boolean boolean0 = multiKey0.equals(multiKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "iUrtQS-s%1U6<AO=0`*");
      multiKey0.toString();
      Integer[] integerArray0 = new Integer[0];
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray0);
      multiKey1.toString();
      Integer[] integerArray1 = multiKey1.getKeys();
      boolean boolean0 = false;
      MultiKey<Object> multiKey2 = new MultiKey<Object>((Object[]) integerArray1, false);
      multiKey2.toString();
      multiKey0.toString();
      multiKey2.getKeys();
      multiKey0.toString();
      multiKey1.toString();
      int int0 = (-1);
      // Undeclared exception!
//      try { 
        multiKey2.getKey((-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[0];
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, false);
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.size();
      Object object0 = new Object();
      int int0 = 371;
      Integer integer0 = new Integer(371);
      Integer integer1 = null;
      multiKey0.toString();
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, (Integer) null, (Integer) null);
      // Undeclared exception!
//      try { 
        multiKey1.getKey(371);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 371
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0, true);
      String string0 = multiKey0.toString();
      assertEquals("MultiKey[]", string0);
      
      MultiKey<MultiKey<String>> multiKey1 = new MultiKey<MultiKey<String>>((MultiKey<String>) null, (MultiKey<String>) null, (MultiKey<String>) null, (MultiKey<String>) null);
      multiKey1.getKey(1);
      Object object0 = new Object();
      MultiKey<Object> multiKey2 = new MultiKey<Object>((Object) null, "MultiKey[]", object0);
      multiKey2.toString();
      multiKey2.toString();
      multiKey2.getKeys();
      multiKey2.toString();
      Integer integer0 = new Integer((-1));
      MultiKey<Integer> multiKey3 = new MultiKey<Integer>((Integer) null, integer0);
      boolean boolean0 = multiKey3.equals("MultiKey[null, MultiKey[], java.lang.Object@35660af6]");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("vc0rf", "", "", "");
      Object object0 = new Object();
      Object object1 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(multiKey0, object1, (Object) null, object1, multiKey0);
      multiKey1.toString();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = object1;
      objectArray0[1] = object1;
      objectArray0[2] = (Object) "MultiKey[MultiKey[vc0rf, , , ], java.lang.Object@638f74d1, null, java.lang.Object@638f74d1, MultiKey[vc0rf, , , ]]";
      objectArray0[3] = (Object) multiKey1;
      objectArray0[4] = (Object) multiKey0;
      objectArray0[5] = (Object) "";
      objectArray0[6] = null;
      objectArray0[7] = (Object) "vc0rf";
      objectArray0[8] = object1;
      multiKey1.hashCode();
      multiKey0.equals(multiKey1);
      Integer integer0 = new Integer((-1344));
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer((-1));
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer1, integer2);
      // Undeclared exception!
//      try { 
        multiKey2.getKey((-307));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -307
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiKey<Object> multiKey0 = new MultiKey<Object>((Object) null, (Object) null);
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(multiKey0, (Object) null, "");
      multiKey1.toString();
      multiKey0.toString();
      multiKey1.getKeys();
      String string0 = multiKey1.toString();
      assertEquals("MultiKey[MultiKey[null, null], null, ]", string0);
      
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>((Integer) null, (Integer) null);
      boolean boolean0 = multiKey2.equals("MultiKey[MultiKey[null, null], null, ]");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(4236);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "#o<q\ri] ";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "ASS'|IUa";
      stringArray0[5] = "";
      stringArray0[6] = "Gk$^HIMoOKS8fm";
      stringArray0[7] = "u1FhY<^?&E6:uHGhyI";
      stringArray0[8] = "";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, true);
      multiKey0.toString();
      Integer integer1 = new Integer(1752);
      MultiKey<Object> multiKey1 = new MultiKey<Object>(integer0, multiKey0, integer1, "Gk$^HIMoOKS8fm", integer1);
      Integer integer2 = new Integer(1752);
      Integer integer3 = new Integer(1752);
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer2, integer3, integer3, integer1);
      int int0 = multiKey2.size();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      Integer integer0 = new Integer((-3967));
      Integer integer1 = new Integer(3);
      Integer integer2 = new Integer((-3967));
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer1, integer1, integer1, integer2);
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object0, object0, multiKey0);
      multiKey0.toString();
      multiKey1.getKey(0);
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.toString();
      MultiKey<MultiKey<Object>> multiKey2 = new MultiKey<MultiKey<Object>>(multiKey1, multiKey1, multiKey1);
      multiKey2.toString();
      multiKey2.size();
      multiKey0.toString();
      // Undeclared exception!
//      try { 
        multiKey2.getKey(3);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 9);
      String string0 = "org.apache.commons.collections4.keyvalue.MultiKey";
      String string1 = "d$YR1(9";
      MultiKey<String> multiKey0 = new MultiKey<String>((String) null, "org.apache.commons.collections4.keyvalue.MultiKey", "", "d$YR1(9");
      multiKeyArray0[0] = multiKey0;
      String[] stringArray0 = null;
      MultiKey<String> multiKey1 = null;
//      try {
        multiKey1 = new MultiKey<String>((String[]) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The array of keys must not be null
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "", "A#");
      Object object0 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object0, "", multiKey0, "A#", multiKey0);
      multiKey1.toString();
      multiKey1.hashCode();
      Object object1 = new Object();
      multiKey0.equals(object1);
      Integer integer0 = new Integer((-1344));
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer0, integer0);
      Integer integer1 = multiKey2.getKey(0);
      assertEquals((-1344), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      MultiKey<String> multiKey0 = new MultiKey<String>(">vvo</x", ">vvo</x", "d vIz+", (String) null);
      // Undeclared exception!
//      try { 
        multiKey0.getKey(3542);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3542
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "/L RP+X,v<Dq~Mz*udO";
      stringArray0[1] = "d\"-<>Fx`eq*";
      stringArray0[2] = ":aBL$scxpCE-'Q829-(";
      String string0 = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "yD_&ec3Bj&{V";
      stringArray0[6] = "oO2I_*D";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      Integer integer0 = new Integer((-1945));
      multiKey0.toString();
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>("6!gdbF[Uq=+5DMJ6:x", ":aBL$scxpCE-'Q829-(", integer0, ":aBL$scxpCE-'Q829-(");
      multiKey0.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.toString();
      // Undeclared exception!
//      try { 
        multiKey1.getKey((-1945));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1945
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MultiKey<Integer> multiKey0 = null;
//      try {
        multiKey0 = new MultiKey<Integer>((Integer[]) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The array of keys must not be null
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer[] integerArray0 = new Integer[1];
      int int0 = 0;
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0);
      multiKey0.toString();
      multiKey0.toString();
      MultiKey<String> multiKey1 = new MultiKey<String>("J", "J", "", "", "J");
      multiKey1.toString();
      multiKey1.getKey(int0);
      Integer integer1 = new Integer(3);
      MultiKey<Object> multiKey2 = new MultiKey<Object>(integer1, "J");
      // Undeclared exception!
//      try { 
        multiKey2.getKey(3);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }
}
