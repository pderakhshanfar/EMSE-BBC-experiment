/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 12:35:32 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(859);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, integer0);
      MultiKey<MultiKey<Integer>> multiKey1 = new MultiKey<MultiKey<Integer>>(multiKey0, multiKey0, multiKey0, multiKey0, multiKey0);
      multiKey1.toString();
      multiKey0.toString();
      MultiKey<String> multiKey2 = new MultiKey<String>("MultiKey[MultiKey[859, 859, 859], MultiKey[859, 859, 859], MultiKey[859, 859, 859], MultiKey[859, 859, 859], MultiKey[859, 859, 859]]", "org.apache.commons.collections4.keyvalue.MultiKey", "Z\"FAx", "Z\"FAx");
      multiKey2.hashCode();
      multiKey2.toString();
      MultiKey<Object> multiKey3 = new MultiKey<Object>("MultiKey[859, 859, 859]", "Z\"FAx", multiKey1);
      multiKey2.toString();
      multiKey3.toString();
      Integer integer1 = new Integer(1574);
      multiKey2.toString();
      multiKey3.toString();
      multiKey0.toString();
      multiKey3.toString();
      multiKey1.toString();
      multiKey3.equals(multiKey3);
      multiKey3.getKeys();
      multiKey2.size();
      // Undeclared exception!
//      try { 
        multiKey3.getKey(859);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 859
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(859);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, integer0);
      MultiKey<MultiKey<Integer>> multiKey1 = new MultiKey<MultiKey<Integer>>(multiKey0, multiKey0, multiKey0, multiKey0, multiKey0);
      multiKey1.toString();
      multiKey0.toString();
      MultiKey<String> multiKey2 = new MultiKey<String>("MultiKey[MultiKey[859, 859, 859], MultiKey[859, 859, 859], MultiKey[859, 859, 859], MultiKey[859, 859, 859], MultiKey[859, 859, 859]]", "org.apache.commons.collections4.keyvalue.MultiKey", "Z\"FAx", "Z\"FAx");
      MultiKey<String> multiKey3 = new MultiKey<String>(":", "org.apache.commons.collections4.keyvalue.MultiKey", ":", "Z\"FAx", "");
      multiKey2.size();
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey4 = new MultiKey<Object>(objectArray0);
      multiKey4.toString();
      multiKey4.equals("");
      multiKey0.toString();
      multiKey4.getKeys();
      multiKey3.size();
      // Undeclared exception!
//      try { 
        multiKey4.getKey((-1184));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1184
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MultiKey<Object> multiKey0 = null;
//      try {
        multiKey0 = new MultiKey<Object>((Object[]) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The array of keys must not be null
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int int0 = 3;
      Integer integer0 = new Integer(3);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, integer0);
      MultiKey<Object> multiKey1 = null;
//      try {
        multiKey1 = new MultiKey<Object>((Object[]) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The array of keys must not be null
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Integer integer0 = new Integer(1);
      MultiKey<Object> multiKey0 = new MultiKey<Object>(integer0, (Object) null, (Object) null, integer0);
      multiKey0.getKey(1);
      objectArray0[0] = null;
      Object object0 = new Object();
      objectArray0[1] = object0;
      multiKey0.getKey(1);
      objectArray0[2] = null;
      multiKey0.getKey(1);
      objectArray0[3] = null;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "MultiKey";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0);
      multiKey1.getKey(1);
      objectArray0[4] = (Object) "";
      multiKey1.getKey(1);
      objectArray0[5] = (Object) "";
      Integer integer1 = new Integer(1);
      Integer integer2 = new Integer(1);
      Integer integer3 = new Integer(4647);
      Integer integer4 = new Integer(1387);
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer1, integer2, integer0, integer3, integer4);
      // Undeclared exception!
//      try { 
        multiKey2.getKey(3192);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3192
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer(276);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-1671));
      integerArray0[1] = integer1;
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0, true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "MultiKey";
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0);
      multiKey1.getKeys();
      MultiKey<Object> multiKey2 = new MultiKey<Object>(integerArray0);
      // Undeclared exception!
//      try { 
        multiKey2.getKey((int) integerArray0[1]);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1671
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "T[JW1PAeT`(?.O!z";
      stringArray0[2] = "";
      stringArray0[3] = "/*'Vq#ikX.:k2$";
      stringArray0[4] = "";
      stringArray0[5] = "ntXn<%vx";
      stringArray0[6] = "*3xWh";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      multiKey0.toString();
      multiKey0.size();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(stringArray0);
      multiKey1.getKeys();
      String string0 = multiKey0.toString();
      assertEquals("MultiKey[, T[JW1PAeT`(?.O!z, , /*'Vq#ikX.:k2$, , ntXn<%vx, *3xWh]", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Integer integer0 = new Integer((-2977));
      Object object0 = new Object();
      Integer integer1 = new Integer((-2977));
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0, integer1);
      Integer integer2 = new Integer(0);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>((Integer) null, integer2, integer1, integer2, integer2);
      multiKey0.toString();
      multiKey0.toString();
      multiKey1.toString();
      MultiKey<Object> multiKey2 = new MultiKey<Object>(integer0, multiKey0, multiKey1, multiKey1, integer0);
      multiKey2.toString();
      multiKey2.hashCode();
      multiKey2.equals(multiKey1);
      String[] stringArray0 = new String[0];
      MultiKey<String> multiKey3 = new MultiKey<String>(stringArray0);
      multiKey3.toString();
      multiKey3.size();
      multiKey3.hashCode();
      multiKey0.size();
      // Undeclared exception!
//      try { 
        multiKey3.getKey((-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<String> multiKey0 = new MultiKey<String>((String) null, "AUZc'p)(<>MP^VGO@cf", (String) null, "AUZc'p)(<>MP^VGO@cf", "AUZc'p)(<>MP^VGO@cf");
      multiKey0.toString();
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object0, multiKey0);
      multiKey1.equals(object0);
      MultiKey<MultiKey<Object>> multiKey2 = new MultiKey<MultiKey<Object>>(multiKey1, multiKey1);
      int int0 = 4;
      multiKey2.toString();
      // Undeclared exception!
//      try { 
        multiKey2.getKey(4);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 4
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }
}
