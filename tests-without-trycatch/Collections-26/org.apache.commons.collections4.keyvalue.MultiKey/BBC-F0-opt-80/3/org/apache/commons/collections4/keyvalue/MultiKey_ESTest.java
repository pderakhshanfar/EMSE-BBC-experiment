/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 20:47:31 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, (Object) null, (Object) null);
      multiKey0.toString();
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 0);
      MultiKey<MultiKey<Object>> multiKey1 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
      multiKey1.getKeys();
      Integer integer0 = new Integer(2351);
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer0, integer0, integer0);
      // Undeclared exception!
//      try { 
        multiKey2.getKey(2351);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2351
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiKey<Object> multiKey0 = new MultiKey<Object>("+t7eV1PRwE{b^h!wL", "+t7eV1PRwE{b^h!wL", "+t7eV1PRwE{b^h!wL");
      boolean boolean0 = multiKey0.equals(multiKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = "";
      stringArray0[2] = "\"LM]";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>("MultiKey[null, , \"LM]]", "MultiKey[null, , \"LM]]", (Object) null, "\"LM]", "MultiKey[null, , \"LM]]");
      multiKey1.toString();
      multiKey1.getKey(0);
      multiKey1.hashCode();
      Integer integer0 = new Integer(1116);
      Integer integer1 = new Integer(947);
      Integer integer2 = new Integer((-150));
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>((Integer) null, integer0, (Integer) null, integer1, integer2);
      MultiKey<MultiKey<Integer>> multiKey3 = new MultiKey<MultiKey<Integer>>(multiKey2, multiKey2, multiKey2);
      multiKey3.size();
      String string0 = multiKey0.getKey(0);
      assertNull(string0);
      
      String string1 = multiKey1.toString();
      assertEquals("MultiKey[MultiKey[null, , \"LM]], MultiKey[null, , \"LM]], null, \"LM], MultiKey[null, , \"LM]]]", string1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0, false);
      multiKey0.toString();
      MultiKey<String> multiKey1 = new MultiKey<String>("$", "T", "$");
      multiKey1.toString();
      multiKey1.size();
      int int0 = multiKey0.size();
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 1);
      multiKeyArray0[0] = multiKey0;
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      MultiKey<MultiKey<Object>> multiKey2 = new MultiKey<MultiKey<Object>>(multiKeyArray0, false);
      multiKey2.toString();
      multiKey2.toString();
      multiKey2.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.size();
      multiKey0.size();
      multiKey0.size();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(1);
      MultiKey<Integer> multiKey3 = new MultiKey<Integer>(integer0, integer0, integer1, integer1);
      multiKey3.toString();
      multiKey3.toString();
      int int1 = multiKey0.hashCode();
      assertTrue(int1 == int0);
      
      String string0 = multiKey0.toString();
      assertEquals("MultiKey[]", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0);
      Object object4 = multiKey0.getKey(1);
      Object object5 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object1, (Object) null, object4, object5, object1);
      Object object6 = multiKey1.getKey(0);
      objectArray0[4] = object6;
      MultiKey<Object> multiKey2 = new MultiKey<Object>(objectArray0, false);
      multiKey2.toString();
      multiKey2.equals(multiKey1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "MultiKey[java.lang.Object@92c964a, java.lang.Object@6dc5225e, java.lang.Object@13752b73, java.lang.Object@278aa140, java.lang.Object@6dc5225e]";
      stringArray0[1] = "MultiKey[java.lang.Object@92c964a, java.lang.Object@6dc5225e, java.lang.Object@13752b73, java.lang.Object@278aa140, java.lang.Object@6dc5225e]";
      stringArray0[2] = "MultiKey[java.lang.Object@92c964a, java.lang.Object@6dc5225e, java.lang.Object@13752b73, java.lang.Object@278aa140, java.lang.Object@6dc5225e]";
      stringArray0[3] = "MultiKey[java.lang.Object@92c964a, java.lang.Object@6dc5225e, java.lang.Object@13752b73, java.lang.Object@278aa140, java.lang.Object@6dc5225e]";
      stringArray0[4] = "MultiKey[java.lang.Object@92c964a, java.lang.Object@6dc5225e, java.lang.Object@13752b73, java.lang.Object@278aa140, java.lang.Object@6dc5225e]";
      stringArray0[5] = "MultiKey[java.lang.Object@92c964a, java.lang.Object@6dc5225e, java.lang.Object@13752b73, java.lang.Object@278aa140, java.lang.Object@6dc5225e]";
      stringArray0[6] = "MultiKey[java.lang.Object@92c964a, java.lang.Object@6dc5225e, java.lang.Object@13752b73, java.lang.Object@278aa140, java.lang.Object@6dc5225e]";
      MultiKey<String> multiKey3 = new MultiKey<String>(stringArray0);
      multiKey3.hashCode();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiKey<Object> multiKey0 = null;
//      try {
        multiKey0 = new MultiKey<Object>((Object[]) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The array of keys must not be null
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "sLP~}ZwE=]";
      stringArray0[2] = "/d\"m:!<|";
      stringArray0[3] = ":o5];~*KGlsgrob&2";
      stringArray0[4] = "b\"km<fJv$`rr";
      stringArray0[5] = "";
      stringArray0[6] = "e?Z1').>.ek]Wg_\"h+t";
      stringArray0[7] = "6aO|)sAm";
      stringArray0[8] = "6@zNy";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, true);
      String string0 = multiKey0.toString();
      assertEquals("MultiKey[, sLP~}ZwE=], /d\"m:!<|, :o5];~*KGlsgrob&2, b\"km<fJv$`rr, , e?Z1').>.ek]Wg_\"h+t, 6aO|)sAm, 6@zNy]", string0);
      
      multiKey0.equals("6@zNy");
      MultiKey<Object> multiKey1 = new MultiKey<Object>((Object[]) stringArray0, false);
      multiKey1.hashCode();
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer0, integer1, integer0, integer2);
      Integer integer3 = new Integer(0);
      boolean boolean0 = multiKey2.equals(integer3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0, false);
      multiKey0.toString();
      MultiKey<String> multiKey1 = null;
//      try {
        multiKey1 = new MultiKey<String>((String[]) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The array of keys must not be null
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(1604);
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 6);
      MultiKey<String> multiKey0 = new MultiKey<String>((String) null, "");
      multiKeyArray0[0] = multiKey0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0, false);
      multiKeyArray0[1] = multiKey1;
      MultiKey<String> multiKey2 = new MultiKey<String>("", "", "org.apache.commons.collections4.keyvalue.MultiKey", (String) null);
      multiKeyArray0[2] = multiKey2;
      MultiKey<String> multiKey3 = new MultiKey<String>("", (String) null);
      multiKeyArray0[3] = multiKey3;
      MultiKey<String> multiKey4 = new MultiKey<String>(stringArray0, false);
      multiKeyArray0[4] = multiKey4;
      MultiKey<String> multiKey5 = new MultiKey<String>("", (String) null, (String) null, (String) null, "m#40L)G[W!2C~ e");
      multiKeyArray0[5] = multiKey5;
      MultiKey<MultiKey<String>> multiKey6 = new MultiKey<MultiKey<String>>(multiKeyArray0);
      // Undeclared exception!
//      try { 
        multiKey6.getKey(1957);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1957
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("?#>i#", "", "?#>i#");
      multiKey0.hashCode();
      Integer integer0 = new Integer(990);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>((Integer) null, integer0);
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.hashCode();
      Object object0 = new Object();
      MultiKey<Object> multiKey2 = new MultiKey<Object>(object0, "?#>i#");
      multiKey2.toString();
      int int0 = multiKey2.size();
      int int1 = multiKey2.hashCode();
      assertFalse(int1 == int0);
      
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 7);
      multiKeyArray0[0] = multiKey0;
      multiKeyArray0[1] = multiKey0;
      multiKeyArray0[2] = multiKey0;
      multiKeyArray0[3] = multiKey0;
      multiKeyArray0[4] = multiKey0;
      multiKeyArray0[5] = multiKey0;
      multiKeyArray0[6] = multiKey0;
      MultiKey<MultiKey<String>> multiKey3 = new MultiKey<MultiKey<String>>(multiKeyArray0);
      String string0 = multiKey3.toString();
      assertEquals("MultiKey[MultiKey[?#>i#, , ?#>i#], MultiKey[?#>i#, , ?#>i#], MultiKey[?#>i#, , ?#>i#], MultiKey[?#>i#, , ?#>i#], MultiKey[?#>i#, , ?#>i#], MultiKey[?#>i#, , ?#>i#], MultiKey[?#>i#, , ?#>i#]]", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = "";
      stringArray0[0] = "";
      String string1 = "V#l2iZwOhkST N_+T5";
      stringArray0[1] = "V#l2iZwOhkST N_+T5";
      stringArray0[2] = ".P4gFiY_e~V|";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, false);
      Integer integer0 = new Integer(1298);
      Integer integer1 = new Integer((-3255));
      Integer integer2 = new Integer(1298);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer1, integer2);
      multiKey1.hashCode();
      Integer integer3 = new Integer((-3255));
      MultiKey<Object> multiKey2 = new MultiKey<Object>(".P4gFiY_e~V|", "", integer3);
      multiKey2.toString();
      // Undeclared exception!
//      try { 
        multiKey2.getKey((-3255));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -3255
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>((String) null, (String) null, (String) null, (String) null, (String) null);
      // Undeclared exception!
//      try { 
        multiKey0.getKey((-108));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -108
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.apache.commons.collections4.keyvalue.MultiKey";
      stringArray0[1] = "";
      stringArray0[2] = "GCeQ^~*WGX]";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      multiKey0.getKey(0);
      Object object0 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>("org.apache.commons.collections4.keyvalue.MultiKey", object0);
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 8);
      multiKeyArray0[0] = multiKey0;
      multiKeyArray0[1] = multiKey0;
      MultiKey<String> multiKey2 = new MultiKey<String>("The array of keys must not be null", "GCeQ^~*WGX]", "");
      multiKeyArray0[2] = multiKey2;
      multiKeyArray0[3] = multiKey0;
      multiKeyArray0[4] = multiKey0;
      multiKeyArray0[5] = multiKey0;
      multiKeyArray0[6] = multiKey0;
      multiKey0.toString();
      multiKeyArray0[7] = multiKey0;
      MultiKey<MultiKey<String>> multiKey3 = new MultiKey<MultiKey<String>>(multiKeyArray0, false);
      multiKey0.toString();
      // Undeclared exception!
//      try { 
        multiKey3.getKey((-1875));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1875
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }
}
