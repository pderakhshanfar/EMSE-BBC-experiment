/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 17:38:22 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "";
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "");
      MultiKey<Object> multiKey1 = new MultiKey<Object>(multiKey0, multiKey0);
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.equals(multiKey0);
      multiKey0.size();
      multiKey1.toString();
      multiKey1.size();
      Integer integer0 = new Integer(3);
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>((Integer) null, (Integer) null, (Integer) null, (Integer) null, integer0);
      multiKey2.toString();
      multiKey2.size();
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      // Undeclared exception!
//      try { 
        multiKey1.getKey((-1698));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1698
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      Integer[] integerArray0 = new Integer[0];
      Integer integer0 = new Integer((-1392));
      Object object1 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>((Object[]) integerArray0, true);
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object1, object0, object1, multiKey0, (Object) null);
      multiKey0.getKeys();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "({WgG8N:W^e|>\"@{4C]";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0, false);
      MultiKey<MultiKey<String>> multiKey3 = new MultiKey<MultiKey<String>>(multiKey2, multiKey2, multiKey2, multiKey2);
      boolean boolean0 = multiKey3.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("%yw&_ ", "%yw&_ ", "%yw&_ ", "%yw&_ ", "%yw&_ ");
      MultiKey<Object> multiKey1 = new MultiKey<Object>("%yw&_ ", multiKey0, multiKey0, "%yw&_ ", multiKey0);
      multiKey1.getKeys();
      Integer integer0 = new Integer(1);
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>((Integer) null, (Integer) null, (Integer) null, (Integer) null, integer0);
      Integer integer1 = multiKey2.getKey(1);
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      int int0 = (-445);
      Integer integer0 = new Integer((-445));
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0, object0, integer0);
      MultiKey<MultiKey<Object>> multiKey1 = new MultiKey<MultiKey<Object>>(multiKey0, multiKey0, multiKey0);
      multiKey1.getKeys();
      MultiKey<String> multiKey2 = null;
//      try {
        multiKey2 = new MultiKey<String>((String[]) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The array of keys must not be null
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 0);
      MultiKey<MultiKey<String>> multiKey0 = new MultiKey<MultiKey<String>>(multiKeyArray0, true);
      multiKey0.toString();
      Integer integer0 = new Integer(3869);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, integer0, integer0, integer0);
      Integer integer1 = new Integer(3869);
      multiKey1.equals(integer1);
      Integer integer2 = new Integer(3869);
      Object object0 = new Object();
      MultiKey<Object> multiKey2 = new MultiKey<Object>("MultiKey[]", object0);
      multiKey1.toString();
      MultiKey<String> multiKey3 = new MultiKey<String>("xv,", "MultiKey[]", "eX%t:[", (String) null);
      Object object1 = new Object();
      Object object2 = new Object();
      MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey3, object0, object1, integer0, object2);
      multiKey4.toString();
      multiKey1.toString();
      multiKey0.size();
      multiKey3.size();
      multiKey4.toString();
      multiKey4.size();
      boolean boolean0 = multiKey1.equals((Object) null);
      assertFalse(boolean0);
      
      String string0 = multiKey3.toString();
      assertEquals("MultiKey[xv,, MultiKey[], eX%t:[, null]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MultiKey<Object> multiKey0 = new MultiKey<Object>(integer0, integer0, integer0);
      MultiKey<Object> multiKey1 = null;
//      try {
        multiKey1 = new MultiKey<Object>((Object[]) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The array of keys must not be null
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "jfl* RKw/78$piL?+", "s9IRxQ", "", "");
      multiKey0.toString();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "jfl* RKw/78$piL?+";
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0, true);
      MultiKey<MultiKey<Object>> multiKey2 = new MultiKey<MultiKey<Object>>(multiKey1, multiKey1, multiKey1, multiKey1, multiKey1);
      multiKey2.toString();
      multiKey2.getKeys();
      multiKey0.getKey(1);
      multiKey0.toString();
      int int0 = 483;
      Integer integer0 = new Integer(483);
      Integer integer1 = new Integer(459);
      Integer integer2 = new Integer(459);
      MultiKey<Integer> multiKey3 = new MultiKey<Integer>(integer0, integer1, integer1, integer0, integer2);
      multiKey3.toString();
      // Undeclared exception!
//      try { 
        multiKey3.getKey(2109);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2109
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Integer integer0 = new Integer(0);
      Object object3 = new Object();
      Integer integer1 = new Integer(0);
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object2, integer1, object1, object2, integer1);
      Object object4 = multiKey0.getKey(0);
      MultiKey<Object> multiKey1 = new MultiKey<Object>(integer0, object3, object4);
      // Undeclared exception!
//      try { 
        multiKey1.getKey(2310);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2310
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "";
      MultiKey<String> multiKey0 = new MultiKey<String>("", "");
      multiKey0.toString();
      multiKey0.hashCode();
      Object object0 = new Object();
      MultiKey<String> multiKey1 = new MultiKey<String>("", ".wxsb", "");
      int int0 = (-2323);
      Integer integer0 = new Integer((-2323));
      MultiKey<String> multiKey2 = new MultiKey<String>("", "(#or^J");
      // Undeclared exception!
//      try { 
        multiKey2.getKey((-2323));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -2323
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "");
      MultiKey<String> multiKey1 = new MultiKey<String>("", "C", "7({pS2B", "", "C");
      MultiKey<Object> multiKey2 = new MultiKey<Object>(multiKey0, multiKey1);
      multiKey2.toString();
      multiKey2.toString();
      multiKey1.toString();
      MultiKey<String> multiKey3 = new MultiKey<String>("", "", "");
      multiKey1.toString();
      multiKey3.toString();
      multiKey3.toString();
      multiKey0.toString();
      multiKey0.equals(multiKey3);
      multiKey1.size();
      multiKey2.toString();
      multiKey2.size();
      Integer integer0 = new Integer(2318);
      MultiKey<Integer> multiKey4 = new MultiKey<Integer>((Integer) null, (Integer) null, (Integer) null, (Integer) null, integer0);
      multiKey4.size();
      multiKey2.toString();
      multiKey2.toString();
      // Undeclared exception!
//      try { 
        multiKey2.getKey((-1698));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1698
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-503));
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, integer1);
      multiKey0.size();
      multiKey0.toString();
      Integer integer2 = new Integer((-503));
      Integer integer3 = new Integer(0);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer1, integer2, integer3, integer3, integer3);
      multiKey1.toString();
      Object object0 = multiKey1.getKey(1);
      MultiKey<Object> multiKey2 = new MultiKey<Object>(integer0, multiKey0, object0, integer1);
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey2.toString();
      // Undeclared exception!
//      try { 
        multiKey2.getKey((-503));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -503
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>((String) null, (String) null, "", "");
      int int0 = (-3989);
      multiKey0.toString();
      // Undeclared exception!
//      try { 
        multiKey0.getKey((-3989));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -3989
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 0);
      MultiKey<MultiKey<String>> multiKey0 = new MultiKey<MultiKey<String>>(multiKeyArray0, true);
      multiKey0.toString();
      Integer integer0 = new Integer(3869);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, integer0, integer0, integer0);
      multiKey1.toString();
      multiKey1.toString();
      Integer integer1 = new Integer(3869);
      multiKey1.equals(integer1);
      Integer integer2 = new Integer(3869);
      Object object0 = new Object();
      MultiKey<Object> multiKey2 = new MultiKey<Object>("MultiKey[]", object0);
      // Undeclared exception!
//      try { 
        multiKey2.getKey(1984);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1984
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      Object object0 = new Object();
      objectArray0[0] = object0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Q WX";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      // Undeclared exception!
//      try { 
        multiKey0.getKey((-2091));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -2091
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }
}
