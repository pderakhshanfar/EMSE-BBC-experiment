/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 17:53:03 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiKey<Object> multiKey0 = new MultiKey<Object>("+#", "+#");
      MultiKey<String> multiKey1 = new MultiKey<String>("MultiKey", "");
      multiKey1.toString();
      multiKey0.hashCode();
      multiKey0.getKeys();
      multiKey0.toString();
      Integer integer0 = new Integer((-1));
      multiKey0.equals(multiKey0);
      // Undeclared exception!
//      try { 
        multiKey0.getKey((-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiKey<Object> multiKey0 = new MultiKey<Object>("+#", "+#");
      MultiKey<String> multiKey1 = new MultiKey<String>("MultiKey", "");
      multiKey1.toString();
      multiKey0.hashCode();
      Object[] objectArray0 = multiKey0.getKeys();
      multiKey0.toString();
      Integer integer0 = new Integer((-1));
      MultiKey<Object> multiKey2 = new MultiKey<Object>(objectArray0, true);
      multiKey0.equals(multiKey2);
      // Undeclared exception!
//      try { 
        multiKey0.getKey((-1));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 0);
      MultiKey<MultiKey<Object>> multiKey0 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
      multiKey0.toString();
      MultiKey<String> multiKey1 = new MultiKey<String>("q=lgiY~FQ**b  vtk", "");
      multiKey1.toString();
      MultiKey<Object> multiKey2 = new MultiKey<Object>(multiKeyArray0);
      Integer integer0 = new Integer(4);
      MultiKey<Integer> multiKey3 = new MultiKey<Integer>(integer0, integer0);
      MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey2, multiKey3);
      MultiKey<MultiKey<Object>> multiKey5 = new MultiKey<MultiKey<Object>>(multiKey4, multiKey2, multiKey2, multiKey2, multiKey4);
      multiKey5.hashCode();
      multiKey2.hashCode();
      multiKey2.getKeys();
      Integer integer1 = new Integer(4);
      Integer integer2 = new Integer(4);
      Integer integer3 = new Integer(3402);
      Integer integer4 = new Integer(4);
      Integer integer5 = new Integer(3402);
      MultiKey<Integer> multiKey6 = new MultiKey<Integer>(integer4, integer5, integer1, integer1);
      String string0 = multiKey6.toString();
      assertEquals("MultiKey[4, 3402, 4, 4]", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("MultiKey", "MultiKey", "a-wW+L");
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      MultiKey<MultiKey<String>> multiKey1 = new MultiKey<MultiKey<String>>(multiKey0, multiKey0);
      multiKey1.hashCode();
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.toString();
      MultiKey<Object> multiKey2 = new MultiKey<Object>("a-wW+L", "MultiKey[MultiKey, MultiKey, a-wW+L]", multiKey1);
      multiKey0.toString();
      multiKey2.hashCode();
      multiKey1.toString();
      multiKey1.toString();
      multiKey2.toString();
      Object[] objectArray0 = multiKey2.getKeys();
      MultiKey<String> multiKey3 = new MultiKey<String>("MultiKey[MultiKey, MultiKey, a-wW+L]", "", "MultiKey[MultiKey, MultiKey, a-wW+L]", "\"C9*.gvi:3-5,Ff", "MultiKey[MultiKey, MultiKey, a-wW+L]");
      boolean boolean0 = multiKey2.equals(multiKey3);
      assertFalse(boolean0);
      
      multiKey2.toString();
      MultiKey<Object> multiKey4 = new MultiKey<Object>(objectArray0, false);
      Object object0 = new Object();
      MultiKey<String> multiKey5 = new MultiKey<String>("MultiKey[MultiKey, MultiKey, a-wW+L]", "6YRqP2#]~{h9(", "MultiKey[MultiKey, MultiKey, a-wW+L]");
      MultiKey<Object> multiKey6 = new MultiKey<Object>(object0, multiKey5);
      MultiKey<MultiKey<Object>> multiKey7 = new MultiKey<MultiKey<Object>>(multiKey4, multiKey6);
      MultiKey<Object> multiKey8 = multiKey7.getKey(0);
      multiKey7.toString();
      String string0 = multiKey0.toString();
      assertEquals("MultiKey[MultiKey, MultiKey, a-wW+L]", string0);
      
      multiKey7.hashCode();
      multiKey6.hashCode();
      multiKey2.getKeys();
      assertTrue(multiKey2.equals((Object)multiKey8));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>((Object) null, (Object) null, (Object) null, (Object) null, object0);
      multiKey0.toString();
      multiKey0.getKey(0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "MultiKey[null, null, null, null, java.lang.Object@67793ba3]";
      stringArray0[1] = "MultiKey[null, null, null, null, java.lang.Object@67793ba3]";
      stringArray0[2] = "MultiKey[null, null, null, null, java.lang.Object@67793ba3]";
      stringArray0[3] = "MultiKey[null, null, null, null, java.lang.Object@67793ba3]";
      stringArray0[4] = "MultiKey[null, null, null, null, java.lang.Object@67793ba3]";
      stringArray0[5] = "MultiKey[null, null, null, null, java.lang.Object@67793ba3]";
      stringArray0[6] = "MultiKey[null, null, null, null, java.lang.Object@67793ba3]";
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0);
      multiKey1.hashCode();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, (Integer) null, integer0, (Integer) null);
      multiKey0.getKey(0);
      Object object0 = null;
      Integer integer1 = new Integer(1);
      MultiKey<Object> multiKey1 = null;
//      try {
        multiKey1 = new MultiKey<Object>((Object[]) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The array of keys must not be null
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer((-6064));
      Integer integer1 = new Integer(3339);
      Integer integer2 = new Integer(3339);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer1, integer2);
      multiKey0.toString();
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0, true);
      multiKey1.toString();
      multiKey1.hashCode();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "uhpG:4%&4Ub-7";
      stringArray0[5] = "";
      stringArray0[6] = "3M}OMb";
      stringArray0[7] = "";
      stringArray0[8] = "MultiKey";
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0, true);
      multiKey2.toString();
      multiKey2.equals("");
      multiKey2.equals("uhpG:4%&4Ub-7");
      multiKey2.equals(integer0);
      multiKey1.hashCode();
      int int0 = multiKey1.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = new Integer(3535);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-2126));
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(3535);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((-2126));
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(3535);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((-2126));
      integerArray0[5] = integer5;
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0, true);
      Integer integer6 = new Integer(0);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer1, (Integer) null, integer6);
      Object object0 = multiKey1.getKey(0);
      MultiKey<MultiKey<Integer>> multiKey2 = new MultiKey<MultiKey<Integer>>(multiKey1, multiKey0, multiKey0, multiKey0, multiKey0);
      Object object1 = multiKey2.getKey(0);
      MultiKey<Object> multiKey3 = new MultiKey<Object>(object0, object1);
      multiKey3.toString();
      multiKey3.getKeys();
      // Undeclared exception!
//      try { 
        multiKey1.getKey((int) integerArray0[4]);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3535
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "mOL/";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      multiKey0.toString();
      multiKey0.getKey(0);
      MultiKey<Object> multiKey1 = new MultiKey<Object>("", "", (Object) null);
      int int0 = 1105;
      // Undeclared exception!
//      try { 
        multiKey1.getKey(1105);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1105
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "";
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "", "B/n)q0T", "B/n)q0T");
      multiKey0.toString();
      multiKey0.toString();
      Integer integer0 = new Integer(0);
      multiKey0.equals(integer0);
      multiKey0.toString();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) integer0;
      objectArray0[1] = (Object) "B/n)q0T";
      objectArray0[2] = (Object) "MultiKey[, , , B/n)q0T, B/n)q0T]";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) integer0;
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0);
      MultiKey<Object> multiKey2 = new MultiKey<Object>("MultiKey[, , , B/n)q0T, B/n)q0T]", "", multiKey1);
      // Undeclared exception!
//      try { 
        multiKey2.getKey(4);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 4
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(111);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer1, integer2, integer1);
      Object object0 = new Object();
      Integer integer3 = new Integer(2316);
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object0, integer3);
      // Undeclared exception!
//      try { 
        multiKey1.getKey(111);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 111
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "uG LHP}`,`@rkb";
      stringArray0[1] = "MultiKey";
      stringArray0[2] = "The array of keys must not be null";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      int int0 = multiKey0.size();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>(":.~0e", "", "", ":.~0e", "");
      multiKey0.hashCode();
      multiKey0.toString();
      MultiKey<Object> multiKey1 = null;
//      try {
        multiKey1 = new MultiKey<Object>((Object[]) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The array of keys must not be null
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(5);
      Integer integer2 = new Integer(0);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer1, integer1, integer1, integer2);
      Integer integer3 = multiKey0.getKey(0);
      objectArray0[1] = (Object) integer3;
      MultiKey<String> multiKey1 = new MultiKey<String>("", "", "=", "", "");
      // Undeclared exception!
//      try { 
        multiKey1.getKey(656);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 656
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.apache.commons.collections4.keyvalue.MultiKey";
      stringArray0[1] = "9|:L@eMEh";
      String string0 = "?la5kTd[y";
      stringArray0[2] = "?la5kTd[y";
      stringArray0[3] = "iGoC9.qstelquZY";
      stringArray0[4] = "";
      stringArray0[5] = "MWSEPq/ Qd.X;V(Sds";
      stringArray0[6] = "&<s7 5<d$l5&PxT'HA";
      String string1 = "i";
      stringArray0[7] = "i";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      MultiKey<MultiKey<String>> multiKey1 = new MultiKey<MultiKey<String>>(multiKey0, multiKey0, multiKey0);
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer0, integer0, integer1, integer2);
      // Undeclared exception!
//      try { 
        multiKey2.getKey(2546);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2546
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("p!+wg%#nA2h$;VruU=2", "", "", "");
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer((-1666));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(109);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(1321);
      integerArray0[3] = integer3;
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray0, true);
      multiKey1.hashCode();
      multiKey0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0);
      multiKey0.toString();
      multiKey0.toString();
      // Undeclared exception!
//      try { 
        multiKey0.getKey(1619);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1619
//         //
//         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
//      }
  }
}
