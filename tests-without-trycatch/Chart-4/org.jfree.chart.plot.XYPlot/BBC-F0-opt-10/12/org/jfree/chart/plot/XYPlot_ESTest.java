/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 13:08:59 GMT 2021
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.ScrollPane;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.color.ICC_Profile;
import java.awt.event.InputEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Area;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.Raster;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.awt.image.TileObserver;
import java.math.BigInteger;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.Statement;
import java.text.AttributedCharacterIterator;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.ChronoLocalDate;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.SimpleTimeZone;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.DebugGraphics;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JList;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.multi.MultiListUI;
import javax.swing.text.DefaultCaret;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.RenderingSource;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.annotations.XYBoxAnnotation;
import org.jfree.chart.annotations.XYDataImageAnnotation;
import org.jfree.chart.annotations.XYDrawableAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.annotations.XYPolygonAnnotation;
import org.jfree.chart.annotations.XYShapeAnnotation;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.annotations.XYTitleAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.AxisState;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator;
import org.jfree.chart.labels.CustomXYToolTipGenerator;
import org.jfree.chart.labels.HighLowItemLabelGenerator;
import org.jfree.chart.labels.MultipleXYSeriesLabelGenerator;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.labels.XYSeriesLabelGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.Crosshair;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.GrayPaintScale;
import org.jfree.chart.renderer.LookupPaintScale;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.DeviationRenderer;
import org.jfree.chart.renderer.xy.HighLowRenderer;
import org.jfree.chart.renderer.xy.SamplingXYLineRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.VectorRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer2;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYBubbleRenderer;
import org.jfree.chart.renderer.xy.XYDifferenceRenderer;
import org.jfree.chart.renderer.xy.XYDotRenderer;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.chart.renderer.xy.XYStepAreaRenderer;
import org.jfree.chart.renderer.xy.YIntervalRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CustomXYURLGenerator;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.chart.urls.StandardXYZURLGenerator;
import org.jfree.chart.urls.TimeSeriesURLGenerator;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.StandardGradientPaintTransformer;
import org.jfree.chart.util.UnitType;
import org.jfree.data.Range;
import org.jfree.data.RangeType;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.DefaultHighLowDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XYPlot_ESTest extends XYPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
      combinedRangeXYPlot0.removeDomainMarker(0, (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot0.clearDomainMarkers(1465);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
      combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0, layer0);
      combinedRangeXYPlot0.removeDomainMarker(0, (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot0.clearDomainMarkers(0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      int int0 = (-3757);
      ValueMarker valueMarker0 = new ValueMarker((-3757));
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker((-3757), (Marker) valueMarker0, layer0, false);
      combinedRangeXYPlot0.getRangeMarkers((-3757), layer0);
      Font font0 = Font.decode("ujP/N&VD'80KfAk");
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedRangeXYPlot0, false);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) 10;
      floatArray0[1] = 1.0F;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      int int1 = 3;
      int int2 = 5;
      int int3 = (-3221);
      int int4 = 927;
      DirectColorModel directColorModel0 = null;
//      try {
        directColorModel0 = new DirectColorModel(3, 5, (-3221), 927);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Noncontiguous red mask (5
//         //
//         verifyException("java.awt.image.PackedColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedDomainXYPlot0.addChangeListener(combinedRangeCategoryPlot0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      combinedDomainXYPlot0.getRangeAxis(0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-384.0), 1747.478637);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.7976931348623157E308), 10);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeXYPlot0.setOrientation(plotOrientation0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, rectangle2D_Double0, 1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      String[] stringArray0 = new String[6];
      stringArray0[1] = "org.jfree.chart.util.VerticalAlignment";
      stringArray0[2] = "org.jfree.chart.util.VerticalAlignment";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.util.VerticalAlignment", stringArray0);
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, true);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, symbolAxis0, symbolAxis0, deviationRenderer0);
      GeneralPath generalPath0 = new GeneralPath();
      Font font0 = MeterPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("", numberAxis3D0.DEFAULT_TICK_LABEL_FONT, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-1), (-1), 500, 75, 15, true, false, false, false, false, false);
      Rectangle rectangle0 = new Rectangle();
      chartPanel0.getBounds((Rectangle) null);
      GeneralPath generalPath1 = new GeneralPath();
      xYPlot0.select(generalPath1, (Rectangle2D) rectangle0, (RenderingSource) chartPanel0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2385, 2, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Paint paint0 = combinedRangeCategoryPlot0.getRangeCrosshairPaint();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.drawHorizontalLine(graphics2D0, rectangle2D_Double0, 0.0, (Stroke) null, paint0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
      combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0, layer0);
      combinedRangeXYPlot0.removeDomainMarker(0, (Marker) categoryMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1559.0), 5.0, "org.jfree.chart.PolarChartPanel");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getDomainAxis();
      combinedDomainXYPlot0.isDomainZoomable();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.add((XYPlot) combinedRangeXYPlot0, 10);
      JFreeChart jFreeChart0 = new JFreeChart("\fAszBS $", combinedRangeXYPlot1);
      jFreeChart0.createBufferedImage(10, 10);
      Layer layer0 = Layer.BACKGROUND;
      ValueMarker valueMarker0 = new ValueMarker(0.5F);
      combinedRangeXYPlot1.addDomainMarker((-1437), (Marker) valueMarker0, layer0, false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      combinedRangeXYPlot0.getRangeAxisIndex(numberAxis3D0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = "(";
      stringArray0[3] = "(";
      stringArray0[4] = "(";
      stringArray0[5] = "org.jfree.chart.util.VerticalAlignment";
      stringArray0[6] = "(";
      SymbolAxis symbolAxis0 = new SymbolAxis("(", stringArray0);
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, false);
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, symbolAxis0, symbolAxis0, deviationRenderer0);
      GeneralPath generalPath0 = new GeneralPath();
      Font font0 = MeterPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("?TYC%{8", font0, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-18), 1341, 1341, 2494, 15, 1341, false, true, false, true, false, true);
      Rectangle rectangle0 = new Rectangle();
      Rectangle rectangle1 = chartPanel0.getBounds(rectangle0);
      // Undeclared exception!
//      try { 
        xYPlot0.select(generalPath0, (Rectangle2D) rectangle1, (RenderingSource) chartPanel0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      Rectangle rectangle0 = new Rectangle();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("h{'r!wn/uKC", font0, combinedRangeXYPlot0, false);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4, 10, (double) 1.0F, (double) 0, chartRenderingInfo0);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-637.86));
      combinedRangeXYPlot0.drawRangeCrosshair(graphics2D0, rectangle0, plotOrientation0, 0.5F, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.add((XYPlot) combinedRangeXYPlot0, 10);
      JFreeChart jFreeChart0 = new JFreeChart("\fAszBS $", combinedRangeXYPlot1);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, 0.5F, 10, 0.5F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      combinedRangeXYPlot1.calculateAxisSpace(graphics2D0, rectangle2D0);
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      combinedRangeXYPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Point2D.Float point2D_Float0 = new Point2D.Float();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.zoomRangeAxes((double) 0.0F, (double) 0.0F, (PlotRenderingInfo) null, (Point2D) point2D_Float0);
      combinedRangeXYPlot0.getRangeAxis();
      combinedRangeXYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setRangeAxisLocation((AxisLocation) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'location' for index 0 not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      Rectangle rectangle0 = new Rectangle();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.drawRangeCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 1, numberAxis3D0, numberAxis3D0.DEFAULT_TICK_MARK_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1024, 10, 2788.04754, (double) 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 10;
      floatArray0[1] = (float) 200;
      floatArray0[2] = (float) 768;
      floatArray0[3] = (float) 680;
      JFreeChart jFreeChart1 = new JFreeChart("The index value (", jFreeChart0.DEFAULT_TITLE_FONT, combinedDomainXYPlot0, false);
      RenderingHints renderingHints0 = jFreeChart1.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      Rectangle2D rectangle2D0 = rescaleOp0.getBounds2D(bufferedImage0);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(0.0F, (-364.0F), 2355.0361F, (-3.0F));
      Rectangle2D rectangle2D1 = ellipse2D_Float0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      RectangleEdge rectangleEdge1 = RectangleEdge.opposite(rectangleEdge0);
      AxisSpace axisSpace0 = new AxisSpace();
      AxisSpace axisSpace1 = categoryAxis3D0.reserveSpace(graphics2D0, combinedDomainXYPlot0, rectangle2D1, rectangleEdge1, axisSpace0);
      AxisSpace axisSpace2 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D1, axisSpace1);
      combinedDomainXYPlot1.calculateDomainAxisSpace(graphics2D0, rectangle2D0, axisSpace2);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.zoomDomainAxes(298.0, (double) 10, plotRenderingInfo0, (Point2D) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Range(double, double): require lower (312.90000000000003) <= upper (10.5).
//         //
//         verifyException("org.jfree.data.Range", e);
//      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      combinedRangeXYPlot0.setRenderer(10, (XYItemRenderer) clusteredXYBarRenderer0, false);
      combinedRangeXYPlot0.getDomainAxisForDataset(10);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".\n";
      stringArray0[1] = ".\n";
      stringArray0[2] = ".\n";
      stringArray0[3] = ".\n";
      SymbolAxis symbolAxis0 = new SymbolAxis(".\n", stringArray0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(symbolAxis0);
      combinedRangeXYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Point point0 = new Point(10, 20);
      combinedRangeXYPlot0.zoomRangeAxes((-992.99), (-992.99), (PlotRenderingInfo) null, (Point2D) point0);
      combinedRangeXYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1277.0);
      combinedRangeXYPlot0.addRangeMarker((Marker) valueMarker0);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(0, (Marker) valueMarker0, layer0, false);
      System.setCurrentTimeMillis(10);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeDomainMarker(10, (Marker) valueMarker0, layer0, false);
      String string0 = combinedRangeXYPlot0.getPlotType();
      int int0 = 2147;
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)91;
      byteArray0[0] = byte0;
      byte byte1 = (byte)3;
      byteArray0[1] = byte1;
      byte byte2 = (byte)2;
      byteArray0[2] = byte2;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(int0, byteArray0);
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      boolean boolean0 = false;
      JFreeChart jFreeChart0 = new JFreeChart(string0, font0, combinedRangeXYPlot0, boolean0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      BufferedImage bufferedImage0 = null;
      int int1 = 11;
      int int2 = 57;
      int int3 = (-2118);
      boolean boolean1 = true;
      IndexColorModel indexColorModel0 = null;
//      try {
        indexColorModel0 = new IndexColorModel(int1, int2, byteArray0, int3, boolean1);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -2118
//         //
//         verifyException("java.awt.image.IndexColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setRangeCrosshairValue((double) 10, true);
      combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
      combinedRangeXYPlot0.setDomainCrosshairValue((-1279.4353025874905), true);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeZeroBaselinePaint(combinedRangeXYPlot1.DEFAULT_GRIDLINE_PAINT);
      combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
      combinedRangeXYPlot1.getDomainAxis(10);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCXYDataset jDBCXYDataset0 = null;
//      try {
        jDBCXYDataset0 = new JDBCXYDataset(connection0, ",~%\"4u)*+|7KPB");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.jdbc.JDBCXYDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      // Undeclared exception!
      combinedRangeXYPlot0.setRenderer(1789569706, (XYItemRenderer) null, false);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation(2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      combinedRangeXYPlot0.getRangeCrosshairStroke();
      combinedRangeXYPlot0.configureDomainAxes();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ",k k7%pb=l(>bra2~H");
      Layer layer0 = Layer.FOREGROUND;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      combinedRangeXYPlot0.removeRangeMarker((Marker) categoryMarker0, layer0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      combinedRangeXYPlot0.getDomainAxisEdge();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setDomainAxisLocation(Integer.MAX_VALUE, axisLocation0, true);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, matrixSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.getDomainAxisForDataset(1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Index 1 out of bounds.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.addRangeMarker((Marker) categoryMarker0);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getRangeMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setPositiveArrowVisible(true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getWeight();
      combinedRangeXYPlot0.getRangeAxis();
      combinedRangeXYPlot0.clearRangeAxes();
      combinedRangeXYPlot0.getDomainMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker((Marker) valueMarker0, layer0);
      combinedRangeXYPlot0.clearDomainMarkers();
      combinedRangeXYPlot0.getFixedDomainAxisSpace();
      combinedRangeXYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 299, 90.0, (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.drawAxes(graphics2D0, defaultCaret0, defaultCaret0, plotRenderingInfo0);
      combinedRangeXYPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      plotRenderingInfo0.getPlotArea();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      MockDate mockDate0 = new MockDate();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.CHINESE;
      Week week0 = new Week(mockDate0, zoneInfo0, locale0);
      RegularTimePeriod regularTimePeriod0 = week0.next();
      Quarter quarter0 = new Quarter(mockDate0);
      PeriodAxis periodAxis0 = new PeriodAxis((String) null, regularTimePeriod0, quarter0, zoneInfo0, locale0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(periodAxis0);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 0.05, periodAxis0, combinedRangeXYPlot1.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot1.DEFAULT_GRIDLINE_PAINT);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
//         //
//         verifyException("org.jfree.data.Range", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ArrayList<Size2D> arrayList0 = new ArrayList<Size2D>();
      combinedDomainXYPlot0.drawRangeTickBands((Graphics2D) null, defaultCaret0, arrayList0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0, 298.0, "bg)tm6-}S1pR");
      combinedDomainXYPlot0.getDomainAxis(0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 10, 1.0F, 10);
      combinedDomainXYPlot0.drawQuadrants((Graphics2D) null, rectangle2D_Float0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, "DOLO5E");
      // Undeclared exception!
      combinedDomainXYPlot0.setRangeAxis(2145676153, (ValueAxis) cyclicNumberAxis0, true);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(0, (Marker) categoryMarker0, layer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[13];
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainXYPlot0.getDomainMarkers(0, layer0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(500, 0.05, "org.jfree.chart.plot.PlotState");
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(2772, (XYToolTipGenerator) null, standardXYURLGenerator0);
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYAreaRenderer0);
      xYPlot0.indexOf(histogramDataset0);
      xYPlot0.isDomainCrosshairLockedOnData();
      xYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Stack<AxisState> stack0 = new Stack<AxisState>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.getAnnotations();
      combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Rectangle2D.union(rectangle2D_Double0, rectangle2D_Double0, rectangle2D_Double0);
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.drawAxes((Graphics2D) null, rectangle2D_Double0, rectangle2D_Double0, (PlotRenderingInfo) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.ValueAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(1, 1);
      combinedRangeXYPlot0.clearRangeMarkers(1416);
      waferMapRenderer0.getDrawingSupplier();
      combinedRangeXYPlot0.setDrawingSupplier((DrawingSupplier) null);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.clone();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'object' argument.
//         //
//         verifyException("org.jfree.chart.util.ObjectUtilities", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      xYPlot0.handleClick(10, 10, plotRenderingInfo0);
      combinedRangeXYPlot0.getRangeAxisForDataset(0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.add((XYPlot) combinedRangeXYPlot0, 10);
      JFreeChart jFreeChart0 = new JFreeChart("\fAszBS $", combinedRangeXYPlot1);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, (-3356.953F), 10, 0.5F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      AxisSpace axisSpace0 = combinedRangeXYPlot1.calculateAxisSpace(graphics2D0, rectangle2D0);
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot1.calculateRangeAxisSpace(graphics2D0, (Rectangle2D) null, axisSpace0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.NumberAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      plotRenderingInfo0.getPlotArea();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(valueAxis0);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot1.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 1.0E-8, valueAxis0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.NumberAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearDomainAxes();
      combinedRangeXYPlot0.getDomainAxisCount();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      plotRenderingInfo0.getPlotArea();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot1.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot1.addDomainMarker(10, (Marker) valueMarker0, layer0);
      combinedRangeXYPlot0.getDomainMarkers(10, (Layer) null);
      combinedRangeXYPlot1.clearDomainMarkers();
      GeneralPath generalPath0 = null;
//      try {
        generalPath0 = new GeneralPath(883, 65);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // winding rule must be WIND_EVEN_ODD or WIND_NON_ZERO
//         //
//         verifyException("java.awt.geom.Path2D", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeCrosshairVisible(true);
      combinedDomainXYPlot0.setRangeCrosshairValue(1.0E-8);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      combinedDomainXYPlot0.setRangeCrosshairValue(Double.POSITIVE_INFINITY, true);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.add((XYPlot) combinedRangeXYPlot0, 10);
      JFreeChart jFreeChart0 = new JFreeChart("\fAszBS $", combinedRangeXYPlot1);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, (-3356.953F), 0.0F, 0.5F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      combinedRangeXYPlot1.calculateAxisSpace(graphics2D0, rectangle2D0);
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      PlotState plotState0 = new PlotState();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.draw(graphics2D0, rectangle2D0, point2D0, plotState0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
      combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0, layer0);
      int int0 = 3;
      combinedRangeXYPlot0.getQuadrantPaint(3);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      int int1 = 5167;
      int int2 = 781;
      int[] intArray0 = new int[8];
      intArray0[0] = 10;
      intArray0[1] = 1444;
      intArray0[2] = (-1);
      intArray0[3] = 10;
      intArray0[4] = 781;
      intArray0[5] = 10;
      intArray0[6] = 3;
      intArray0[7] = 781;
      BigInteger bigInteger0 = BigInteger.ONE;
      IndexColorModel indexColorModel0 = null;
//      try {
        indexColorModel0 = new IndexColorModel(3, 5167, intArray0, 10, 6, bigInteger0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // transferType must be eitherDataBuffer.TYPE_BYTE or DataBuffer.TYPE_USHORT
//         //
//         verifyException("java.awt.image.IndexColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Rectangle2D rectangle2D0 = null;
      GeneralPath generalPath0 = new GeneralPath();
      RenderingSource renderingSource0 = null;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      axisLocation0.getOpposite();
      // Undeclared exception!
      combinedRangeXYPlot0.setDomainAxisLocation(1829256993, axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      Graphics2D graphics2D0 = null;
      HashMap<AttributedCharacterIterator.Attribute, String> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, String>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-655.53942), (-5.0));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("-", font0, combinedDomainXYPlot0, false);
      char[] charArray0 = new char[4];
      charArray0[0] = 't';
      combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
      charArray0[1] = 'b';
      Locale locale0 = Locale.ITALIAN;
      font0.getFamily(locale0);
      charArray0[2] = '|';
      charArray0[3] = ',';
      font0.canDisplayUpTo(charArray0, 15, 15);
      PolarChartPanel polarChartPanel0 = null;
//      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // plot is not a PolarPlot
//         //
//         verifyException("org.jfree.chart.PolarChartPanel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYSeries xYSeries0 = new XYSeries(false, false);
      xYSeries0.addOrUpdate(45.0, 745.18);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0, layer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.CategoryMarker", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      GeneralPath generalPath0 = new GeneralPath();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[1];
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("790{nK}.v'J`bfQZhH", numberFormat0, numberFormat0, numberFormat0);
      StandardXYZURLGenerator standardXYZURLGenerator0 = new StandardXYZURLGenerator();
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2(standardXYZToolTipGenerator0, standardXYZURLGenerator0);
      xYItemRendererArray0[0] = (XYItemRenderer) stackedXYAreaRenderer2_0;
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
      combinedRangeXYPlot0.select(generalPath0, (Rectangle2D) null, (RenderingSource) null);
      combinedRangeXYPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setRangeAxis(500, (ValueAxis) numberAxis3D0, false);
      xYPlot0.isDomainMinorGridlinesVisible();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("Tt`20.ebVZC{^k", numberAxis3D0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, false);
      jFreeChart0.setBorderVisible(false);
      xYPlot0.setDomainMinorGridlinesVisible(true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 4367, 10, 0, 500, 15, 0, true, false, true, true, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      jFreeChart0.createBufferedImage(500, 300, chartRenderingInfo0);
      XYPlot xYPlot1 = new XYPlot();
      xYPlot1.clearSelection();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.add((XYPlot) combinedRangeXYPlot0, 10);
      JFreeChart jFreeChart0 = new JFreeChart("\fAszBS $", combinedRangeXYPlot1);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      bufferedImage0.createGraphics();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, (-3356.953F), 1.0F, 0.5F);
      combinedRangeXYPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(9, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      valueMarker0.setOutlineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeXYPlot0.addDomainMarker(9, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.getRangeAxisLocation(3102);
      combinedRangeXYPlot0.getDomainAxisEdge();
      combinedRangeXYPlot0.getAxisOffset();
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) 9;
      combinedRangeXYPlot0.clearDomainMarkers(9);
      Kernel kernel0 = null;
//      try {
        kernel0 = new Kernel(10, 10, floatArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Data array too small (is 1 and should be 100
//         //
//         verifyException("java.awt.image.Kernel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
      combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      LogAxis logAxis0 = new LogAxis("");
      Year year0 = new Year(10);
      RegularTimePeriod regularTimePeriod0 = year0.next();
      PeriodAxis periodAxis0 = new PeriodAxis("", regularTimePeriod0, regularTimePeriod0);
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      logAxis0.setTickMarkStroke(stroke0);
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, "/]>sSI<qesjNxC");
      combinedDomainXYPlot0.setDomainTickBandPaint(xYPlot0.DEFAULT_BACKGROUND_PAINT);
      xYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedDomainXYPlot0);
      combinedDomainXYPlot0.plotChanged(plotChangeEvent0);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      cyclicNumberAxis0.setAutoRangeMinimumSize((double) 10, true);
      JFreeChart jFreeChart0 = new JFreeChart("/]>sSI<qesjNxC", cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, false);
      combinedDomainXYPlot0.setRangeCrosshairPaint(logAxis0.DEFAULT_TICK_LABEL_PAINT);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      bufferedImage0.createGraphics();
      PolarChartPanel polarChartPanel0 = null;
//      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // plot is not a PolarPlot
//         //
//         verifyException("org.jfree.chart.PolarChartPanel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[4];
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) clusteredXYBarRenderer0;
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) samplingXYLineRenderer0;
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      xYItemRendererArray0[2] = (XYItemRenderer) vectorRenderer0;
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer(1870.0);
      xYItemRendererArray0[3] = (XYItemRenderer) xYBarRenderer0;
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.getRenderer();
      combinedDomainXYPlot0.getRendererCount();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ModuloAxis moduloAxis0 = new ModuloAxis("", numberAxis3D0.DEFAULT_RANGE);
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, moduloAxis0, moduloAxis0, xYDifferenceRenderer0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      xYPlot0.getOrientation();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
//      try { 
        xYPlot0.setRangeAxis((-1), (ValueAxis) numberAxis3D0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0, 10);
      JFreeChart jFreeChart0 = new JFreeChart("\fAszBS $", combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.mapDatasetToRangeAxis(10, (-806));
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(0.5F, 15, 15, (-971.6816F));
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      combinedRangeXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot1.getLegendItems();
      combinedRangeXYPlot1.clearDomainMarkers(492);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      ValueMarker valueMarker0 = new ValueMarker(2763, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker(2763, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(2763);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRenderer(83, (XYItemRenderer) null);
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getRangeAxisForDataset(10);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-26);
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(83, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart("!i@lsiqB-S`#;HD<J", valueAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainXYPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
//      try { 
        jFreeChart0.createBufferedImage((int) (byte) (-26), (-1), (-1236), chartRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown image type -1236
//         //
//         verifyException("java.awt.image.BufferedImage", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(1160, layer0);
      combinedDomainXYPlot0.panRangeAxes(2413.9523, (PlotRenderingInfo) null, (Point2D) null);
      combinedDomainXYPlot0.clearDomainMarkers((-2815));
      RingPlot ringPlot0 = new RingPlot((PieDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart("+-m9", ringPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 373, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics2D0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("+-m9");
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      Rectangle rectangle1 = debugGraphics0.getClipBounds(rectangle0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2413.9523, 1734.026);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getSeriesOutlinePaint();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.drawRangeCrosshair(graphics2D0, rectangle1, (PlotOrientation) null, 0.4, cyclicNumberAxis0, (Stroke) null, (Paint) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      XYSeries xYSeries0 = new XYSeries(1.0F);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      xYSeriesCollection0.getRangeBounds(false);
      ModuloAxis moduloAxis0 = new ModuloAxis("(]Y  G~xH)ra", (Range) null);
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("(]Y  G~xH)ra");
      valueAxisArray0[1] = (ValueAxis) logarithmicAxis0;
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'range' argument.
//         //
//         verifyException("org.jfree.chart.axis.ValueAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRendererForDataset((XYDataset) null);
      combinedRangeXYPlot0.clearDomainMarkers();
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.drawZeroRangeBaseline((Graphics2D) null, (Rectangle2D) null);
      combinedRangeXYPlot0.getRangeAxisCount();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      PlotState plotState0 = new PlotState();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.draw((Graphics2D) null, (Rectangle2D) null, (Point2D) null, plotState0, (PlotRenderingInfo) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'order' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      combinedDomainXYPlot0.zoomDomainAxes(41.915894508361816, plotRenderingInfo0, (Point2D) point2D_Float0, false);
      combinedDomainXYPlot0.getDomainMinorGridlineStroke();
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getDomainAxis();
      combinedDomainXYPlot0.getDomainAxisIndex(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      TimeSeries timeSeries0 = new TimeSeries(false, "lFqe\",kR!>^kl%", "lFqe\",kR!>^kl%");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearSelection();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.zoomRangeAxes(0.05, (double) 500, (PlotRenderingInfo) null, (Point2D) null);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.zoomDomainAxes((-1744.696775), (PlotRenderingInfo) null, (Point2D) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'info' argument.
//         //
//         verifyException("org.jfree.chart.plot.CombinedRangeXYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedRangeXYPlot1.add((XYPlot) combinedRangeXYPlot0, 10);
      JFreeChart jFreeChart0 = new JFreeChart("\fAszBS $", combinedRangeXYPlot1);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JTable jTable0 = new JTable((Vector) null, (Vector) null);
      Rectangle rectangle0 = jTable0.getCellRect(81, 500, true);
      combinedRangeXYPlot0.drawHorizontalLine(graphics2D0, rectangle0, 1.0F, combinedRangeXYPlot1.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot2.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot1.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      TimeZone timeZone0 = TimeZone.getTimeZone("~-l");
      Locale locale0 = Locale.KOREA;
      DateAxis dateAxis0 = new DateAxis("NUfY2R", timeZone0, locale0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.addRangeMarker((Marker) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[14];
      JTree jTree0 = new JTree(valueAxisArray0);
      Rectangle rectangle0 = jTree0.getRowBounds(10);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 300, 5000000.0, (-2242.3911586), chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawDomainCrosshair(graphics2D0, rectangle0, (PlotOrientation) null, 5.0, valueAxis0, valueAxis0.DEFAULT_TICK_MARK_STROKE, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedRangeXYPlot0.setRangeCrosshairValue(2.0E9);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeCrosshairVisible(true);
      combinedDomainXYPlot0.setRangeCrosshairValue(0.2);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      combinedDomainXYPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Stroke stroke0 = candlestickRenderer0.lookupSeriesStroke((-3878));
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(602.7006998, 32.31, (-1435.6386606396616), (-1435.6386606396616), stroke0, candlestickRenderer0.DEFAULT_OUTLINE_PAINT, candlestickRenderer0.DEFAULT_OUTLINE_PAINT);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYBoxAnnotation0, true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(465.40365033228, 2, "Series ");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.add((XYPlot) combinedRangeXYPlot1, 14);
      combinedRangeXYPlot1.clone();
      combinedRangeXYPlot1.getDomainAxis(463);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      ValueAxis[] valueAxisArray0 = new ValueAxis[6];
      Hour hour0 = new Hour();
      XYSeries xYSeries0 = new XYSeries(hour0, false);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      xYSeriesCollection0.getDomainBounds(false);
      ModuloAxis moduloAxis0 = new ModuloAxis("my5/R|jot^l", (Range) null);
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      valueAxisArray0[1] = (ValueAxis) numberAxis3D0;
      TimeZone timeZone0 = TimeZone.getTimeZone("my5/R|jot^l");
      DateAxis dateAxis0 = new DateAxis("my5/R|jot^l", timeZone0);
      valueAxisArray0[2] = (ValueAxis) dateAxis0;
      DateAxis dateAxis1 = new DateAxis();
      valueAxisArray0[3] = (ValueAxis) dateAxis1;
      LogAxis logAxis0 = new LogAxis("Null 'orientation' argument.");
      valueAxisArray0[4] = (ValueAxis) logAxis0;
      LogAxis logAxis1 = new LogAxis();
      valueAxisArray0[5] = (ValueAxis) logAxis1;
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'range' argument.
//         //
//         verifyException("org.jfree.chart.axis.ValueAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      LinkedList<CategoryAxis3D> linkedList0 = new LinkedList<CategoryAxis3D>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, linkedList0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawVerticalLine((Graphics2D) null, (Rectangle2D) null, 10, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      combinedRangeXYPlot1.setRangeMinorGridlinePaint(combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot1.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 1.0F, valueAxis0, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.NumberAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      LinkedList<NumberAxis3D> linkedList1 = new LinkedList<NumberAxis3D>();
      linkedList1.poll();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      IntervalMarker intervalMarker0 = new IntervalMarker(500, 1.0E-8);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker((Marker) intervalMarker0, layer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedRangeXYPlot0.removeDomainMarker((Marker) intervalMarker0, layer0);
      Layer layer1 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getDomainMarkers(layer1);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.height = (double) xYBoxAndWhiskerRenderer0.ZERO;
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      combinedRangeXYPlot0.drawZeroRangeBaseline((Graphics2D) null, rectangle2D0);
      combinedRangeXYPlot0.clearDomainMarkers();
      JFreeChart jFreeChart0 = new JFreeChart("|", combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 9, 182.0, 0.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawBackground(graphics2D0, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("*T6oKEN-U)5S$+&2");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot1, 10);
      JFreeChart jFreeChart0 = new JFreeChart("\fAszBS $", combinedDomainXYPlot1);
      jFreeChart0.createBufferedImage(10, 2);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10, 10, chartRenderingInfo1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(10, (-63.66475F), (-2917.89F), 0.9F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      AxisSpace axisSpace0 = combinedRangeXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      combinedRangeXYPlot0.getRangeAxis(274);
      combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, axisSpace0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10);
      Layer layer0 = Layer.BACKGROUND;
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, false);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRenderer((-717), (XYItemRenderer) xYLineAndShapeRenderer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDatasetRenderingOrder();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1847.48411378, "G+FsH'~T%k#B");
      JFreeChart jFreeChart0 = new JFreeChart("G+FsH'~T%k#B", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel((TreeNode) null);
      JTree jTree0 = new JTree(defaultTreeModel0);
      jTree0.getRowBounds(489);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.drawDomainCrosshair(graphics2D0, (Rectangle2D) null, (PlotOrientation) null, 0.05, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, jFreeChart0.DEFAULT_BACKGROUND_PAINT);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.CyclicNumberAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeAxes();
      JList<SymbolAxis> jList0 = new JList<SymbolAxis>();
      jList0.getCellBounds(3275, 65535);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      PeriodAxis periodAxis0 = new PeriodAxis("K&");
      combinedRangeXYPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 350.991, periodAxis0, periodAxis0.DEFAULT_TICK_MARK_STROKE, periodAxis0.DEFAULT_TICK_MARK_PAINT);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainXYPlot0.getDatasetRenderingOrder();
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainXYPlot0.getRangeAxisForDataset(0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.removeRangeMarker((Marker) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'marker' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(10, 1.0F, 66.44348255, 32.31, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedRangeXYPlot1.removeAnnotation((XYAnnotation) xYBoxAnnotation0, false);
      combinedRangeXYPlot1.add((XYPlot) combinedRangeXYPlot0, 10);
      JFreeChart jFreeChart0 = new JFreeChart("\fAszBS $", combinedRangeXYPlot1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(486, 10);
      bufferedImage0.createGraphics();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, (-3356.953F), 0.0F, 0.5F);
      ellipse2D_Float0.getBounds2D();
      NumberAxis numberAxis0 = new NumberAxis();
      numberAxis0.setVisible(false);
      combinedRangeXYPlot0.getDomainAxisIndex(numberAxis0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.clearDomainAxes();
      ValueMarker valueMarker0 = new ValueMarker(481.0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainAxisLocation(0, (AxisLocation) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'location' for index 0 not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, logAxis0, logAxis0, samplingXYLineRenderer0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(10, 3020);
      combinedRangeXYPlot0.panDomainAxes(0, (PlotRenderingInfo) null, point0);
      combinedRangeXYPlot0.getOrientation();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = new BasicStroke();
      combinedRangeXYPlot0.getAnnotations();
      combinedRangeXYPlot0.getLegendItems();
      xYPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 2678.364, categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      combinedRangeXYPlot0.addDomainMarker((Marker) intervalMarker0, layer0);
      IntervalMarker intervalMarker1 = new IntervalMarker(498.0, 204.91589450836182, categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
      combinedRangeXYPlot0.removeDomainMarker((Marker) intervalMarker1, layer0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      Boolean boolean0 = new Boolean(true);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) logAxis0);
      chartRenderingInfo0.clear();
      chartRenderingInfo0.getEntityCollection();
      Point2D.Float point2D_Float0 = new Point2D.Float(0.0F, 10);
      combinedDomainXYPlot0.zoomDomainAxes(1.0E-8, plotRenderingInfo0, (Point2D) point2D_Float0, true);
      combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.clearSelection();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[4];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator("Indices must be Integer instances.", "Indices must be Integer instances.", "Indices must be Integer instances.");
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(10);
      xYItemRendererArray0[0] = (XYItemRenderer) xYAreaRenderer0;
      xYItemRendererArray0[1] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      xYItemRendererArray0[2] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      xYItemRendererArray0[3] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
      combinedRangeXYPlot0.getIndexOf(xYItemRendererArray0[2]);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      linkedList0.poll();
      xYPlot0.clearSelection();
      xYPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10);
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.addDomainMarker((Marker) valueMarker0, layer0);
      combinedRangeXYPlot0.removeDomainMarker((Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ArrayList<Size2D> arrayList0 = new ArrayList<Size2D>();
      combinedDomainXYPlot0.drawRangeTickBands((Graphics2D) null, defaultCaret0, arrayList0);
      combinedDomainXYPlot0.setAxisOffset(logAxis0.DEFAULT_AXIS_LABEL_INSETS);
      System.setCurrentTimeMillis(0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.drawAxes((Graphics2D) null, defaultCaret0, defaultCaret0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.ValueAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      linkedList0.poll();
      xYPlot0.clearSelection();
      xYPlot0.getDomainAxisForDataset(0);
      xYPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!b");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float(2326.89F, 10);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, (Point2D) point2D_Float0, true);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Locale locale0 = new Locale("");
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(500);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setRangeAxis(500, (ValueAxis) periodAxis0, false);
      xYPlot0.isSubplot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", periodAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
      xYPlot0.setDomainMinorGridlinesVisible(true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 500, 10, 995, 10, true, true, true, true, false, false, true);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart0, 10, 10, 1, (-6), 1, 498, false, true, false, false, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel1.getChartRenderingInfo();
      jFreeChart0.createBufferedImage(10, 1580, chartRenderingInfo0);
      xYPlot0.getRangeAxisCount();
      xYPlot0.getRangeAxisIndex(periodAxis0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getQuadrantPaint(2);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DatasetRenderingOrder datasetRenderingOrder1 = DatasetRenderingOrder.REVERSE;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder1);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Rectangle2D rectangle2D1 = combinedDomainXYPlot0.DEFAULT_INSETS.createAdjustedRectangle(rectangle2D0, lengthAdjustmentType0, lengthAdjustmentType0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.drawBackground((Graphics2D) null, rectangle2D1);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.Plot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!b");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float(2326.89F, 10);
      combinedDomainXYPlot0.zoomDomainAxes(1.0E-8, plotRenderingInfo0, (Point2D) point2D_Float0, true);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      Rectangle2D rectangle2D0 = chartRenderingInfo1.getChartArea();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, rectangle2D0, 1.0F, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(1715.7551931953, 10, categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.addDomainMarker((-2282), (Marker) intervalMarker0, (Layer) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'layer' not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BufferedImage bufferedImage0 = new BufferedImage(2913, 10, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      linkedList0.poll();
      combinedDomainXYPlot0.drawRangeTickBands(graphics2D0, (Rectangle2D) null, linkedList0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setAxisOffset((RectangleInsets) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'offset' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(2029.0);
      Layer layer0 = Layer.BACKGROUND;
      MockDate mockDate0 = new MockDate(10, 10, 10, 10, 10, 10);
      TimeZone timeZone0 = TimeZone.getDefault();
      Week week0 = new Week(mockDate0, timeZone0);
      Year year0 = new Year(mockDate0);
      Locale locale0 = Locale.ROOT;
      PeriodAxis periodAxis0 = new PeriodAxis("y+ZV;", week0, year0, timeZone0, locale0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.drawVerticalLine((Graphics2D) null, (Rectangle2D) null, 670.0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
//         //
//         verifyException("org.jfree.data.Range", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Null 'negativeBarPaint' argument");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeAxis(10);
      combinedDomainXYPlot0.getDomainAxisEdge(500);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.removeAnnotation((XYAnnotation) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      String string0 = "";
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Locale locale0 = new Locale("");
      Class<XYDataImageAnnotation> class0 = XYDataImageAnnotation.class;
      periodAxis0.setAutoRangeTimePeriodClass(class0);
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(500);
      XYPlot xYPlot0 = new XYPlot();
      // Undeclared exception!
//      try { 
        xYPlot0.setRangeAxis(500, (ValueAxis) periodAxis0, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.PeriodAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Point point0 = new Point((-2191), (-2191));
      combinedDomainXYPlot0.zoomDomainAxes((double) 0, (PlotRenderingInfo) null, (Point2D) point0);
      combinedDomainXYPlot0.getDomainTickBandPaint();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.zoomDomainAxes((-1714.152166), (PlotRenderingInfo) null, (Point2D) point0, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      LinkedList<CategoryAxis3D> linkedList0 = new LinkedList<CategoryAxis3D>();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(2);
      XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, valueAxis0, valueAxis0, (XYItemRenderer) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.add(xYPlot0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      combinedDomainXYPlot0.getRendererForDataset(jDBCXYDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.event.TitleChangeListener", combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, true, false);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel1.getChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeAxisLocation(0, (AxisLocation) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'location' for index 0 not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      matrixSeriesCollection0.indexOf(1.0F);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      linkedList0.poll();
      xYPlot0.clearSelection();
      // Undeclared exception!
//      try { 
        xYPlot0.getDataRange((ValueAxis) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = 1445;
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.rendererChanged((RendererChangeEvent) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      Rectangle2D rectangle2D0 = chartRenderingInfo1.getChartArea();
      combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, rectangle2D0, 255.0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getRendererForDataset(jDBCXYDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex' argument.", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, false, true, true);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel1.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.zoomRangeAxes(0.0, plotRenderingInfo0, (Point2D) null, true);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Area area0 = new Area();
      area0.getBounds();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.clearRangeMarkers();
      combinedDomainXYPlot0.setDomainGridlinePaint(combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      XYPlot xYPlot0 = new XYPlot(yIntervalSeriesCollection0, valueAxis0, valueAxis0, (XYItemRenderer) null);
      xYPlot0.getWeight();
      xYPlot0.getRendererForDataset(yIntervalSeriesCollection0);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.getDomainAxisForDataset((-2191));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Index -2191 out of bounds.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      LinkedList<CategoryAxis3D> linkedList0 = new LinkedList<CategoryAxis3D>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(valueAxis0);
      Stack<ModuloAxis> stack0 = new Stack<ModuloAxis>();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.drawRangeMarkers((Graphics2D) null, rectangle0, 0, layer0);
      combinedDomainXYPlot0.getRenderer(692);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotRenderingInfo plotRenderingInfo0 = null;
      int int0 = (-2191);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.mapDatasetToDomainAxis((-2191), 462);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires 'index' >= 0.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(4.0, (-2600.7662), 10, 360.0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYBoxAnnotation0, true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.add((XYPlot) combinedRangeXYPlot0, 10);
      combinedDomainXYPlot0.setAxisOffset(combinedRangeXYPlot1.DEFAULT_INSETS);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getWeight();
      combinedRangeXYPlot0.getRangeAxis();
      combinedRangeXYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker((-546.365), numberAxis3D0.DEFAULT_TICK_MARK_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      valueMarker0.setLabelFont(numberAxis3D0.DEFAULT_AXIS_LABEL_FONT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      xYPlot0.setRangeCrosshairValue((double) 2);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes(1, (List) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0, 1.0, "");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setWeight(500);
      combinedRangeXYPlot0.getAxisOffset();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.zoomRangeAxes(1.0, plotRenderingInfo0, (Point2D) null, false);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers(10);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      matrixSeriesCollection0.hasListener(xYPlot0);
      defaultCaret0.paint((Graphics) null);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, defaultCaret0);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      xYPlot0.getLegendItems();
      xYPlot0.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.addAnnotation((XYAnnotation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainMarkers();
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(color0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      chartPanel0.getAnchor();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.panRangeAxes(420, plotRenderingInfo0, (Point2D) null);
      combinedDomainXYPlot0.getRangeTickBandPaint();
      combinedDomainXYPlot0.getDomainAxisLocation(1);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Area area0 = new Area();
      area0.getBounds();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.getRangeGridlinePaint();
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedDomainXYPlot0.getRangeAxisLocation();
      Rectangle rectangle0 = new Rectangle(1024, 0, 0, 0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.drawDomainMarkers((Graphics2D) null, rectangle0, 0, layer0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = (-1305);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-1305));
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((-1305), axisLocation1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers(10);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, defaultCaret0);
      combinedDomainXYPlot0.clearSelection();
      combinedDomainXYPlot0.getDomainAxisIndex((ValueAxis) null);
      xYPlot0.getIndexOf((XYItemRenderer) null);
      BasicStroke basicStroke0 = new BasicStroke();
      ValueMarker valueMarker0 = new ValueMarker(2977.9145, categoryAxis0.DEFAULT_AXIS_LINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, basicStroke0, 1);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(6, (Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      MouseEvent mouseEvent0 = new MouseEvent(chartPanel0, 10, 615L, 484, 680, (-2046), 946, false);
      Point point0 = mouseEvent0.getLocationOnScreen();
      plotRenderingInfo0.getSubplotIndex(point0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(chartPanel0, (-3819), 0L, 420, 305, 768, 946, (-3819), 402, false, 3, 504, 1940);
      InputEvent.getMaskForButton(10);
      mouseWheelEvent0.setSource(chartRenderingInfo0);
      chartPanel0.getPopupLocation(mouseWheelEvent0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.zoomDomainAxes((double) 1072, (double) (-3819), plotRenderingInfo0, (Point2D) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Range(double, double): require lower (1125.6000000000001) <= upper (-4009.9500000000003).
//         //
//         verifyException("org.jfree.data.Range", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.setRangeCrosshairVisible(true);
      combinedDomainXYPlot0.setRangeCrosshairValue((double) 1.0F);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeXYPlot0.clearRangeAxes();
      combinedRangeXYPlot0.getRangeAxisCount();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueMarker valueMarker0 = new ValueMarker(10, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker(2903, (Marker) valueMarker0, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      combinedDomainXYPlot0.zoomRangeAxes((double) 2903, plotRenderingInfo0, (Point2D) point0, false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers(10);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, defaultCaret0);
      combinedDomainXYPlot0.clearSelection();
      combinedDomainXYPlot0.getDomainAxisIndex((ValueAxis) null);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      Color color0 = Color.getHSBColor(19.0F, 1.0F, 1.0F);
      xYPlot0.drawDomainCrosshair(graphics2D0, defaultCaret0, plotOrientation0, 0, valueAxis0, categoryAxis0.DEFAULT_TICK_MARK_STROKE, color0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainMarkers();
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(color0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      chartPanel0.getAnchor();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.panRangeAxes(420, plotRenderingInfo0, (Point2D) null);
      ValueMarker valueMarker0 = new ValueMarker(6.0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(680, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.getRendererCount();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.zoomRangeAxes(2293.6278, plotRenderingInfo0, (Point2D) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'source' argument.
//         //
//         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Vector<StandardGradientPaintTransformer> vector0 = new Vector<StandardGradientPaintTransformer>(10);
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = null;
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      StandardXYZURLGenerator standardXYZURLGenerator0 = new StandardXYZURLGenerator();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.drawQuadrants((Graphics2D) null, (Rectangle2D) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.NumberAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDataset(10, (XYDataset) null);
      combinedRangeXYPlot0.getDatasetCount();
      combinedRangeXYPlot0.getAnnotations();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.zoomDomainAxes(1048.8791937551, plotRenderingInfo0, (Point2D) point0, true);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.addDomainMarker(2, (Marker) intervalMarker0, layer0, true);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      combinedDomainXYPlot0.clearSelection();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.zoomDomainAxes(200000.0, plotRenderingInfo0, (Point2D) null, false);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      LinkedList<NumberAxis3D> linkedList1 = new LinkedList<NumberAxis3D>();
      linkedList1.poll();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearSelection();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setRangeAxisLocation((AxisLocation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'location' for index 0 not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      linkedList0.poll();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getDatasetCount();
      combinedRangeXYPlot0.getAnnotations();
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
      xYPlot0.setDataset(0, (XYDataset) simpleHistogramDataset0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.addRangeMarker(0, (Marker) null, layer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedRangeXYPlot0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeXYPlot0);
      plotChangeEvent0.setChart(jFreeChart0);
      combinedRangeXYPlot0.notifyListeners(plotChangeEvent0);
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(true);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setRangeGridlinePaint((Paint) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      NumberAxis3D numberAxis3D0 = linkedList0.poll();
      xYPlot0.drawRangeTickBands(graphics2D0, defaultCaret0, linkedList0);
      xYPlot0.setAxisOffset(numberAxis3D0.DEFAULT_AXIS_LABEL_INSETS);
      xYPlot0.drawZeroRangeBaseline(graphics2D0, defaultCaret0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      MockDate mockDate0 = new MockDate(10, 10, 6, 10, (-1));
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
      RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.next();
      PeriodAxis periodAxis0 = new PeriodAxis(",x,cB&/TzlmQg", regularTimePeriod0, fixedMillisecond0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      combinedRangeXYPlot0.getRangeMarkers(10, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      String string0 = "<H";
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      clusteredXYBarRenderer0.findRangeBounds(timeTableXYDataset0);
      ModuloAxis moduloAxis0 = new ModuloAxis("<H", (Range) null);
      XYPlot xYPlot0 = null;
//      try {
        xYPlot0 = new XYPlot(timeTableXYDataset0, moduloAxis0, moduloAxis0, clusteredXYBarRenderer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'range' argument.
//         //
//         verifyException("org.jfree.chart.axis.ValueAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesOutlineStroke(1647);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeMinorGridlineStroke((Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
      RectangleInsets rectangleInsets1 = new RectangleInsets();
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.indexOf(defaultXYDataset0);
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.getErrorPaint();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeCrosshairPaint((Paint) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      LinkedList<NumberAxis3D> linkedList1 = new LinkedList<NumberAxis3D>();
      linkedList1.poll();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearSelection();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(color0);
      combinedDomainXYPlot0.clearSelection();
      Rectangle2D rectangle2D0 = combinedDomainXYPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) defaultCaret0, true, true);
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.select((GeneralPath) null, rectangle2D0, (RenderingSource) null);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedRangeXYPlot0.clearDomainMarkers(2);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setFrameFromDiagonal((double) 10, (double) xYBoxAndWhiskerRenderer0.ZERO, 434.4200585951944, 2.499999992738859E9);
      Point point0 = new Point(425, 26);
      point0.setLocation((double) 0, (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(5259, 425, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      combinedDomainXYPlot0.getDomainAxisLocation(0);
      combinedDomainXYPlot0.setQuadrantPaint(1, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainXYPlot0.drawDomainTickBands(graphics2D0, defaultCaret1, linkedList0);
      combinedDomainXYPlot0.clearSelection();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRangeZeroBaselineStroke();
      combinedRangeXYPlot0.getDatasetCount();
      Area area0 = new Area(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle rectangle0 = area0.getBounds();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8, 1.0F, "G+FsH'~T%k#B");
      combinedRangeXYPlot0.drawDomainCrosshair((Graphics2D) null, rectangle0, plotOrientation0, (-94.43680926), cyclicNumberAxis0, xYDotRenderer0.DEFAULT_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.getRangeZeroBaselineStroke();
      combinedRangeXYPlot0.getDatasetCount();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot1);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 10, 0, 1673, (-4676), 10, false, true, false, false, true, false, false);
      Rectangle rectangle0 = chartPanel0.getBounds();
      Area area0 = new Area(rectangle0);
      area0.getBounds();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2888.80964596501, "");
      combinedRangeXYPlot1.drawDomainCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 3402.329928515992, cyclicNumberAxis0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
      combinedRangeXYPlot0.getFixedRangeAxisSpace();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      MatrixSeries matrixSeries0 = new MatrixSeries("org.jfree.chart.plot.XYPlot", 83, 83);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.chart.plot.XYPlot");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3346.280042, 2.302585092994046);
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      XYPlot xYPlot0 = null;
//      try {
        xYPlot0 = new XYPlot(matrixSeriesCollection0, logarithmicAxis0, cyclicNumberAxis0, xYBlockRenderer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Values less than or equal to zero not allowed with logarithmic axis
//         //
//         verifyException("org.jfree.chart.axis.LogarithmicAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      JFreeChart jFreeChart0 = new JFreeChart("7/>e_y&bC,^TP", combinedDomainXYPlot0);
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.04, true, customXYToolTipGenerator0);
      candlestickRenderer0.setLegendTextFont(15, categoryAxis0.DEFAULT_TICK_LABEL_FONT);
      candlestickRenderer0.setDownPaint(categoryAxis0.DEFAULT_AXIS_LINE_PAINT);
      candlestickRenderer0.getSeriesOutlineStroke(10);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeGridlineStroke((Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Vector<StandardGradientPaintTransformer> vector0 = new Vector<StandardGradientPaintTransformer>(10);
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      combinedDomainXYPlot1.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      chartPanel0.getAnchor();
      combinedDomainXYPlot0.panRangeAxes(10, plotRenderingInfo0, (Point2D) null);
      combinedDomainXYPlot0.getRangeTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainCrosshairStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Stack<AxisState> stack0 = new Stack<AxisState>();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeMarkers(2, layer0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainAxisLocation(10);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeZeroBaselinePaint((Paint) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ValueAxis valueAxis0 = null;
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers(10);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.data.time.SimpleTimePeriod", xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      xYPlot0.drawAxes((Graphics2D) null, defaultCaret0, defaultCaret0, plotRenderingInfo0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 0, 0.12, (double) (-1353));
      AffineTransformOp affineTransformOp0 = null;
//      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 10);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown interpolation type: 10
//         //
//         verifyException("java.awt.image.AffineTransformOp", e);
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      DateAxis dateAxis0 = new DateAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.05);
      Locale locale0 = Locale.ITALY;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      NumberFormat.getIntegerInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      standardXYURLGenerator0.equals(cyclicNumberAxis0);
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, dateAxis0, cyclicNumberAxis0, xYAreaRenderer2_0);
      DecimalFormat decimalFormat1 = new DecimalFormat("");
      ValueMarker valueMarker0 = new ValueMarker(2.5E-7, dateAxis0.DEFAULT_TICK_LABEL_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      valueMarker0.setLabelFont(dateAxis0.DEFAULT_TICK_LABEL_FONT);
      NumberFormat.getNumberInstance();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      valueAxisArray0[0] = (ValueAxis) dateAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[2] = (ValueAxis) dateAxis0;
      valueAxisArray0[3] = (ValueAxis) dateAxis0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      xYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      LinkedList<CategoryAxis3D> linkedList0 = new LinkedList<CategoryAxis3D>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, linkedList0);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.addRangeMarker((Marker) null, layer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point point0 = new Point(467, 10);
      xYPlot0.zoomDomainAxes((-26.27653), plotRenderingInfo0, (Point2D) point0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-26.27653), 0.05, dateAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot1.removeRangeMarker(171, (Marker) intervalMarker0, layer0);
      combinedRangeXYPlot1.add(xYPlot0, 10);
      combinedRangeXYPlot0.setAxisOffset(combinedRangeXYPlot1.DEFAULT_INSETS);
      combinedRangeXYPlot1.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.getRangeZeroBaselineStroke();
      combinedRangeXYPlot0.getDatasetCount();
      Area area0 = new Area(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Rectangle rectangle0 = area0.getBounds();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-4), 10, "G+FsH'~T%k#B");
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.drawDomainCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 1.0F, cyclicNumberAxis0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2150.51361568021), combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.setRangeCrosshairStroke(valueAxis0.DEFAULT_TICK_MARK_STROKE);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(509, 1445, 4.0, 0.05, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Point point0 = new Point();
      rectangle2D_Float0.setFrameFromCenter((Point2D) point0, (Point2D) point0);
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangle2D_Float0.createIntersection(rectangle2D0);
      combinedDomainXYPlot0.drawQuadrants(graphics2D0, rectangle2D1);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.drawHorizontalLine(graphics2D0, rectangle2D1, 0.0F, valueAxis0.DEFAULT_TICK_MARK_STROKE, valueAxis0.DEFAULT_AXIS_LABEL_PAINT);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      LinkedList<CategoryAxis3D> linkedList0 = new LinkedList<CategoryAxis3D>();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "index.html";
      stringArray0[1] = "item";
      SymbolAxis symbolAxis0 = new SymbolAxis("series", stringArray0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(symbolAxis0);
      Stack<DefaultTableXYDataset> stack0 = new Stack<DefaultTableXYDataset>();
      combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, stack0);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0F, 2956.793);
      combinedDomainXYPlot0.getAnnotations();
      ValueMarker valueMarker0 = new ValueMarker(0.05);
      combinedRangeXYPlot0.removeRangeMarker(10, (Marker) valueMarker0, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CrosshairState crosshairState0 = new CrosshairState();
      combinedDomainXYPlot1.render((Graphics2D) null, (Rectangle2D) null, 10, plotRenderingInfo0, crosshairState0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.clear();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      point0.clone();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxisEdge((-657));
      combinedRangeXYPlot0.zoomRangeAxes(Double.NaN, (double) 0, plotRenderingInfo0, (Point2D) point0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainZeroBaselineVisible(false);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.isDomainZoomable();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(chartPanel0, 420, 1L, (-753), 1072, (-3819), 10, (-3819), (-78), true, (-753), 1024, 15);
      InputEvent.getMaskForButton(10);
      mouseWheelEvent0.setSource(chartPanel0);
      chartPanel0.getPopupLocation(mouseWheelEvent0);
      xYPlot0.zoomDomainAxes((-26.084105491638184), 4.0, plotRenderingInfo0, (Point2D) null);
      IntervalMarker intervalMarker0 = null;
//      try {
        intervalMarker0 = new IntervalMarker(1072, 4.0, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE, (-1360.968F));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'alpha' value must be in the range 0.0f to 1.0f
//         //
//         verifyException("org.jfree.chart.plot.Marker", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2150.51361568021), combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.setRangeCrosshairStroke(valueAxis0.DEFAULT_TICK_MARK_STROKE);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.addAnnotation((XYAnnotation) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2150.51361568021), combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.setRangeCrosshairStroke(valueAxis0.DEFAULT_TICK_MARK_STROKE);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setAxisOffset(valueAxis0.DEFAULT_TICK_LABEL_INSETS);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeXYPlot1.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.clearRangeMarkers();
      combinedRangeXYPlot0.getOrientation();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0, false);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot2.removeRangeMarker(0, (Marker) null, layer0, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'marker' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[3];
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(8.0, 1.0F, (double) xYBoxAndWhiskerRenderer0.ZERO, (double) xYBoxAndWhiskerRenderer0.ZERO);
      xYItemRendererArray0[2] = (XYItemRenderer) highLowRenderer0;
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
      combinedRangeXYPlot0.clearRangeAxes();
      combinedRangeXYPlot0.setRangeCrosshairPaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      Stack<DefaultKeyedValues2DDataset> stack0 = new Stack<DefaultKeyedValues2DDataset>();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.mapDatasetToDomainAxes((-1910), stack0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires 'index' >= 0.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      LinkedList<XYDatasetTableModel> linkedList0 = new LinkedList<XYDatasetTableModel>();
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.indexOf(defaultXYDataset0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(10);
      axisLocation0.getOpposite();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.handleClick((-1), (-215), (PlotRenderingInfo) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      HistogramDataset histogramDataset0 = new HistogramDataset();
      combinedDomainXYPlot0.getRendererForDataset(histogramDataset0);
      Color color0 = new Color(0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.setDataset((XYDataset) histogramDataset0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setRangeGridlineStroke(stroke0);
      combinedRangeXYPlot0.getRangeCrosshairPaint();
      LinkedList<XYDrawableAnnotation> linkedList0 = new LinkedList<XYDrawableAnnotation>();
      combinedDomainXYPlot0.isDomainZeroBaselineVisible();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.mapDatasetToRangeAxes(0, linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Empty list not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      categoryMarker0.setStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0, (Layer) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      LogAxis logAxis0 = new LogAxis("");
      valueAxisArray0[0] = (ValueAxis) logAxis0;
      NumberAxis numberAxis0 = new NumberAxis();
      valueAxisArray0[1] = (ValueAxis) numberAxis0;
      LogAxis logAxis1 = new LogAxis();
      valueAxisArray0[2] = (ValueAxis) logAxis1;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      ValueMarker valueMarker0 = new ValueMarker(338.14746227695);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(valueMarker0);
      valueMarker0.notifyListeners(markerChangeEvent0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.addDomainMarker((-523), (Marker) valueMarker0, (Layer) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'layer' not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("X='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.118579014550992, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, false);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(defaultXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      combinedRangeXYPlot0.clearRangeAxes();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(509.0, 1.0E-8, (-3.0), 0.05);
      Rectangle2D rectangle2D0 = numberAxis3D0.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle2D_Double0, false, true);
      Rectangle2D rectangle2D1 = numberAxis3D0.DEFAULT_AXIS_LABEL_INSETS.createOutsetRectangle(rectangle2D0, true, true);
      Stack<DefaultHighLowDataset> stack0 = new Stack<DefaultHighLowDataset>();
      combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D1, stack0);
      XYTitleAnnotation xYTitleAnnotation0 = null;
//      try {
        xYTitleAnnotation0 = new XYTitleAnnotation(1.0E-8, 509.0, (Title) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'title' argument.
//         //
//         verifyException("org.jfree.chart.annotations.XYTitleAnnotation", e);
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.118579014550992, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot1.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeRangeMarker(10, (Marker) valueMarker0, layer0, false);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(xYLine3DRenderer0.DEFAULT_WALL_PAINT);
      combinedRangeXYPlot1.clearRangeAxes();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0E-5, 8.0, 1830.0, 1034.47751);
      Rectangle2D rectangle2D0 = combinedRangeXYPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle2D_Double0, true, false);
      UnitType unitType0 = UnitType.ABSOLUTE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 1.0F, 1830.0, 509.0, 1034.47751);
      Rectangle2D rectangle2D1 = rectangleInsets0.createOutsetRectangle(rectangle2D0, true, false);
      Stack<DefaultHighLowDataset> stack0 = new Stack<DefaultHighLowDataset>();
      combinedRangeXYPlot1.drawRangeGridlines((Graphics2D) null, rectangle2D1, stack0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.118579014550992);
      combinedRangeXYPlot1.getDomainAxisIndex(cyclicNumberAxis0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainMarkers();
      PolarPlot polarPlot0 = new PolarPlot();
      polarPlot0.getRadiusGridlinePaint();
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(color0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(17, color0, polarPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker((-298), (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(500, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedRangeXYPlot0.clearRangeAxes();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(2, axisLocation0);
      combinedRangeXYPlot0.equals(axisLocation0);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      xYPlot0.clearDomainMarkers(500);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setFrameFromDiagonal(2748.0, (-2576.42), 2.5E9, (-830.0583872108));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDataset((-1255), (XYDataset) defaultTableXYDataset0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2150.51361568021), combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(1445, (Marker) intervalMarker0, layer0, false);
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.setRangeCrosshairStroke(valueAxis0.DEFAULT_TICK_MARK_STROKE);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(509, 2670, 4.0, 0.05, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangle2D_Float0.createIntersection(rectangle2D0);
      combinedDomainXYPlot0.drawQuadrants(graphics2D0, rectangle2D1);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2150.51361568021), combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(1445, (Marker) intervalMarker0, layer0, false);
      combinedDomainXYPlot0.getRangeAxis();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(478, (XYItemRenderer) xYDotRenderer0, false);
      combinedDomainXYPlot0.getDataRange((ValueAxis) null);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 1.0F);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.setRangeCrosshairVisible(true);
      ValueMarker valueMarker0 = new ValueMarker(1592.210657, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      valueMarker0.setLabelFont(categoryAxis0.DEFAULT_TICK_LABEL_FONT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedDomainXYPlot0.setRangeCrosshairValue(2.5);
      LogAxis logAxis0 = new LogAxis("6O<S1ij467*rM5G,~Vm");
      logAxis0.removeChangeListener(combinedRangeXYPlot0);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(logAxis0);
      combinedDomainXYPlot0.setRangeCrosshairValue((double) 1.0F);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 1.0F);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 3265.59929666515, (double) defaultXYItemRenderer0.ZERO);
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      combinedDomainXYPlot0.getSeriesCount();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(0.5235987755982988, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      xYTextAnnotation0.setRotationAngle(10);
      combinedDomainXYPlot0.setDomainTickBandPaint(combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedRangeXYPlot0.setDomainGridlineStroke(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYTextAnnotation0);
      combinedRangeXYPlot1.getDomainCrosshairStroke();
      combinedRangeXYPlot0.getAnnotations();
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      combinedRangeXYPlot1.getLegendItems();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot1.removeRangeMarker(0, (Marker) intervalMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      XYPlot xYPlot1 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      combinedRangeXYPlot0.clearDomainMarkers(2);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setFrameFromDiagonal((double) 10, (double) xYBoxAndWhiskerRenderer0.ZERO, 432.83, 2.5E9);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDataset(10, (XYDataset) matrixSeriesCollection0);
      combinedDomainXYPlot0.setDataset((XYDataset) matrixSeriesCollection0);
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.getRangeCrosshairPaint();
      LinkedList<XYDrawableAnnotation> linkedList0 = new LinkedList<XYDrawableAnnotation>();
      // Undeclared exception!
//      try { 
        xYPlot0.mapDatasetToDomainAxes(0, linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Empty list not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      HistogramDataset histogramDataset0 = new HistogramDataset();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRendererForDataset(histogramDataset0);
      Color color0 = new Color(10);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeAxes();
      combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDomainAxis();
      GeneralPath generalPath0 = null;
//      try {
        generalPath0 = new GeneralPath(500, 4);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // winding rule must be WIND_EVEN_ODD or WIND_NON_ZERO
//         //
//         verifyException("java.awt.geom.Path2D", e);
//      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      highLowRenderer0.lookupSeriesShape(500);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      ValueMarker valueMarker0 = new ValueMarker(Double.POSITIVE_INFINITY);
      combinedRangeXYPlot0.setDomainCrosshairValue(1653.40132748613, true);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addDomainMarker(3492, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.clearRangeMarkers();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setRenderers((XYItemRenderer[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ValueAxis valueAxis0 = null;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.isDomainCrosshairVisible();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.clear();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.getLayoutOrigin();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setOrientation((PlotOrientation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'orientation' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_TICK_MARK_STROKE;
      combinedRangeXYPlot0.setBackgroundAlpha(519.99475F);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setDomainMinorGridlineStroke((Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2150.51361568021), combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat0, numberFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "index.html", "Empty list not permitted.", "series");
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, timeSeriesURLGenerator0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("a40*S");
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, numberAxis3D0, numberAxis3D0, xYAreaRenderer2_0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      xYPlot0.setOrientation(plotOrientation0);
      combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDomainAxisIndex((ValueAxis) null);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      ValueMarker valueMarker0 = new ValueMarker(3, xYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      valueMarker0.setLabelFont(numberAxis3D0.DEFAULT_AXIS_LABEL_FONT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      xYPlot0.setRangeCrosshairValue((double) 10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartRenderingInfo0.clear();
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      xYPlot0.handleClick(0, 10, plotRenderingInfo1);
      combinedDomainXYPlot0.setDomainCrosshairVisible(true);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      Locale locale0 = Locale.CHINA;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("$c(ws_Pus\"3'V/", numberFormat0, numberFormat0, numberFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      TimeZone.getDefault();
      xYPlot1.getRangeAxis();
      xYPlot1.getDomainAxisIndex(numberAxis3D0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D1 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D1, highLowRenderer0);
      MockDate mockDate0 = (MockDate)DateAxis.DEFAULT_ANCHOR_DATE;
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
      RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.next();
      PeriodAxis periodAxis0 = new PeriodAxis("", regularTimePeriod0, fixedMillisecond0);
      XYPlot xYPlot1 = new XYPlot(matrixSeriesCollection0, periodAxis0, periodAxis0, highLowRenderer0);
      xYPlot1.clearDomainMarkers(10);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setFrameFromDiagonal((double) 0.0F, 803.0, (double) 3, 1.0E-8);
      Point point0 = new Point(3926, (-1908));
      point0.setLocation((double) 0.0F, 1.5707963267948966);
      BufferedImage bufferedImage0 = new BufferedImage(10, 726, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      numberAxis3D1.setFixedDimension(1.7976931348623157E308);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      xYPlot1.getRangeAxisLocation((-1357));
      combinedDomainXYPlot0.setQuadrantPaint(1, numberAxis3D1.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.drawDomainTickBands(graphics2D0, defaultCaret0, linkedList0);
      combinedDomainXYPlot0.clearSelection();
      xYPlot0.getRangeMinorGridlinePaint();
      // Undeclared exception!
//      try { 
        xYPlot0.removeAnnotation((XYAnnotation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, true, true, true);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(chartPanel0, 10, 200, (-1), (-851), 768, 6, true, 10, 0, 6);
      Point point0 = new Point(10, 6);
      combinedDomainXYPlot0.zoomDomainAxes((double) 1.0F, (PlotRenderingInfo) null, (Point2D) point0);
      combinedDomainXYPlot0.getDomainTickBandPaint();
      combinedDomainXYPlot0.setDomainCrosshairVisible(false);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainMarkers();
      PolarPlot polarPlot0 = new PolarPlot();
      polarPlot0.getRadiusGridlinePaint();
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(color0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      JFreeChart jFreeChart0 = new JFreeChart(polarPlot0);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F, polarPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker(15, (Marker) intervalMarker0, layer0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(6, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart1 = new JFreeChart("2QwV<4BV;[4 YmZ", polarPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, true, true, false, true, false);
      Rectangle rectangle0 = chartPanel0.getBounds();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawVerticalLine(graphics2D0, rectangle0, 10, polarPlot0.DEFAULT_OUTLINE_STROKE, polarPlot0.DEFAULT_OUTLINE_PAINT);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedDomainXYPlot1.setSeriesRenderingOrder(seriesRenderingOrder0);
      Boolean boolean0 = new Boolean(true);
      combinedDomainXYPlot1.calculateRangeAxisSpace(graphics2D0, rectangle0, (AxisSpace) null);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.isDomainCrosshairVisible();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.clear();
      CategoryAxis categoryAxis1 = new CategoryAxis();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeXYPlot0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDataset((XYDataset) null);
      combinedDomainXYPlot0.setRangeGridlineStroke(categoryAxis1.DEFAULT_TICK_MARK_STROKE);
      combinedRangeXYPlot0.setRangeCrosshairPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot1.getDomainMarkers(layer0);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRenderer(27);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator("/>");
      candlestickRenderer0.setLegendItemLabelGenerator(multipleXYSeriesLabelGenerator0);
      combinedDomainXYPlot0.setRenderer(181, (XYItemRenderer) candlestickRenderer0);
      combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
      boolean boolean0 = false;
      float[] floatArray0 = new float[3];
      floatArray0[0] = 1.0F;
      floatArray0[1] = 1.0F;
      floatArray0[2] = 1.0F;
      Kernel kernel0 = new Kernel(0, 0, floatArray0);
      JFreeChart jFreeChart0 = new JFreeChart("<y<T72OTxv{II# 2hO", combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, 1, renderingHints0);
      ColorModel.getRGBdefault();
      Point point0 = new Point(15, 1);
      // Undeclared exception!
//      try { 
        Raster.createBandedRaster(1225, 490, 181, 181, (int[]) null, (int[]) null, point0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.awt.image.Raster", e);
//      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      XYPlot xYPlot1 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      combinedRangeXYPlot0.clearDomainMarkers(2);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setFrameFromDiagonal((double) 10, (double) xYBoxAndWhiskerRenderer0.ZERO, 432.83, 2.5E9);
      Point point0 = new Point(423, 71);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", combinedRangeXYPlot0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDataset((XYDataset) matrixSeriesCollection0);
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.setRangeCrosshairPaint(highLowRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getDomainMarkers(layer0);
      xYPlot1.getRenderer(0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      DateAxis dateAxis0 = new DateAxis();
      Locale locale0 = Locale.ITALY;
      NumberFormat.getCurrencyInstance(locale0);
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat0, numberFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      standardXYURLGenerator0.equals("");
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, dateAxis0, dateAxis0, xYAreaRenderer2_0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      xYPlot0.setOrientation(plotOrientation0);
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      Class<DefaultPieDataset> class0 = DefaultPieDataset.class;
      TimeZone timeZone0 = TimeZone.getDefault();
      RegularTimePeriod.createInstance(class0, dateAxis0.DEFAULT_ANCHOR_DATE, timeZone0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYAreaRenderer2_0.DEFAULT_SHAPE, xYAreaRenderer2_0.DEFAULT_STROKE, dateAxis0.DEFAULT_TICK_MARK_PAINT, xYPlot0.DEFAULT_GRIDLINE_PAINT);
      xYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      IntervalMarker intervalMarker0 = null;
//      try {
        intervalMarker0 = new IntervalMarker(485.079688, 500, dateAxis0.DEFAULT_AXIS_LINE_PAINT, xYAreaRenderer2_0.DEFAULT_OUTLINE_STROKE, dateAxis0.DEFAULT_AXIS_LINE_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE, 10);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'alpha' value must be in the range 0.0f to 1.0f
//         //
//         verifyException("org.jfree.chart.plot.Marker", e);
//      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation1);
      combinedDomainXYPlot0.setRangeCrosshairPaint(numberAxis0.DEFAULT_TICK_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "t22;";
      stringArray0[2] = "";
      stringArray0[3] = "(";
      SymbolAxis symbolAxis0 = new SymbolAxis("(", stringArray0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(symbolAxis0);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      symbolAxis0.setUpperBound((-1862.1987579));
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      combinedRangeXYPlot0.setRenderer(500, (XYItemRenderer) vectorRenderer0);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, numberAxis3D0, (ValueAxis) null, defaultXYItemRenderer0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      defaultXYItemRenderer0.setSeriesShapesFilled(848, true);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      JFreeChart jFreeChart0 = new JFreeChart("C\u0001RGIjs", xYPlot0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeGridlineStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = (ValueAxis) numberAxis3D0;
      valueAxisArray0[2] = (ValueAxis) numberAxis3D0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      DateAxis dateAxis0 = new DateAxis();
      Locale locale0 = Locale.ITALY;
      NumberFormat.getCurrencyInstance(locale0);
      NumberFormat.getIntegerInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeGridlineStroke(xYAreaRenderer2_0.DEFAULT_STROKE);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = (ValueAxis) dateAxis0;
      valueAxisArray0[1] = (ValueAxis) dateAxis0;
      valueAxisArray0[2] = (ValueAxis) dateAxis0;
      valueAxisArray0[3] = (ValueAxis) dateAxis0;
      valueAxisArray0[4] = (ValueAxis) dateAxis0;
      valueAxisArray0[5] = (ValueAxis) dateAxis0;
      valueAxisArray0[6] = (ValueAxis) dateAxis0;
      valueAxisArray0[7] = (ValueAxis) dateAxis0;
      combinedDomainXYPlot1.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (double) defaultXYItemRenderer0.ZERO, (double) defaultXYItemRenderer0.ZERO);
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYTextAnnotation0.setRotationAngle(8.11813672817297);
      combinedRangeXYPlot0.setDomainGridlineStroke(defaultXYItemRenderer0.DEFAULT_STROKE);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedRangeXYPlot0.getRangeZeroBaselineStroke();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberAxis3D0, true);
      combinedRangeXYPlot1.rendererChanged(rendererChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      xYTextAnnotation0.setRotationAngle(8.11813672817297);
      combinedRangeXYPlot0.setDomainGridlineStroke(defaultXYItemRenderer0.DEFAULT_STROKE);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      XYPlot xYPlot0 = new XYPlot();
      combinedRangeXYPlot1.add(xYPlot0, 10);
      combinedRangeXYPlot0.getAnnotations();
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      combinedRangeXYPlot1.isDomainCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      defaultXYItemRenderer0.setBaseShapesVisible(true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.118579014550992, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      valueMarker0.setLabelOffsetType(lengthAdjustmentType0);
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, false);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(defaultXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      combinedRangeXYPlot0.clearRangeAxes();
      combinedRangeXYPlot0.configureRangeAxes();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Color color0 = Color.pink;
      RingPlot ringPlot0 = new RingPlot();
      Stroke stroke0 = ringPlot0.getSeparatorStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(1445, 5000000.0, color0, stroke0, ringPlot0.DEFAULT_BACKGROUND_PAINT, ringPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.addDomainMarker(3, (Marker) intervalMarker0, layer0, false);
      combinedDomainXYPlot0.getRangeAxis();
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(2.0F, false, boxAndWhiskerXYToolTipGenerator0);
      candlestickRenderer0.getSeriesStroke(1);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeCrosshairStroke((Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBoxAndWhiskerRenderer0.ZERO, (-500.7508683220033));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeCrosshairStroke((Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setRangeAxisLocation(39, axisLocation0, false);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, true, true);
      JFreeChart jFreeChart1 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart1, 300, 10, (-69), 10, 476, 2137722358, true, true, false, false, true, true);
      Rectangle rectangle0 = chartPanel1.getBounds();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.drawVerticalLine((Graphics2D) null, rectangle0, 0.0, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, categoryAxis0.DEFAULT_AXIS_LINE_PAINT);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      ValueMarker valueMarker0 = new ValueMarker(3, xYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      valueMarker0.setLabelFont(numberAxis3D0.DEFAULT_AXIS_LABEL_FONT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(valueMarker0);
      thermometerPlot0.markerChanged(markerChangeEvent0);
      xYPlot0.setRangeCrosshairValue((double) 10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      xYPlot0.handleClick(0, 10, plotRenderingInfo1);
      combinedDomainXYPlot0.isDomainPannable();
      xYPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      ValueAxis valueAxis0 = null;
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 21, (-509), 3379, 21, 563, true, false, false, false, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      jFreeChart0.createBufferedImage(10, 10, 32.31, (double) 1.0F, chartRenderingInfo0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainAxes((ValueAxis[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      XYPlot xYPlot1 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("?fEF", xYPlot1);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart1 = new JFreeChart("", combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, true, true, false, false, true);
      Rectangle rectangle0 = chartPanel0.getBounds();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawVerticalLine(graphics2D0, rectangle0, 10.0, highLowRenderer0.DEFAULT_STROKE, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      SeriesRenderingOrder seriesRenderingOrder1 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder1);
      Boolean boolean0 = new Boolean(false);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot)combinedRangeXYPlot0.clone();
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      GridBagLayout gridBagLayout1 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      combinedRangeXYPlot0.zoomRangeAxes((-15.0), plotRenderingInfo0, (Point2D) point0);
      combinedRangeXYPlot1.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      xYTextAnnotation0.setRotationAngle(10.0);
      combinedRangeXYPlot0.setDomainGridlineStroke(defaultXYItemRenderer0.DEFAULT_STROKE);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      combinedRangeXYPlot0.getAnnotations();
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      combinedRangeXYPlot1.isDomainCrosshairLockedOnData();
      xYPlot0.getLegendItems();
      combinedRangeXYPlot1.getRangeAxisEdge();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Float point2D_Float0 = new Point2D.Float(0.0F, 1.0F);
      combinedRangeXYPlot1.zoomDomainAxes((-1287.980253793), plotRenderingInfo0, (Point2D) point2D_Float0, false);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) intervalMarker0, layer0, false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      combinedDomainXYPlot0.clearSelection();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.zoomDomainAxes(2029.0, plotRenderingInfo0, (Point2D) null, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      ValueMarker valueMarker0 = new ValueMarker(3, xYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      valueMarker0.setLabelFont(numberAxis3D0.DEFAULT_AXIS_LABEL_FONT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      xYPlot0.setRangeCrosshairValue((double) 10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      xYPlot0.handleClick(0, 10, plotRenderingInfo1);
      combinedDomainXYPlot0.isDomainPannable();
      combinedRangeXYPlot0.getRangeGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator(dateFormat0, decimalFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator(") should be in the range 0 to 3.", dateFormat0, decimalFormat0);
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(500, boxAndWhiskerXYToolTipGenerator0, standardXYURLGenerator0);
      ArrayList<XYAreaRenderer> arrayList1 = new ArrayList<XYAreaRenderer>();
      thermometerPlot0.getRangeAxis();
      arrayList1.add((XYAreaRenderer) stackedXYAreaRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null, arrayList1);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset(1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Index 1 out of bounds.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      XYPlot xYPlot1 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      combinedRangeXYPlot0.clearDomainMarkers(2);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setFrameFromDiagonal((double) 10, (double) xYBoxAndWhiskerRenderer0.ZERO, 432.83, 2.5E9);
      Point point0 = new Point(423, 71);
      point0.setLocation((double) 0, (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(5259, 423, 10);
      bufferedImage0.createGraphics();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, thermometerPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, true, true);
      Rectangle rectangle0 = chartPanel0.getBounds();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.drawVerticalLine(graphics2D0, rectangle0, 1, xYPlot1.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      SeriesRenderingOrder seriesRenderingOrder0 = xYPlot1.getSeriesRenderingOrder();
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, false);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeXYPlot0.zoomRangeAxes((double) 0, plotRenderingInfo0, (Point2D) point0);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.zoomRangeAxes(0.05, (-73.88608302520596), plotRenderingInfo0, (Point2D) point0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Range(double, double): require lower (0.052500000000000005) <= upper (-77.58038717646626).
//         //
//         verifyException("org.jfree.data.Range", e);
//      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 669.0, 1.0F, (-1465.076474038));
      xYPointerAnnotation0.setRotationAngle((-1465.076474038));
      combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYPointerAnnotation0, true);
      combinedRangeXYPlot0.clone();
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      GridBagLayout gridBagLayout1 = new GridBagLayout();
      Point point0 = gridBagLayout1.getLayoutOrigin();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.zoomRangeAxes(10.0, (-30.0), plotRenderingInfo0, (Point2D) point0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Range(double, double): require lower (10.5) <= upper (-31.5).
//         //
//         verifyException("org.jfree.data.Range", e);
//      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Locale locale0 = Locale.TAIWAN;
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      MockDateFormat.getDateTimeInstance();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(500);
      candlestickRenderer0.getBaseURLGenerator();
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setRangeAxis(500, (ValueAxis) periodAxis0, true);
      ValueMarker valueMarker0 = new ValueMarker((double) candlestickRenderer0.ZERO, periodAxis0.DEFAULT_AXIS_LABEL_PAINT, periodAxis0.DEFAULT_AXIS_LINE_STROKE);
      valueMarker0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
      DecimalFormat decimalFormat1 = new DecimalFormat();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      combinedDomainXYPlot0.setRangeCrosshairValue((double) 500);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartRenderingInfo0.getPlotInfo();
      xYPlot0.handleClick((-3363), 4, plotRenderingInfo0);
      combinedDomainXYPlot0.isDomainPannable();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, false);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(defaultXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      combinedRangeXYPlot0.clearRangeAxes();
      combinedRangeXYPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainMarkers();
      PolarPlot polarPlot0 = new PolarPlot();
      polarPlot0.getRadiusGridlinePaint();
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(color0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot1.addRangeMarker(3, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot1.removeRangeMarker(10, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot1.clearRangeAxes();
      combinedRangeXYPlot1.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 669.0, 1.0F, (-1465.076474038));
      xYPointerAnnotation0.setRotationAngle((-1465.076474038));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(6.0, "");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.addDomainMarker((Marker) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'marker' not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(4, layer0);
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (double) 1.0F;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYPolygonAnnotation0);
      combinedDomainXYPlot0.mapDatasetToDomainAxis(9999, 500);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      DateAxis dateAxis0 = new DateAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.05);
      Locale locale0 = Locale.ITALY;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      NumberFormat numberFormat1 = NumberFormat.getIntegerInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat1, numberFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      standardXYURLGenerator0.equals(cyclicNumberAxis0);
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, dateAxis0, cyclicNumberAxis0, xYAreaRenderer2_0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      xYPlot0.setOrientation(plotOrientation0);
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      xYPlot0.setRangeCrosshairVisible(false);
      ValueMarker valueMarker0 = new ValueMarker(2.5E-7, dateAxis0.DEFAULT_TICK_LABEL_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.getRangeAxisIndex(dateAxis0);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator(dateFormat0, decimalFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(274, highLowItemLabelGenerator0, standardXYURLGenerator0);
      ArrayList<XYAreaRenderer> arrayList1 = new ArrayList<XYAreaRenderer>();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
      combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
      combinedDomainXYPlot0.getRangeAxisForDataset(0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeDomainMarker(1, (Marker) null, layer0);
      combinedRangeXYPlot0.setAxisOffset(combinedDomainXYPlot0.DEFAULT_INSETS);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, Double.NaN);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1952257860), "e7nGx[Bv");
      DateAxis dateAxis0 = new DateAxis("e7nGx[Bv", simpleTimeZone0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.isDomainCrosshairVisible();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedRangeXYPlot0.indexOf(vectorSeriesCollection0);
      combinedRangeXYPlot0.clone();
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      combinedRangeXYPlot0.zoomRangeAxes(1148.05256814474, plotRenderingInfo0, (Point2D) point0);
      combinedRangeXYPlot0.zoomRangeAxes((double) 0.0F, Double.NaN, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      AxisLocation axisLocation1 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.clearDomainAxes();
      Stack<NumberAxis> stack0 = new Stack<NumberAxis>();
      CategoryMarker categoryMarker0 = new CategoryMarker(1);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeDomainMarker(499, (Marker) categoryMarker0, layer0);
      combinedDomainXYPlot0.setAxisOffset(valueAxis0.DEFAULT_AXIS_LABEL_INSETS);
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(true);
      combinedRangeXYPlot0.indexOf(simpleHistogramDataset0);
      combinedDomainXYPlot0.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      AxisLocation axisLocation1 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.clearDomainAxes();
      Stack<NumberAxis> stack0 = new Stack<NumberAxis>();
      CategoryMarker categoryMarker0 = new CategoryMarker(1);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 2201, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart1 = new JFreeChart("7_@s2+i<u>(%87s>yk\"", thermometerPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, true, true, true);
      Rectangle rectangle0 = chartPanel0.getBounds();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.drawVerticalLine(graphics2D0, rectangle0, 10, xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedDomainXYPlot1.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot1.isDomainCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      ValueMarker valueMarker0 = new ValueMarker(10, categoryAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      valueMarker0.setLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeXYPlot0.setRangeCrosshairValue(Double.NaN);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.handleClick(10, 4670, plotRenderingInfo0);
      combinedDomainXYPlot0.isDomainPannable();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(xYDotRenderer0);
      xYDotRenderer0.notifyListeners(rendererChangeEvent0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeCrosshairPaint(xYDotRenderer0.DEFAULT_PAINT);
      AxisLocation axisLocation0 = combinedDomainXYPlot1.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(10, axisLocation0, false);
      combinedDomainXYPlot0.setRangeCrosshairValue((double) 1.0F);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      combinedRangeXYPlot0.setRangeAxis((ValueAxis) periodAxis0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setWeight(2928);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(5273);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedRangeXYPlot0.equals(axisLocation0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setSeriesShapesFilled(15, false);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeAxisLocation((-1387));
      combinedDomainXYPlot0.setQuadrantPaint(0, defaultXYItemRenderer0.DEFAULT_PAINT);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2150.51361568021));
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clone();
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Color color0 = new Color(10);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot2.setDomainZeroBaselinePaint(cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      combinedRangeXYPlot1.clearRangeAxes();
      combinedRangeXYPlot0.getQuadrantOrigin();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker((-3779.414), combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker((-110), (Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYBoxAndWhiskerRenderer0);
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      ValueMarker valueMarker0 = new ValueMarker(3, xYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      valueMarker0.setLabelFont(numberAxis3D0.DEFAULT_AXIS_LABEL_FONT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      xYPlot0.setRangeCrosshairValue((double) 10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      xYPlot0.handleClick(0, 4670, plotRenderingInfo1);
      combinedDomainXYPlot0.isDomainPannable();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator(dateFormat0, decimalFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(475, highLowItemLabelGenerator0, standardXYURLGenerator0);
      arrayList0.add((XYAreaRenderer) stackedXYAreaRenderer0);
      combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset((-878));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Index -878 out of bounds.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setFrameFromDiagonal((-901.38436), (double) 10, 2328.4556562521, 0.0025);
      Point point0 = new Point((-902), (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeAxisLocation(603);
      combinedDomainXYPlot0.setQuadrantPaint(0, categoryAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedDomainXYPlot0.drawDomainTickBands(graphics2D0, defaultCaret0, linkedList0);
      combinedDomainXYPlot0.clearSelection();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)FastScatterPlot.DEFAULT_GRIDLINE_STROKE;
      combinedDomainXYPlot0.setDomainGridlineStroke(basicStroke0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      int int0 = 274;
      MockDateFormat.getInstance();
      Layer layer1 = Layer.BACKGROUND;
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.addDomainMarker(274, (Marker) null, layer0, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'marker' not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlineStroke(periodAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator(dateFormat0, decimalFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(199, highLowItemLabelGenerator0, standardXYURLGenerator0);
      arrayList0.add((XYAreaRenderer) stackedXYAreaRenderer0);
      combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setQuadrantPaint(3, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.75, 2.0, stackedXYAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      combinedDomainXYPlot1.addRangeMarker(10, (Marker) intervalMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2150.51361568021));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(1445, (Marker) intervalMarker0, layer0, false);
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.setRangeCrosshairStroke(valueAxis0.DEFAULT_TICK_MARK_STROKE);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setFrameFromDiagonal((-901.38436), (double) 10, 2328.4556562521, 0.0025);
      Point point0 = new Point((-902), (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      NumberAxis3D numberAxis3D0 = linkedList0.poll();
      xYPlot0.drawRangeTickBands(graphics2D0, defaultCaret0, linkedList0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, defaultCaret0);
      combinedDomainXYPlot0.clearSelection();
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(numberAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      // Undeclared exception!
//      try { 
        xYPlot0.setRangeAxes((ValueAxis[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setFrameFromDiagonal((-901.38436), (double) 10, 2328.4556562521, 0.0025);
      Point point0 = new Point((-902), (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      bufferedImage0.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearRangeAxes();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainZeroBaselinePaint((Paint) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2150.51361568021));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(1445, (Marker) intervalMarker0, layer0, true);
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.setRangeCrosshairStroke(valueAxis0.DEFAULT_TICK_MARK_STROKE);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      DateAxis dateAxis0 = new DateAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.05);
      Locale locale0 = Locale.ITALY;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      NumberFormat numberFormat1 = NumberFormat.getIntegerInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat1, numberFormat0);
      cyclicNumberAxis0.equals("");
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      standardXYURLGenerator0.equals(cyclicNumberAxis0);
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.configureDomainAxes();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(0.0F, cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT, combinedRangeXYPlot1.DEFAULT_CROSSHAIR_STROKE);
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("Indices must be Integer instances.", 931.2360639070546, 1.0);
      xYTextAnnotation0.setRotationAngle(10.0);
      combinedRangeXYPlot1.setDomainGridlineStroke(dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      combinedRangeXYPlot0.getAnnotations();
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      combinedRangeXYPlot0.getLegendItems();
      combinedRangeXYPlot2.isRangeZoomable();
      combinedRangeXYPlot1.isDomainZoomable();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator(dateFormat0, decimalFormat0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(dateFormat0);
      combinedDomainXYPlot0.rendererChanged(rendererChangeEvent0);
      combinedDomainXYPlot0.setDataset(10, (XYDataset) matrixSeriesCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedRangeXYPlot0.clearRangeAxes();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot2.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.setDomainMinorGridlineStroke(defaultXYItemRenderer0.DEFAULT_STROKE);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      defaultXYItemRenderer0.setSeriesShapesFilled(10, false);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(0);
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedDomainXYPlot0.setRangeAxisLocation(10, axisLocation1);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes((-3221), linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires 'index' >= 0.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainXYPlot0.setRangeAxisLocation(0, axisLocation0, true);
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("+J 2qH;[:Rx@5'", stringArray0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("+J 2qH;[:Rx@5'");
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      LogAxis logAxis0 = new LogAxis("+J 2qH;[:Rx@5'");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(symbolAxis0);
      combinedDomainXYPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Locale locale0 = Locale.TAIWAN;
      locale0.getScript();
      NumberFormat.getPercentInstance(locale0);
      MockDateFormat.getDateTimeInstance();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(500);
      candlestickRenderer0.getBaseURLGenerator();
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setRangeAxis(500, (ValueAxis) periodAxis0, true);
      xYPlot0.isDomainPannable();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", periodAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1716), 10, 500, (-1716), 995, 10, true, true, true, true, true, false, true);
      chartPanel0.getChartRenderingInfo();
      combinedDomainXYPlot0.setQuadrantPaint(1, xYPlot0.DEFAULT_GRIDLINE_PAINT);
      NumberAxis numberAxis0 = new NumberAxis("Null 'order' argument.");
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      XYPlot xYPlot1 = new XYPlot(jDBCXYDataset0, numberAxis0, numberAxis0, xYSplineRenderer0);
      xYPlot0.isDomainPannable();
      SeriesRenderingOrder seriesRenderingOrder1 = SeriesRenderingOrder.REVERSE;
      SeriesRenderingOrder seriesRenderingOrder2 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder2);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      xYPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)FastScatterPlot.DEFAULT_GRIDLINE_STROKE;
      combinedDomainXYPlot0.setDomainGridlineStroke(basicStroke0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator(dateFormat0, decimalFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(274, highLowItemLabelGenerator0, standardXYURLGenerator0);
      arrayList0.add((XYAreaRenderer) stackedXYAreaRenderer0);
      combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setQuadrantPaint(1, combinedDomainXYPlot1.DEFAULT_BACKGROUND_PAINT);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeAxisLocation(459, axisLocation0, true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "+J 2qH;[:Rx@5'";
      stringArray0[1] = "+J 2qH;[:Rx@5'";
      stringArray0[2] = "+J 2qH;[:Rx@5'";
      stringArray0[3] = "+J 2qH;[:Rx@5'";
      stringArray0[4] = "+J 2qH;[:Rx@5'";
      stringArray0[5] = "+J 2qH;[:Rx@5'";
      stringArray0[6] = "+J 2qH;[:Rx@5'";
      SymbolAxis symbolAxis0 = new SymbolAxis("+J 2qH;[:Rx@5'", stringArray0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("~?]<K7?Lc");
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainAxes((ValueAxis[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Locale locale0 = new Locale("");
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(500);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setRangeAxis(500, (ValueAxis) periodAxis0, false);
      xYPlot0.isSubplot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", periodAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
      xYPlot0.setDomainMinorGridlinesVisible(true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 500, 10, 680, 10, true, true, true, true, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      // Undeclared exception!
//      try { 
        jFreeChart0.createBufferedImage(680, 15, chartRenderingInfo0);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // / by zero
//         //
//         verifyException("org.jfree.chart.axis.PeriodAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Locale locale0 = Locale.TAIWAN;
      NumberFormat.getPercentInstance(locale0);
      MockDateFormat.getDateTimeInstance();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(500);
      candlestickRenderer0.getBaseURLGenerator();
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setRangeAxis(500, (ValueAxis) periodAxis0, true);
      xYPlot0.isDomainPannable();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", periodAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1716), 10, 500, (-1716), 995, 10, true, true, true, true, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      // Undeclared exception!
//      try { 
        jFreeChart0.createBufferedImage(680, 59, chartRenderingInfo0);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // / by zero
//         //
//         verifyException("org.jfree.chart.axis.PeriodAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      XYPlot xYPlot1 = new XYPlot();
      DateAxis dateAxis0 = new DateAxis("");
      xYPlot1.setRangeAxis(10, (ValueAxis) dateAxis0, true);
      xYPlot1.isDomainPannable();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(dateAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", dateAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1982), 1666, 1659, 10, 1908, 10, false, false, true, false, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      jFreeChart0.createBufferedImage(995, 10, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setSeriesRenderingOrder((SeriesRenderingOrder) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'order' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBoxAndWhiskerRenderer0.ZERO, (-500.7508683220033));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, (ValueAxis) null, xYBoxAndWhiskerRenderer0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, 0);
      xYPlot0.panDomainAxes(1.0F, (PlotRenderingInfo) null, point0);
      combinedRangeXYPlot0.getOrientation();
      xYPlot0.getQuadrantPaint(2);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.removeDomainMarker((-3039), (Marker) intervalMarker0, layer0);
      xYPlot0.setAxisOffset(categoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAutoRange(false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      BasicStroke basicStroke0 = (BasicStroke)Plot.DEFAULT_OUTLINE_STROKE;
      CategoryMarker categoryMarker0 = new CategoryMarker(true, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, basicStroke0, numberAxis0.DEFAULT_TICK_LABEL_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, 0.9F);
      LengthAdjustmentType lengthAdjustmentType0 = categoryMarker0.getLabelOffsetType();
      categoryMarker0.setLabelOffsetType(lengthAdjustmentType0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addRangeMarker((-1749), (Marker) categoryMarker0, layer0, true);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      XYPlot xYPlot0 = jFreeChart0.getXYPlot();
      xYPlot0.isRangeCrosshairVisible();
      xYPlot0.getDomainTickBandPaint();
      combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.getPlotType();
      combinedDomainXYPlot0.getDomainGridlineStroke();
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      int int0 = 2419;
      combinedDomainXYPlot0.clearDomainMarkers(2419);
      xYPlot0.isDomainCrosshairVisible();
      xYPlot0.getDomainMinorGridlineStroke();
      combinedDomainXYPlot0.clearDomainMarkers(10);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
//      try { 
        jFreeChart0.createBufferedImage((-3887), 10, 2419, chartRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown image type 2419
//         //
//         verifyException("java.awt.image.BufferedImage", e);
//      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1687.43856212223), 1.0F);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      AxisLocation axisLocation1 = combinedRangeXYPlot0.getRangeAxisLocation();
      axisLocation1.getOpposite();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((AxisLocation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'location' for index 0 not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[3];
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) xYLine3DRenderer0;
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      highLowRenderer0.lookupSeriesShape(10);
      xYItemRendererArray0[2] = (XYItemRenderer) highLowRenderer0;
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
      LogAxis logAxis0 = new LogAxis("]zf\"_Y*.pFI");
      combinedRangeXYPlot0.setDomainAxis((ValueAxis) logAxis0);
      combinedRangeXYPlot0.clearRangeAxes();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      combinedRangeXYPlot0.setRangeAxis((ValueAxis) logarithmicAxis0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_TICK_MARK_STROKE;
      combinedRangeXYPlot0.setBackgroundAlpha(536.3F);
      combinedRangeXYPlot0.setDomainMinorGridlineStroke(basicStroke0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      linkedList0.offerFirst(defaultTableXYDataset0);
      TimeZone timeZone0 = TimeZone.getTimeZone("<%T.^<qM");
      Locale locale0 = Locale.JAPAN;
      DateAxis dateAxis0 = new DateAxis("<%T.^<qM", timeZone0, locale0);
      combinedDomainXYPlot0.setRangeAxis(369, (ValueAxis) dateAxis0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes(1411, linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Indices must be Integer instances.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      bufferedImage0.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      NumberAxis3D numberAxis3D0 = linkedList0.poll();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearSelection();
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(numberAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      xYPlot0.isRangeZeroBaselineVisible();
      combinedDomainXYPlot0.getRangeAxisCount();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)FastScatterPlot.DEFAULT_GRIDLINE_STROKE;
      combinedDomainXYPlot0.setDomainGridlineStroke(basicStroke0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = null;
      ArrayList<XYAreaRenderer> arrayList0 = new ArrayList<XYAreaRenderer>();
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator(dateFormat0, decimalFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(274, highLowItemLabelGenerator0, standardXYURLGenerator0);
      arrayList0.add((XYAreaRenderer) stackedXYAreaRenderer0);
      combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset(1898);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Index 1898 out of bounds.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      point0.x = 863;
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      NumberAxis3D numberAxis3D0 = linkedList0.poll();
      xYPlot0.drawRangeTickBands(graphics2D0, defaultCaret0, linkedList0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearSelection();
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(numberAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      xYPlot0.getDomainGridlinePaint();
      xYPlot0.getDomainAxisCount();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1687.43856212223), 1.0F);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      double[] doubleArray0 = new double[0];
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot1.indexOf(yIntervalSeriesCollection0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addRangeMarker(10, (Marker) intervalMarker0, layer0, true);
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot1.getIndexOf(xYBoxAndWhiskerRenderer0);
      combinedDomainXYPlot0.setDomainCrosshairLockedOnData(true);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      NumberAxis3D numberAxis3D0 = linkedList0.poll();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairLockedOnData(false);
      combinedDomainXYPlot0.clearSelection();
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(numberAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      highLowRenderer0.getOpenTickPaint();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainGridlinePaint((Paint) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setFrameFromDiagonal((-901.38436), (double) 10, (double) (-902), 0.0025);
      Point point0 = new Point((-902), (-902));
      point0.setLocation(4274, 4274);
      point0.setLocation(0.0025, (double) 902);
      point0.setLocation((-3794.3387017), (double) 1.0F);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 5.0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(2102, (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.setRangeCrosshairStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      xYPlot0.indexOf(matrixSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.05, 0.0F);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, periodAxis0, periodAxis0, defaultXYItemRenderer0);
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker((double) defaultXYItemRenderer0.ZERO, defaultXYItemRenderer0.DEFAULT_OUTLINE_PAINT, periodAxis0.DEFAULT_TICK_MARK_STROKE);
      xYPlot0.clearRangeMarkers(65);
      numberAxis3D0.setAutoRangeStickyZero(true);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, xYPlot0.DEFAULT_OUTLINE_STROKE);
      categoryMarker0.setLabel("r}45 ");
      Color.getHSBColor(339.07F, 500, 10);
      Crosshair crosshair0 = new Crosshair(0.0F, xYPlot0.DEFAULT_OUTLINE_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      categoryMarker0.setLabelAnchor(rectangleAnchor0);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      xYPlot0.indexOf(jDBCXYDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setQuadrantPaint((-806), combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The index value (-806) should be in the range 0 to 3.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-822.19219488), (-822.19219488));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes((-7), linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires 'index' >= 0.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, (ValueAxis) null, xYDotRenderer0);
      XYPlot xYPlot1 = new XYPlot();
      xYPlot1.setDomainAxis((ValueAxis) null);
      xYPlot1.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point((-1353), 10);
      point0.setLocation(1.0, (-2384.03647));
      BufferedImage bufferedImage0 = new BufferedImage(902, 499, 1);
      bufferedImage0.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      linkedList0.poll();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYPlot0.drawRangeTickBands(graphics2D0, defaultCaret0, linkedList0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearSelection();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getSeriesFillPaint(2367);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeMinorGridlinePaint((Paint) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setTickMarkStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area();
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge(10);
      numberAxis3D0.valueToJava2D((-1221.13658), rectangle2D0, rectangleEdge0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberAxis3D0, true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 43);
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.addTileObserver(tileObserver0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) defaultXYItemRenderer0, true);
      BufferedImage bufferedImage1 = new BufferedImage(500, 43, 10);
      Graphics2D graphics2D1 = bufferedImage1.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      linkedList0.poll();
      xYPlot0.drawRangeTickBands(graphics2D1, rectangle2D0, linkedList0);
      combinedDomainXYPlot0.clearSelection();
      xYPlot0.setRangeMinorGridlinePaint(numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.LocalizationBundle");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("p{%eMD6K~#xxmHQ", combinedDomainXYPlot0);
      Layer layer0 = null;
      combinedDomainXYPlot1.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(true);
      jFreeChart0.getRenderingHints();
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      valueAxisArray0[0] = (ValueAxis) logAxis0;
      combinedDomainXYPlot1.setDomainAxes(valueAxisArray0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Marker marker0 = null;
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.addRangeMarker(394, (Marker) null, (Layer) null, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      LogAxis logAxis0 = new LogAxis("d7)");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot2.getRangeAxis(500);
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 500, false);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      combinedRangeXYPlot0.setRangeCrosshairValue(953.1147787366);
      combinedRangeXYPlot0.setRangeCrosshairValue(953.1147787366, false);
      combinedRangeXYPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_TICK_MARK_STROKE;
      xYPlot0.setBackgroundAlpha(1.0F);
      xYPlot0.setDomainMinorGridlineStroke(basicStroke0);
      xYPlot0.setRangeGridlineStroke(basicStroke0);
      xYPlot0.setRangeMinorGridlineStroke(basicStroke0);
      xYPlot0.clearDomainAxes();
      xYPlot0.getDomainMinorGridlineStroke();
      xYPlot0.canSelectByPoint();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      axisLocation0.getOpposite();
      xYPlot0.setRangeAxisLocation(axisLocation0, true);
      AxisLocation axisLocation1 = xYPlot0.getRangeAxisLocation();
      int int0 = 11;
      xYPlot0.setRangeAxisLocation(11, axisLocation1, true);
      int int1 = 35;
      BufferedImage bufferedImage0 = null;
//      try {
        bufferedImage0 = new BufferedImage(10, 35, 2968);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown image type 2968
//         //
//         verifyException("java.awt.image.BufferedImage", e);
//      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setBackgroundImageAlignment((-652));
      XYPlot xYPlot0 = new XYPlot();
      // Undeclared exception!
//      try { 
        xYPlot0.setQuadrantOrigin((Point2D) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'origin' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setRenderers((XYItemRenderer[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setRangeAxisLocation(0, axisLocation0, false);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", combinedDomainXYPlot0);
      combinedDomainXYPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainXYPlot0.configureDomainAxes();
      combinedDomainXYPlot0.canSelectByRegion();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      String string0 = "CategoryAnchor.START";
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("CategoryAnchor.START", 811.0, 15.0, (-2419.019244369187));
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYPointerAnnotation0, false);
      BufferedImage bufferedImage0 = null;
//      try {
        bufferedImage0 = new BufferedImage(500, 10, 79);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown image type 79
//         //
//         verifyException("java.awt.image.BufferedImage", e);
//      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.LocalizationBundle");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot1 = new ThermometerPlot(defaultValueDataset0);
      thermometerPlot1.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation1);
      combinedDomainXYPlot1.clearDomainAxes();
      Stack<NumberAxis> stack0 = new Stack<NumberAxis>();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.mapDatasetToRangeAxes(199, stack0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Empty list not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.getOrientation();
      combinedRangeXYPlot0.getSeriesRenderingOrder();
      XYPlot xYPlot0 = new XYPlot();
      // Undeclared exception!
//      try { 
        xYPlot0.setDomainAxis((-751), (ValueAxis) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainCrosshairValue(0.0, true);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      Integer integer0 = new Integer(10);
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation0, true);
      combinedDomainXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ValueMarker valueMarker0 = new ValueMarker((-675));
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker((-675), (Marker) valueMarker0, layer0, true);
      minMaxCategoryRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedRangeXYPlot0.setRangeCrosshairStroke(stroke0);
      combinedRangeXYPlot0.isRangePannable();
      combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setRangeAxisLocation(0, axisLocation0, true);
      combinedDomainXYPlot0.getDataset(479);
      combinedDomainXYPlot0.getPlotType();
      combinedDomainXYPlot0.getDatasetRenderingOrder();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis("Combined_Domain_XYPlot");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      SystemColor systemColor0 = SystemColor.info;
      ValueMarker valueMarker0 = new ValueMarker(669.0, systemColor0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker(479, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(58, (Marker) valueMarker0, layer0, false);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedDomainXYPlot1.indexOf(yIntervalSeriesCollection0);
      combinedRangeXYPlot0.clone();
      combinedDomainXYPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1687.43856212223), 1.0F);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      double[] doubleArray0 = new double[0];
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedRangeXYPlot0.getDomainZeroBaselineStroke();
      combinedRangeXYPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, false);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.indexOf(yIntervalSeriesCollection0);
      combinedRangeXYPlot0.clone();
      xYPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      xYPlot0.panDomainAxes(2.0F, (PlotRenderingInfo) null, point0);
      xYPlot0.getOrientation();
      xYPlot0.getQuadrantPaint(0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.setRenderer(2386, (XYItemRenderer) null, true);
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      XYSeries xYSeries0 = new XYSeries(fixedMillisecond0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      Integer integer0 = new Integer((-4004));
      combinedDomainXYPlot0.setDomainAxisLocation(16, (AxisLocation) null, false);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(10);
      combinedDomainXYPlot0.setRenderer(7, (XYItemRenderer) xYBoxAndWhiskerRenderer0, false);
      combinedDomainXYPlot0.getDataset(16);
      combinedDomainXYPlot0.setRangeCrosshairLockedOnData(true);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      UnitType unitType0 = UnitType.ABSOLUTE;
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      boolean boolean0 = true;
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, (-2625.778386896), 482.40594, (-2625.778386896), 10);
      combinedDomainXYPlot0.setInsets(rectangleInsets0);
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      combinedDomainXYPlot1.getRendererForDataset(histogramDataset0);
      Color color0 = new Color((-1));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeAxes();
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[6];
      // Undeclared exception!
//      try { 
        ICC_Profile.getInstance(6);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown color space
//         //
//         verifyException("java.awt.color.ICC_Profile", e);
//      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setRangeAxisLocation(0, axisLocation0, true);
      combinedDomainXYPlot0.getDataset(479);
      combinedDomainXYPlot0.getPlotType();
      DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainXYPlot0.getDatasetRenderingOrder();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis("Combined_Domain_XYPlot");
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot1.getFixedRangeAxisSpace();
      combinedDomainXYPlot1.setFixedDomainAxisSpace((AxisSpace) null, false);
      combinedDomainXYPlot2.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainXYPlot0.getDataset(3208);
      Vector<DefaultKeyedValues2DDataset> vector0 = new Vector<DefaultKeyedValues2DDataset>();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.mapDatasetToRangeAxes(10, linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Empty list not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.LocalizationBundle");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("p{%eMD6K~#xxmHQ", combinedDomainXYPlot0);
      combinedDomainXYPlot1.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(true);
      jFreeChart0.getRenderingHints();
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      valueAxisArray0[0] = (ValueAxis) logAxis0;
      combinedDomainXYPlot1.setDomainAxes(valueAxisArray0);
      LogAxis logAxis1 = new LogAxis("95uq[(&7K");
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(valueAxisArray0[0]);
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot1.getRangeAxis((-12));
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedRangeXYPlot0.setRangeCrosshairStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      XYSeries xYSeries0 = new XYSeries(fixedMillisecond0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1931.8447817924805, 1931.8447817924805);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      SystemColor systemColor0 = SystemColor.desktop;
      combinedDomainXYPlot0.setDomainMinorGridlinePaint(cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      ValueAxis[] valueAxisArray0 = new ValueAxis[9];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("dockE3#");
      valueAxisArray0[1] = (ValueAxis) numberAxis3D0;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[3] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[4] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[5] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[6] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[7] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[8] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      LogAxis logAxis0 = new LogAxis("dockE3#");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(valueAxisArray0[4]);
      combinedDomainXYPlot0.getRangeAxisIndex(valueAxisArray0[0]);
      combinedDomainXYPlot1.getRangeAxis(1898);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      xYPlot0.panDomainAxes(2.0F, (PlotRenderingInfo) null, point0);
      xYPlot0.getOrientation();
      xYPlot0.getQuadrantPaint(0);
      xYPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      fixedMillisecond0.getEnd();
      XYSeries xYSeries0 = new XYSeries(fixedMillisecond0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      String[] stringArray0 = new String[7];
      stringArray0[2] = "Y2B4G7MY=* //";
      stringArray0[3] = "dockE3#";
      stringArray0[4] = "dockE3#";
      stringArray0[5] = "dockE3#";
      stringArray0[6] = "dockE3#";
      SymbolAxis symbolAxis0 = new SymbolAxis("dockE3#", stringArray0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(stringArray0[0]);
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT, symbolAxis0.DEFAULT_GRID_BAND_PAINT, false);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainGridlinePaint(symbolAxis0.DEFAULT_GRID_BAND_PAINT);
      XYDifferenceRenderer xYDifferenceRenderer1 = new XYDifferenceRenderer();
      xYPlot0.getIndexOf(xYDifferenceRenderer1);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, Double.NaN);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainCrosshairStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.setRangePannable(true);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      GridBagLayout gridBagLayout1 = new GridBagLayout();
      Point point0 = gridBagLayout1.location(10, 10);
      combinedDomainXYPlot0.setQuadrantOrigin(point0);
      PeriodAxis periodAxis0 = new PeriodAxis("|ctb");
      combinedDomainXYPlot0.setDomainAxis((ValueAxis) periodAxis0);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("N", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, true, true, true);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(chartPanel0, 10, 200, (-1), (-851), 768, 6, true, 10, 0, (-1463));
      chartPanel0.getPopupLocation(mouseWheelEvent0);
      combinedDomainXYPlot0.zoomDomainAxes(2.5E8, (PlotRenderingInfo) null, (Point2D) null);
      combinedDomainXYPlot0.getDomainTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requie 'inIjex' >=0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(4, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis("Requie 'inIjex' >=0.");
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.getRangeAxisIndex(numberAxis3D0);
      DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainXYPlot2.getDatasetRenderingOrder();
      combinedDomainXYPlot1.setDatasetRenderingOrder(datasetRenderingOrder0);
      Vector<DefaultKeyedValues2DDataset> vector0 = new Vector<DefaultKeyedValues2DDataset>();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      Stack<YIntervalSeriesCollection> stack0 = new Stack<YIntervalSeriesCollection>();
      stack0.add((YIntervalSeriesCollection) null);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot3.mapDatasetToRangeAxes(10, stack0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Indices must be Integer instances.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      SystemColor systemColor0 = SystemColor.desktop;
      combinedDomainXYPlot0.setDomainMinorGridlinePaint(systemColor0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[2] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      LogAxis logAxis0 = new LogAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getRangeAxisIndex(logAxis0);
      combinedDomainXYPlot1.getRangeAxis((-1));
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      Layer layer1 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeMarkers(layer1);
      combinedDomainXYPlot0.setRangePannable(false);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      combinedDomainXYPlot0.clearRangeAxes();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getSeriesFillPaint((-818));
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainCrosshairPaint((Paint) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-308.7582927286148));
      candlestickRenderer0.getSeriesFillPaint(813);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setDomainCrosshairPaint((Paint) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("ReqZir 'index) >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(4, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis("ReqZir 'index) >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.getRangeAxisIndex(numberAxis3D0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 500;
      doubleArray0[1] = (double) 1.0F;
      doubleArray0[2] = (double) 10;
      doubleArray0[3] = (double) 1.0F;
      doubleArray0[4] = (double) 1.0F;
      gridBagLayout0.rowWeights = doubleArray0;
      Point point0 = gridBagLayout0.location(1176, 483);
      combinedDomainXYPlot2.setQuadrantOrigin(point0);
      combinedDomainXYPlot1.getRangeMinorGridlineStroke();
      combinedDomainXYPlot1.getRangeAxisEdge();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(4, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeGridlinePaint(combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot1.getRangeMarkers(layer1);
      combinedDomainXYPlot0.setRangePannable(false);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      combinedDomainXYPlot0.clearRangeAxes();
      combinedDomainXYPlot0.setDomainCrosshairPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getDomainCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(4, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeGridlinePaint(combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot1.getRangeMarkers(layer1);
      combinedDomainXYPlot0.setRangePannable(false);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      combinedDomainXYPlot0.clearRangeAxes();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes(0, (List) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 0.5235987755982988);
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      combinedDomainXYPlot0.setRangeGridlinesVisible(false);
      SystemColor systemColor0 = SystemColor.desktop;
      combinedDomainXYPlot0.setDomainMinorGridlinePaint(systemColor0);
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      combinedDomainXYPlot0.setRangeGridlinePaint(systemColor0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.setRangePannable(true);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      combinedDomainXYPlot0.clearRangeAxes();
      combinedDomainXYPlot0.setDomainCrosshairPaint(systemColor0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(systemColor0);
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setRangeAxisLocation(0, axisLocation0, true);
      combinedDomainXYPlot0.getDataset(479);
      combinedDomainXYPlot0.getPlotType();
      DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainXYPlot0.getDatasetRenderingOrder();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis("Combined_Domain_XYPlot");
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot2.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainXYPlot1.getSubplots();
      Vector<DefaultKeyedValues2DDataset> vector0 = new Vector<DefaultKeyedValues2DDataset>();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 2839.05873776);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot1.removeRangeMarker(10, (Marker) intervalMarker0, layer0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.mapDatasetToRangeAxes(10, linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Empty list not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      Integer integer0 = new Integer(10);
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation0, true);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(0, (XYItemRenderer) xYDotRenderer0, false);
      combinedDomainXYPlot0.getRangeMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(10);
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(simpleHistogramDataset0);
      Range range0 = ValueAxis.DEFAULT_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("", range0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(10);
      XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, moduloAxis0, moduloAxis0, cyclicXYItemRenderer0);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      xYPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      DateAxis dateAxis0 = new DateAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.05);
      Locale locale0 = Locale.ITALY;
      NumberFormat.getCurrencyInstance(locale0);
      NumberFormat.getIntegerInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      standardXYURLGenerator0.equals(cyclicNumberAxis0);
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, dateAxis0, cyclicNumberAxis0, xYAreaRenderer2_0);
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      xYPlot0.setRangeCrosshairVisible(false);
      ValueMarker valueMarker0 = new ValueMarker(2.5E-7, dateAxis0.DEFAULT_TICK_LABEL_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      valueMarker0.setLabelFont(dateAxis0.DEFAULT_TICK_LABEL_FONT);
      NumberFormat.getNumberInstance();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(10, 10, renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3, 10, chartRenderingInfo0);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      bufferedImage1.createGraphics();
      ScrollPane scrollPane0 = null;
//      try {
        scrollPane0 = new ScrollPane();
//        fail("Expecting exception: HeadlessException");
      
//      } catch(HeadlessException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.awt.GraphicsEnvironment", e);
//      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, true);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, xYPlot0.DEFAULT_OUTLINE_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0, layer0);
      categoryMarker0.setLabel("='dzOuzo[");
      Color color0 = Color.getHSBColor(17, 1775.2701F, 0.0F);
      Crosshair crosshair0 = new Crosshair(0.0, color0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      categoryMarker0.setLabelAnchor(rectangleAnchor0);
      defaultXYItemRenderer0.setAutoPopulateSeriesFillPaint(false);
      combinedRangeXYPlot0.removeDomainMarker(10, (Marker) categoryMarker0, layer0, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.indexOf(yIntervalSeriesCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setQuadrantPaint((-1), combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The index value (-1) should be in the range 0 to 3.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 0.5235987755982988);
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      Integer integer0 = new Integer(10);
      combinedDomainXYPlot0.setDomainAxisLocation(7, (AxisLocation) null, true);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(221, (XYItemRenderer) xYDotRenderer0, false);
      combinedDomainXYPlot0.getDataset(7);
      combinedDomainXYPlot0.setRangeCrosshairLockedOnData(false);
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.setRangeAxis(0, (ValueAxis) null, true);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, true);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, xYPlot0.DEFAULT_OUTLINE_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setLabel("='dzOuzo[");
      Color color0 = Color.getHSBColor(17, 1775.2701F, 0.0F);
      Crosshair crosshair0 = new Crosshair(0.0, color0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      categoryMarker0.setLabelAnchor(rectangleAnchor0);
      combinedRangeXYPlot0.removeDomainMarker(10, (Marker) categoryMarker0, layer0, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.indexOf(yIntervalSeriesCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setQuadrantPaint((-1), combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The index value (-1) should be in the range 0 to 3.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2150.51361568021), combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      combinedDomainXYPlot0.getRendererForDataset(histogramDataset0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DateTickMarkPosition.START";
      stringArray0[1] = "org.jfree.chart.util.PaintList";
      stringArray0[2] = "org.jfree.chart.util.PaintList";
      stringArray0[3] = "org.jfree.chart.util.PaintList";
      stringArray0[4] = "org.jfree.chart.util.PaintList";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.util.PaintList", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      valueAxisArray0[0] = (ValueAxis) symbolAxis0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      LogAxis logAxis0 = new LogAxis("");
      valueAxisArray0[1] = (ValueAxis) logAxis0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(509.0);
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(0.05, 1.0E-8, (String) null);
      valueAxisArray0[3] = (ValueAxis) cyclicNumberAxis1;
      DateAxis dateAxis0 = new DateAxis();
      valueAxisArray0[4] = (ValueAxis) dateAxis0;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1626.25702474009));
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      valueAxisArray0[5] = valueAxis0;
      Quarter quarter0 = new Quarter();
      RegularTimePeriod regularTimePeriod0 = quarter0.next();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
      JFreeChart jFreeChart0 = new JFreeChart("5i>_j", logAxis0.DEFAULT_AXIS_LABEL_FONT, thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Locale locale0 = chartPanel0.getLocale();
      PeriodAxis periodAxis1 = new PeriodAxis("", regularTimePeriod0, quarter0, timeZone0, locale0);
      valueAxisArray0[6] = (ValueAxis) periodAxis1;
      LogAxis logAxis1 = new LogAxis("ZOOM_IN_DOMAIN");
      valueAxisArray0[7] = (ValueAxis) logAxis1;
      combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      Font font0 = meterPlot0.getTickLabelFont();
      JFreeChart jFreeChart0 = new JFreeChart("", font0, xYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.select((double) 1024, (double) 1.0F, (Rectangle2D) null, (RenderingSource) chartPanel0);
      AxisSpace axisSpace0 = new AxisSpace();
      AxisSpace axisSpace1 = xYPlot0.calculateDomainAxisSpace((Graphics2D) null, (Rectangle2D) null, axisSpace0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace1);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeRangeMarker((Marker) categoryMarker0, layer0);
      xYPlot0.setRangeMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      combinedDomainXYPlot1.getRendererForDataset(histogramDataset0);
      Color color0 = new Color(10);
      combinedDomainXYPlot1.getDataset((-555));
      combinedDomainXYPlot0.getPlotType();
      combinedDomainXYPlot1.setRangeTickBandPaint(xYPlot0.DEFAULT_GRIDLINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CategoryMarker categoryMarker0 = new CategoryMarker(false, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      TextAnchor textAnchor0 = categoryMarker0.getLabelTextAnchor();
      IntervalMarker intervalMarker0 = new IntervalMarker(500, 0.05, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeMinorGridlinesVisible(true);
      Integer integer0 = new Integer(1);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, numberAxis3D0);
      AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
      combinedDomainXYPlot1.setDomainAxisLocation(10, axisLocation0, true);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRenderer((-77), (XYItemRenderer) xYDotRenderer0, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CategoryMarker categoryMarker0 = new CategoryMarker(false, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      TextAnchor textAnchor0 = categoryMarker0.getLabelTextAnchor();
      IntervalMarker intervalMarker0 = new IntervalMarker(500, 0.05, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      combinedDomainXYPlot0.getDomainAxisForDataset(0);
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      combinedDomainXYPlot0.setInsets(numberAxis3D0.DEFAULT_TICK_LABEL_INSETS);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeAxisLocation((-1650), axisLocation0, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(4, layer0);
      GrayPaintScale grayPaintScale0 = new GrayPaintScale(2091.53336529, 2092.7647529261, 10);
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(grayPaintScale0, numberAxis3D0);
      PaintScaleLegend paintScaleLegend1 = new PaintScaleLegend(grayPaintScale0, numberAxis3D0);
      grayPaintScale0.clone();
      PaintScaleLegend paintScaleLegend2 = new PaintScaleLegend(grayPaintScale0, numberAxis3D0);
      AxisLocation axisLocation0 = paintScaleLegend2.getAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainXYPlot0.clearDomainAxes();
      Stack<NumberAxis> stack0 = new Stack<NumberAxis>();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes(500, stack0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Empty list not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.LocalizationBundle");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      combinedDomainXYPlot1.setRangeGridlinesVisible(false);
      SystemColor systemColor0 = SystemColor.desktop;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getSeriesItemLabelPaint(2082);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.setDomainMinorGridlinePaint((Paint) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      combinedDomainXYPlot1.getRendererForDataset(histogramDataset0);
      Color color0 = new Color(10);
      AxisLocation axisLocation0 = combinedDomainXYPlot1.getRangeAxisLocation();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.setRangeAxisLocation((-187), axisLocation0, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.LocalizationBundle");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("p{%eMD6K~#xxmHQ", combinedDomainXYPlot0);
      combinedDomainXYPlot1.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(2.0F, 3002.52F, renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      bufferedImage1.createGraphics();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      BasicStroke basicStroke0 = new BasicStroke();
      combinedRangeXYPlot0.setRangeMinorGridlineStroke(basicStroke0);
      combinedDomainXYPlot0.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, Double.NaN);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, 10);
      AxisSpace axisSpace0 = new AxisSpace();
      xYPlot0.setFixedRangeAxisSpace(axisSpace0);
      xYPlot0.panDomainAxes((-9.0), (PlotRenderingInfo) null, point0);
      xYPlot0.getOrientation();
      xYPlot0.getQuadrantPaint(0);
      xYPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0, (Layer) null);
      categoryMarker0.setLabel("");
      combinedDomainXYPlot0.removeDomainMarker((-1463), (Marker) categoryMarker0, (Layer) null, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeAxisLocation((-1463), axisLocation0, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 0.5235987755982988);
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      combinedDomainXYPlot0.setRangeGridlinesVisible(false);
      SystemColor systemColor0 = SystemColor.desktop;
      combinedDomainXYPlot0.setDomainMinorGridlinePaint(systemColor0);
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis("XY_Plot");
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot2.getRangeAxisIndex(logAxis0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(2512, (-1));
      combinedDomainXYPlot0.setQuadrantOrigin(point0);
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) xYBoxAndWhiskerRenderer0.ZERO, (double) xYBoxAndWhiskerRenderer0.ZERO, "");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      RangeType rangeType0 = RangeType.POSITIVE;
      cyclicNumberAxis0.setRangeType(rangeType0);
      combinedRangeXYPlot0.mapDatasetToDomainAxis(27, 27);
      combinedRangeXYPlot0.setWeight((-1207));
      combinedRangeXYPlot0.getAxisOffset();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart0, true, true, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel1.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.zoomRangeAxes((double) 1024, plotRenderingInfo0, (Point2D) null, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1687.43856212223), 1.0F);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      combinedRangeXYPlot0.getSeriesCount();
      combinedRangeXYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(8.0, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      NumberAxis.createIntegerTickUnits();
      combinedRangeXYPlot2.addRangeMarker(10, (Marker) intervalMarker0, layer0, false);
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("BACKN#x~T9+sn", 10.0, 0.0F);
      xYTextAnnotation0.setRotationAngle(2.0F);
      CombinedRangeXYPlot combinedRangeXYPlot3 = new CombinedRangeXYPlot(numberAxis3D0);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot3.setDomainGridlineStroke((Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.zoomRangeAxes((double) 0, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(4, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeGridlinePaint(combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      ValueMarker valueMarker0 = new ValueMarker(15.0);
      combinedRangeXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0, true);
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("~^NL% j So<_SmW4,", 669.0, (double) xYDotRenderer0.ZERO);
      xYTextAnnotation0.setRotationAngle(15.0);
      combinedRangeXYPlot0.setDomainGridlineStroke(combinedDomainXYPlot1.DEFAULT_GRIDLINE_STROKE);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      combinedRangeXYPlot0.getAnnotations();
      combinedRangeXYPlot1.addDomainMarker((-1390), (Marker) valueMarker0, layer0);
      combinedRangeXYPlot1.getDomainCrosshairPaint();
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      combinedRangeXYPlot1.getLegendItems();
      combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
      combinedDomainXYPlot0.getDomainAxisCount();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, true);
      xYTextAnnotation0.setRotationAngle(10.0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, xYPlot0.DEFAULT_OUTLINE_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.setDomainGridlineStroke(defaultXYItemRenderer0.DEFAULT_STROKE);
      categoryMarker0.setLabel("='dzOuzo[");
      combinedRangeXYPlot0.removeDomainMarker(10, (Marker) categoryMarker0, layer0, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.indexOf(yIntervalSeriesCollection0);
      combinedRangeXYPlot0.clone();
      xYPlot0.isRangeCrosshairVisible();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      combinedRangeXYPlot0.zoomRangeAxes(0.05, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setWeight(2928);
      combinedRangeXYPlot0.getDomainAxisLocation(5273);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "gQWh7^~ztM5wKkDN");
      DateAxis dateAxis0 = new DateAxis((String) null, simpleTimeZone0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot1.isDomainCrosshairVisible();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedRangeXYPlot0.indexOf(vectorSeriesCollection0);
      combinedRangeXYPlot0.clone();
      combinedRangeXYPlot1.isRangeCrosshairVisible();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      combinedRangeXYPlot1.zoomRangeAxes(0.05, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 0.5235987755982988);
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      combinedDomainXYPlot0.setRangeGridlinesVisible(false);
      SystemColor systemColor0 = SystemColor.desktop;
      combinedDomainXYPlot0.setDomainMinorGridlinePaint(systemColor0);
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis("XY_Plot");
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot2.getRangeAxisIndex(logAxis0);
      combinedDomainXYPlot0.getDomainZeroBaselinePaint();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      SystemColor systemColor0 = SystemColor.desktop;
      combinedDomainXYPlot0.setDomainMinorGridlinePaint(systemColor0);
      combinedDomainXYPlot0.setDomainGridlinesVisible(true);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[2] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      combinedDomainXYPlot1.setDomainAxes(valueAxisArray0);
      LogAxis logAxis0 = new LogAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot1.getRangeAxisIndex(logAxis0);
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, true);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, xYPlot0.DEFAULT_OUTLINE_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setLabel("='dzOuzo[");
      xYTextAnnotation0.setToolTipText("!'Cw#49$?");
      Color color0 = Color.getHSBColor(17, 1775.2701F, 0.0F);
      Crosshair crosshair0 = new Crosshair(0.0, color0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      categoryMarker0.setLabelAnchor(rectangleAnchor0);
      combinedRangeXYPlot0.removeDomainMarker(10, (Marker) categoryMarker0, layer0, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRenderer(3050, (XYItemRenderer) defaultXYItemRenderer0, true);
      xYPlot0.getRangeTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp((RenderingHints) null);
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(669);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      TimeZone.getTimeZone((ZoneId) zoneOffset0);
      combinedDomainXYPlot1.getDataset((-1979));
      combinedDomainXYPlot1.getPlotType();
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(combinedDomainXYPlot1.DEFAULT_GRIDLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      DatasetGroup datasetGroup0 = new DatasetGroup();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp((RenderingHints) null);
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0);
      xYPlot0.removeDomainMarker(48, (Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0, (Layer) null);
      categoryMarker0.setLabel("");
      combinedDomainXYPlot0.removeDomainMarker((-1463), (Marker) categoryMarker0, (Layer) null, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedDomainXYPlot0.getRendererForDataset(yIntervalSeriesCollection0);
      Color color0 = new Color(10);
      combinedDomainXYPlot0.getDataset(479);
      combinedDomainXYPlot0.getPlotType();
      DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainXYPlot0.getDatasetRenderingOrder();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setDatasetRenderingOrder(datasetRenderingOrder0);
      Vector<DefaultKeyedValues2DDataset> vector0 = new Vector<DefaultKeyedValues2DDataset>();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes(1900, vector0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Empty list not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeMarkers((-1258), layer0);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[8];
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYBubbleRenderer0;
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(1);
      xYItemRendererArray0[1] = (XYItemRenderer) xYStepAreaRenderer0;
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(3);
      xYItemRendererArray0[2] = (XYItemRenderer) standardXYItemRenderer0;
      DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("Null 'marker' argument.", dateFormat0, dateFormat0, dateFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getURLGenerator(1, 12, false);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer((-1258), standardXYZToolTipGenerator0, (XYURLGenerator) null);
      xYItemRendererArray0[3] = (XYItemRenderer) cyclicXYItemRenderer0;
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(2);
      xYItemRendererArray0[4] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer1 = new XYBoxAndWhiskerRenderer(10);
      xYItemRendererArray0[5] = (XYItemRenderer) xYBoxAndWhiskerRenderer1;
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2(standardXYZToolTipGenerator0, customXYURLGenerator0);
      xYItemRendererArray0[6] = (XYItemRenderer) stackedXYAreaRenderer2_0;
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_1 = new StackedXYAreaRenderer2();
      xYItemRendererArray0[7] = (XYItemRenderer) stackedXYAreaRenderer2_1;
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
      XYItemRenderer[] xYItemRendererArray1 = new XYItemRenderer[17];
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray1);
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      xYTextAnnotation0.setRotationAngle(8.11813672817297);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, numberAxis3D0, numberAxis3D0, defaultXYItemRenderer0);
      combinedRangeXYPlot0.add(xYPlot0, 10);
      combinedRangeXYPlot0.setDomainGridlineStroke(defaultXYItemRenderer0.DEFAULT_STROKE);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      XYPlot xYPlot1 = new XYPlot();
      combinedRangeXYPlot1.add(xYPlot1, 10);
      combinedRangeXYPlot0.getAnnotations();
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearSelection();
      xYPlot1.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, true);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, xYPlot0.DEFAULT_OUTLINE_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setLabel("='dzOuzo[");
      combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYTextAnnotation0, false);
      Color color0 = Color.getHSBColor(17, 1775.2701F, 0.0F);
      Crosshair crosshair0 = new Crosshair(0.0, color0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      categoryMarker0.setLabelAnchor(rectangleAnchor0);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[5];
      xYItemRendererArray0[0] = (XYItemRenderer) defaultXYItemRenderer0;
      xYItemRendererArray0[1] = (XYItemRenderer) defaultXYItemRenderer0;
      xYItemRendererArray0[2] = (XYItemRenderer) defaultXYItemRenderer0;
      xYItemRendererArray0[3] = (XYItemRenderer) defaultXYItemRenderer0;
      xYItemRendererArray0[4] = (XYItemRenderer) defaultXYItemRenderer0;
      xYPlot0.setRenderers(xYItemRendererArray0);
      combinedRangeXYPlot0.removeDomainMarker(10, (Marker) categoryMarker0, layer0, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.indexOf(yIntervalSeriesCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setQuadrantPaint((-1), combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The index value (-1) should be in the range 0 to 3.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(499, 499);
      DateAxis dateAxis0 = new DateAxis("#,###,###,##0");
      NumberAxis numberAxis0 = new NumberAxis("#,###,###,##0");
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYPlot xYPlot0 = new XYPlot(dynamicTimeSeriesCollection0, dateAxis0, numberAxis0, defaultXYItemRenderer0);
      xYPlot0.getRangeAxisEdge(295);
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("02i-6%:\r6'Vo=u=T", 0.0F, 2, 0.0F);
      xYPlot0.addAnnotation((XYAnnotation) xYPointerAnnotation0, true);
      BufferedImage bufferedImage0 = null;
//      try {
        bufferedImage0 = new BufferedImage(499, 73, 482);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown image type 482
//         //
//         verifyException("java.awt.image.BufferedImage", e);
//      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.getOrientation();
      SeriesRenderingOrder seriesRenderingOrder0 = combinedRangeXYPlot0.getSeriesRenderingOrder();
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedRangeXYPlot0.clearRangeMarkers(1193);
      combinedRangeXYPlot0.getDomainAxis();
      int int0 = (-2320);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte)102;
      IndexColorModel indexColorModel0 = null;
//      try {
        indexColorModel0 = new IndexColorModel(492, (-2320), byteArray0, (byte) (-116), true, (byte)102);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Number of bits must be between 1 and 16.
//         //
//         verifyException("java.awt.image.IndexColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      DatasetGroup datasetGroup0 = new DatasetGroup();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp((RenderingHints) null);
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      TimeZone.getTimeZone((ZoneId) zoneOffset0);
      combinedDomainXYPlot0.getDataset(48);
      combinedDomainXYPlot0.getPlotType();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeZeroBaselineStroke((Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      int int0 = 33;
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      combinedDomainXYPlot1.setRenderer(471, (XYItemRenderer) xYLineAndShapeRenderer0, false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(33, layer0);
      combinedDomainXYPlot1.getDomainAxis(18);
      combinedDomainXYPlot1.equals(combinedDomainXYPlot0);
      GrayPaintScale grayPaintScale0 = null;
//      try {
        grayPaintScale0 = new GrayPaintScale(1.0F, 1.0E-8, 1626);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires lowerBound < upperBound.
//         //
//         verifyException("org.jfree.chart.renderer.GrayPaintScale", e);
//      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.getSubplots();
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.indexOf(defaultXYDataset0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation((-1945));
      axisLocation0.getOpposite();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeAxisLocation((-1945), axisLocation0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, Double.NaN);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainMinorGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(4, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeGridlinePaint(combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot1.getRangeMarkers(layer1);
      combinedDomainXYPlot0.setRangePannable(true);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      combinedDomainXYPlot0.clearRangeAxes();
      combinedDomainXYPlot0.setDomainCrosshairPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      IntervalMarker intervalMarker0 = new IntervalMarker(Double.NaN, (-936.77));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      short[][] shortArray0 = new short[1][5];
      xYPlot0.zoom(0.05);
      short[] shortArray1 = new short[2];
      shortArray1[0] = (short)15;
      shortArray1[1] = (short)1311;
      shortArray0[0] = shortArray1;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(842, shortArray0);
      xYPlot0.getOrientation();
      xYPlot0.getQuadrantPaint(0);
      xYPlot0.getFixedDomainAxisSpace();
      xYPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CategoryMarker categoryMarker0 = new CategoryMarker(false, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      TextAnchor textAnchor0 = categoryMarker0.getLabelTextAnchor();
      IntervalMarker intervalMarker0 = new IntervalMarker(500, 0.05, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0);
      int int0 = 2144229884;
      int int1 = (-2473);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.getDomainAxisForDataset(1909);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Index 1909 out of bounds.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 1.0F);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      TextAnchor textAnchor0 = categoryMarker0.getLabelTextAnchor();
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      int int0 = 2144229884;
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.getDomainAxisForDataset((-2473));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Index -2473 out of bounds.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[3];
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) xYLine3DRenderer0;
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      xYItemRendererArray0[2] = (XYItemRenderer) highLowRenderer0;
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
      combinedRangeXYPlot0.clearRangeAxes();
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, Double.NaN);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "iH07>9vr^)";
      SymbolAxis symbolAxis0 = new SymbolAxis("iH07>9vr^)", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      combinedDomainXYPlot0.mapDatasetToRangeAxis(1, 500);
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.LocalizationBundle");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("p{%eMD6K~#xxmHQ", combinedDomainXYPlot0);
      combinedDomainXYPlot1.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(2.0F, 0.0F, renderingHints0);
      combinedDomainXYPlot0.getDomainMarkers(10, (Layer) null);
      combinedDomainXYPlot0.getDomainAxis(10);
      GrayPaintScale grayPaintScale0 = new GrayPaintScale((-568.0), 10, 10);
      GrayPaintScale grayPaintScale1 = new GrayPaintScale(1.0F, 498.0, 10);
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(grayPaintScale1, logAxis0);
      AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 1.0F);
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      // Undeclared exception!
      combinedDomainXYPlot0.setRangeAxisLocation(2144229884, axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Null 'layer' not permitted.");
      candlestickRenderer0.getSeriesOutlineStroke(2);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.setDomainZeroBaselineStroke((Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.LocalizationBundle");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("p{%eMD6K~#xxmHQ", combinedDomainXYPlot0);
      combinedDomainXYPlot1.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(true);
      jFreeChart0.getRenderingHints();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 3003.2342369672;
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
//      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'polygon' array must contain an even number of items.
//         //
//         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
//      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, Double.NaN);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainCrosshairStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.2;
      doubleArray0[1] = (-327.84926448738173);
      doubleArray0[2] = Double.NaN;
      doubleArray0[3] = (double) 10;
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      doubleArray0[4] = (double) 10;
      doubleArray0[5] = 1148.05256814474;
      doubleArray0[6] = (double) 1.0F;
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
//      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'polygon' array must contain an even number of items.
//         //
//         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
//      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 0.5235987755982988);
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setRangeAxisLocation(0, axisLocation0, false);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(false);
      combinedDomainXYPlot0.setDomainMinorGridlinesVisible(true);
      double double0 = 1898.8460435;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      int int0 = (-2282);
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) 0;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (-67.44741F);
      floatArray0[3] = 2.0F;
      floatArray0[4] = 1.0F;
      float[] floatArray1 = new float[4];
      floatArray1[0] = 1.0F;
      floatArray1[1] = 0.0F;
      floatArray1[2] = (-67.44741F);
      floatArray1[3] = (float) 10;
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray1, renderingHints0);
      Kernel kernel0 = null;
//      try {
        kernel0 = new Kernel(15, 15, floatArray1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Data array too small (is 4 and should be 225
//         //
//         verifyException("java.awt.image.Kernel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.setRangeAxisLocation(11, axisLocation0, true);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(true);
      combinedDomainXYPlot0.setDomainMinorGridlinesVisible(false);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
//      try { 
        plotRenderingInfo0.getSubplotInfo((-571));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(509.0);
      candlestickRenderer0.getBaseURLGenerator();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.setRangeAxis(1, (ValueAxis) null, false);
      JFreeChart jFreeChart0 = new JFreeChart("@:", combinedDomainXYPlot0);
      XYPlot xYPlot1 = jFreeChart0.getXYPlot();
      xYPlot1.isDomainPannable();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      JFreeChart jFreeChart1 = new JFreeChart("@:", candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot1, false);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 3491, 511, (-198), 10, 10, false, false, true, true, false, true, false);
      chartPanel0.getChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
//      try { 
        jFreeChart1.createBufferedImage(3491, 1, chartRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, true);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, xYPlot0.DEFAULT_OUTLINE_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setLabel("='dzOuzo[");
      Color color0 = Color.getHSBColor(17, 1775.2701F, 0.0F);
      Crosshair crosshair0 = new Crosshair(0.0, color0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      categoryMarker0.setLabelAnchor(rectangleAnchor0);
      combinedRangeXYPlot0.removeDomainMarker(10, (Marker) categoryMarker0, layer0, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.indexOf(yIntervalSeriesCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setQuadrantPaint((-1), combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The index value (-1) should be in the range 0 to 3.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 0.0);
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setQuadrantPaint((-707), combinedDomainXYPlot1.DEFAULT_CROSSHAIR_PAINT);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The index value (-707) should be in the range 0 to 3.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      CategoryMarker categoryMarker0 = new CategoryMarker(500);
      categoryMarker0.setLabel("Requires 'index' >= 0.");
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection((XYSeries) null);
      xYSeriesCollection0.getDomainUpperBound(true);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.getSubplots();
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.getRendererForDataset(defaultXYDataset0);
      Color color0 = new Color(10);
      combinedDomainXYPlot1.getDataset((-1642));
      combinedDomainXYPlot0.getPlotType();
      DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainXYPlot0.getDatasetRenderingOrder();
      combinedDomainXYPlot1.setDatasetRenderingOrder(datasetRenderingOrder0);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      xYPlot0.removeDomainMarker((Marker) categoryMarker0, (Layer) null);
      categoryMarker0.setLabel("");
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection((XYSeries) null);
      xYSeriesCollection0.getDomainUpperBound(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
      XYPlot xYPlot1 = null;
//      try {
        xYPlot1 = new XYPlot(xYSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, (XYItemRenderer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.LocalizationBundle");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("p{%eMD6K~#xxmHQ", combinedDomainXYPlot0);
      combinedDomainXYPlot1.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(true);
      jFreeChart0.getRenderingHints();
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      XYPlot xYPlot0 = null;
//      try {
        xYPlot0 = new XYPlot(defaultWindDataset0, (ValueAxis) null, logAxis0, (XYItemRenderer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(500, "Requires 'index' >= 0.");
      combinedDomainXYPlot0.setDomainTickBandPaint(numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      combinedDomainXYPlot0.setDomainAxis(1881, (ValueAxis) numberAxis3D0, true);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      combinedDomainXYPlot0.setDomainMinorGridlinePaint(cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainXYPlot0.setDomainGridlinesVisible(true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)35;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis("XY_Plot");
      combinedDomainXYPlot0.getRangeAxisIndex(logAxis0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.setQuadrantPaint(10, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The index value (10) should be in the range 0 to 3.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      System.setCurrentTimeMillis(4213L);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_AXIS_LINE_STROKE;
      combinedRangeXYPlot0.setDomainCrosshairStroke(basicStroke0);
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot1.setRangeMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F);
      combinedRangeXYPlot1.addDomainMarker(10, (Marker) intervalMarker0, layer0);
      double double0 = (-1318.87238452412);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-110);
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte) (-109);
      byte byte0 = (byte)12;
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)17;
      byteArray0[5] = (byte)8;
      byteArray0[6] = (byte)53;
      byteArray0[7] = (byte)61;
      IndexColorModel indexColorModel0 = null;
//      try {
        indexColorModel0 = new IndexColorModel((-2024), (-2116), byteArray0, byteArray0, byteArray0, (byte)12);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Number of pixel bits must be > 0
//         //
//         verifyException("java.awt.image.ColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 0.5235987755982988);
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setRangeAxisLocation(0, axisLocation0, true);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(true);
      combinedDomainXYPlot0.setDomainMinorGridlinesVisible(true);
      double double0 = 1898.8460435;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
//      try { 
        plotRenderingInfo0.getSubplotInfo((-2282));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.clearRangeMarkers();
      combinedRangeXYPlot0.getOrientation();
      MockDateFormat.getInstance();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      combinedRangeXYPlot2.setRangeMinorGridlinePaint(combinedRangeXYPlot1.DEFAULT_OUTLINE_PAINT);
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      CombinedRangeXYPlot combinedRangeXYPlot3 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.add((XYPlot) combinedRangeXYPlot2, 10);
      combinedRangeXYPlot1.setAxisOffset(combinedRangeXYPlot2.DEFAULT_INSETS);
      Vector<YIntervalRenderer> vector0 = new Vector<YIntervalRenderer>();
      JList<YIntervalRenderer> jList0 = new JList<YIntervalRenderer>(vector0);
      jList0.indexToLocation(18);
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot1.zoomDomainAxes((double) 10, (double) 1.0F, (PlotRenderingInfo) null, (Point2D) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'info' argument.
//         //
//         verifyException("org.jfree.chart.plot.CombinedRangeXYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Requires 'index' >= 0.";
      stringArray0[1] = "Requires 'index' >= 0.";
      stringArray0[2] = "Requires 'index' >= 0.";
      stringArray0[3] = "dockE3#";
      SymbolAxis symbolAxis0 = new SymbolAxis("Requires 'index' >= 0.", stringArray0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Y2B4G7MY=* //");
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(numberAxis3D0.DEFAULT_TICK_LABEL_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, true);
      XYSeries xYSeries0 = new XYSeries(symbolAxis0.DEFAULT_TICK_UNIT, true);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, logarithmicAxis0, symbolAxis0, xYDifferenceRenderer0);
      xYPlot0.setDomainGridlinePaint(xYDifferenceRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      xYPlot0.getWeight();
      xYPlot0.getRendererForDataset(xYSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis0, true);
      combinedDomainXYPlot0.clearRangeMarkers(0);
      combinedDomainXYPlot0.clearDomainMarkers();
      PolarPlot polarPlot0 = new PolarPlot();
      Paint paint0 = polarPlot0.getRadiusGridlinePaint();
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(paint0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = 1.0F;
      Kernel kernel0 = new Kernel(0, 10, floatArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      combinedDomainXYPlot0.setBackgroundPaint(numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedDomainXYPlot0.mapDatasetToRangeAxis(10, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.05;
      doubleArray0[1] = (double) 15;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 0.05;
      doubleArray0[4] = (double) 1.0F;
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer(0.05);
      XYPlot xYPlot0 = new XYPlot(defaultXYZDataset0, numberAxis0, numberAxis0, xYBarRenderer0);
      xYPlot0.getOrientation();
      // Undeclared exception!
//      try { 
        xYPlot0.getQuadrantPaint(3635);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The index value (3635) should be in the range 0 to 3.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainMarkers();
      PolarPlot polarPlot0 = new PolarPlot();
      Paint paint0 = polarPlot0.getRadiusGridlinePaint();
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(color0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      JFreeChart jFreeChart0 = new JFreeChart(polarPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(6, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart1 = new JFreeChart("2QwV<4BV;[4 YmZ", polarPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, true, true, false, true, false);
      Rectangle rectangle0 = chartPanel0.getBounds();
      Rectangle2D.intersect(rectangle0, rectangle0, rectangle0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawVerticalLine(graphics2D0, rectangle0, 10, polarPlot0.DEFAULT_OUTLINE_STROKE, polarPlot0.DEFAULT_OUTLINE_PAINT);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedDomainXYPlot1.setSeriesRenderingOrder(seriesRenderingOrder0);
      Boolean boolean0 = new Boolean(true);
      Object[][][] objectArray0 = new Object[6][4][9];
      Object[][] objectArray1 = new Object[4][4];
      Object[] objectArray2 = new Object[5];
      Object object0 = combinedDomainXYPlot0.clone();
      objectArray2[0] = object0;
      objectArray2[1] = (Object) "2QwV<4BV;[4 YmZ";
      objectArray2[2] = (Object) paint0;
      objectArray2[3] = (Object) combinedDomainXYPlot1;
      objectArray2[4] = (Object) jFreeChart0;
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[6];
      Object object1 = new Object();
      objectArray3[0] = object1;
      objectArray3[1] = (Object) chartPanel0;
      objectArray3[2] = (Object) jFreeChart1;
      objectArray3[3] = (Object) jFreeChart1;
      objectArray3[4] = (Object) jFreeChart1;
      objectArray3[5] = (Object) bufferedImage0;
      objectArray1[1] = objectArray3;
      Object[] objectArray4 = new Object[6];
      objectArray4[0] = (Object) jFreeChart1;
      objectArray4[1] = (Object) combinedDomainXYPlot1;
      objectArray4[2] = (Object) paint0;
      objectArray4[3] = (Object) seriesRenderingOrder0;
      objectArray4[4] = (Object) chartRenderingInfo0;
      Object object2 = new Object();
      objectArray4[5] = object2;
      objectArray1[2] = objectArray4;
      Object[] objectArray5 = new Object[6];
      Object object3 = new Object();
      objectArray5[0] = object3;
      objectArray5[1] = (Object) paint0;
      objectArray5[2] = object1;
      objectArray5[3] = (Object) seriesRenderingOrder0;
      objectArray5[4] = (Object) bufferedImage0;
      objectArray5[5] = (Object) boolean0;
      objectArray1[3] = objectArray5;
      objectArray0[0] = objectArray1;
      Object[][] objectArray6 = new Object[9][1];
      objectArray6[0] = objectArray4;
      objectArray6[1] = objectArray5;
      objectArray6[2] = objectArray4;
      objectArray6[3] = objectArray5;
      objectArray6[4] = objectArray2;
      objectArray6[5] = objectArray5;
      Object[] objectArray7 = new Object[4];
      objectArray7[0] = (Object) chartPanel0;
      Object object4 = new Object();
      objectArray7[1] = object4;
      Object object5 = combinedDomainXYPlot1.clone();
      objectArray7[2] = object5;
      objectArray7[3] = (Object) color0;
      objectArray6[6] = objectArray7;
      objectArray6[7] = objectArray5;
      objectArray6[8] = objectArray5;
      objectArray0[1] = objectArray6;
      Object[][] objectArray8 = new Object[0][7];
      objectArray0[2] = objectArray8;
      Object[][] objectArray9 = new Object[1][9];
      objectArray9[0] = objectArray7;
      objectArray0[3] = objectArray9;
      Object[][] objectArray10 = new Object[0][6];
      objectArray0[4] = objectArray10;
      Object[][] objectArray11 = new Object[2][1];
      objectArray11[0] = objectArray5;
      objectArray11[1] = objectArray7;
      objectArray0[5] = objectArray11;
      DefaultWindDataset defaultWindDataset0 = null;
//      try {
        defaultWindDataset0 = new DefaultWindDataset(objectArray0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.String cannot be cast to java.lang.Number
//         //
//         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", (-2476.28657161), 1.0F, (-1465.076474038));
      xYPointerAnnotation0.setRotationAngle((-1465.076474038));
      ValueMarker valueMarker0 = new ValueMarker(1000.0, xYBoxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(1844, (Marker) valueMarker0, layer0, true);
      ValueMarker valueMarker1 = new ValueMarker(41.915894508361816);
      combinedRangeXYPlot0.removeRangeMarker(1844, (Marker) valueMarker1, layer0, true);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(xYPointerAnnotation0.DEFAULT_PAINT);
      combinedRangeXYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", 10, (double) defaultXYItemRenderer0.ZERO);
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      int int0 = Plot.MINIMUM_WIDTH_TO_DRAW;
      combinedDomainXYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(500, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.addRangeMarker(10, (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(10, (Marker) categoryMarker0, layer0, false);
      CategoryMarker categoryMarker1 = new CategoryMarker(10, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, xYPlot0.DEFAULT_OUTLINE_STROKE);
      categoryMarker0.setLabel("Null 'axisIndex' argument.");
      combinedDomainXYPlot0.removeDomainMarker(181, (Marker) categoryMarker1, layer0, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.clone();
      combinedDomainXYPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, defaultXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) valueMarker0, layer0, true);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, xYPlot0.DEFAULT_OUTLINE_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setLabel("='dzOuzo[");
      combinedRangeXYPlot0.removeDomainMarker(10, (Marker) categoryMarker0, layer0, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.indexOf(yIntervalSeriesCollection0);
      combinedRangeXYPlot0.clone();
      xYPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, Double.NaN);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 2.0F;
      doubleArray0[1] = (double) (-11);
      doubleArray0[2] = 0.2;
      doubleArray0[3] = 1148.05256814474;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeAxisIndex((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clone();
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      combinedDomainXYPlot0.addRangeMarker((Marker) intervalMarker0, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.LocalizationBundle");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0E-8, 1.0E-8, true);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0);
      logAxis0.setRangeWithMargins(range0, false, false);
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      combinedDomainXYPlot1.setRangeGridlineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot1.setRangeCrosshairPaint(logAxis0.DEFAULT_AXIS_LABEL_PAINT);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot1.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      combinedDomainXYPlot0.setRangeCrosshairPaint(combinedDomainXYPlot1.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot1.getOrientation();
      combinedDomainXYPlot0.getDomainGridlineStroke();
      combinedDomainXYPlot1.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, Double.NaN);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.getOrientation();
      // Undeclared exception!
//      try { 
        xYPlot0.getQuadrantPaint((-11));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The index value (-11) should be in the range 0 to 3.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      LogAxis logAxis0 = new LogAxis("");
      int int0 = (-2903);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainAxis((-2903), (ValueAxis) logAxis0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(50000.0, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers((-428));
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      NumberAxis3D numberAxis3D0 = linkedList0.poll();
      xYPlot0.drawRangeTickBands(graphics2D0, defaultCaret0, linkedList0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearSelection();
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(numberAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      xYPlot0.clearSelection();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setTickMarkStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area();
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge(10);
      numberAxis3D0.valueToJava2D((-1221.13658), rectangle2D0, rectangleEdge0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberAxis3D0, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0, false);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 40);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) defaultXYItemRenderer0, true);
      BufferedImage bufferedImage1 = new BufferedImage(500, 221, 10);
      Graphics2D graphics2D1 = bufferedImage1.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      xYPlot0.drawRangeTickBands(graphics2D1, rectangle2D0, linkedList0);
      combinedDomainXYPlot0.clearSelection();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0, (Layer) null);
      categoryMarker0.setLabel("");
      combinedDomainXYPlot0.removeDomainMarker((-1463), (Marker) categoryMarker0, (Layer) null, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedDomainXYPlot0.indexOf(yIntervalSeriesCollection0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation((-1945));
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedDomainXYPlot0.setRangeAxisLocation(999, axisLocation1);
      combinedDomainXYPlot0.removeRangeMarker((Marker) categoryMarker0);
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      AxisLocation axisLocation0 = null;
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((AxisLocation) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'location' for index 0 not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      ValueAxis valueAxis0 = null;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      IntervalMarker intervalMarker0 = new IntervalMarker(10.0, 2.5E8);
      combinedDomainXYPlot0.addRangeMarker((Marker) intervalMarker0);
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.getRangeCrosshairValue();
      String string0 = null;
      combinedDomainXYPlot0.clearAnnotations();
      SimpleTimeZone simpleTimeZone0 = null;
//      try {
        simpleTimeZone0 = new SimpleTimeZone((-972), (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.TimeZone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setTickMarkStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area();
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge(10);
      numberAxis3D0.valueToJava2D((-1221.13658), rectangle2D0, rectangleEdge0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberAxis3D0, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0, false);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 40);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) defaultXYItemRenderer0, true);
      BufferedImage bufferedImage1 = new BufferedImage(500, 221, 10);
      Graphics2D graphics2D1 = bufferedImage1.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      xYPlot0.drawRangeTickBands(graphics2D1, rectangle2D0, linkedList0);
      xYPlot0.getDataset();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getSeriesStroke(1447);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainCrosshairStroke((Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)FastScatterPlot.DEFAULT_GRIDLINE_STROKE;
      combinedRangeXYPlot0.addChangeListener(combinedDomainXYPlot1);
      combinedRangeXYPlot0.setDomainCrosshairStroke(basicStroke0);
      combinedRangeXYPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      System.setCurrentTimeMillis(4213L);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_AXIS_LINE_STROKE;
      combinedRangeXYPlot0.setDomainCrosshairStroke(basicStroke0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCPieDataset jDBCPieDataset0 = null;
//      try {
        jDBCPieDataset0 = new JDBCPieDataset(connection0, "lh uzV8Eh");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.jdbc.JDBCPieDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setWeight(2928);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(5273);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setDomainAxisLocation(10, axisLocation0, true);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      AxisLocation axisLocation1 = combinedRangeCategoryPlot0.getDomainAxisLocation();
      axisLocation1.getOpposite();
      combinedDomainXYPlot1.setDomainAxisLocation(500, axisLocation1, false);
      combinedDomainXYPlot0.setRangeCrosshairValue(0.5235987755982988);
      combinedDomainXYPlot1.getRangeAxisLocation(1);
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("org.jfree.chart.axis.MarkerAxisBand");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, " out of bounds.");
      combinedDomainXYPlot0.setDomainTickBandPaint(numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) numberAxis3D0, true);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeGridlinesVisible(false);
      combinedDomainXYPlot1.setDomainMinorGridlinePaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)35;
      byteArray0[5] = (byte)35;
      IndexColorModel indexColorModel0 = null;
//      try {
        indexColorModel0 = new IndexColorModel((-660), (-660), byteArray0, 10, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Number of pixel bits must be > 0
//         //
//         verifyException("java.awt.image.ColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis0, true);
      combinedDomainXYPlot0.clearRangeMarkers(0);
      combinedDomainXYPlot0.clearDomainMarkers();
      PolarPlot polarPlot0 = new PolarPlot();
      Paint paint0 = polarPlot0.getRadiusGridlinePaint();
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(paint0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = 1.0F;
      Kernel kernel0 = new Kernel(0, 10, floatArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      combinedDomainXYPlot0.setBackgroundPaint(numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedDomainXYPlot0.mapDatasetToRangeAxis(10, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.05;
      doubleArray0[1] = (double) 15;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 0.05;
      doubleArray0[4] = (double) 1.0F;
      doubleArray0[2] = (double) 1.0F;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      combinedDomainXYPlot0.getRangeAxisIndex(numberAxis0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setQuadrantPaint(725, jFreeChart0.DEFAULT_BACKGROUND_PAINT);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The index value (725) should be in the range 0 to 3.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setStroke(combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0, (Layer) null);
      categoryMarker0.setLabel("");
      combinedRangeXYPlot0.removeDomainMarker((-1463), (Marker) categoryMarker0, (Layer) null, true);
      combinedRangeXYPlot0.getRangeZeroBaselineStroke();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      NumberAxis numberAxis0 = new NumberAxis();
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(categoryMarker0);
      xYPlot0.markerChanged(markerChangeEvent0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeRangeMarker((-1018), (Marker) categoryMarker0, layer0, false);
      ValueMarker valueMarker0 = null;
//      try {
        valueMarker0 = new ValueMarker(0.2, numberAxis0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, numberAxis0.DEFAULT_TICK_MARK_STROKE, 10);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'alpha' value must be in the range 0.0f to 1.0f
//         //
//         verifyException("org.jfree.chart.plot.Marker", e);
//      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DatasetGroup datasetGroup0 = new DatasetGroup("RangeType.NEGATIVE");
      jDBCXYDataset0.setGroup(datasetGroup0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setTickMarkStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area();
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge(10);
      numberAxis3D0.valueToJava2D((-1221.13658), rectangle2D0, rectangleEdge0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberAxis3D0, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0, false);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 40);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) defaultXYItemRenderer0, true);
      BufferedImage bufferedImage1 = new BufferedImage(500, 221, 10);
      Graphics2D graphics2D1 = bufferedImage1.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      xYPlot0.drawRangeTickBands(graphics2D1, rectangle2D0, linkedList0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(rendererChangeEvent0, jDBCXYDataset0);
      xYPlot0.datasetChanged(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getAxisOffset();
      Color color0 = (Color)AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
      combinedDomainXYPlot0.setDomainMinorGridlinePaint(color0);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainGridlinesVisible(false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)48;
      byteArray0[4] = (byte)35;
      byteArray0[5] = (byte)35;
      byteArray0[6] = (byte)35;
      byteArray0[7] = (byte)35;
      IndexColorModel indexColorModel0 = null;
//      try {
        indexColorModel0 = new IndexColorModel(3, 3, byteArray0, (-3279), true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -3279
//         //
//         verifyException("java.awt.image.IndexColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot2.setRenderer(10, (XYItemRenderer) xYLineAndShapeRenderer0, true);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot2.getDomainMarkers(4, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot();
      Layer layer1 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot4 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot4.getRangeMarkers(layer0);
      combinedDomainXYPlot0.setRangePannable(true);
      combinedDomainXYPlot2.getWeight();
      combinedDomainXYPlot4.clearRangeAxes();
      combinedDomainXYPlot4.setRangeAxis(10, (ValueAxis) numberAxis3D0, false);
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBoxAndWhiskerRenderer0.ZERO, (-500.7508683220033));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, (ValueAxis) null, xYBoxAndWhiskerRenderer0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, 0);
      xYPlot0.panDomainAxes(1.0F, (PlotRenderingInfo) null, point0);
      combinedRangeXYPlot0.getOrientation();
      xYPlot0.getQuadrantPaint(2);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      xYPlot0.getDomainAxis((-301));
      xYPlot0.equals(point0);
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot1.getDomainMarkers(4, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot2.getRangeMarkers(layer1);
      combinedDomainXYPlot1.setRangePannable(true);
      combinedDomainXYPlot2.getWeight();
      combinedDomainXYPlot0.clearRangeAxes();
      combinedDomainXYPlot0.setDomainCrosshairPaint(combinedDomainXYPlot1.DEFAULT_BACKGROUND_PAINT);
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot2.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot2.getRangeCrosshairValue();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2984.4175134), 10, "F`U");
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot((ValueAxis) null);
      int int0 = 297;
      int int1 = (-1557);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.mapDatasetToRangeAxis((-1952257861), (-1557));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires 'index' >= 0.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      assertNotNull(xYPlot0);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getRendererCount());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(xYPlot0.isRangeZoomable());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertFalse(xYPlot0.canSelectByPoint());
      assertTrue(xYPlot0.isNotify());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(xYPlot0.isSubplot());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertFalse(xYPlot0.isRangePannable());
      assertFalse(xYPlot0.isDomainPannable());
      assertTrue(xYPlot0.canSelectByRegion());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      assertNotNull(categoryMarker0);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getRendererCount());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(xYPlot0.isRangeZoomable());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertFalse(xYPlot0.canSelectByPoint());
      assertTrue(xYPlot0.isNotify());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(xYPlot0.isSubplot());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertFalse(xYPlot0.isRangePannable());
      assertFalse(xYPlot0.isDomainPannable());
      assertTrue(xYPlot0.canSelectByRegion());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertFalse(categoryMarker0.getDrawAsLine());
      assertEquals(1.0F, categoryMarker0.getAlpha(), 0.01F);
      assertNull(categoryMarker0.getLabel());
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      categoryMarker0.setStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getRendererCount());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(xYPlot0.isRangeZoomable());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertFalse(xYPlot0.canSelectByPoint());
      assertTrue(xYPlot0.isNotify());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(xYPlot0.isSubplot());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertFalse(xYPlot0.isRangePannable());
      assertFalse(xYPlot0.isDomainPannable());
      assertTrue(xYPlot0.canSelectByRegion());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertFalse(categoryMarker0.getDrawAsLine());
      assertEquals(1.0F, categoryMarker0.getAlpha(), 0.01F);
      assertNull(categoryMarker0.getLabel());
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      assertNotNull(defaultValueDataset0);
      
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      assertNotNull(meterPlot0);
      assertFalse(meterPlot0.isSubplot());
      assertFalse(meterPlot0.getDrawBorder());
      assertEquals(1.0F, meterPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(10.0, meterPlot0.getTickSize(), 0.01);
      assertEquals(15, meterPlot0.getBackgroundImageAlignment());
      assertEquals(270, meterPlot0.getMeterAngle());
      assertTrue(meterPlot0.isNotify());
      assertEquals(1.0F, meterPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(meterPlot0.getTickLabelsVisible());
      assertEquals("Units", meterPlot0.getUnits());
      assertTrue(meterPlot0.isOutlineVisible());
      assertNull(meterPlot0.getNoDataMessage());
      assertEquals(0.5F, meterPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(3.0F, MeterPlot.DEFAULT_BORDER_SIZE, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10.0F, MeterPlot.DEFAULT_CIRCLE_SIZE, 0.01F);
      assertEquals(270, MeterPlot.DEFAULT_METER_ANGLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Font font0 = meterPlot0.getTickLabelFont();
      assertNotNull(font0);
      assertFalse(meterPlot0.isSubplot());
      assertFalse(meterPlot0.getDrawBorder());
      assertEquals(1.0F, meterPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(10.0, meterPlot0.getTickSize(), 0.01);
      assertEquals(15, meterPlot0.getBackgroundImageAlignment());
      assertEquals(270, meterPlot0.getMeterAngle());
      assertTrue(meterPlot0.isNotify());
      assertEquals(1.0F, meterPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(meterPlot0.getTickLabelsVisible());
      assertEquals("Units", meterPlot0.getUnits());
      assertTrue(meterPlot0.isOutlineVisible());
      assertNull(meterPlot0.getNoDataMessage());
      assertEquals(0.5F, meterPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(font0.isItalic());
      assertEquals("Tahoma", font0.getName());
      assertEquals(1, font0.getStyle());
      assertTrue(font0.isBold());
      assertFalse(font0.hasLayoutAttributes());
      assertFalse(font0.isTransformed());
      assertEquals(10, font0.getSize());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(3.0F, MeterPlot.DEFAULT_BORDER_SIZE, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10.0F, MeterPlot.DEFAULT_CIRCLE_SIZE, 0.01F);
      assertEquals(270, MeterPlot.DEFAULT_METER_ANGLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      JFreeChart jFreeChart0 = new JFreeChart("", font0, xYPlot0, true);
      assertNotNull(jFreeChart0);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getRendererCount());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(xYPlot0.isRangeZoomable());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertFalse(xYPlot0.canSelectByPoint());
      assertTrue(xYPlot0.isNotify());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(xYPlot0.isSubplot());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertFalse(xYPlot0.isRangePannable());
      assertFalse(xYPlot0.isDomainPannable());
      assertTrue(xYPlot0.canSelectByRegion());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertFalse(meterPlot0.isSubplot());
      assertFalse(meterPlot0.getDrawBorder());
      assertEquals(1.0F, meterPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(10.0, meterPlot0.getTickSize(), 0.01);
      assertEquals(15, meterPlot0.getBackgroundImageAlignment());
      assertEquals(270, meterPlot0.getMeterAngle());
      assertTrue(meterPlot0.isNotify());
      assertEquals(1.0F, meterPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(meterPlot0.getTickLabelsVisible());
      assertEquals("Units", meterPlot0.getUnits());
      assertTrue(meterPlot0.isOutlineVisible());
      assertNull(meterPlot0.getNoDataMessage());
      assertEquals(0.5F, meterPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(font0.isItalic());
      assertEquals("Tahoma", font0.getName());
      assertEquals(1, font0.getStyle());
      assertTrue(font0.isBold());
      assertFalse(font0.hasLayoutAttributes());
      assertFalse(font0.isTransformed());
      assertEquals(10, font0.getSize());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(3.0F, MeterPlot.DEFAULT_BORDER_SIZE, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10.0F, MeterPlot.DEFAULT_CIRCLE_SIZE, 0.01F);
      assertEquals(270, MeterPlot.DEFAULT_METER_ANGLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      assertNotNull(chartPanel0);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getRendererCount());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(xYPlot0.isRangeZoomable());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertFalse(xYPlot0.canSelectByPoint());
      assertTrue(xYPlot0.isNotify());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(xYPlot0.isSubplot());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertFalse(xYPlot0.isRangePannable());
      assertFalse(xYPlot0.isDomainPannable());
      assertTrue(xYPlot0.canSelectByRegion());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertFalse(meterPlot0.isSubplot());
      assertFalse(meterPlot0.getDrawBorder());
      assertEquals(1.0F, meterPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(10.0, meterPlot0.getTickSize(), 0.01);
      assertEquals(15, meterPlot0.getBackgroundImageAlignment());
      assertEquals(270, meterPlot0.getMeterAngle());
      assertTrue(meterPlot0.isNotify());
      assertEquals(1.0F, meterPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(meterPlot0.getTickLabelsVisible());
      assertEquals("Units", meterPlot0.getUnits());
      assertTrue(meterPlot0.isOutlineVisible());
      assertNull(meterPlot0.getNoDataMessage());
      assertEquals(0.5F, meterPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(font0.isItalic());
      assertEquals("Tahoma", font0.getName());
      assertEquals(1, font0.getStyle());
      assertTrue(font0.isBold());
      assertFalse(font0.hasLayoutAttributes());
      assertFalse(font0.isTransformed());
      assertEquals(10, font0.getSize());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertTrue(chartPanel0.isDomainZoomable());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(750, chartPanel0.getInitialDelay());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertTrue(chartPanel0.getUseBuffer());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertTrue(chartPanel0.isRangeZoomable());
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(3.0F, MeterPlot.DEFAULT_BORDER_SIZE, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10.0F, MeterPlot.DEFAULT_CIRCLE_SIZE, 0.01F);
      assertEquals(270, MeterPlot.DEFAULT_METER_ANGLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      assertEquals(680, ChartPanel.DEFAULT_WIDTH);
      assertEquals(420, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      assertNotNull(combinedRangeXYPlot0);
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      combinedRangeXYPlot0.select((double) 1024, (double) 1.0F, (Rectangle2D) null, (RenderingSource) chartPanel0);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getRendererCount());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(xYPlot0.isRangeZoomable());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertFalse(xYPlot0.canSelectByPoint());
      assertTrue(xYPlot0.isNotify());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(xYPlot0.isSubplot());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertFalse(xYPlot0.isRangePannable());
      assertFalse(xYPlot0.isDomainPannable());
      assertTrue(xYPlot0.canSelectByRegion());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertFalse(meterPlot0.isSubplot());
      assertFalse(meterPlot0.getDrawBorder());
      assertEquals(1.0F, meterPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(10.0, meterPlot0.getTickSize(), 0.01);
      assertEquals(15, meterPlot0.getBackgroundImageAlignment());
      assertEquals(270, meterPlot0.getMeterAngle());
      assertTrue(meterPlot0.isNotify());
      assertEquals(1.0F, meterPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(meterPlot0.getTickLabelsVisible());
      assertEquals("Units", meterPlot0.getUnits());
      assertTrue(meterPlot0.isOutlineVisible());
      assertNull(meterPlot0.getNoDataMessage());
      assertEquals(0.5F, meterPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(font0.isItalic());
      assertEquals("Tahoma", font0.getName());
      assertEquals(1, font0.getStyle());
      assertTrue(font0.isBold());
      assertFalse(font0.hasLayoutAttributes());
      assertFalse(font0.isTransformed());
      assertEquals(10, font0.getSize());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertTrue(chartPanel0.isDomainZoomable());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(750, chartPanel0.getInitialDelay());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertTrue(chartPanel0.getUseBuffer());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertTrue(chartPanel0.isRangeZoomable());
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(3.0F, MeterPlot.DEFAULT_BORDER_SIZE, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10.0F, MeterPlot.DEFAULT_CIRCLE_SIZE, 0.01F);
      assertEquals(270, MeterPlot.DEFAULT_METER_ANGLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      assertEquals(680, ChartPanel.DEFAULT_WIDTH);
      assertEquals(420, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      Layer layer0 = Layer.FOREGROUND;
      assertNotNull(layer0);
      assertEquals("Layer.FOREGROUND", layer0.toString());
      
      boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker((Marker) categoryMarker0, layer0);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getRendererCount());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(xYPlot0.isRangeZoomable());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertFalse(xYPlot0.canSelectByPoint());
      assertTrue(xYPlot0.isNotify());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(xYPlot0.isSubplot());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertFalse(xYPlot0.isRangePannable());
      assertFalse(xYPlot0.isDomainPannable());
      assertTrue(xYPlot0.canSelectByRegion());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertFalse(categoryMarker0.getDrawAsLine());
      assertEquals(1.0F, categoryMarker0.getAlpha(), 0.01F);
      assertNull(categoryMarker0.getLabel());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertEquals("Layer.FOREGROUND", layer0.toString());
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(boolean0);
      
      xYPlot0.setRangeMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setWeight(2928);
      combinedRangeXYPlot0.getDomainAxisLocation(5273);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "gQWh7^~ztM5wKkDN");
      DateAxis dateAxis0 = new DateAxis((String) null, simpleTimeZone0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot1.isDomainCrosshairVisible();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      combinedRangeXYPlot2.getDomainCrosshairStroke();
      combinedRangeXYPlot1.getAnnotations();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2150.51361568021), combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10);
      candlestickRenderer0.getBaseURLGenerator();
      XYPlot xYPlot0 = new XYPlot();
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      combinedDomainXYPlot0.setRangeAxis(2, (ValueAxis) symbolAxis0, false);
      combinedDomainXYPlot0.isDomainPannable();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 885.13, stringArray0[3]);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(stringArray0[2], cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, false);
      combinedDomainXYPlot1.setDomainMinorGridlinesVisible(false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 496, 0, 680, 2, 501, true, false, false, false, false, false, false);
      jFreeChart0.createBufferedImage(680, 500);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.clone();
      JFreeChart jFreeChart1 = new JFreeChart("", combinedDomainXYPlot1);
      jFreeChart1.setBorderVisible(true);
      jFreeChart1.createBufferedImage(680, 420, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, 10);
      xYPlot0.panDomainAxes((-9.0), (PlotRenderingInfo) null, point0);
      xYPlot0.getOrientation();
      xYPlot0.getQuadrantPaint(0);
      xYPlot0.getLegendItems();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker(0, (Marker) categoryMarker0, layer0, true);
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      xYPlot0.clearDomainMarkers(10);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, (-1353));
      point0.setLocation((-3794.3387017), (double) 1.0F);
      BufferedImage bufferedImage0 = new BufferedImage(6, 1, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.drawAxes(graphics2D0, defaultCaret0, defaultCaret0, plotRenderingInfo0);
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, defaultCaret0);
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      xYPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      DatasetGroup datasetGroup0 = new DatasetGroup();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp((RenderingHints) null);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getRangeMarkers(669, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 669, chartRenderingInfo0);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      bufferedImage1.createGraphics();
      ValueAxis valueAxis0 = null;
      GeneralPath generalPath0 = null;
//      try {
        generalPath0 = new GeneralPath(10);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // winding rule must be WIND_EVEN_ODD or WIND_NON_ZERO
//         //
//         verifyException("java.awt.geom.Path2D", e);
//      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DatasetGroup datasetGroup0 = new DatasetGroup();
      jDBCXYDataset0.setGroup(datasetGroup0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      String string0 = "='dzOuzo[";
      ColorConvertOp colorConvertOp0 = new ColorConvertOp((RenderingHints) null);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      int int0 = 669;
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getRangeMarkers(669, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 669, chartRenderingInfo0);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      bufferedImage1.createGraphics();
      ValueAxis valueAxis0 = null;
      GeneralPath generalPath0 = null;
//      try {
        generalPath0 = new GeneralPath(10);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // winding rule must be WIND_EVEN_ODD or WIND_NON_ZERO
//         //
//         verifyException("java.awt.geom.Path2D", e);
//      }
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.LocalizationBundle");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("p{%eMD6K~#xxmHQ", combinedDomainXYPlot0);
      combinedDomainXYPlot1.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(2.0F, 3002.52F, renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      bufferedImage1.createGraphics();
      float[] floatArray0 = new float[1];
      floatArray0[0] = 1.0F;
      Kernel kernel0 = null;
//      try {
        kernel0 = new Kernel(10, 10, floatArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Data array too small (is 1 and should be 100
//         //
//         verifyException("java.awt.image.Kernel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      String string0 = "Requires 'index' >= 0.";
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setLabelPaint(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      Layer layer0 = null;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) categoryMarker0, (Layer) null, true);
      combinedRangeXYPlot0.removeRangeMarker(17, (Marker) categoryMarker0, (Layer) null, true);
      ValueMarker valueMarker0 = new ValueMarker((-4143.51983987443), combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      valueMarker0.equals((Object) null);
      // Undeclared exception!
//      try { 
        valueMarker0.setAlpha(1389.46F);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'alpha' value must be in the range 0.0f to 1.0f
//         //
//         verifyException("org.jfree.chart.plot.Marker", e);
//      }
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      String string0 = "";
      LogAxis logAxis0 = new LogAxis("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, "/]>sSI<qesjNxC");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.setDomainTickBandPaint(logAxis0.DEFAULT_AXIS_LINE_PAINT);
      int int0 = 44;
      xYPlot0.setDomainAxis(44, (ValueAxis) logAxis0, false);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      JFreeChart jFreeChart0 = new JFreeChart("", cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, false);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot1.setRangeCrosshairPaint(combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      int int1 = 500;
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 10;
      floatArray0[1] = 1.0F;
      floatArray0[2] = (float) 10;
      floatArray0[3] = 1.0F;
      floatArray0[4] = (-511.0F);
      floatArray0[5] = (float) 10;
      floatArray0[6] = (float) 10;
      floatArray0[7] = 1.0F;
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      // Undeclared exception!
//      try { 
        rescaleOp0.filter(bufferedImage0, bufferedImage0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Number of scaling constants does not equal the number of of color or color/alpha  components
//         //
//         verifyException("java.awt.image.RescaleOp", e);
//      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      combinedDomainXYPlot1.setRenderer(33, (XYItemRenderer) xYLineAndShapeRenderer0, true);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot1.getDomainMarkers(4, layer0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 1.0F;
      doubleArray0[1] = (double) xYDotRenderer0.ZERO;
      combinedDomainXYPlot1.getDomainAxis(10);
      GrayPaintScale grayPaintScale0 = null;
//      try {
        grayPaintScale0 = new GrayPaintScale(10.0, (double) xYDotRenderer0.ZERO, 500);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires lowerBound < upperBound.
//         //
//         verifyException("org.jfree.chart.renderer.GrayPaintScale", e);
//      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis0, true);
      combinedDomainXYPlot0.clearRangeMarkers(0);
      combinedDomainXYPlot0.clearDomainMarkers();
      PolarPlot polarPlot0 = new PolarPlot();
      Paint paint0 = polarPlot0.getRadiusGridlinePaint();
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(paint0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = 1.0F;
      Kernel kernel0 = new Kernel(0, 10, floatArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      combinedDomainXYPlot0.setBackgroundPaint(numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedDomainXYPlot0.mapDatasetToRangeAxis(10, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.05;
      doubleArray0[1] = (double) 15;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 0.05;
      doubleArray0[4] = (double) 1.0F;
      doubleArray0[2] = (double) 1.0F;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYPolygonAnnotation0);
      combinedDomainXYPlot0.getRangeAxisIndex(numberAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      combinedDomainXYPlot1.setRenderer(33, (XYItemRenderer) xYLineAndShapeRenderer0, true);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot1.getDomainMarkers(4, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot2.getRangeMarkers(layer1);
      combinedDomainXYPlot1.setRangePannable(true);
      combinedDomainXYPlot2.getWeight();
      combinedDomainXYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      combinedDomainXYPlot1.setRangeCrosshairPaint(xYDotRenderer0.DEFAULT_PAINT);
      combinedDomainXYPlot0.getOrientation();
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.getRangeAxisLocation((-1279));
      categoryMarker0.setLabelPaint(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      Layer layer0 = null;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) categoryMarker0, (Layer) null, true);
      categoryMarker0.setLabel("Requires 'index' >= 0.");
      combinedRangeXYPlot0.removeDomainMarker((-1463), (Marker) categoryMarker0, (Layer) null, true);
      JFreeChart jFreeChart0 = new JFreeChart("Requires 'index' >= 0.", combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
//      try { 
        jFreeChart0.createBufferedImage((-1), 10, chartRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Width (-1) and height (10) cannot be <= 0
//         //
//         verifyException("java.awt.image.DirectColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DatasetGroup datasetGroup0 = new DatasetGroup("RangeType.NEGATIVE");
      jDBCXYDataset0.setGroup(datasetGroup0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setTickMarkStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area(defaultXYItemRenderer0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge((-1410));
      numberAxis3D0.valueToJava2D((-1221.13658), rectangle2D0, rectangleEdge0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberAxis3D0, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0, false);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 40);
      bufferedImage0.createGraphics();
      combinedDomainXYPlot0.setDomainAxisLocation(1881, axisLocation0, true);
      xYPlot0.setRangeCrosshairValue((double) 10);
      combinedDomainXYPlot0.getRangeAxisLocation((-2050));
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0E-8);
      combinedDomainXYPlot0.addRangeMarker((Marker) intervalMarker0);
      combinedDomainXYPlot0.getAxisOffset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2289.643547820059, 1.0F, "F`U");
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.mapDatasetToRangeAxis(297, (-386));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot2.getRangeMarkers(layer0);
      combinedDomainXYPlot0.setRangePannable(false);
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot();
      combinedDomainXYPlot3.getWeight();
      combinedDomainXYPlot0.getRangeCrosshairValue();
      combinedDomainXYPlot3.getRangeAxisEdge();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection((XYSeries) null);
      combinedDomainXYPlot2.getRendererForDataset(xYSeriesCollection0);
      combinedDomainXYPlot2.getDomainMinorGridlinePaint();
      combinedDomainXYPlot2.getDataset(10);
      combinedDomainXYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LogAxis logAxis0 = new LogAxis("");
      xYPlot0.setRangeGridlineStroke(logAxis0.DEFAULT_AXIS_LINE_STROKE);
      PolarChartPanel polarChartPanel0 = null;
//      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.PolarChartPanel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis0, true);
      combinedDomainXYPlot0.clearRangeMarkers(0);
      combinedDomainXYPlot0.clearDomainMarkers();
      PolarPlot polarPlot0 = new PolarPlot();
      Paint paint0 = polarPlot0.getRadiusGridlinePaint();
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(paint0);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      waferMapRenderer0.getDrawingSupplier();
      polarPlot0.setDrawingSupplier((DrawingSupplier) null, true);
      float[] floatArray0 = new float[2];
      Kernel kernel0 = new Kernel(0, 10, floatArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      combinedDomainXYPlot0.setBackgroundPaint(numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedDomainXYPlot0.getDomainMarkers(1, (Layer) null);
      double[] doubleArray0 = new double[1];
      combinedDomainXYPlot0.setDomainCrosshairValue((-1.0));
      doubleArray0[0] = (double) 0;
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
//      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'polygon' array must contain an even number of items.
//         //
//         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
//      }
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      combinedDomainXYPlot1.setRenderer(33, (XYItemRenderer) xYLineAndShapeRenderer0, true);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot1.getDomainMarkers(4, layer0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 1.0F;
      doubleArray0[1] = (double) xYDotRenderer0.ZERO;
      combinedDomainXYPlot1.getDomainAxis(10);
      GrayPaintScale grayPaintScale0 = null;
//      try {
        grayPaintScale0 = new GrayPaintScale(10.0, (double) xYDotRenderer0.ZERO, 500);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires lowerBound < upperBound.
//         //
//         verifyException("org.jfree.chart.renderer.GrayPaintScale", e);
//      }
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis0, true);
      combinedDomainXYPlot0.clearRangeMarkers(0);
      combinedDomainXYPlot0.clearDomainMarkers();
      PolarPlot polarPlot0 = new PolarPlot();
      Paint paint0 = polarPlot0.getRadiusGridlinePaint();
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(paint0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = 1.0F;
      Kernel kernel0 = new Kernel(0, 10, floatArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      combinedDomainXYPlot0.setBackgroundPaint(numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedDomainXYPlot0.mapDatasetToRangeAxis(10, 0);
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(false);
      combinedDomainXYPlot0.getWeight();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.addDomainMarker((Marker) null, (Layer) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'marker' not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.removeRangeMarker(103, (Marker) null, layer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'marker' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation0, false);
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation1 = combinedRangeCategoryPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation1, true);
      combinedDomainXYPlot0.setRangeCrosshairValue(1.0);
      combinedDomainXYPlot0.getRangeAxisLocation(10);
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      IntervalMarker intervalMarker0 = new IntervalMarker(10.0, 2.5E8);
      combinedDomainXYPlot0.addRangeMarker((Marker) intervalMarker0);
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot1.mapDatasetToRangeAxis(0, (-1410));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.setRangePannable(false);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getWeight();
      combinedDomainXYPlot0.getRangeCrosshairValue();
      combinedDomainXYPlot2.getRangeAxisEdge();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection((XYSeries) null);
      combinedDomainXYPlot1.getRendererForDataset(xYSeriesCollection0);
      combinedDomainXYPlot2.getDomainMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(10, 1.0F, 66.44348255, 32.31, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedRangeXYPlot1.removeAnnotation((XYAnnotation) xYBoxAnnotation0, false);
      combinedRangeXYPlot1.add((XYPlot) combinedRangeXYPlot0, 10);
      JFreeChart jFreeChart0 = new JFreeChart("\fAszBS $", combinedRangeXYPlot1);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(486, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, (-3356.953F), 0.0F, 0.5F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      combinedRangeXYPlot1.calculateAxisSpace(graphics2D0, rectangle2D0);
      combinedRangeXYPlot0.getRangeAxis(10);
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.NodeDimensionsHandler basicTreeUI_NodeDimensionsHandler0 = basicTreeUI0.new NodeDimensionsHandler();
      Point2D.Double point2D_Double0 = new Point2D.Double(10, 10);
      Point point0 = new Point((-1908), 10);
      Rectangle rectangle0 = new Rectangle(point0);
      basicTreeUI_NodeDimensionsHandler0.getNodeDimensions(point2D_Double0, (-1908), 680, false, rectangle0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.calculateDomainAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.ValueAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      axisLocation0.getOpposite();
      combinedDomainXYPlot0.setRangeAxisLocation(0, axisLocation0, true);
      combinedDomainXYPlot0.getDataset(479);
      combinedDomainXYPlot0.getPlotType();
      DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainXYPlot0.getDatasetRenderingOrder();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis("Combined_Domain_XYPlot");
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot2.setDatasetRenderingOrder(datasetRenderingOrder0);
      Vector<DefaultKeyedValues2DDataset> vector0 = new Vector<DefaultKeyedValues2DDataset>();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      combinedDomainXYPlot1.getRangeTickBandPaint();
      linkedList0.containsAll(vector0);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot1.mapDatasetToRangeAxes(10, linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Empty list not permitted.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setLabelPaint(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) categoryMarker0, (Layer) null, true);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainAxisLocation(17, axisLocation0, false);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      int int0 = 3206;
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3206, 17);
      bufferedImage0.createGraphics();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, (Rectangle2D) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.NumberAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation0, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.getDomainAxisLocation();
      Graphics2D graphics2D0 = null;
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(10);
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, false, false);
      Rectangle2D rectangle2D0 = combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT.getMaxCharBounds(fontRenderContext0);
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D0);
      Color color0 = (Color)PeriodAxisLabelInfo.DEFAULT_LABEL_PAINT;
      combinedDomainXYPlot0.setRangeCrosshairPaint(color0);
      combinedDomainXYPlot0.calculateDomainAxisSpace((Graphics2D) null, rectangle2D0, axisSpace0);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(0, (XYItemRenderer) xYDotRenderer0, true);
      BufferedImage bufferedImage0 = null;
//      try {
        bufferedImage0 = new BufferedImage((-1410), (-1), 2129);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown image type 2129
//         //
//         verifyException("java.awt.image.BufferedImage", e);
//      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DatasetGroup datasetGroup0 = new DatasetGroup("RangeType.NEGATIVE");
      jDBCXYDataset0.setGroup(datasetGroup0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setTickMarkStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area(defaultXYItemRenderer0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge((-1410));
      numberAxis3D0.valueToJava2D((-1221.13658), rectangle2D0, rectangleEdge0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberAxis3D0, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0, false);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 40);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      xYPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D0, axisSpace0);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) defaultXYItemRenderer0, true);
      BufferedImage bufferedImage1 = new BufferedImage(500, 221, 10);
      Graphics2D graphics2D1 = bufferedImage1.createGraphics();
      LinkedList<NumberAxis3D> linkedList0 = new LinkedList<NumberAxis3D>();
      xYPlot0.drawRangeTickBands(graphics2D1, rectangle2D0, linkedList0);
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      IntervalMarker intervalMarker0 = new IntervalMarker(10.0, 2.5E8);
      combinedDomainXYPlot0.addRangeMarker((Marker) intervalMarker0);
      combinedDomainXYPlot0.getDomainAxisEdge();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot1.mapDatasetToRangeAxis(0, (-1410));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.setRangePannable(false);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getWeight();
      combinedDomainXYPlot0.getRangeCrosshairValue();
      combinedDomainXYPlot2.getRangeAxisEdge();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection((XYSeries) null);
      combinedDomainXYPlot1.getRendererForDataset(xYSeriesCollection0);
      combinedDomainXYPlot2.getDomainMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      LogAxis logAxis0 = new LogAxis("");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logAxis0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, "/]>sSI<qesjNxC");
      combinedDomainXYPlot0.setDomainTickBandPaint(xYPlot0.DEFAULT_BACKGROUND_PAINT);
      xYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      JFreeChart jFreeChart0 = new JFreeChart("/]>sSI<qesjNxC", cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, false);
      combinedDomainXYPlot0.setRangeCrosshairPaint(logAxis0.DEFAULT_TICK_LABEL_PAINT);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      bufferedImage0.createGraphics();
      PolarChartPanel polarChartPanel0 = null;
//      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // plot is not a PolarPlot
//         //
//         verifyException("org.jfree.chart.PolarChartPanel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      combinedDomainXYPlot1.setRenderer(33, (XYItemRenderer) xYLineAndShapeRenderer0, true);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot1.getDomainMarkers(4, layer0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 1.0F;
      doubleArray0[1] = (double) xYDotRenderer0.ZERO;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYPolygonAnnotation0);
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DatasetGroup datasetGroup0 = new DatasetGroup("RangeType.NEGATIVE");
      jDBCXYDataset0.setGroup(datasetGroup0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      String string0 = "='dzOuzo[";
      ColorConvertOp colorConvertOp0 = new ColorConvertOp((RenderingHints) null);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      int int0 = 669;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 669, (double) defaultXYItemRenderer0.ZERO, (double) 10, chartRenderingInfo0);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      bufferedImage1.createGraphics();
      ValueAxis valueAxis0 = null;
      GeneralPath generalPath0 = null;
//      try {
        generalPath0 = new GeneralPath(10);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // winding rule must be WIND_EVEN_ODD or WIND_NON_ZERO
//         //
//         verifyException("java.awt.geom.Path2D", e);
//      }
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 0.5235987755982988);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LegendItemCollection legendItemCollection0 = combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
      String string0 = "Null 'negativeBarPaint' argument";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 2311.091878, "Null 'negativeBarPaint' argument");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(500, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setLabelPaint(cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      cyclicNumberAxis0.setLowerBound(1.0F);
      Layer layer0 = null;
      combinedRangeXYPlot0.isRangeZoomable();
      combinedRangeXYPlot0.addRangeMarker(10, (Marker) intervalMarker0, (Layer) null, false);
      float float0 = (-146.30951F);
      ValueMarker valueMarker0 = null;
//      try {
        valueMarker0 = new ValueMarker(10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, (-146.30951F));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'alpha' value must be in the range 0.0f to 1.0f
//         //
//         verifyException("org.jfree.chart.plot.Marker", e);
//      }
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      StandardXYZURLGenerator standardXYZURLGenerator0 = new StandardXYZURLGenerator();
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      standardXYZURLGenerator0.equals(stackedXYAreaRenderer2_0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYToolTipGenerator0, standardXYZURLGenerator0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, xYAreaRenderer2_0);
      DecimalFormat decimalFormat0 = new DecimalFormat("_~Pm-sQt*l]/V~NTZ0g");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      ValueMarker valueMarker0 = new ValueMarker(10.0, stackedXYAreaRenderer2_0.DEFAULT_VALUE_LABEL_PAINT, stackedXYAreaRenderer2_0.DEFAULT_OUTLINE_STROKE);
      ValueMarker valueMarker1 = new ValueMarker(0.0);
      valueMarker1.setLabelFont(stackedXYAreaRenderer2_0.DEFAULT_VALUE_LABEL_FONT);
      NumberFormat.getNumberInstance();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation1 = combinedRangeCategoryPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(5273, axisLocation1, false);
      combinedDomainXYPlot0.setRangeCrosshairValue((-2154.824554));
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, "/]>sSI<qesjNxC");
      combinedDomainXYPlot0.setDomainTickBandPaint(xYPlot0.DEFAULT_BACKGROUND_PAINT);
      xYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0, false);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      xYPlot0.setDomainMinorGridlinePaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      xYPlot0.setDomainGridlinesVisible(true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-5);
      byteArray0[4] = (byte)104;
      IndexColorModel indexColorModel0 = null;
//      try {
        indexColorModel0 = new IndexColorModel(10, 10, byteArray0, (byte) (-5), false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -5
//         //
//         verifyException("java.awt.image.IndexColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, "/]>sSI<qesjNxC");
      boolean boolean0 = true;
      combinedDomainXYPlot0.setDomainTickBandPaint(xYPlot0.DEFAULT_BACKGROUND_PAINT);
      xYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      JFreeChart jFreeChart0 = new JFreeChart("/]>sSI<qesjNxC", cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      bufferedImage0.createGraphics();
      PolarChartPanel polarChartPanel0 = null;
//      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // plot is not a PolarPlot
//         //
//         verifyException("org.jfree.chart.PolarChartPanel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-408.750235348053));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainTickBandPaint(cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainXYPlot0.setDomainAxis(2367, (ValueAxis) null, true);
      boolean boolean0 = true;
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      combinedDomainXYPlot0.setDomainMinorGridlinePaint(cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainXYPlot0.setDomainGridlinesVisible(true);
      byte[] byteArray0 = new byte[0];
      int int0 = 604;
      IndexColorModel indexColorModel0 = null;
//      try {
        indexColorModel0 = new IndexColorModel(10, 10, byteArray0, 604, false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 604
//         //
//         verifyException("java.awt.image.IndexColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 0.5235987755982988);
      String string0 = "Null 'negativeBarPaint' argument";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 2311.091878, "Null 'negativeBarPaint' argument");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(500, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setLabelPaint(cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      Layer layer0 = null;
      combinedRangeXYPlot0.addRangeMarker(10, (Marker) intervalMarker0, (Layer) null, false);
      float float0 = (-146.30951F);
      ValueMarker valueMarker0 = null;
//      try {
        valueMarker0 = new ValueMarker(10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, (-146.30951F));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'alpha' value must be in the range 0.0f to 1.0f
//         //
//         verifyException("org.jfree.chart.plot.Marker", e);
//      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setWeight(2928);
      int int0 = 5273;
      PlotRenderingInfo plotRenderingInfo0 = null;
      MultiListUI multiListUI0 = new MultiListUI();
      Integer[] integerArray0 = new Integer[1];
      combinedRangeXYPlot0.setRangeZeroBaselineVisible(true);
      Integer integer0 = new Integer(5273);
      integerArray0[0] = integer0;
      JList<Integer> jList0 = new JList<Integer>(integerArray0);
      // Undeclared exception!
//      try { 
        multiListUI0.indexToLocation(jList0, 0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0 >= 0
//         //
//         verifyException("java.util.Vector", e);
//      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, false);
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      combinedDomainXYPlot0.setDomainAxisLocation(1632, axisLocation0, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getDomainAxisLocation();
      int int0 = (-1);
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((-1), axisLocation0, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DatasetGroup datasetGroup0 = new DatasetGroup("RangeType.NEGATIVE");
      jDBCXYDataset0.setGroup(datasetGroup0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setTickMarkStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area(defaultXYItemRenderer0.DEFAULT_SHAPE);
      ValueMarker valueMarker0 = new ValueMarker(0.0, xYPlot0.DEFAULT_GRIDLINE_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      valueMarker0.setLabelFont(xYTextAnnotation0.DEFAULT_FONT);
      NumberFormat.getNumberInstance();
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      Range range0 = xYBlockRenderer0.findRangeBounds(jDBCXYDataset0);
      numberAxis3D0.setDefaultAutoRange(range0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getDomainAxisLocation();
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((-1390), axisLocation0, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation0, true);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(0, (XYItemRenderer) xYDotRenderer0, false);
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setLabelPaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.removeDomainMarker((Marker) categoryMarker0, (Layer) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getDrawingSupplier();
      xYPlot0.setDrawingSupplier((DrawingSupplier) null);
      categoryMarker0.setLabel((String) null);
      xYPlot0.removeDomainMarker((-1463), (Marker) categoryMarker0, (Layer) null, false);
      xYPlot0.getRendererCount();
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getAxisOffset();
      axisLocation0.getOpposite();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation0, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot1.getWeight();
      combinedDomainXYPlot0.getRangeCrosshairValue();
      combinedDomainXYPlot1.getRangeAxisEdge();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection((XYSeries) null);
      combinedDomainXYPlot1.getRendererForDataset(xYSeriesCollection0);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot1.setRenderer((XYItemRenderer) null);
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DatasetGroup datasetGroup0 = new DatasetGroup("RangeType.NEGATIVE");
      jDBCXYDataset0.setGroup(datasetGroup0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setTickMarkStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area(defaultXYItemRenderer0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge((-1410));
      numberAxis3D0.valueToJava2D((-1221.13658), rectangle2D0, rectangleEdge0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberAxis3D0, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0, false);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) defaultXYItemRenderer0, true);
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      DateAxis dateAxis0 = new DateAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 1254.4334342);
      Locale locale0 = Locale.CHINA;
      NumberFormat.getCurrencyInstance(locale0);
      NumberFormat.getIntegerInstance(locale0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(18, axisLocation0, true);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(500, (XYItemRenderer) xYDotRenderer0, true);
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      assertNotNull(defaultIntervalXYDataset0);
      assertEquals(0, defaultIntervalXYDataset0.getSeriesCount());
      
      DateAxis dateAxis0 = new DateAxis();
      assertNotNull(dateAxis0);
      assertFalse(dateAxis0.isNegativeArrowVisible());
      assertEquals(2.0, dateAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(dateAxis0.isAutoRange());
      assertEquals(0.0, dateAxis0.getLowerBound(), 0.01);
      assertFalse(dateAxis0.isPositiveArrowVisible());
      assertEquals(2.0F, dateAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(dateAxis0.isInverted());
      assertEquals(0.0F, dateAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertNull(dateAxis0.getLabel());
      assertEquals(0, dateAxis0.getMinorTickCount());
      assertTrue(dateAxis0.isVisible());
      assertEquals(0.05, dateAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0F, dateAxis0.getTickMarkInsideLength(), 0.01F);
      assertNull(dateAxis0.getLabelToolTip());
      assertEquals(0.0, dateAxis0.getFixedAutoRange(), 0.01);
      assertFalse(dateAxis0.isVerticalTickLabels());
      assertTrue(dateAxis0.isTickMarksVisible());
      assertNull(dateAxis0.getLabelURL());
      assertTrue(dateAxis0.isTickLabelsVisible());
      assertEquals(2.0F, dateAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertFalse(dateAxis0.isMinorTickMarksVisible());
      assertEquals(1.0, dateAxis0.getUpperBound(), 0.01);
      assertEquals(0.0, dateAxis0.getFixedDimension(), 0.01);
      assertTrue(dateAxis0.isAxisLineVisible());
      assertTrue(dateAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, dateAxis0.getLabelAngle(), 0.01);
      assertEquals(0.05, dateAxis0.getLowerMargin(), 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(2.0, DateAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS, 0.01);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 1254.4334342);
      assertNotNull(cyclicNumberAxis0);
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertEquals(0.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertNull(cyclicNumberAxis0.getLabel());
      assertFalse(cyclicNumberAxis0.isInverted());
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(1254.4334342, cyclicNumberAxis0.getOffset(), 0.01);
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      
      Locale locale0 = Locale.ITALY;
      assertNotNull(locale0);
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getCurrencyInstance(locale0);
      assertNotNull(decimalFormat0);
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("-\u20AC ", decimalFormat0.getNegativePrefix());
      assertEquals("\u00A4 #,##0.00", decimalFormat0.toPattern());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(3, decimalFormat0.getGroupingSize());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
      assertEquals("\u00A4 #.##0,00", decimalFormat0.toLocalizedPattern());
      assertEquals(2, decimalFormat0.getMaximumFractionDigits());
      assertTrue(decimalFormat0.isGroupingUsed());
      assertEquals("\u20AC ", decimalFormat0.getPositivePrefix());
      
      DecimalFormat decimalFormat1 = (DecimalFormat)NumberFormat.getIntegerInstance(locale0);
      assertNotSame(decimalFormat1, decimalFormat0);
      assertFalse(decimalFormat1.equals((Object)decimalFormat0));
      assertNotNull(decimalFormat1);
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("", decimalFormat1.getPositivePrefix());
      assertEquals(1, decimalFormat1.getMinimumIntegerDigits());
      assertEquals("#.##0", decimalFormat1.toLocalizedPattern());
      assertEquals(0, decimalFormat1.getMaximumFractionDigits());
      assertTrue(decimalFormat1.isParseIntegerOnly());
      assertTrue(decimalFormat1.isGroupingUsed());
      assertFalse(decimalFormat1.isDecimalSeparatorAlwaysShown());
      assertEquals("#,##0", decimalFormat1.toPattern());
      assertEquals(0, decimalFormat1.getMinimumFractionDigits());
      assertEquals(Integer.MAX_VALUE, decimalFormat1.getMaximumIntegerDigits());
      assertEquals("", decimalFormat1.getPositiveSuffix());
      assertFalse(decimalFormat1.isParseBigDecimal());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat1.getRoundingMode());
      assertEquals(3, decimalFormat1.getGroupingSize());
      assertEquals("-", decimalFormat1.getNegativePrefix());
      assertEquals("", decimalFormat1.getNegativeSuffix());
      assertEquals(1, decimalFormat1.getMultiplier());
      
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", decimalFormat0, decimalFormat1, decimalFormat0);
      assertFalse(decimalFormat0.equals((Object)decimalFormat1));
      assertFalse(decimalFormat1.equals((Object)decimalFormat0));
      assertNotNull(standardXYZToolTipGenerator0);
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("-\u20AC ", decimalFormat0.getNegativePrefix());
      assertEquals("\u00A4 #,##0.00", decimalFormat0.toPattern());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(3, decimalFormat0.getGroupingSize());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
      assertEquals("\u00A4 #.##0,00", decimalFormat0.toLocalizedPattern());
      assertEquals(2, decimalFormat0.getMaximumFractionDigits());
      assertTrue(decimalFormat0.isGroupingUsed());
      assertEquals("\u20AC ", decimalFormat0.getPositivePrefix());
      assertEquals("", decimalFormat1.getPositivePrefix());
      assertEquals(1, decimalFormat1.getMinimumIntegerDigits());
      assertEquals("#.##0", decimalFormat1.toLocalizedPattern());
      assertEquals(0, decimalFormat1.getMaximumFractionDigits());
      assertTrue(decimalFormat1.isParseIntegerOnly());
      assertTrue(decimalFormat1.isGroupingUsed());
      assertFalse(decimalFormat1.isDecimalSeparatorAlwaysShown());
      assertEquals("#,##0", decimalFormat1.toPattern());
      assertEquals(0, decimalFormat1.getMinimumFractionDigits());
      assertEquals(Integer.MAX_VALUE, decimalFormat1.getMaximumIntegerDigits());
      assertEquals("", decimalFormat1.getPositiveSuffix());
      assertFalse(decimalFormat1.isParseBigDecimal());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat1.getRoundingMode());
      assertEquals(3, decimalFormat1.getGroupingSize());
      assertEquals("-", decimalFormat1.getNegativePrefix());
      assertEquals("", decimalFormat1.getNegativeSuffix());
      assertEquals(1, decimalFormat1.getMultiplier());
      assertEquals("", standardXYZToolTipGenerator0.getFormatString());
      assertEquals("null", standardXYZToolTipGenerator0.getNullYString());
      
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      assertNotNull(standardXYURLGenerator0);
      
      boolean boolean0 = standardXYURLGenerator0.equals(cyclicNumberAxis0);
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertEquals(0.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertNull(cyclicNumberAxis0.getLabel());
      assertFalse(cyclicNumberAxis0.isInverted());
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(1254.4334342, cyclicNumberAxis0.getOffset(), 0.01);
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertFalse(boolean0);
      
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      assertFalse(decimalFormat0.equals((Object)decimalFormat1));
      assertFalse(decimalFormat1.equals((Object)decimalFormat0));
      assertNotNull(xYAreaRenderer2_0);
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("-\u20AC ", decimalFormat0.getNegativePrefix());
      assertEquals("\u00A4 #,##0.00", decimalFormat0.toPattern());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(3, decimalFormat0.getGroupingSize());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
      assertEquals("\u00A4 #.##0,00", decimalFormat0.toLocalizedPattern());
      assertEquals(2, decimalFormat0.getMaximumFractionDigits());
      assertTrue(decimalFormat0.isGroupingUsed());
      assertEquals("\u20AC ", decimalFormat0.getPositivePrefix());
      assertEquals("", decimalFormat1.getPositivePrefix());
      assertEquals(1, decimalFormat1.getMinimumIntegerDigits());
      assertEquals("#.##0", decimalFormat1.toLocalizedPattern());
      assertEquals(0, decimalFormat1.getMaximumFractionDigits());
      assertTrue(decimalFormat1.isParseIntegerOnly());
      assertTrue(decimalFormat1.isGroupingUsed());
      assertFalse(decimalFormat1.isDecimalSeparatorAlwaysShown());
      assertEquals("#,##0", decimalFormat1.toPattern());
      assertEquals(0, decimalFormat1.getMinimumFractionDigits());
      assertEquals(Integer.MAX_VALUE, decimalFormat1.getMaximumIntegerDigits());
      assertEquals("", decimalFormat1.getPositiveSuffix());
      assertFalse(decimalFormat1.isParseBigDecimal());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat1.getRoundingMode());
      assertEquals(3, decimalFormat1.getGroupingSize());
      assertEquals("-", decimalFormat1.getNegativePrefix());
      assertEquals("", decimalFormat1.getNegativeSuffix());
      assertEquals(1, decimalFormat1.getMultiplier());
      assertEquals("", standardXYZToolTipGenerator0.getFormatString());
      assertEquals("null", standardXYZToolTipGenerator0.getNullYString());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesPaint());
      assertTrue(xYAreaRenderer2_0.getBaseCreateEntities());
      assertEquals(3, xYAreaRenderer2_0.getDefaultEntityRadius());
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYAreaRenderer2_0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisibleInLegend());
      assertEquals(1, xYAreaRenderer2_0.getPassCount());
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisible());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesStroke());
      assertFalse(xYAreaRenderer2_0.getBaseItemLabelsVisible());
      assertFalse(xYAreaRenderer2_0.isOutline());
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesShape());
      assertEquals(2.0, xYAreaRenderer2_0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesOutlineStroke());
      
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, dateAxis0, cyclicNumberAxis0, xYAreaRenderer2_0);
      assertFalse(decimalFormat0.equals((Object)decimalFormat1));
      assertFalse(decimalFormat1.equals((Object)decimalFormat0));
      assertNotNull(xYPlot0);
      assertEquals(0, defaultIntervalXYDataset0.getSeriesCount());
      assertFalse(dateAxis0.isNegativeArrowVisible());
      assertEquals(2.0, dateAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(dateAxis0.isAutoRange());
      assertEquals(0.0, dateAxis0.getLowerBound(), 0.01);
      assertFalse(dateAxis0.isPositiveArrowVisible());
      assertEquals(2.0F, dateAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(dateAxis0.isInverted());
      assertEquals(0.0F, dateAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertNull(dateAxis0.getLabel());
      assertEquals(0, dateAxis0.getMinorTickCount());
      assertTrue(dateAxis0.isVisible());
      assertEquals(0.05, dateAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0F, dateAxis0.getTickMarkInsideLength(), 0.01F);
      assertNull(dateAxis0.getLabelToolTip());
      assertEquals(0.0, dateAxis0.getFixedAutoRange(), 0.01);
      assertFalse(dateAxis0.isVerticalTickLabels());
      assertTrue(dateAxis0.isTickMarksVisible());
      assertNull(dateAxis0.getLabelURL());
      assertTrue(dateAxis0.isTickLabelsVisible());
      assertEquals(2.0F, dateAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertFalse(dateAxis0.isMinorTickMarksVisible());
      assertEquals(1.0, dateAxis0.getUpperBound(), 0.01);
      assertEquals(0.0, dateAxis0.getFixedDimension(), 0.01);
      assertTrue(dateAxis0.isAxisLineVisible());
      assertTrue(dateAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, dateAxis0.getLabelAngle(), 0.01);
      assertEquals(0.05, dateAxis0.getLowerMargin(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertEquals(1.05, cyclicNumberAxis0.getPeriod(), 0.01);
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertEquals(0.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertEquals(1.05, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertNull(cyclicNumberAxis0.getLabel());
      assertFalse(cyclicNumberAxis0.isInverted());
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(1254.4334342, cyclicNumberAxis0.getOffset(), 0.01);
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("-\u20AC ", decimalFormat0.getNegativePrefix());
      assertEquals("\u00A4 #,##0.00", decimalFormat0.toPattern());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(3, decimalFormat0.getGroupingSize());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
      assertEquals("\u00A4 #.##0,00", decimalFormat0.toLocalizedPattern());
      assertEquals(2, decimalFormat0.getMaximumFractionDigits());
      assertTrue(decimalFormat0.isGroupingUsed());
      assertEquals("\u20AC ", decimalFormat0.getPositivePrefix());
      assertEquals("", decimalFormat1.getPositivePrefix());
      assertEquals(1, decimalFormat1.getMinimumIntegerDigits());
      assertEquals("#.##0", decimalFormat1.toLocalizedPattern());
      assertEquals(0, decimalFormat1.getMaximumFractionDigits());
      assertTrue(decimalFormat1.isParseIntegerOnly());
      assertTrue(decimalFormat1.isGroupingUsed());
      assertFalse(decimalFormat1.isDecimalSeparatorAlwaysShown());
      assertEquals("#,##0", decimalFormat1.toPattern());
      assertEquals(0, decimalFormat1.getMinimumFractionDigits());
      assertEquals(Integer.MAX_VALUE, decimalFormat1.getMaximumIntegerDigits());
      assertEquals("", decimalFormat1.getPositiveSuffix());
      assertFalse(decimalFormat1.isParseBigDecimal());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat1.getRoundingMode());
      assertEquals(3, decimalFormat1.getGroupingSize());
      assertEquals("-", decimalFormat1.getNegativePrefix());
      assertEquals("", decimalFormat1.getNegativeSuffix());
      assertEquals(1, decimalFormat1.getMultiplier());
      assertEquals("", standardXYZToolTipGenerator0.getFormatString());
      assertEquals("null", standardXYZToolTipGenerator0.getNullYString());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesPaint());
      assertTrue(xYAreaRenderer2_0.getBaseCreateEntities());
      assertEquals(3, xYAreaRenderer2_0.getDefaultEntityRadius());
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYAreaRenderer2_0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisibleInLegend());
      assertEquals(1, xYAreaRenderer2_0.getPassCount());
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisible());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesStroke());
      assertFalse(xYAreaRenderer2_0.getBaseItemLabelsVisible());
      assertFalse(xYAreaRenderer2_0.isOutline());
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesShape());
      assertEquals(2.0, xYAreaRenderer2_0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertEquals(1, xYPlot0.getRendererCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertTrue(xYPlot0.canSelectByRegion());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isRangeZoomable());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(xYPlot0.isSubplot());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isOutlineVisible());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertTrue(xYPlot0.isNotify());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.canSelectByPoint());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangePannable());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(2.0, DateAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS, 0.01);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      
      DecimalFormat decimalFormat2 = new DecimalFormat("");
      xYPlot0.setRangeCrosshairVisible(false);
      ValueMarker valueMarker0 = new ValueMarker(2.5E-7, dateAxis0.DEFAULT_TICK_LABEL_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      valueMarker0.setLabelFont(dateAxis0.DEFAULT_TICK_LABEL_FONT);
      NumberFormat.getNumberInstance();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      combinedDomainXYPlot0.setRenderer(500, (XYItemRenderer) xYAreaRenderer2_0, false);
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      assertNotNull(combinedDomainXYPlot0);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      
      int int0 = (-4245);
      combinedDomainXYPlot0.setDomainPannable(true);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainPannable());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      
      JTabbedPane jTabbedPane0 = null;
//      try {
        jTabbedPane0 = new JTabbedPane((-4245), (-116));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
//         //
//         verifyException("javax.swing.JTabbedPane", e);
//      }
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      assertNotNull(defaultIntervalXYDataset0);
      assertEquals(0, defaultIntervalXYDataset0.getSeriesCount());
      
      DateAxis dateAxis0 = new DateAxis();
      assertNotNull(dateAxis0);
      assertTrue(dateAxis0.isVisible());
      assertNull(dateAxis0.getLabel());
      assertTrue(dateAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, dateAxis0.getFixedDimension(), 0.01);
      assertFalse(dateAxis0.isPositiveArrowVisible());
      assertEquals(0.05, dateAxis0.getUpperMargin(), 0.01);
      assertEquals(0, dateAxis0.getMinorTickCount());
      assertEquals(0.0, dateAxis0.getLowerBound(), 0.01);
      assertNull(dateAxis0.getLabelToolTip());
      assertEquals(0.0F, dateAxis0.getTickMarkInsideLength(), 0.01F);
      assertFalse(dateAxis0.isMinorTickMarksVisible());
      assertEquals(0.0, dateAxis0.getFixedAutoRange(), 0.01);
      assertEquals(0.0F, dateAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(dateAxis0.isTickMarksVisible());
      assertFalse(dateAxis0.isInverted());
      assertFalse(dateAxis0.isNegativeArrowVisible());
      assertTrue(dateAxis0.isAxisLineVisible());
      assertTrue(dateAxis0.isTickLabelsVisible());
      assertEquals(1.0, dateAxis0.getUpperBound(), 0.01);
      assertEquals(2.0F, dateAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(dateAxis0.isVerticalTickLabels());
      assertTrue(dateAxis0.isAutoRange());
      assertEquals(0.0, dateAxis0.getLabelAngle(), 0.01);
      assertEquals(0.05, dateAxis0.getLowerMargin(), 0.01);
      assertNull(dateAxis0.getLabelURL());
      assertEquals(2.0, dateAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, dateAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0, DateAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS, 0.01);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 1254.4334342);
      assertNotNull(cyclicNumberAxis0);
      assertTrue(cyclicNumberAxis0.isVisible());
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(1254.4334342, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(0.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
      assertNull(cyclicNumberAxis0.getLabel());
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertFalse(cyclicNumberAxis0.isInverted());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertEquals(0.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      
      Locale locale0 = Locale.ITALY;
      assertNotNull(locale0);
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getCurrencyInstance(locale0);
      assertNotNull(decimalFormat0);
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("\u00A4 #,##0.00", decimalFormat0.toPattern());
      assertEquals("-\u20AC ", decimalFormat0.getNegativePrefix());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertEquals(3, decimalFormat0.getGroupingSize());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
      assertEquals("\u00A4 #.##0,00", decimalFormat0.toLocalizedPattern());
      assertEquals("\u20AC ", decimalFormat0.getPositivePrefix());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertTrue(decimalFormat0.isGroupingUsed());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals(2, decimalFormat0.getMaximumFractionDigits());
      assertEquals(1, decimalFormat0.getMultiplier());
      
      DecimalFormat decimalFormat1 = (DecimalFormat)NumberFormat.getIntegerInstance(locale0);
      assertNotSame(decimalFormat1, decimalFormat0);
      assertFalse(decimalFormat1.equals((Object)decimalFormat0));
      assertNotNull(decimalFormat1);
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("#,##0", decimalFormat1.toPattern());
      assertEquals(0, decimalFormat1.getMinimumFractionDigits());
      assertFalse(decimalFormat1.isParseBigDecimal());
      assertFalse(decimalFormat1.isDecimalSeparatorAlwaysShown());
      assertEquals(Integer.MAX_VALUE, decimalFormat1.getMaximumIntegerDigits());
      assertTrue(decimalFormat1.isParseIntegerOnly());
      assertEquals(0, decimalFormat1.getMaximumFractionDigits());
      assertTrue(decimalFormat1.isGroupingUsed());
      assertEquals("", decimalFormat1.getPositivePrefix());
      assertEquals("", decimalFormat1.getNegativeSuffix());
      assertEquals(1, decimalFormat1.getMinimumIntegerDigits());
      assertEquals("#.##0", decimalFormat1.toLocalizedPattern());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat1.getRoundingMode());
      assertEquals(1, decimalFormat1.getMultiplier());
      assertEquals("-", decimalFormat1.getNegativePrefix());
      assertEquals("", decimalFormat1.getPositiveSuffix());
      assertEquals(3, decimalFormat1.getGroupingSize());
      
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", decimalFormat0, decimalFormat1, decimalFormat0);
      assertFalse(decimalFormat0.equals((Object)decimalFormat1));
      assertFalse(decimalFormat1.equals((Object)decimalFormat0));
      assertNotNull(standardXYZToolTipGenerator0);
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("\u00A4 #,##0.00", decimalFormat0.toPattern());
      assertEquals("-\u20AC ", decimalFormat0.getNegativePrefix());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertEquals(3, decimalFormat0.getGroupingSize());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
      assertEquals("\u00A4 #.##0,00", decimalFormat0.toLocalizedPattern());
      assertEquals("\u20AC ", decimalFormat0.getPositivePrefix());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertTrue(decimalFormat0.isGroupingUsed());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals(2, decimalFormat0.getMaximumFractionDigits());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("#,##0", decimalFormat1.toPattern());
      assertEquals(0, decimalFormat1.getMinimumFractionDigits());
      assertFalse(decimalFormat1.isParseBigDecimal());
      assertFalse(decimalFormat1.isDecimalSeparatorAlwaysShown());
      assertEquals(Integer.MAX_VALUE, decimalFormat1.getMaximumIntegerDigits());
      assertTrue(decimalFormat1.isParseIntegerOnly());
      assertEquals(0, decimalFormat1.getMaximumFractionDigits());
      assertTrue(decimalFormat1.isGroupingUsed());
      assertEquals("", decimalFormat1.getPositivePrefix());
      assertEquals("", decimalFormat1.getNegativeSuffix());
      assertEquals(1, decimalFormat1.getMinimumIntegerDigits());
      assertEquals("#.##0", decimalFormat1.toLocalizedPattern());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat1.getRoundingMode());
      assertEquals(1, decimalFormat1.getMultiplier());
      assertEquals("-", decimalFormat1.getNegativePrefix());
      assertEquals("", decimalFormat1.getPositiveSuffix());
      assertEquals(3, decimalFormat1.getGroupingSize());
      assertEquals("", standardXYZToolTipGenerator0.getFormatString());
      assertEquals("null", standardXYZToolTipGenerator0.getNullYString());
      
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      assertNotNull(standardXYURLGenerator0);
      
      boolean boolean0 = standardXYURLGenerator0.equals(cyclicNumberAxis0);
      assertTrue(cyclicNumberAxis0.isVisible());
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(1254.4334342, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(0.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
      assertNull(cyclicNumberAxis0.getLabel());
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertFalse(cyclicNumberAxis0.isInverted());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertEquals(0.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertFalse(boolean0);
      
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      assertFalse(decimalFormat0.equals((Object)decimalFormat1));
      assertFalse(decimalFormat1.equals((Object)decimalFormat0));
      assertNotNull(xYAreaRenderer2_0);
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("\u00A4 #,##0.00", decimalFormat0.toPattern());
      assertEquals("-\u20AC ", decimalFormat0.getNegativePrefix());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertEquals(3, decimalFormat0.getGroupingSize());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
      assertEquals("\u00A4 #.##0,00", decimalFormat0.toLocalizedPattern());
      assertEquals("\u20AC ", decimalFormat0.getPositivePrefix());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertTrue(decimalFormat0.isGroupingUsed());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals(2, decimalFormat0.getMaximumFractionDigits());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("#,##0", decimalFormat1.toPattern());
      assertEquals(0, decimalFormat1.getMinimumFractionDigits());
      assertFalse(decimalFormat1.isParseBigDecimal());
      assertFalse(decimalFormat1.isDecimalSeparatorAlwaysShown());
      assertEquals(Integer.MAX_VALUE, decimalFormat1.getMaximumIntegerDigits());
      assertTrue(decimalFormat1.isParseIntegerOnly());
      assertEquals(0, decimalFormat1.getMaximumFractionDigits());
      assertTrue(decimalFormat1.isGroupingUsed());
      assertEquals("", decimalFormat1.getPositivePrefix());
      assertEquals("", decimalFormat1.getNegativeSuffix());
      assertEquals(1, decimalFormat1.getMinimumIntegerDigits());
      assertEquals("#.##0", decimalFormat1.toLocalizedPattern());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat1.getRoundingMode());
      assertEquals(1, decimalFormat1.getMultiplier());
      assertEquals("-", decimalFormat1.getNegativePrefix());
      assertEquals("", decimalFormat1.getPositiveSuffix());
      assertEquals(3, decimalFormat1.getGroupingSize());
      assertEquals("", standardXYZToolTipGenerator0.getFormatString());
      assertEquals("null", standardXYZToolTipGenerator0.getNullYString());
      assertEquals(1, xYAreaRenderer2_0.getPassCount());
      assertFalse(xYAreaRenderer2_0.isOutline());
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYAreaRenderer2_0.getBaseCreateEntities());
      assertEquals(2.0, xYAreaRenderer2_0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesShape());
      assertTrue(xYAreaRenderer2_0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisible());
      assertFalse(xYAreaRenderer2_0.getBaseItemLabelsVisible());
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisibleInLegend());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesStroke());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesPaint());
      assertEquals(3, xYAreaRenderer2_0.getDefaultEntityRadius());
      
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, dateAxis0, cyclicNumberAxis0, xYAreaRenderer2_0);
      assertFalse(decimalFormat0.equals((Object)decimalFormat1));
      assertFalse(decimalFormat1.equals((Object)decimalFormat0));
      assertNotNull(xYPlot0);
      assertEquals(0, defaultIntervalXYDataset0.getSeriesCount());
      assertTrue(dateAxis0.isVisible());
      assertNull(dateAxis0.getLabel());
      assertTrue(dateAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, dateAxis0.getFixedDimension(), 0.01);
      assertFalse(dateAxis0.isPositiveArrowVisible());
      assertEquals(0.05, dateAxis0.getUpperMargin(), 0.01);
      assertEquals(0, dateAxis0.getMinorTickCount());
      assertEquals(0.0, dateAxis0.getLowerBound(), 0.01);
      assertNull(dateAxis0.getLabelToolTip());
      assertEquals(0.0F, dateAxis0.getTickMarkInsideLength(), 0.01F);
      assertFalse(dateAxis0.isMinorTickMarksVisible());
      assertEquals(0.0, dateAxis0.getFixedAutoRange(), 0.01);
      assertEquals(0.0F, dateAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(dateAxis0.isTickMarksVisible());
      assertFalse(dateAxis0.isInverted());
      assertFalse(dateAxis0.isNegativeArrowVisible());
      assertTrue(dateAxis0.isAxisLineVisible());
      assertTrue(dateAxis0.isTickLabelsVisible());
      assertEquals(1.0, dateAxis0.getUpperBound(), 0.01);
      assertEquals(2.0F, dateAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(dateAxis0.isVerticalTickLabels());
      assertTrue(dateAxis0.isAutoRange());
      assertEquals(0.0, dateAxis0.getLabelAngle(), 0.01);
      assertEquals(0.05, dateAxis0.getLowerMargin(), 0.01);
      assertNull(dateAxis0.getLabelURL());
      assertEquals(2.0, dateAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, dateAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isVisible());
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertEquals(1.05, cyclicNumberAxis0.getPeriod(), 0.01);
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(1254.4334342, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
      assertNull(cyclicNumberAxis0.getLabel());
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertFalse(cyclicNumberAxis0.isInverted());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertEquals(1.05, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertEquals("IT", locale0.getCountry());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("\u00A4 #,##0.00", decimalFormat0.toPattern());
      assertEquals("-\u20AC ", decimalFormat0.getNegativePrefix());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertEquals(3, decimalFormat0.getGroupingSize());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
      assertEquals("\u00A4 #.##0,00", decimalFormat0.toLocalizedPattern());
      assertEquals("\u20AC ", decimalFormat0.getPositivePrefix());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertTrue(decimalFormat0.isGroupingUsed());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals(2, decimalFormat0.getMaximumFractionDigits());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("#,##0", decimalFormat1.toPattern());
      assertEquals(0, decimalFormat1.getMinimumFractionDigits());
      assertFalse(decimalFormat1.isParseBigDecimal());
      assertFalse(decimalFormat1.isDecimalSeparatorAlwaysShown());
      assertEquals(Integer.MAX_VALUE, decimalFormat1.getMaximumIntegerDigits());
      assertTrue(decimalFormat1.isParseIntegerOnly());
      assertEquals(0, decimalFormat1.getMaximumFractionDigits());
      assertTrue(decimalFormat1.isGroupingUsed());
      assertEquals("", decimalFormat1.getPositivePrefix());
      assertEquals("", decimalFormat1.getNegativeSuffix());
      assertEquals(1, decimalFormat1.getMinimumIntegerDigits());
      assertEquals("#.##0", decimalFormat1.toLocalizedPattern());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat1.getRoundingMode());
      assertEquals(1, decimalFormat1.getMultiplier());
      assertEquals("-", decimalFormat1.getNegativePrefix());
      assertEquals("", decimalFormat1.getPositiveSuffix());
      assertEquals(3, decimalFormat1.getGroupingSize());
      assertEquals("", standardXYZToolTipGenerator0.getFormatString());
      assertEquals("null", standardXYZToolTipGenerator0.getNullYString());
      assertEquals(1, xYAreaRenderer2_0.getPassCount());
      assertFalse(xYAreaRenderer2_0.isOutline());
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYAreaRenderer2_0.getBaseCreateEntities());
      assertEquals(2.0, xYAreaRenderer2_0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesShape());
      assertTrue(xYAreaRenderer2_0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisible());
      assertFalse(xYAreaRenderer2_0.getBaseItemLabelsVisible());
      assertFalse(xYAreaRenderer2_0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYAreaRenderer2_0.getBaseSeriesVisibleInLegend());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesStroke());
      assertTrue(xYAreaRenderer2_0.getAutoPopulateSeriesPaint());
      assertEquals(3, xYAreaRenderer2_0.getDefaultEntityRadius());
      assertTrue(xYPlot0.canSelectByRegion());
      assertEquals(1, xYPlot0.getRendererCount());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertTrue(xYPlot0.isRangeZoomable());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertTrue(xYPlot0.isDomainZoomable());
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getWeight());
      assertFalse(xYPlot0.isSubplot());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isOutlineVisible());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isNotify());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertFalse(xYPlot0.canSelectByPoint());
      assertNull(xYPlot0.getNoDataMessage());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertFalse(xYPlot0.isRangePannable());
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0, DateAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS, 0.01);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DecimalFormat decimalFormat2 = new DecimalFormat("");
      xYPlot0.setRangeCrosshairVisible(false);
      ValueMarker valueMarker0 = new ValueMarker(2.5E-7, dateAxis0.DEFAULT_TICK_LABEL_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      valueMarker0.setLabelFont(dateAxis0.DEFAULT_TICK_LABEL_FONT);
      NumberFormat.getNumberInstance();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0, false);
      xYPlot0.setRangeCrosshairValue(0.05);
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      assertNotNull(combinedDomainXYPlot0);
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      NumberAxis numberAxis0 = new NumberAxis();
      assertNotNull(numberAxis0);
      assertTrue(numberAxis0.isVisible());
      assertNull(numberAxis0.getLabel());
      assertTrue(numberAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01);
      assertFalse(numberAxis0.isPositiveArrowVisible());
      assertEquals(0, numberAxis0.getMinorTickCount());
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01);
      assertNull(numberAxis0.getLabelToolTip());
      assertTrue(numberAxis0.getAutoRangeIncludesZero());
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01);
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertFalse(numberAxis0.isMinorTickMarksVisible());
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01);
      assertEquals(0.0F, numberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis0.isTickMarksVisible());
      assertFalse(numberAxis0.isInverted());
      assertFalse(numberAxis0.isNegativeArrowVisible());
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(numberAxis0.isAxisLineVisible());
      assertTrue(numberAxis0.isTickLabelsVisible());
      assertEquals(1.0, numberAxis0.getUpperBound(), 0.01);
      assertTrue(numberAxis0.getAutoRangeStickyZero());
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(numberAxis0.isVerticalTickLabels());
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01);
      assertTrue(numberAxis0.isAutoRange());
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01);
      assertNull(numberAxis0.getLabelURL());
      assertEquals(2.0F, numberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      
      combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis0, true);
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(numberAxis0.isVisible());
      assertNull(numberAxis0.getLabel());
      assertTrue(numberAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01);
      assertFalse(numberAxis0.isPositiveArrowVisible());
      assertEquals(0, numberAxis0.getMinorTickCount());
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01);
      assertNull(numberAxis0.getLabelToolTip());
      assertTrue(numberAxis0.getAutoRangeIncludesZero());
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01);
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertFalse(numberAxis0.isMinorTickMarksVisible());
      assertEquals(1.05, numberAxis0.getUpperBound(), 0.01);
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01);
      assertEquals(0.0F, numberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis0.isTickMarksVisible());
      assertFalse(numberAxis0.isInverted());
      assertFalse(numberAxis0.isNegativeArrowVisible());
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(numberAxis0.isAxisLineVisible());
      assertTrue(numberAxis0.isTickLabelsVisible());
      assertTrue(numberAxis0.getAutoRangeStickyZero());
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(numberAxis0.isVerticalTickLabels());
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01);
      assertTrue(numberAxis0.isAutoRange());
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01);
      assertNull(numberAxis0.getLabelURL());
      assertEquals(2.0F, numberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      
      combinedDomainXYPlot0.clearRangeMarkers(0);
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      combinedDomainXYPlot0.clearDomainMarkers();
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      Layer layer0 = Layer.FOREGROUND;
      assertNotNull(layer0);
      assertEquals("Layer.FOREGROUND", layer0.toString());
      
      Collection collection0 = combinedDomainXYPlot0.getDomainMarkers(0, layer0);
      assertNull(collection0);
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals("Layer.FOREGROUND", layer0.toString());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      PolarPlot polarPlot0 = new PolarPlot();
      assertNotNull(polarPlot0);
      assertTrue(polarPlot0.isOutlineVisible());
      assertEquals(1.0F, polarPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, polarPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(polarPlot0.isAngleLabelsVisible());
      assertTrue(polarPlot0.isAngleGridlinesVisible());
      assertEquals(0.5F, polarPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(polarPlot0.isRadiusGridlinesVisible());
      assertNull(polarPlot0.getNoDataMessage());
      assertTrue(polarPlot0.isRangeZoomable());
      assertEquals(15, polarPlot0.getBackgroundImageAlignment());
      assertTrue(polarPlot0.isNotify());
      assertFalse(polarPlot0.isSubplot());
      assertFalse(polarPlot0.isDomainZoomable());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(45.0, PolarPlot.DEFAULT_ANGLE_TICK_UNIT_SIZE, 0.01);
      
      Color color0 = (Color)polarPlot0.getRadiusGridlinePaint();
      assertNotNull(color0);
      assertTrue(polarPlot0.isOutlineVisible());
      assertEquals(1.0F, polarPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, polarPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(polarPlot0.isAngleLabelsVisible());
      assertTrue(polarPlot0.isAngleGridlinesVisible());
      assertEquals(0.5F, polarPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(polarPlot0.isRadiusGridlinesVisible());
      assertNull(polarPlot0.getNoDataMessage());
      assertTrue(polarPlot0.isRangeZoomable());
      assertEquals(15, polarPlot0.getBackgroundImageAlignment());
      assertTrue(polarPlot0.isNotify());
      assertFalse(polarPlot0.isSubplot());
      assertFalse(polarPlot0.isDomainZoomable());
      assertEquals(128, color0.getRed());
      assertEquals(128, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(45.0, PolarPlot.DEFAULT_ANGLE_TICK_UNIT_SIZE, 0.01);
      
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(color0);
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(polarPlot0.isOutlineVisible());
      assertEquals(1.0F, polarPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, polarPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(polarPlot0.isAngleLabelsVisible());
      assertTrue(polarPlot0.isAngleGridlinesVisible());
      assertEquals(0.5F, polarPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(polarPlot0.isRadiusGridlinesVisible());
      assertNull(polarPlot0.getNoDataMessage());
      assertTrue(polarPlot0.isRangeZoomable());
      assertEquals(15, polarPlot0.getBackgroundImageAlignment());
      assertTrue(polarPlot0.isNotify());
      assertFalse(polarPlot0.isSubplot());
      assertFalse(polarPlot0.isDomainZoomable());
      assertEquals(128, color0.getRed());
      assertEquals(128, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(45.0, PolarPlot.DEFAULT_ANGLE_TICK_UNIT_SIZE, 0.01);
      
      float[] floatArray0 = new float[2];
      floatArray0[0] = 1.0F;
      floatArray0[1] = (float) 10;
      Kernel kernel0 = new Kernel(0, 10, floatArray0);
      assertArrayEquals(new float[] {1.0F, 10.0F}, floatArray0, 0.01F);
      assertEquals(2, floatArray0.length);
      assertNotNull(kernel0);
      assertEquals(10, kernel0.getHeight());
      assertEquals((-1), kernel0.getXOrigin());
      assertEquals(4, kernel0.getYOrigin());
      assertEquals(0, kernel0.getWidth());
      
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0);
      assertArrayEquals(new float[] {1.0F, 10.0F}, floatArray0, 0.01F);
      assertEquals(2, floatArray0.length);
      assertNotNull(convolveOp0);
      assertEquals(10, kernel0.getHeight());
      assertEquals((-1), kernel0.getXOrigin());
      assertEquals(4, kernel0.getYOrigin());
      assertEquals(0, kernel0.getWidth());
      assertEquals(0, convolveOp0.getEdgeCondition());
      
      // Undeclared exception!
//      try { 
        convolveOp0.filter((BufferedImage) null, (BufferedImage) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // src image is null
//         //
//         verifyException("java.awt.image.ConvolveOp", e);
//      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      String string0 = "Requires 'index' >= 0.";
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      assertNotNull(numberAxis3D0);
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertTrue(numberAxis3D0.isAutoRange());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertEquals(1.0, numberAxis3D0.getUpperBound(), 0.01);
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      assertNotNull(combinedRangeXYPlot0);
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertTrue(numberAxis3D0.isAutoRange());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      CategoryMarker categoryMarker0 = new CategoryMarker(false, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      assertNotNull(categoryMarker0);
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertTrue(numberAxis3D0.isAutoRange());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertNull(categoryMarker0.getLabel());
      assertEquals(1.0F, categoryMarker0.getAlpha(), 0.01F);
      assertFalse(categoryMarker0.getDrawAsLine());
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      categoryMarker0.setLabelPaint(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertTrue(numberAxis3D0.isAutoRange());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertNull(categoryMarker0.getLabel());
      assertEquals(1.0F, categoryMarker0.getAlpha(), 0.01F);
      assertFalse(categoryMarker0.getDrawAsLine());
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Layer layer0 = null;
      combinedRangeXYPlot0.addRangeMarker(17, (Marker) categoryMarker0, (Layer) null, true);
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertTrue(numberAxis3D0.isAutoRange());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertNull(categoryMarker0.getLabel());
      assertEquals(1.0F, categoryMarker0.getAlpha(), 0.01F);
      assertFalse(categoryMarker0.getDrawAsLine());
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueMarker valueMarker0 = new ValueMarker((-4143.51983987443), combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      assertNotNull(valueMarker0);
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertTrue(numberAxis3D0.isAutoRange());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertEquals(1.0F, valueMarker0.getAlpha(), 0.01F);
      assertEquals((-4143.51983987443), valueMarker0.getValue(), 0.01);
      assertNull(valueMarker0.getLabel());
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
//      try { 
        valueMarker0.setAlpha(1389.46F);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'alpha' value must be in the range 0.0f to 1.0f
//         //
//         verifyException("org.jfree.chart.plot.Marker", e);
//      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      assertNotNull(numberAxis3D0);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertTrue(numberAxis3D0.isAutoRange());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertNull(numberAxis3D0.getLabelToolTip());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(1.0, numberAxis3D0.getUpperBound(), 0.01);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertNull(numberAxis3D0.getLabelURL());
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      assertNotNull(combinedRangeXYPlot0);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertTrue(numberAxis3D0.isAutoRange());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertNull(numberAxis3D0.getLabelToolTip());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertNull(numberAxis3D0.getLabelURL());
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      JFreeChart jFreeChart0 = new JFreeChart("Requires 'index' >= 0.", numberAxis3D0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, false);
      assertNotNull(jFreeChart0);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertTrue(numberAxis3D0.isAutoRange());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertNull(numberAxis3D0.getLabelToolTip());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertNull(numberAxis3D0.getLabelURL());
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(0, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      assertNotNull(chartPanel0);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertTrue(numberAxis3D0.isAutoRange());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertNull(numberAxis3D0.getLabelToolTip());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertNull(numberAxis3D0.getLabelURL());
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(0, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertTrue(chartPanel0.getUseBuffer());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertTrue(chartPanel0.isDomainZoomable());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertEquals(750, chartPanel0.getInitialDelay());
      assertTrue(chartPanel0.isRangeZoomable());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(420, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      assertEquals(680, ChartPanel.DEFAULT_WIDTH);
      
      combinedRangeXYPlot0.select(1.0E-8, 1.0E-8, (Rectangle2D) null, (RenderingSource) chartPanel0);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertTrue(numberAxis3D0.isAutoRange());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertNull(numberAxis3D0.getLabelToolTip());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertNull(numberAxis3D0.getLabelURL());
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(0, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertTrue(chartPanel0.getUseBuffer());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertTrue(chartPanel0.isDomainZoomable());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertEquals(750, chartPanel0.getInitialDelay());
      assertTrue(chartPanel0.isRangeZoomable());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(420, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      assertEquals(680, ChartPanel.DEFAULT_WIDTH);
      
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      assertNotNull(combinedDomainXYPlot0);
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Layer layer0 = Layer.BACKGROUND;
      assertNotNull(layer0);
      assertEquals("Layer.BACKGROUND", layer0.toString());
      
      int int0 = combinedDomainXYPlot0.getWeight();
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      assertNotNull(jDBCXYDataset0);
      assertEquals(0, jDBCXYDataset0.getItemCount());
      assertEquals(0, jDBCXYDataset0.getSeriesCount());
      assertFalse(jDBCXYDataset0.isTimeSeries());
      
      DatasetGroup datasetGroup0 = new DatasetGroup("RangeType.NEGATIVE");
      assertNotNull(datasetGroup0);
      assertEquals("RangeType.NEGATIVE", datasetGroup0.getID());
      
      jDBCXYDataset0.setGroup(datasetGroup0);
      assertEquals(0, jDBCXYDataset0.getItemCount());
      assertEquals(0, jDBCXYDataset0.getSeriesCount());
      assertFalse(jDBCXYDataset0.isTimeSeries());
      assertEquals("RangeType.NEGATIVE", datasetGroup0.getID());
      
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      assertNotNull(defaultXYItemRenderer0);
      assertTrue(defaultXYItemRenderer0.getBaseLinesVisible());
      assertTrue(defaultXYItemRenderer0.getBaseCreateEntities());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getDrawOutlines());
      assertFalse(defaultXYItemRenderer0.getBaseItemLabelsVisible());
      assertTrue(defaultXYItemRenderer0.getBaseShapesVisible());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesShape());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, defaultXYItemRenderer0.getPassCount());
      assertFalse(defaultXYItemRenderer0.getUseFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultXYItemRenderer0.getUseOutlinePaint());
      assertEquals(3, defaultXYItemRenderer0.getDefaultEntityRadius());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(defaultXYItemRenderer0.getBaseShapesFilled());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      assertNotNull(xYTextAnnotation0);
      assertEquals("='dzOuzo[", xYTextAnnotation0.getText());
      assertNull(xYTextAnnotation0.getURL());
      assertNull(xYTextAnnotation0.getToolTipText());
      assertFalse(xYTextAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYTextAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-1311.90756413), xYTextAnnotation0.getX(), 0.01);
      assertEquals((-1311.90756413), xYTextAnnotation0.getY(), 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      
      boolean boolean0 = defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      assertTrue(defaultXYItemRenderer0.getBaseLinesVisible());
      assertTrue(defaultXYItemRenderer0.getBaseCreateEntities());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getDrawOutlines());
      assertFalse(defaultXYItemRenderer0.getBaseItemLabelsVisible());
      assertTrue(defaultXYItemRenderer0.getBaseShapesVisible());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesShape());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, defaultXYItemRenderer0.getPassCount());
      assertFalse(defaultXYItemRenderer0.getUseFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultXYItemRenderer0.getUseOutlinePaint());
      assertEquals(3, defaultXYItemRenderer0.getDefaultEntityRadius());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(defaultXYItemRenderer0.getBaseShapesFilled());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals("='dzOuzo[", xYTextAnnotation0.getText());
      assertNull(xYTextAnnotation0.getURL());
      assertNull(xYTextAnnotation0.getToolTipText());
      assertFalse(xYTextAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYTextAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-1311.90756413), xYTextAnnotation0.getX(), 0.01);
      assertEquals((-1311.90756413), xYTextAnnotation0.getY(), 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertFalse(boolean0);
      
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      assertNotNull(xYPlot0);
      assertEquals(0, jDBCXYDataset0.getItemCount());
      assertEquals(0, jDBCXYDataset0.getSeriesCount());
      assertFalse(jDBCXYDataset0.isTimeSeries());
      assertTrue(defaultXYItemRenderer0.getBaseLinesVisible());
      assertTrue(defaultXYItemRenderer0.getBaseCreateEntities());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getDrawOutlines());
      assertFalse(defaultXYItemRenderer0.getBaseItemLabelsVisible());
      assertTrue(defaultXYItemRenderer0.getBaseShapesVisible());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesShape());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, defaultXYItemRenderer0.getPassCount());
      assertFalse(defaultXYItemRenderer0.getUseFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultXYItemRenderer0.getUseOutlinePaint());
      assertEquals(3, defaultXYItemRenderer0.getDefaultEntityRadius());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(defaultXYItemRenderer0.getBaseShapesFilled());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYPlot0.canSelectByRegion());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, xYPlot0.getRendererCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertTrue(xYPlot0.isRangeZoomable());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isSubplot());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertTrue(xYPlot0.isNotify());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isRangePannable());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.canSelectByPoint());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      
      int int0 = xYPlot0.getSeriesCount();
      assertEquals(0, jDBCXYDataset0.getItemCount());
      assertEquals(0, jDBCXYDataset0.getSeriesCount());
      assertFalse(jDBCXYDataset0.isTimeSeries());
      assertTrue(defaultXYItemRenderer0.getBaseLinesVisible());
      assertTrue(defaultXYItemRenderer0.getBaseCreateEntities());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getDrawOutlines());
      assertFalse(defaultXYItemRenderer0.getBaseItemLabelsVisible());
      assertTrue(defaultXYItemRenderer0.getBaseShapesVisible());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesShape());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, defaultXYItemRenderer0.getPassCount());
      assertFalse(defaultXYItemRenderer0.getUseFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultXYItemRenderer0.getUseOutlinePaint());
      assertEquals(3, defaultXYItemRenderer0.getDefaultEntityRadius());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(defaultXYItemRenderer0.getBaseShapesFilled());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYPlot0.canSelectByRegion());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, xYPlot0.getRendererCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertTrue(xYPlot0.isRangeZoomable());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isSubplot());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertTrue(xYPlot0.isNotify());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isRangePannable());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.canSelectByPoint());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(0, int0);
      
      xYPlot0.configureDomainAxes();
      assertEquals(0, jDBCXYDataset0.getItemCount());
      assertEquals(0, jDBCXYDataset0.getSeriesCount());
      assertFalse(jDBCXYDataset0.isTimeSeries());
      assertTrue(defaultXYItemRenderer0.getBaseLinesVisible());
      assertTrue(defaultXYItemRenderer0.getBaseCreateEntities());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getDrawOutlines());
      assertFalse(defaultXYItemRenderer0.getBaseItemLabelsVisible());
      assertTrue(defaultXYItemRenderer0.getBaseShapesVisible());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesShape());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, defaultXYItemRenderer0.getPassCount());
      assertFalse(defaultXYItemRenderer0.getUseFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultXYItemRenderer0.getUseOutlinePaint());
      assertEquals(3, defaultXYItemRenderer0.getDefaultEntityRadius());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(defaultXYItemRenderer0.getBaseShapesFilled());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYPlot0.canSelectByRegion());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, xYPlot0.getRendererCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertTrue(xYPlot0.isRangeZoomable());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isSubplot());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertTrue(xYPlot0.isNotify());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isRangePannable());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.canSelectByPoint());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      assertNotNull(numberAxis3D0);
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertNull(numberAxis3D0.getLabel());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoRange());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(1.0, numberAxis3D0.getUpperBound(), 0.01);
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      
      numberAxis3D0.setTickMarkStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals(0, jDBCXYDataset0.getItemCount());
      assertEquals(0, jDBCXYDataset0.getSeriesCount());
      assertFalse(jDBCXYDataset0.isTimeSeries());
      assertTrue(defaultXYItemRenderer0.getBaseLinesVisible());
      assertTrue(defaultXYItemRenderer0.getBaseCreateEntities());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getDrawOutlines());
      assertFalse(defaultXYItemRenderer0.getBaseItemLabelsVisible());
      assertTrue(defaultXYItemRenderer0.getBaseShapesVisible());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesShape());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, defaultXYItemRenderer0.getPassCount());
      assertFalse(defaultXYItemRenderer0.getUseFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultXYItemRenderer0.getUseOutlinePaint());
      assertEquals(3, defaultXYItemRenderer0.getDefaultEntityRadius());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(defaultXYItemRenderer0.getBaseShapesFilled());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYPlot0.canSelectByRegion());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, xYPlot0.getRendererCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertTrue(xYPlot0.isRangeZoomable());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isSubplot());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertTrue(xYPlot0.isNotify());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isRangePannable());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.canSelectByPoint());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertNull(numberAxis3D0.getLabel());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoRange());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(1.0, numberAxis3D0.getUpperBound(), 0.01);
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      
      Area area0 = new Area(defaultXYItemRenderer0.DEFAULT_SHAPE);
      assertNotNull(area0);
      assertTrue(defaultXYItemRenderer0.getBaseLinesVisible());
      assertTrue(defaultXYItemRenderer0.getBaseCreateEntities());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getDrawOutlines());
      assertFalse(defaultXYItemRenderer0.getBaseItemLabelsVisible());
      assertTrue(defaultXYItemRenderer0.getBaseShapesVisible());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesShape());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, defaultXYItemRenderer0.getPassCount());
      assertFalse(defaultXYItemRenderer0.getUseFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultXYItemRenderer0.getUseOutlinePaint());
      assertEquals(3, defaultXYItemRenderer0.getDefaultEntityRadius());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(defaultXYItemRenderer0.getBaseShapesFilled());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(area0.isEmpty());
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)area0.getBounds2D();
      assertNotNull(rectangle2D_Double0);
      assertTrue(defaultXYItemRenderer0.getBaseLinesVisible());
      assertTrue(defaultXYItemRenderer0.getBaseCreateEntities());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getDrawOutlines());
      assertFalse(defaultXYItemRenderer0.getBaseItemLabelsVisible());
      assertTrue(defaultXYItemRenderer0.getBaseShapesVisible());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesShape());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, defaultXYItemRenderer0.getPassCount());
      assertFalse(defaultXYItemRenderer0.getUseFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultXYItemRenderer0.getUseOutlinePaint());
      assertEquals(3, defaultXYItemRenderer0.getDefaultEntityRadius());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(defaultXYItemRenderer0.getBaseShapesFilled());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertFalse(area0.isEmpty());
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      
      RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge((-1410));
      assertNotNull(rectangleEdge0);
      assertEquals(0, jDBCXYDataset0.getItemCount());
      assertEquals(0, jDBCXYDataset0.getSeriesCount());
      assertFalse(jDBCXYDataset0.isTimeSeries());
      assertTrue(defaultXYItemRenderer0.getBaseLinesVisible());
      assertTrue(defaultXYItemRenderer0.getBaseCreateEntities());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getDrawOutlines());
      assertFalse(defaultXYItemRenderer0.getBaseItemLabelsVisible());
      assertTrue(defaultXYItemRenderer0.getBaseShapesVisible());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesShape());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, defaultXYItemRenderer0.getPassCount());
      assertFalse(defaultXYItemRenderer0.getUseFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultXYItemRenderer0.getUseOutlinePaint());
      assertEquals(3, defaultXYItemRenderer0.getDefaultEntityRadius());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(defaultXYItemRenderer0.getBaseShapesFilled());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYPlot0.canSelectByRegion());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, xYPlot0.getRendererCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertTrue(xYPlot0.isRangeZoomable());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isSubplot());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertTrue(xYPlot0.isNotify());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isRangePannable());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.canSelectByPoint());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertEquals("RectangleEdge.TOP", rectangleEdge0.toString());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      
      double double0 = numberAxis3D0.valueToJava2D((-1221.13658), rectangle2D_Double0, rectangleEdge0);
      assertEquals(0, jDBCXYDataset0.getItemCount());
      assertEquals(0, jDBCXYDataset0.getSeriesCount());
      assertFalse(jDBCXYDataset0.isTimeSeries());
      assertTrue(defaultXYItemRenderer0.getBaseLinesVisible());
      assertTrue(defaultXYItemRenderer0.getBaseCreateEntities());
      assertEquals(2.0, defaultXYItemRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYItemRenderer0.getDrawOutlines());
      assertFalse(defaultXYItemRenderer0.getBaseItemLabelsVisible());
      assertTrue(defaultXYItemRenderer0.getBaseShapesVisible());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesShape());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(defaultXYItemRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, defaultXYItemRenderer0.getPassCount());
      assertFalse(defaultXYItemRenderer0.getUseFillPaint());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisible());
      assertFalse(defaultXYItemRenderer0.getUseOutlinePaint());
      assertEquals(3, defaultXYItemRenderer0.getDefaultEntityRadius());
      assertTrue(defaultXYItemRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(defaultXYItemRenderer0.getDrawSeriesLineAsPath());
      assertTrue(defaultXYItemRenderer0.getBaseShapesFilled());
      assertTrue(defaultXYItemRenderer0.getBaseSeriesVisibleInLegend());
      assertTrue(xYPlot0.canSelectByRegion());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, xYPlot0.getRendererCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertTrue(xYPlot0.isRangeZoomable());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isSubplot());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertTrue(xYPlot0.isNotify());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isRangePannable());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.canSelectByPoint());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertNull(numberAxis3D0.getLabel());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoRange());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(1.0, numberAxis3D0.getUpperBound(), 0.01);
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertFalse(area0.isEmpty());
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals("RectangleEdge.TOP", rectangleEdge0.toString());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-7329.81948), double0, 0.01);
      
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberAxis3D0, false);
      assertNotNull(rendererChangeEvent0);
      assertFalse(rendererChangeEvent0.getSeriesVisibilityChanged());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertNull(numberAxis3D0.getLabel());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoRange());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(1.0, numberAxis3D0.getUpperBound(), 0.01);
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      assertNotNull(combinedDomainXYPlot0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertNull(numberAxis3D0.getLabel());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoRange());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      
      combinedDomainXYPlot0.mapDatasetToRangeAxis(500, (-1410));
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertNull(numberAxis3D0.getLabel());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoRange());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      
      Collection collection0 = combinedDomainXYPlot0.getRangeMarkers((Layer) null);
      assertNull(collection0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertNull(numberAxis3D0.getLabel());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoRange());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      
      combinedDomainXYPlot0.setRangePannable(true);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangePannable());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertNull(numberAxis3D0.getLabel());
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertNull(numberAxis3D0.getLabelURL());
      assertTrue(numberAxis3D0.isAutoRange());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      assertFalse(combinedDomainXYPlot1.equals((Object)combinedDomainXYPlot0));
      assertNotNull(combinedDomainXYPlot1);
      assertEquals(1, combinedDomainXYPlot1.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot1.getWeight());
      assertFalse(combinedDomainXYPlot1.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot1.canSelectByRegion());
      assertTrue(combinedDomainXYPlot1.isRangeZoomable());
      assertEquals(1.0F, combinedDomainXYPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(15, combinedDomainXYPlot1.getBackgroundImageAlignment());
      assertEquals(0.0, combinedDomainXYPlot1.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot1.isRangeCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot1.isDomainGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot1.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot1.canSelectByPoint());
      assertEquals(1, combinedDomainXYPlot1.getRendererCount());
      assertEquals(1, combinedDomainXYPlot1.getDomainAxisCount());
      assertNull(combinedDomainXYPlot1.getNoDataMessage());
      assertFalse(combinedDomainXYPlot1.isRangeCrosshairVisible());
      assertTrue(combinedDomainXYPlot1.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot1.isNotify());
      assertEquals(5.0, combinedDomainXYPlot1.getGap(), 0.01);
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot1.getPlotType());
      assertTrue(combinedDomainXYPlot1.isOutlineVisible());
      assertEquals(1, combinedDomainXYPlot1.getDatasetCount());
      assertFalse(combinedDomainXYPlot1.isRangePannable());
      assertFalse(combinedDomainXYPlot1.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot1.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedDomainXYPlot1.getForegroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot1.isDomainPannable());
      assertFalse(combinedDomainXYPlot1.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot1.getRangeCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot1.isDomainZoomable());
      assertFalse(combinedDomainXYPlot1.isDomainMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot1.isSubplot());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      
      int int1 = combinedDomainXYPlot1.getWeight();
      assertNotSame(combinedDomainXYPlot1, combinedDomainXYPlot0);
      assertFalse(combinedDomainXYPlot1.equals((Object)combinedDomainXYPlot0));
      assertFalse(int1 == int0);
      assertEquals(1, combinedDomainXYPlot1.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot1.getWeight());
      assertFalse(combinedDomainXYPlot1.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot1.canSelectByRegion());
      assertTrue(combinedDomainXYPlot1.isRangeZoomable());
      assertEquals(1.0F, combinedDomainXYPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(15, combinedDomainXYPlot1.getBackgroundImageAlignment());
      assertEquals(0.0, combinedDomainXYPlot1.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot1.isRangeCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot1.isDomainGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot1.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot1.canSelectByPoint());
      assertEquals(1, combinedDomainXYPlot1.getRendererCount());
      assertEquals(1, combinedDomainXYPlot1.getDomainAxisCount());
      assertNull(combinedDomainXYPlot1.getNoDataMessage());
      assertFalse(combinedDomainXYPlot1.isRangeCrosshairVisible());
      assertTrue(combinedDomainXYPlot1.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot1.isNotify());
      assertEquals(5.0, combinedDomainXYPlot1.getGap(), 0.01);
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot1.getPlotType());
      assertTrue(combinedDomainXYPlot1.isOutlineVisible());
      assertEquals(1, combinedDomainXYPlot1.getDatasetCount());
      assertFalse(combinedDomainXYPlot1.isRangePannable());
      assertFalse(combinedDomainXYPlot1.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot1.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedDomainXYPlot1.getForegroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot1.isDomainPannable());
      assertFalse(combinedDomainXYPlot1.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot1.getRangeCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot1.isDomainZoomable());
      assertFalse(combinedDomainXYPlot1.isDomainMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot1.isSubplot());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      assertNotNull(combinedDomainXYPlot0);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      assertNotNull(axisLocation0);
      assertEquals("AxisLocation.TOP_OR_RIGHT", axisLocation0.toString());
      
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals("AxisLocation.TOP_OR_RIGHT", axisLocation0.toString());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
      assertNotNull(rectangleInsets0);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double0 = combinedDomainXYPlot0.getRangeCrosshairValue();
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.0, double0, 0.01);
      
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation0, false);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals("AxisLocation.TOP_OR_RIGHT", axisLocation0.toString());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      assertNotNull(xYDotRenderer0);
      assertEquals(1, xYDotRenderer0.getDotHeight());
      assertEquals(1, xYDotRenderer0.getDotWidth());
      assertTrue(xYDotRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYDotRenderer0.getBaseCreateEntities());
      assertFalse(xYDotRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYDotRenderer0.getBaseItemLabelsVisible());
      assertFalse(xYDotRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYDotRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, xYDotRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYDotRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, xYDotRenderer0.getDefaultEntityRadius());
      assertFalse(xYDotRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYDotRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(1, xYDotRenderer0.getPassCount());
      assertTrue(xYDotRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYDotRenderer0.getBaseSeriesVisible());
      
      combinedDomainXYPlot0.setRenderer(0, (XYItemRenderer) xYDotRenderer0, false);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(1, xYDotRenderer0.getDotHeight());
      assertEquals(1, xYDotRenderer0.getDotWidth());
      assertTrue(xYDotRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYDotRenderer0.getBaseCreateEntities());
      assertFalse(xYDotRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYDotRenderer0.getBaseItemLabelsVisible());
      assertFalse(xYDotRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYDotRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, xYDotRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYDotRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, xYDotRenderer0.getDefaultEntityRadius());
      assertFalse(xYDotRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYDotRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(1, xYDotRenderer0.getPassCount());
      assertTrue(xYDotRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYDotRenderer0.getBaseSeriesVisible());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      assertNotNull(combinedDomainXYPlot0);
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      int int0 = (-824);
      NumberAxis numberAxis0 = new NumberAxis();
      assertNotNull(numberAxis0);
      assertTrue(numberAxis0.isAutoRange());
      assertFalse(numberAxis0.isMinorTickMarksVisible());
      assertTrue(numberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01);
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01);
      assertFalse(numberAxis0.isNegativeArrowVisible());
      assertEquals(0, numberAxis0.getMinorTickCount());
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01);
      assertNull(numberAxis0.getLabel());
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01);
      assertEquals(0.0F, numberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertNull(numberAxis0.getLabelURL());
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01);
      assertEquals(2.0F, numberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertFalse(numberAxis0.isPositiveArrowVisible());
      assertTrue(numberAxis0.isTickLabelsVisible());
      assertTrue(numberAxis0.isAxisLineVisible());
      assertFalse(numberAxis0.isVerticalTickLabels());
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01);
      assertTrue(numberAxis0.getAutoRangeIncludesZero());
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(numberAxis0.isTickMarksVisible());
      assertTrue(numberAxis0.isVisible());
      assertFalse(numberAxis0.isInverted());
      assertNull(numberAxis0.getLabelToolTip());
      assertTrue(numberAxis0.isAutoTickUnitSelection());
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(1.0, numberAxis0.getUpperBound(), 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      
      // Undeclared exception!
//      try { 
        combinedDomainXYPlot0.setRangeAxis((-824), (ValueAxis) numberAxis0, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      assertNotNull(numberAxis3D0);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(1.0, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertNull(numberAxis3D0.getLabelToolTip());
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertNull(numberAxis3D0.getLabelURL());
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertTrue(numberAxis3D0.isAutoRange());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      assertNotNull(combinedRangeXYPlot0);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertNull(numberAxis3D0.getLabelToolTip());
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertNull(numberAxis3D0.getLabelURL());
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertTrue(numberAxis3D0.isAutoRange());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      JFreeChart jFreeChart0 = new JFreeChart("Requires 'index' >= 0.", numberAxis3D0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, false);
      assertNotNull(jFreeChart0);
      assertFalse(numberAxis3D0.isNegativeArrowVisible());
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
      assertEquals(1.0E-8, numberAxis3D0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, numberAxis3D0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals("Requires 'index' >= 0.", numberAxis3D0.getLabel());
      assertTrue(numberAxis3D0.isTickMarksVisible());
      assertFalse(numberAxis3D0.isMinorTickMarksVisible());
      assertTrue(numberAxis3D0.isTickLabelsVisible());
      assertEquals(0.0F, numberAxis3D0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.0, numberAxis3D0.getFixedDimension(), 0.01);
      assertTrue(numberAxis3D0.isAxisLineVisible());
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
      assertEquals(0.0, numberAxis3D0.getLabelAngle(), 0.01);
      assertEquals(0.05, numberAxis3D0.getLowerMargin(), 0.01);
      assertTrue(numberAxis3D0.isVisible());
      assertEquals(0.05, numberAxis3D0.getUpperMargin(), 0.01);
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
      assertNull(numberAxis3D0.getLabelToolTip());
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
      assertFalse(numberAxis3D0.isVerticalTickLabels());
      assertNull(numberAxis3D0.getLabelURL());
      assertFalse(numberAxis3D0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
      assertTrue(numberAxis3D0.isAutoRange());
      assertFalse(numberAxis3D0.isInverted());
      assertEquals(2.0F, numberAxis3D0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, numberAxis3D0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, numberAxis3D0.getMinorTickCount());
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      assertNotNull(combinedDomainXYPlot0);
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      double double0 = combinedDomainXYPlot0.getRangeCrosshairValue();
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.0, double0, 0.01);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      assertNotNull(axisLocation0);
      assertEquals("AxisLocation.TOP_OR_RIGHT", axisLocation0.toString());
      
      combinedDomainXYPlot0.setDomainAxisLocation(10, axisLocation0, false);
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals("AxisLocation.TOP_OR_RIGHT", axisLocation0.toString());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      assertNotNull(xYPlot0);
      assertFalse(xYPlot0.isSubplot());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(xYPlot0.isRangePannable());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(1, xYPlot0.getRendererCount());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isNotify());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeZoomable());
      assertFalse(xYPlot0.canSelectByPoint());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertTrue(xYPlot0.canSelectByRegion());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      AxisSpace axisSpace0 = xYPlot0.getFixedDomainAxisSpace();
      assertNull(axisSpace0);
      assertFalse(xYPlot0.isSubplot());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(xYPlot0.isOutlineVisible());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(xYPlot0.isRangePannable());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(1, xYPlot0.getRendererCount());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertNull(xYPlot0.getNoDataMessage());
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isNotify());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(xYPlot0.isRangeZoomable());
      assertFalse(xYPlot0.canSelectByPoint());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertTrue(xYPlot0.isDomainZoomable());
      assertTrue(xYPlot0.canSelectByRegion());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      assertNotNull(defaultXYZDataset0);
      assertEquals(0, defaultXYZDataset0.getSeriesCount());
      
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(36L);
      assertNotNull(fixedMillisecond0);
      assertEquals(36L, fixedMillisecond0.getLastMillisecond());
      assertEquals(36L, fixedMillisecond0.getFirstMillisecond());
      assertEquals(36L, fixedMillisecond0.getMiddleMillisecond());
      assertEquals(36L, fixedMillisecond0.getSerialIndex());
      
      RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.previous();
      assertNotSame(fixedMillisecond0, regularTimePeriod0);
      assertNotSame(regularTimePeriod0, fixedMillisecond0);
      assertFalse(regularTimePeriod0.equals((Object)fixedMillisecond0));
      assertNotNull(regularTimePeriod0);
      assertEquals(36L, fixedMillisecond0.getLastMillisecond());
      assertEquals(36L, fixedMillisecond0.getFirstMillisecond());
      assertEquals(36L, fixedMillisecond0.getMiddleMillisecond());
      assertEquals(36L, fixedMillisecond0.getSerialIndex());
      assertEquals(35L, regularTimePeriod0.getLastMillisecond());
      assertEquals(35L, regularTimePeriod0.getFirstMillisecond());
      assertEquals(35L, regularTimePeriod0.getSerialIndex());
      assertEquals(35L, regularTimePeriod0.getMiddleMillisecond());
      
      int int0 = defaultXYZDataset0.indexOf(regularTimePeriod0);
      assertNotSame(fixedMillisecond0, regularTimePeriod0);
      assertNotSame(regularTimePeriod0, fixedMillisecond0);
      assertFalse(fixedMillisecond0.equals((Object)regularTimePeriod0));
      assertFalse(regularTimePeriod0.equals((Object)fixedMillisecond0));
      assertEquals(0, defaultXYZDataset0.getSeriesCount());
      assertEquals(36L, fixedMillisecond0.getLastMillisecond());
      assertEquals(36L, fixedMillisecond0.getFirstMillisecond());
      assertEquals(36L, fixedMillisecond0.getMiddleMillisecond());
      assertEquals(36L, fixedMillisecond0.getSerialIndex());
      assertEquals(35L, regularTimePeriod0.getLastMillisecond());
      assertEquals(35L, regularTimePeriod0.getFirstMillisecond());
      assertEquals(35L, regularTimePeriod0.getSerialIndex());
      assertEquals(35L, regularTimePeriod0.getMiddleMillisecond());
      assertEquals((-1), int0);
      
      // Undeclared exception!
//      try { 
        defaultXYZDataset0.getZ(10, 10);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      DateAxis dateAxis0 = new DateAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 1254.4334342);
      Locale locale0 = Locale.ITALY;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      NumberFormat numberFormat1 = NumberFormat.getIntegerInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat1, numberFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      standardXYURLGenerator0.equals(cyclicNumberAxis0);
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, dateAxis0, cyclicNumberAxis0, xYAreaRenderer2_0);
      NumberFormat.getNumberInstance();
      xYPlot0.setRangeCrosshairVisible(false);
      ValueMarker valueMarker0 = new ValueMarker(2.5E-7, dateAxis0.DEFAULT_TICK_LABEL_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      valueMarker0.setLabelFont(dateAxis0.DEFAULT_TICK_LABEL_FONT);
      NumberFormat.getNumberInstance();
      xYPlot0.removeDomainMarker((Marker) valueMarker0);
      xYPlot0.setRangeMinorGridlinesVisible(true);
      xYPlot0.getDatasetCount();
      xYPlot0.setDomainTickBandPaint(dateAxis0.DEFAULT_TICK_MARK_PAINT);
      float[] floatArray0 = new float[1];
      floatArray0[0] = 1.0F;
      JFreeChart jFreeChart0 = new JFreeChart("index.html", dateAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      JFreeChart jFreeChart1 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
//      try { 
        jFreeChart1.createBufferedImage(15, 10, 521, chartRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown image type 521
//         //
//         verifyException("java.awt.image.BufferedImage", e);
//      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Requires 'index' >= 0.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("Requires 'index' >= 0.", numberAxis3D0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      combinedRangeXYPlot0.select(1.0E-8, 1.0E-8, (Rectangle2D) null, (RenderingSource) chartPanel0);
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
//      try { 
        combinedRangeXYPlot0.removeRangeMarker((Marker) null, layer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'marker' argument.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.setLabelPaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.removeDomainMarker((Marker) categoryMarker0, (Layer) null);
      categoryMarker0.setLabel((String) null);
      xYPlot0.removeDomainMarker((-1463), (Marker) categoryMarker0, (Layer) null, false);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", 10, (double) defaultXYItemRenderer0.ZERO);
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      int int0 = combinedDomainXYPlot0.getSeriesCount();
      assertEquals(0, int0);
      
      combinedDomainXYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(500, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.addRangeMarker(10, (Marker) categoryMarker0, layer0, true);
      boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(0, (Marker) categoryMarker0, layer0, false);
      CategoryMarker categoryMarker1 = new CategoryMarker(10, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, xYPlot0.DEFAULT_OUTLINE_STROKE);
      categoryMarker0.setLabel("Null 'axisIndex' argument.");
      boolean boolean1 = combinedDomainXYPlot0.removeDomainMarker(181, (Marker) categoryMarker1, layer0, true);
      assertTrue(boolean1 == boolean0);
      
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot)combinedRangeXYPlot0.clone();
      assertEquals(1, combinedRangeXYPlot1.getRangeAxisCount());
      
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      DateAxis dateAxis0 = new DateAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 1254.4334342);
      Locale locale0 = Locale.ITALY;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      NumberFormat numberFormat1 = NumberFormat.getIntegerInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat1, numberFormat0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      standardXYURLGenerator0.equals(cyclicNumberAxis0);
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYZToolTipGenerator0, standardXYURLGenerator0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      Area area0 = new Area(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      area0.getBounds2D();
      RectangleEdge rectangleEdge0 = combinedRangeXYPlot0.getDomainAxisEdge((-201));
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Rectangle rectangle0 = new Rectangle();
      numberAxis3D0.valueToJava2D((-201), rectangle0, rectangleEdge0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(standardXYURLGenerator0, true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.mapDatasetToRangeAxis(5273, 0);
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
      combinedDomainXYPlot0.setRangePannable(false);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      int int0 = (-290);
      combinedRangeXYPlot0.setWeight(2928);
      combinedRangeXYPlot0.getDomainAxisLocation(5273);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      // Undeclared exception!
//      try { 
        jFreeChart0.getCategoryPlot();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.jfree.chart.plot.CombinedRangeXYPlot cannot be cast to org.jfree.chart.plot.CategoryPlot
//         //
//         verifyException("org.jfree.chart.JFreeChart", e);
//      }
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, 1148.05256814474);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point point0 = new Point(0, 10);
      xYPlot0.panDomainAxes((-9.0), (PlotRenderingInfo) null, point0);
      xYPlot0.getOrientation();
      xYPlot0.getQuadrantPaint(0);
      Color color0 = (Color)xYPlot0.getRangeGridlinePaint();
      assertEquals((-1), color0.getRGB());
      
      int int0 = xYPlot0.getSeriesCount();
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(0, int0);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      combinedRangeXYPlot0.getDataset();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)12;
      byte byte0 = (byte)19;
      byteArray0[1] = (byte)19;
      byte byte1 = (byte) (-115);
      byteArray0[2] = (byte) (-115);
      byteArray0[3] = (byte) (-9);
      byteArray0[4] = (byte) (-119);
      byteArray0[5] = (byte)121;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-9);
      byteArray1[1] = (byte)12;
      IndexColorModel indexColorModel0 = null;
//      try {
        indexColorModel0 = new IndexColorModel(62, (-2261), byteArray0, byteArray0, byteArray1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Number of bits must be between 1 and 16.
//         //
//         verifyException("java.awt.image.IndexColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      combinedRangeXYPlot0.setWeight((-824));
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(numberAxis0);
      combinedRangeXYPlot1.getDomainAxisLocation((-824));
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("c.Q<*T~!|/(x");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
//      try { 
        plotRenderingInfo0.getSubplotInfo(10);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      DatasetGroup datasetGroup0 = new DatasetGroup("RangeType.NEGATIVE");
      jDBCXYDataset0.setGroup(datasetGroup0);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("='dzOuzo[", (-1311.90756413), (-1311.90756413));
      defaultXYItemRenderer0.removeAnnotation(xYTextAnnotation0);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, (ValueAxis) null, (ValueAxis) null, defaultXYItemRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.configureDomainAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setTickMarkStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area(defaultXYItemRenderer0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      RectangleEdge rectangleEdge0 = xYPlot0.getDomainAxisEdge((-1410));
      numberAxis3D0.valueToJava2D((-1221.13658), rectangle2D0, rectangleEdge0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberAxis3D0, false);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-505.85121219));
      candlestickRenderer0.getLegendItemURLGenerator();
      // Undeclared exception!
//      try { 
        defaultXYItemRenderer0.setLegendItemLabelGenerator((XYSeriesLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'generator' argument.
//         //
//         verifyException("org.jfree.chart.renderer.xy.AbstractXYItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 0.5235987755982988);
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setRangeAxisLocation(0, axisLocation0, true);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ConvolveOp convolveOp0 = new ConvolveOp((Kernel) null, 10, renderingHints0);
      BufferedImage bufferedImage0 = null;
//      try {
        bufferedImage0 = new BufferedImage((-1806), 15, 15);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown image type 15
//         //
//         verifyException("java.awt.image.BufferedImage", e);
//      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      assertFalse(combinedDomainXYPlot1.equals((Object)combinedDomainXYPlot0));
      
      combinedDomainXYPlot1.mapDatasetToRangeAxis(0, (-1410));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.setRangePannable(false);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      int int0 = combinedDomainXYPlot0.getWeight();
      assertEquals(1, int0);
      
      double double0 = combinedDomainXYPlot0.getRangeCrosshairValue();
      assertEquals(0.0, double0, 0.01);
      
      combinedDomainXYPlot2.getRangeAxisEdge();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection((XYSeries) null);
      combinedDomainXYPlot1.getRendererForDataset(xYSeriesCollection0);
      assertEquals(1, combinedDomainXYPlot1.getWeight());
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      XYSeries xYSeries0 = new XYSeries(fixedMillisecond0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "dockE3#";
      stringArray0[1] = "dockE3#";
      stringArray0[2] = "hc5a-Vc6@+2uX#";
      stringArray0[3] = "dockE3#";
      stringArray0[4] = "dockE3#";
      stringArray0[5] = "dockE3#";
      stringArray0[6] = "dockE3#";
      SymbolAxis symbolAxis0 = new SymbolAxis("dockE3#", stringArray0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("dockE3#");
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT, symbolAxis0.DEFAULT_GRID_BAND_PAINT, false);
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, symbolAxis0, logarithmicAxis0, xYDifferenceRenderer0);
      xYPlot0.setDomainGridlinePaint(symbolAxis0.DEFAULT_GRID_BAND_PAINT);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1148.05256814474, Double.NaN);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      xYPlot0.panDomainAxes(669.0, (PlotRenderingInfo) null, (Point2D) null);
      xYPlot0.getOrientation();
      // Undeclared exception!
//      try { 
        xYPlot0.getQuadrantPaint((-11));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The index value (-11) should be in the range 0 to 3.
//         //
//         verifyException("org.jfree.chart.plot.XYPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, "/]>sSI<qesjNxC");
      combinedDomainXYPlot0.setDomainTickBandPaint(xYPlot0.DEFAULT_BACKGROUND_PAINT);
      xYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      xYPlot0.setDomainMinorGridlinePaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      xYPlot0.setDomainGridlinesVisible(true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)104;
      IndexColorModel indexColorModel0 = null;
//      try {
        indexColorModel0 = new IndexColorModel(10, 10, byteArray0, (byte)0, false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 5
//         //
//         verifyException("java.awt.image.IndexColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      MockDate mockDate0 = new MockDate(55, 2308, 0, (-1821), 0, 82);
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Day day0 = new Day(mockDate0, zoneInfo0);
      TimeSeries timeSeries0 = new TimeSeries(day0);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2101.141591118832), 0.0);
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      XYPlot xYPlot0 = null;
//      try {
        xYPlot0 = new XYPlot(timeSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, stackedXYAreaRenderer2_0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.jfree.data.time.TimeSeriesCollection cannot be cast to org.jfree.data.xy.TableXYDataset
//         //
//         verifyException("org.jfree.chart.renderer.xy.StackedXYAreaRenderer2", e);
//      }
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Locale locale0 = Locale.TAIWAN;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", numberFormat0, dateFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(500);
      candlestickRenderer0.getBaseURLGenerator();
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(standardXYToolTipGenerator0, (XYURLGenerator) null);
      XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, periodAxis0, periodAxis0, xYAreaRenderer2_0);
      xYPlot0.isDomainPannable();
      assertEquals(1, xYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      PlotRenderingInfo plotRenderingInfo0 = null;
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 45, 0, 15, 39, 7, 10, false, false, false, false, false, true);
      chartPanel0.getGraphicsConfiguration();
      JFrame jFrame0 = null;
//      try {
        jFrame0 = new JFrame("", (GraphicsConfiguration) null);
//        fail("Expecting exception: HeadlessException");
      
//      } catch(HeadlessException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.awt.GraphicsEnvironment", e);
//      }
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      int int0 = (-379);
      Vector<ChronoLocalDate> vector0 = new Vector<ChronoLocalDate>(10);
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)39;
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte2 = (byte)53;
      byteArray0[3] = (byte)53;
      byte byte3 = (byte)37;
      byteArray0[4] = (byte)37;
      byte byte4 = (byte)68;
      byteArray0[5] = (byte)68;
      byte byte5 = (byte)77;
      byteArray0[6] = (byte)77;
      ByteLookupTable byteLookupTable0 = null;
//      try {
        byteLookupTable0 = new ByteLookupTable((-379), byteArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Offset must be greater than 0
//         //
//         verifyException("java.awt.image.LookupTable", e);
//      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      cyclicNumberAxis0.centerRange(1789.3161700017);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      combinedDomainXYPlot0.getRangeGridlinePaint();
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)103;
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)71;
      byteArray0[3] = (byte)0;
      byte byte1 = (byte) (-30);
      byteArray0[4] = (byte) (-30);
      byteArray0[5] = (byte)51;
      byteArray0[6] = (byte)117;
      byteArray0[7] = (byte)40;
      byteArray0[8] = (byte)0;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(500, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      IndexColorModel indexColorModel0 = null;
//      try {
        indexColorModel0 = new IndexColorModel((byte)103, 2, byteArray0, byteArray0, byteArray0, byteArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Number of bits must be between 1 and 16.
//         //
//         verifyException("java.awt.image.IndexColorModel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      cyclicNumberAxis0.setMinorTickMarkInsideLength(1.0F);
      combinedRangeXYPlot0.isDomainCrosshairVisible();
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      assertEquals(1, combinedRangeXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis0, true);
      combinedDomainXYPlot0.clearRangeMarkers(0);
      combinedDomainXYPlot0.clearDomainMarkers();
      PolarPlot polarPlot0 = new PolarPlot();
      Paint paint0 = polarPlot0.getRadiusGridlinePaint();
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(paint0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = 1.0F;
      floatArray0[1] = (float) 10;
      Kernel kernel0 = new Kernel(0, 10, floatArray0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0);
      // Undeclared exception!
//      try { 
        convolveOp0.filter((BufferedImage) null, (BufferedImage) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // src image is null
//         //
//         verifyException("java.awt.image.ConvolveOp", e);
//      }
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis(") should be in the range 0 to 3.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JFreeChart jFreeChart0 = new JFreeChart(") should be in the range 0 to 3.", combinedRangeXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = null;
//      try {
        lookupOp0 = new LookupOp((LookupTable) null, renderingHints0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.awt.image.LookupOp", e);
//      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = (-4245);
      JTabbedPane jTabbedPane0 = null;
//      try {
        jTabbedPane0 = new JTabbedPane((-4245), (-116));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
//         //
//         verifyException("javax.swing.JTabbedPane", e);
//      }
  }
}
