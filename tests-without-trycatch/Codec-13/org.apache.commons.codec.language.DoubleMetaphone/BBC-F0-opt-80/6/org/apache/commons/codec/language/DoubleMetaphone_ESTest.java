/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 19:30:32 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("MCH");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("MK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WR5GIER");
      assertNotNull(string0);
      assertEquals("RJR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PcMUGH", false);
      assertNotNull(string0);
      assertEquals("PKMF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PNMUGH", true);
      assertNotNull(string0);
      assertEquals("NMK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 2147483645;
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("EB", "EWSKI");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "-n)hTDg86=D:1]eK");
      assertNotNull(object0);
      assertEquals("NTKT", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("GNFKSK", true);
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("NFKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "1p?x0Bg7x+T";
      String string2 = doubleMetaphone0.encode("1p?x0Bg7x+T");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("PKSP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = true;
      int int1 = 67;
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      doubleMetaphone0.encode((Object) "1p?x0Bg7x+T");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("P5TUMB&EZZiI{:~~", "P5TUMB&EZZiI{:~~");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(7);
      assertEquals(7, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("P5TUMB&EZZiI{:~~");
      assertNotNull(string0);
      assertEquals("PTMPS", string0);
      assertEquals(7, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String string0 = "eLN";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2147483645);
      assertEquals(2147483645, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
      doubleMetaphone0.isDoubleMetaphoneEqual("eLN", "");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("WRTUMB&EZ0CI{6~~", "WRTUMB&EZ0CI{6~~", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("PNPSZ!Y%");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("NPS", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "tUMB&EZ0CI{6~~");
      assertNotNull(object0);
      assertEquals("TMPS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("KN2NA;U~GLI");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("NNKL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("KN2NA;U~GLI");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("NNKL", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "KN2NA;U~GLI");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertNotNull(object0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("NNKL", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "*r@";
      String string1 = doubleMetaphone0.doubleMetaphone("gIbi~N,b[A.uer9^", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KPNP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("KPNP");
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("KPNP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("*r@", "*r@");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("a", true);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("A", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "a");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals("A", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = "";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("(N=TvJA*%0-R+EQ", "*r@");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("<CcHUDl", "Nd;xhMXZ.0Q$T#x$");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("<CcHUDl");
      assertNotNull(string0);
      assertEquals("KTL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("BACH=E2");
      assertNotNull(string0);
      assertEquals("PK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("4RBC c7+js\"8-\"9ZQ>");
      assertNotNull(string0);
      assertEquals("RPKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("*@>4ixI3/WWbhEGy]G-");
      assertNotNull(string0);
      assertEquals("KSPJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("W#sFk{c");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SFKK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "SFKK");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals("SFK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "SFKK";
      stringArray0[1] = "KSPJ";
      stringArray0[2] = "SFKK";
      stringArray0[3] = "KSPJ";
      stringArray0[4] = "e@O6&WcLwTS7t";
      stringArray0[5] = "KSPJ";
      stringArray0[6] = "W#sFk{c";
      boolean boolean0 = DoubleMetaphone.contains("*@>4ixI3/WWbhEGy]G-", 0, 0, stringArray0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("rg.apachi.commons.codec.EncerExceptin", "PSHOEK");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "rg.apachi.commons.codec.EncerExceptin";
      stringArray0[1] = "rg.apachi.commons.codec.EncerExceptin";
      stringArray0[2] = "$QT8!LjBWUb9)m!";
      boolean boolean1 = DoubleMetaphone.contains("rg.apachi.commons.codec.EncerExceptin", 2012, 779, stringArray0);
      assertEquals(3, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("rg.apachi.commons.codec.EncerExceptin");
      assertNotNull(string0);
      assertEquals("RKPX", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("WKRCHAE");
      assertNotNull(string0);
      assertEquals("KRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("WRCHAE");
      assertNotNull(string0);
      assertEquals("RK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KYGH\"");
      assertNotNull(string0);
      assertEquals("KK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("C-u~8GlI");
      assertNotNull(string0);
      assertEquals("KKL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("gHZsJ", true);
      assertNotNull(string0);
      assertEquals("KSS ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("<CcHkUDYl/", false);
      assertNotNull(string0);
      assertEquals("XKTL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("<CcHkUDYl/", true);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("XKTL", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Gh>");
      assertNotNull(string0);
      assertEquals("K", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSAGH");
      assertNotNull(string0);
      assertEquals("SK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("ARKP", false);
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("''=,h@ 7L3pmdgi");
      assertNotNull(string0);
      assertEquals("LPMJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "TS");
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("TS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("LPMJ", true);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals("LPM ", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("-%Lb${liGhOX_*_X{_rX");
      assertNotNull(string0);
      assertEquals("LPLK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("AgH");
      assertNotNull(string0);
      assertEquals("AK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "-%Lb$liGhOX_*_X{_rX");
      assertNotNull(object0);
      assertEquals("LPLK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SWA", "SWA", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ScIAN");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("SN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("-%LbliGhOX_*_X{_rX");
      assertNotNull(string0);
      assertEquals("LPLK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("hmLK3<6DET$1~A", "PS", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[0];
      boolean boolean1 = DoubleMetaphone.contains(",fAXlL!c:SBMK>7a", 83, 83, stringArray0);
      assertEquals(0, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Object object0 = doubleMetaphone0.encode((Object) ",fAXlL!c:SBMK>7a");
      assertNotNull(object0);
      assertEquals("FKSL", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("gYQT");
      assertNotNull(string0);
      assertEquals("KKT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "/[Qd";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "/[Qd");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Ll");
      assertNotNull(string0);
      assertEquals("L", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "L");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("L", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("YGN");
      assertNotNull(string0);
      assertEquals("AKN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHOR");
      assertNotNull(string0);
      assertEquals("KR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("~CchQXmO5cDLTqC00");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("XKKS", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("i3b7:3*_G", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("APK", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "Ba0)JB");
      assertNotNull(object0);
      assertEquals("PP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "4LLE");
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("L", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("R{Kqq0C0;2DLuI", false);
      assertNotNull(string0);
      assertEquals("RKKK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("jDjq8P", "`G_uJO<Sd{% |");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("AS");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("A", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("nJmZ6uafmh=#nB", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("NJMS", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("RANGER", "D");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-1226));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('P');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("RANGER", "nJmZ6uafmh=#nB", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("PNI4LFF@*7UN\u0006LV", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("NLFN", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CHvE", "CHORE");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      boolean boolean0 = false;
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("N,aiR&Zz$I8", "N,aiR&Zz$I8");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual((String) null, "WGNTITH");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("ALLE");
      assertNotNull(string0);
      assertEquals("AL", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("KNALLE", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("N", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("k83bll\"^7 zhG", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("KPLJ", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(";N4+:kpq/", "Tjp5ggT%:X3y\"lLoq");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1993);
      assertEquals(1993, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSUCCEE", "PSUCCEE");
      assertTrue(boolean0);
      assertEquals(1993, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("%", false);
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(1993, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WITZ", "WITZ", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("n/Cs", true);
      assertNotNull(string0);
      assertEquals("NKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("LcHSR<e@tlJ", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("LKSR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("1kvV", true);
      assertNotNull(string0);
      assertEquals("KF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("z5K", "z5K", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "&zz*jf|^U;`{mm:/A");
      assertNotNull(object0);
      assertEquals("SJFM", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("UMB", true);
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("AM", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "AM");
      assertTrue(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("AM", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("UMB", true);
      assertFalse(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)object1));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AM", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "WRJF";
      boolean boolean1 = DoubleMetaphone.contains("AM", 733, 2066, stringArray0);
      assertEquals(1, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      // Undeclared exception!
//      try { 
        DoubleMetaphone.contains((String) null, 733, 1, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "WRSCH";
      stringArray0[1] = "WRSCH";
      stringArray0[2] = "WRSCH";
      boolean boolean0 = DoubleMetaphone.contains("WRSCH", (-46661427), (-46661427), stringArray0);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean0);
      
      boolean boolean1 = DoubleMetaphone.contains("m", (-46661427), 1560, stringArray0);
      assertEquals(3, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WRSCH", false);
      assertNotNull(string0);
      assertEquals("RX", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1560);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("OGY", "WRSCH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("OGY", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WRSCH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("WRSCH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRSCHWRSCH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("OGY", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("RX");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("RKS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRSCHWRSCH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("OGY", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("rX`(4h?sS+l7f1[c!-]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("OGYrX`(4h?sS+l7f1[c!-]", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WRSCHWRSCH", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('{', '{');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRSCHWRSCH{", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("OGYrX`(4h?sS+l7f1[c!-]{", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WRSCH", "qmS$9/_|ytL");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRSCHWRSCH{qmS$9/_|ytL", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("OGYrX`(4h?sS+l7f1[c!-]{WRSCH", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = DoubleMetaphone.contains("RX", (-46661427), (-5949), stringArray0);
      assertEquals(3, stringArray0.length);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      String string2 = doubleMetaphone0.doubleMetaphone("qmS$9/_|ytL", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("KMST", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("WRSCH", false);
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("RX", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "RX");
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string3));
      assertNotNull(object0);
      assertEquals("RKS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("l1lD&{f_I,4Hj5'{J", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-894));
      assertEquals((-894), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.encode((Object) "O}9SHku:a%?X$");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-326));
      assertEquals((-326), doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string0);
      assertEquals((-326), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals((-326), doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone((String) null, false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.doubleMetaphone("S+&g8Nw:");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("I");
      assertNotNull(string0);
      assertEquals("A", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("WRJOSE");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("RJS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("q?h$VK~ow", "q?h$VK~ow");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("ACH", "q?h$VK~ow", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string0 = doubleMetaphone2.doubleMetaphone("ACH", true);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals("AK", string0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("guhs:X!v@YQ}fLr^v", false);
      assertNotNull(string0);
      assertEquals("KSKS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("IJa", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AJ", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("SIAN");
      assertNotNull(string0);
      assertEquals("SN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "t87n?*72");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("H*XBGN+{v&E", "- fVXC]M", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = (-566);
      doubleMetaphone0.setMaxCodeLen((-566));
      assertEquals((-566), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.doubleMetaphone("SC", false);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ZJP*", "2,zjp*y:Qriq-[", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHORE", false);
      assertNotNull(string0);
      assertEquals("XR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("ZJP*", "2,zjp*y:Qriq-[", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("SIAN");
      assertNotNull(string0);
      assertEquals("SN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("SUGAR", "t87n?*72");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("K", "SUGAR", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("H*XBGN+{v&E", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KSPK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Z", false);
      assertNotNull(string0);
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("p?^!pZ~Gj1!lk_ 9_j");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("PPSK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("U!YkRa.Z;xmZ ", "p?^!pZ~Gj1!lk_ 9_j", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("U!YkRa.Z;xmZ ", "UMB", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "MACHER");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("MACHER", false);
      assertNotNull(string2);
      assertEquals("MKR", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertFalse(object0.equals((Object)string2));
      assertNotNull(object0);
      assertEquals("ARKP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("TCH", "MACHER", true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("T", false);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertNotNull(string3);
      assertEquals("T", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "MKR");
      assertFalse(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string3));
      assertNotNull(object1);
      assertEquals("MKR", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("b15m;mlL=SCZk-_", false);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("", string4);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "");
      assertNull(object2);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = null;
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "T";
      stringArray0[4] = "";
      stringArray0[5] = "org.apache.commons.codec.EncoderException";
      stringArray0[6] = "MKR";
      boolean boolean2 = DoubleMetaphone.contains(":EVOXNR%%DID", 0, 0, stringArray0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("VAN ");
      assertNotNull(string0);
      assertEquals("FN", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("IB");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("AFKS", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("AFKS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PN5J_,X", "%;]7NNh{%)g@");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(88);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('(');
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("IB");
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("IB", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("IB", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone("%;]7NNh{%)g@", false);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("NK", string3);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("#aI0/", "%;]7NNh{%)g@", false);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("?D7\"O~;s[R$oP+");
      assertNotNull(string0);
      assertEquals("TSRP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?D7\"O~;s[R$oP+", "?D7\"O~;s[R$oP+");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("?D7\"O~;s[R$oP+", false);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TSRP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("wACH", "?D7\"O~;s[R$oP+", false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("?D7\"O~;s[R$oP+", true);
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("TSRP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("zjp*y:Qriq-[", ">Yw]+}SKss gEX2be57");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("zjp*y:Qriq-[", "guhs:X!v@YQ}fLr^v");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(">Yw]+}SKss gEX2be57", true);
      assertNotNull(string0);
      assertEquals("SKSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(3);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('?');
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("?", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('.');
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertEquals(".", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("?.", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('o', 'o');
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?.o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(".o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?.o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(".o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?.o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(".o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(3, doubleMetaphone0.getMaxCodeLen());
      assertEquals("?.o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(".o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[0];
      // Undeclared exception!
//      try { 
        DoubleMetaphone.contains((String) null, 3, 10, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('K');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("K", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WH", "JOSE");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("-'cx{(XIu[>pZ", false);
      assertNotNull(string0);
      assertEquals("KKSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("M?.YLQ", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("MLK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('K');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("K", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("TIA", false);
      assertNotNull(string0);
      assertEquals("X", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("X");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("S", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("z+XSE)H98%:o", "IER", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("TIA", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("X", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1417);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(868);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WRO", "WRO");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("4NcZ@(a", "4NcZ@(a");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO4NcZ@(a,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO4NcZ@(a,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("KS", "1p?xBg7v+T");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a1p?xBg7v+T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO4NcZ@(a,KS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("1p?xBg7v+T");
      assertNotNull(string0);
      assertEquals("PKSPKFT", string0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a1p?xBg7v+T", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO4NcZ@(a,KS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('_');
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a1p?xBg7v+T_", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO4NcZ@(a,KS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("PKSPKFT", false);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("PKSPKFT", string1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone(")|xpXZ3ojrO/1G5p");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("KSPKSSJRKP", string2);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("ec^a(Wzs4voTP", "PKSPKFT");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean3);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a1p?xBg7v+T_", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO4NcZ@(a,KS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone1.encode((Object) "WRO");
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("R", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "R");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string2));
      assertNotNull(object1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("R", object1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("KSPKSSJRKP", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("KSPKSRKP", string3);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 1417;
      doubleMetaphone0.setMaxCodeLen(1417);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(868);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("C", "PS(", false);
      assertFalse(boolean0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WRO", "WRO");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("4NcZ@(a", "4NcZ@(a");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("D");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO4NcZ@(a,D", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1417);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("RGY", "PS/LB&B.Q`4PL1:`G");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PS/LB&B.Q`4PL1:`G", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("RGY", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WRO");
      assertNotNull(string0);
      assertEquals("R", string0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("4NcZ@(a");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("NS", string1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('_');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a,D_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("D", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("T", string2);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.charAt((String) null, 1417);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("TTH");
      assertNotNull(string0);
      assertEquals("0", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("it6Q%R5x#Lw\"xRG");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ATKR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WRK", "TTH");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("0");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = null;
      String string4 = doubleMetaphone0.doubleMetaphone("HOEK", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("HK", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone1.isDoubleMetaphoneEqual((String) null, "04<-~W^", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(980);
      assertEquals(980, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("PNNJMZ6UAFMH=#NB");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("NJMS", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("mNQ,ci");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("MNKS", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.doubleMetaphone("mNQ,ci", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("MNKS", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("MNKS");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("MNKS", string3);
      assertEquals(980, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("R{V[k%VPOr'p?-", "z+XSE)H98%:o", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean0);
      assertEquals(980, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1429);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KN", "WcriES?n-dscx(Ju*", false);
      assertFalse(boolean0);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(868);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('_');
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("hO]>=");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("H", string0);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean2);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("0OvaJ&,44g'Bz0Q", true);
      assertNotNull(string0);
      assertEquals("FJKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FJKP", "CE");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("W}.%", "0OvaJ&,44g'Bz0Q");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2857);
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(292);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("FJKP");
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FJKP", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('(');
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FJKP(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(942);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("Z,UI[.Ui.=s");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("Z,UI[.Ui.=s", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(boolean2);
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("Z,UI[.Ui.=s", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("FJKP", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("FKP", string1);
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("FKP", 73);
      assertEquals('\u0000', char0);
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("ORCHID", 2857);
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(boolean3);
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FJKP(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object1 = doubleMetaphone0.encode((Object) "srkGMq=#InC");
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string1));
      assertNotNull(object1);
      assertEquals("SRKKMKNK", object1);
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("N[7q:O\"xWRSx", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("NKKSRSKS", string2);
      assertEquals(2857, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "(->'+sw(j";
      stringArray0[1] = "(->'+sw(j";
      stringArray0[2] = "(->'+sw(j";
      stringArray0[3] = "(->'+sw(j";
      boolean boolean0 = DoubleMetaphone.contains("(->'+sw(j", 657, 657, stringArray0);
      assertEquals(4, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("(->'+sw(j");
      assertNotNull(string0);
      assertEquals("SJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "(->'+sw(j");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("SJ", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("(->'+sw(j");
      assertTrue(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SJ", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("SJpd", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object0));
      assertNotNull(string2);
      assertEquals("SPT", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("(->'+sw(j");
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)object0));
      assertTrue(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("SJ", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("B0x?i");
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("PKS", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("(->'+sw(j", "5");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("_1L", (String) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("SJ", false);
      assertFalse(string5.equals((Object)string4));
      assertTrue(string5.equals((Object)object0));
      assertTrue(string5.equals((Object)string1));
      assertTrue(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string0));
      assertNotNull(string5);
      assertEquals("SJ", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.doubleMetaphone("CHIA", false);
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)object0));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertNotNull(string6);
      assertEquals("K", string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string7 = doubleMetaphone0.doubleMetaphone("(->'+sw(j", false);
      assertTrue(string7.equals((Object)object0));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string6));
      assertTrue(string7.equals((Object)string0));
      assertTrue(string7.equals((Object)string1));
      assertTrue(string7.equals((Object)string3));
      assertTrue(string7.equals((Object)string5));
      assertNotNull(string7);
      assertEquals("SJ", string7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "(->'+sw(j");
      assertTrue(object1.equals((Object)string3));
      assertTrue(object1.equals((Object)string7));
      assertTrue(object1.equals((Object)string5));
      assertTrue(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string4));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string6));
      assertTrue(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals("SJ", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "K");
      assertFalse(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string3));
      assertFalse(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)string6));
      assertFalse(object2.equals((Object)string7));
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)string4));
      assertFalse(object2.equals((Object)string5));
      assertFalse(object2.equals((Object)object0));
      assertNotNull(object2);
      assertEquals("K", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-686));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3);
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = DoubleMetaphone.contains("(->'+sw(j", 657, (-1), stringArray0);
      assertEquals(4, stringArray0.length);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
      
      String string8 = doubleMetaphone0.doubleMetaphone("KNVAN", false);
      assertFalse(string8.equals((Object)object1));
      assertFalse(string8.equals((Object)object2));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)object0));
      assertFalse(string8.equals((Object)string4));
      assertNotNull(string8);
      assertEquals("NFN", string8);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?D7\"O~;s[R$oP+", "?D7\"O~;s[R$oP+");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("?D7\"O~;s[R$oP+", false);
      assertNotNull(string0);
      assertEquals("TSRP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("TSRP");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TSRP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("TSRP");
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("TSRP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("(-AY", true);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("W}.%", "W}.%");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(88);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(73);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('(');
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("srkGMq=#InC");
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("srkGMq=#InC", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("srkGMq=#InC", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.doubleMetaphone("wgfisF{?U+G", true);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("KFSFK", string4);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("TSRP", 32);
      assertEquals('\u0000', char0);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-1164));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertTrue(boolean3);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String string5 = doubleMetaphone0.doubleMetaphone("l3TH=&wTYbbS{dU", false);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertNotNull(string5);
      assertEquals("L0TPST", string5);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-500));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('K');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "<$gHZ!>B}", true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(75);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("O}9SHku:a%?X$");
      assertNotNull(string0);
      assertEquals("AXKKS", string0);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("`3`a", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("mNQ,ci");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("MNKS", string2);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("O}9SHku:a%?X$", false);
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("AXKKS", string3);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("3\"Sn #:vJQ", "`3`a", false);
      assertFalse(boolean0);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("AXKKS", false);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("AKSKS", string4);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("cD(%", "cD(%");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("SC", false);
      assertNotNull(string0);
      assertEquals("SK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("ORCHID", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ARKT", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("cD(%");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("KT", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("SK");
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("SK", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "cD(%";
      stringArray0[1] = "co't<F6b;(%U9?G[[";
      stringArray0[2] = "ARKT";
      stringArray0[3] = "SK";
      stringArray0[4] = "].L$l]";
      boolean boolean1 = DoubleMetaphone.contains("].L$l]", (-312), (-312), stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1429);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(868);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('_');
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("{'ln%7Qd).?\nsmK}");
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_{'ln%7Qd).?\nsmK}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("D");
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_{'ln%7Qd).?\nsmK}D", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(199);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("pEn7ceK<Q", "org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("pEn7ceK<Q", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string1);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('_');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("pEn7ceK<Q_", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string2);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotNull(string3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals("_{'ln%7Qd).?\nsmK}D", string3);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_{'ln%7Qd).?\nsmK}D", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("@AiOmPh][vxGy", (String) null, true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      String string4 = doubleMetaphone0.doubleMetaphone("p}UZB&D/A?", true);
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("PSPT", string4);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "TTH";
      String string1 = doubleMetaphone0.encode("TTH");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("0", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "it6Q%R5x#Lw\"xRG";
      String string3 = doubleMetaphone0.encode("it6Q%R5x#Lw\"xRG");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("ATKR", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("it6Q%R5x#Lw\"xRG", "it6Q%R5x#Lw\"xRG");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.encode("it6Q%R5x#Lw\"xRG");
      assertFalse(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("ATKR", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string5 = "%g";
      Object object0 = doubleMetaphone1.encode((Object) "%g");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string5));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("K", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object1 = new Object();
      assertNotNull(object1);
      
//      try { 
        doubleMetaphone1.encode(object1);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("+f9@XKeBf4z0", true);
      assertNotNull(string0);
      assertEquals("FKSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("]XC&@X");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KSKS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("KSKS");
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("KSKS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("KSKS", false);
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("KSKS", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(">- ltaY", ">- ltaY");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2239);
      assertEquals(2239, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(2239, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('(');
      assertEquals(2239, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("+f9@XKeBf4z0");
      assertEquals(2239, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(2239, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string4 = doubleMetaphone0.doubleMetaphone(">- ltaY", true);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("LT", string4);
      assertEquals(2239, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("hp", 343);
      assertEquals('\u0000', char0);
      assertEquals(2239, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("hp", 69);
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(2239, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      assertEquals(2239, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "LT");
      assertFalse(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string4));
      assertFalse(object0.equals((Object)string3));
      assertFalse(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("LT", object0);
      assertEquals(2239, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("SIO");
      assertNotNull(string0);
      assertEquals("S", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WR", "_dcpP;");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("ytJ_7xP^]'");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ATJK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("TCH", "WRCZ8!=8.L]U1OTZ.OR");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.doubleMetaphone("HIA");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("H", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("CK", (String) null, true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone1.isDoubleMetaphoneEqual("it$,VIL0", "WRJQJ?*W]F&/0S@|DX\"M<");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean5 = doubleMetaphone0.isDoubleMetaphoneEqual("SIO", "_dcpP;", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("cz8!=8.l]U1otZ.O\r");
      assertNotNull(string0);
      assertEquals("SLTS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("it6Q%R5x#Lw\"xRG");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ATKR", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("it6Q%R5x#Lw\"xRG", "it6Q%R5x#Lw\"xRG");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("it6Q%R5x#Lw\"xRG");
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("ATKR", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("0aA>-dYL]U>0");
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals("TL", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("YFG$S2", "CK", true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("TL", "5J_,X");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("3[2Sd_bpVWBbQO},", "S", false);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TH", "D");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "D");
      assertNotNull(object0);
      assertEquals("T", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1029));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("-rBhXx!.o<+p", "org.apache.commons.codec.EncoderException", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("d;");
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "zvqViW/");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "T";
      stringArray0[1] = "T";
      stringArray0[2] = "D";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      stringArray0[5] = "|?a&01Wo-H5c";
      stringArray0[6] = "-rBhXx!.o<+p";
      stringArray0[7] = "org.apache.commons.codec.EncoderException";
      stringArray0[8] = "d;";
      boolean boolean3 = DoubleMetaphone.contains("TH", (-1029), (-1029), stringArray0);
      assertEquals(9, stringArray0.length);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = 2751;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "bkNT~*O.8\"/.K[;V}2";
      stringArray0[1] = "bkNT~*O.8\"/.K[;V}2";
      stringArray0[2] = "bkNT~*O.8\"/.K[;V}2";
      stringArray0[3] = "bkNT~*O.8\"/.K[;V}2";
      stringArray0[4] = "bkNT~*O.8\"/.K[;V}2";
      stringArray0[5] = "bkNT~*O.8\"/.K[;V}2";
      stringArray0[6] = "bkNT~*O.8\"/.K[;V}2";
      boolean boolean0 = DoubleMetaphone.contains("bkNT~*O.8\"/.K[;V}2", (-165), 2751, stringArray0);
      assertEquals(7, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "";
      String string1 = null;
      String string2 = doubleMetaphone0.doubleMetaphone("bkNT~*O.8\"/.K[;V}2");
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("PKNT", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("bkNT~*O.8\"/.K[;V}2", false);
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("PKNT", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "F$e+ZH!p", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("cz8!=8.l]U1otZ.O\r");
      assertNotNull(string0);
      assertEquals("SLTS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode(" t6Q?R5x#Ll\"xRG");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TKRK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(" t6Q?R5x#Ll\"xRG", " t6Q?R5x#Ll\"xRG");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(" t6Q?R5x#Ll\"xRG", " t6Q?R5x#Ll\"xRG");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode(" t6Q?R5x#Ll\"xRG");
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("TKRK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("0aA>-dYL]U>0");
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("TL", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("YFG$S2", "CK", true);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("TL", "5J_,X");
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("3[2Sd_bpVWBbQO},", "S", false);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("+f9@XKeBf4z0");
      assertNotNull(string0);
      assertEquals("FKSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("+f9@XKeBf4z0");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("FKSK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("8)~TF");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("TF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK", "4NcZ@(a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone("aZ7+~xT=P3Iu(T");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("ASKS", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("FKSK");
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("FKSK", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("cH:r}#?-:bREF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSKcH:r}#?-:bREF", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSKcH:r}#?-:bREF,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string5 = doubleMetaphone0.doubleMetaphone("kE>m@#^sIOzO");
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertNotNull(string5);
      assertEquals("KMSS", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1417);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(868);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WRO", "WRO");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("{EfbUT>iy:bR?P", "4NcZ@(a");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO{EfbUT>iy:bR?P", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO{EfbUT>iy:bR?P,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO{EfbUT>iy:bR?P,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("{EfbUT>iy:bR?P", "WRO");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('e');
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(ae", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO{EfbUT>iy:bR?P,e", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("S:%-g_QwQoKO\"ejy", "]qk//_n!g=_j!", true);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("fzR!k", false);
      assertNotNull(string0);
      assertEquals("FSRK", string0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(ae", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO{EfbUT>iy:bR?P,e", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("IAU");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("I", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("GN?NPO4G}AF@4AZSLZGR", "IAU");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("I", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("RGY");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("RJ", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("8 F!{xY9E'#FA[");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("FKSF", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("FKSF");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("I", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('K');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("I", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone1.doubleMetaphone("RJ", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("R ", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult1.getPrimary();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals("G", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("G", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("I", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
//      try { 
        doubleMetaphone2.encode((Object) doubleMetaphone_DoubleMetaphoneResult1);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PNORG.APACHE.COMMONS.CODEC.ENCODEREXCEPTION", true);
      assertNotNull(string0);
      assertEquals("NRKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("eF(BF-T", "eF(BF-T");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("TZ");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("");
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone(".", false);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals("", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "TS");
      assertFalse(object0.equals((Object)string4));
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("TS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "NRKP");
      assertFalse(object1.equals((Object)string1));
      assertTrue(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string4));
      assertNotNull(object1);
      assertEquals("NRKP", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(".rn", "AR", true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "NRKP");
      assertTrue(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)string4));
      assertFalse(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)object1));
      assertNotNull(object2);
      assertEquals("NRKP", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("WRWITZ", false);
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)object1));
      assertFalse(string5.equals((Object)object2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)object0));
      assertFalse(string5.equals((Object)string1));
      assertNotNull(string5);
      assertEquals("RTS", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.doubleMetaphone("B", true);
      assertFalse(string6.equals((Object)object1));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)object2));
      assertFalse(string6.equals((Object)object0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertNotNull(string6);
      assertEquals("P", string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('f');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("f", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("f", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("f", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("f", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object3 = doubleMetaphone0.encode((Object) "NRKP");
      assertTrue(object3.equals((Object)object2));
      assertFalse(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)string6));
      assertTrue(object3.equals((Object)string0));
      assertFalse(object3.equals((Object)string5));
      assertFalse(object3.equals((Object)string4));
      assertFalse(object3.equals((Object)object0));
      assertTrue(object3.equals((Object)object1));
      assertNotNull(object3);
      assertEquals("NRKP", object3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("f", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("f", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "WRWITZ";
      stringArray0[1] = null;
      stringArray0[2] = "PN";
      stringArray0[3] = "pT)SWU}5XVgA8,8";
      boolean boolean4 = DoubleMetaphone.contains("Z", 1, 0, stringArray0);
      assertEquals(4, stringArray0.length);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "TH";
      String string1 = "D";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TH", "D");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1029));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = "|J]LAZ{+";
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-1029));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append("4NcZ@(a", "|J]LAZ{+");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(88);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WICZ", "S", false);
      assertFalse(boolean0);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KND");
      assertNotNull(string0);
      assertEquals("NT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("KND");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("NT", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("8)~TF", "8)~TF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("SUGAR");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("XKR", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("KND");
      assertTrue(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("NT", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("lWhsJ=FQ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("o", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.doubleMetaphone("KND", false);
      assertTrue(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("NT", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "jqJ?*w]f&/0S@|DX\"m<";
      Object object0 = doubleMetaphone0.encode((Object) "W");
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "");
      assertNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "ISL";
      String string2 = doubleMetaphone0.doubleMetaphone("ISL", false);
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("AL", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("ISL");
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("AL", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?npO4G}Af@4AZslZGR", (String) null);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.encode("AL");
      assertTrue(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)object0));
      assertNotNull(string4);
      assertEquals("AL", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = new Object();
      assertNotNull(object2);
      
//      try { 
        doubleMetaphone0.encode((Object) null);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1429);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(868);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('_');
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("{'ln%7Qd).?\nsmK}");
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("_{'ln%7Qd).?\nsmK}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("{'ln%7Qd).?\nsmK}", "M");
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_{'ln%7Qd).?\nsmK}{'ln%7Qd).?\nsmK}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotNull(string0);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string0);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_{'ln%7Qd).?\nsmK}{'ln%7Qd).?\nsmK}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('u');
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Mu", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("_{'ln%7Qd).?\nsmK}{'ln%7Qd).?\nsmK}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("ARKPXKMNSKTKNKTRKSPXN", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ARKPKSKMNSKTKNKTRKSPKSN", string1);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("M");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("M", string2);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone1.isDoubleMetaphoneEqual("KNMANGER", "KNMANGER");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(3);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult1.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertFalse(boolean3);
      assertEquals(1429, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("+f9@XKeBf4z0");
      assertNotNull(string0);
      assertEquals("FKSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("+f9@XKeBf4z0");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("FKSK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("FKSK");
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("FKSK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK", "4NcZ@(a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a,", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "FKSK");
      assertTrue(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string1));
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("FKSK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 69);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("ER", false);
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("AR", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("4NcZ@(a", true);
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("NX", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "V`2T9.tp6sa#f";
      stringArray0[1] = "V`2T9.tp6sa#f";
      stringArray0[2] = "V`2T9.tp6sa#f";
      stringArray0[3] = "V`2T9.tp6sa#f";
      stringArray0[4] = "V`2T9.tp6sa#f";
      boolean boolean0 = DoubleMetaphone.contains("V`2T9.tp6sa#f", 77, 76, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("V`2T9.tp6sa#f", "V`2T9.tp6sa#f");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(85);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("V`2T9.tp6sa#f", false);
      assertNotNull(string0);
      assertEquals("FTTP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("V`2T9.tp6sa#f", "V`2T9.tp6sa#f");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("V`2T9.tp6sa#f", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("V`2T9.tp6sa#f", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "V`2T9.tp6sa#f");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("FTTP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("SJPK", "ILLA");
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("V`2T9.tp6sa#f", true);
      assertTrue(string2.equals((Object)object0));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("FTTP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean5 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean5 == boolean0);
      assertFalse(boolean5 == boolean1);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("V`2T9.tp6sa#f", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("V`2T9.tp6sa#f", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.encode("]6QPJ");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)object0));
      assertNotNull(string3);
      assertEquals("KPJ", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("(-AY");
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("(-AY", true);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("W}.%", "W}.%");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(88);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(88);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(88);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(88, doubleMetaphone1.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("", 79);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
      assertEquals(88, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(83);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("ARKPKKMNSKTKNKTRKSPXN", string2);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("?V,Ab3Z0G", false);
      assertNotNull(string0);
      assertEquals("FPSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(">Po*Gg", "");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2942);
      assertEquals(2942, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(2942, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt((String) null, (-1834));
      assertEquals('\u0000', char0);
      assertEquals(2942, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("*+x&", 2536);
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(2942, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('K');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("K", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("JOSE", "XH`vCt`UPG", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(" t6Q?R5x#Ll\"xRG");
      assertNotNull(string0);
      assertEquals("TKRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(" t6Q?R5x#Ll\"xRG", " t6Q?R5x#Ll\"xRG");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(" t6Q?R5x#Ll\"xRG", " t6Q?R5x#Ll\"xRG");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode(" t6Q?R5x#Ll\"xRG");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TKRK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("0aA>-dYL]U>0");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("TL", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("TL", "5J_,X");
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = "WRW}.%";
      stringArray0[2] = "']6=Y$K_bxiM4SV";
      stringArray0[3] = "TL";
      boolean boolean3 = DoubleMetaphone.contains("']6=Y$K_bxiM4SV", 1237, 1237, stringArray0);
      assertEquals(4, stringArray0.length);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      
      String[] stringArray1 = new String[4];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "TL";
      stringArray1[1] = "TL";
      stringArray1[2] = " t6Q?R5x#Ll\"xRG";
      stringArray1[3] = "']6=Y$K_bxiM4SV";
      boolean boolean4 = DoubleMetaphone.contains("WRW}.%", 1237, 1237, stringArray1);
      assertEquals(4, stringArray1.length);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray1, stringArray0);
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "MI?E%;h7SZ");
      assertNotNull(object0);
      assertEquals("MS", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("jqJ?*w]f&/0S@|DX\"m<", false);
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals("JKJF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("MI?E%;h7SZ");
      assertFalse(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals("MS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("WR", "W", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2063);
      assertEquals(2063, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("`1", true);
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("", string2);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("`1", 1);
      assertEquals('1', char0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("^,uu%60mKxdV_wX6q", (-3214));
      assertFalse(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("^,uu%60mKxdV_wX6q", false);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("M", string3);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "MI?E%;h7SZ";
      stringArray0[1] = "";
      stringArray0[2] = "JKJF";
      stringArray0[3] = "WR";
      stringArray0[4] = "WRSPR";
      // Undeclared exception!
//      try { 
        DoubleMetaphone.contains("JKJF", 1, (-3214), stringArray0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("nJmZ6uafmh=#nB", "nJmZ6uafmh=#nB", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("?3tT*`v]/3XAGwa", "Y*wD", true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("nJmZ6uafmh=#nB");
      assertNotNull(string0);
      assertEquals("NJMS", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(48);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("L");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("L", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('b');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Lb", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("Lb", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("Lb", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
//      try { 
        doubleMetaphone0.encode((Object) null);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1400);
      assertEquals(1400, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1400, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WRARKPXKMNSKTKNKTRKSPXN", "WRARKPXKMNSKTKNKTRKSPXN");
      assertEquals(1400, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('g');
      assertEquals(1400, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(":xw");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("KS", string0);
      assertEquals(1400, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertTrue(boolean0);
      assertEquals(1400, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone1.encode("SCH");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("X", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(70);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(70, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      char char0 = doubleMetaphone2.charAt("SCH", 527);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone2.new DoubleMetaphoneResult(2);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("WR8)~TF", "KS");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("KS", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("\\K!alY:4,)]h}=A");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(1400, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WR", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("~8", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("", string2);
      assertEquals(1400, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1417);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(868);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WRO", "WRO");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("{EfbUT>iy:bR?P", "4NcZ@(a");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO{EfbUT>iy:bR?P", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO{EfbUT>iy:bR?P,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO{EfbUT>iy:bR?P,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("D");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO{EfbUT>iy:bR?P,D", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1417);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("RGY", "PS/LB&B.Q`4PL1:`G");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PS/LB&B.Q`4PL1:`G", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("RGY", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("WRO");
      assertNotNull(string0);
      assertEquals("R", string0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertTrue(boolean1 == boolean0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertFalse(boolean1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO{EfbUT>iy:bR?P,D", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("PS");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO{EfbUT>iy:bR?P,DPS", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('_');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO{EfbUT>iy:bR?P,DPS_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("d98ebQAj;N", true);
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("TPKJN", string2);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotNull(string3);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals("WRO{EfbUT>iy:bR?P,DPS_", string3);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO{EfbUT>iy:bR?P,DPS_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
//      try { 
        doubleMetaphone1.encode(object1);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = "/lb&b.Q`4Pl1:`g";
      String string3 = doubleMetaphone0.doubleMetaphone("/lb&b.Q`4Pl1:`g");
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("LPPK", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("LPPK", "TP");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.encode("CIE");
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("S", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(527);
      assertEquals(527, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("h%", 527);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals('\u0000', char0);
      assertEquals(527, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(5036);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(527, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null, "TP");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "V`2T9.tp6sa#f";
      stringArray0[1] = "V`2T9.tp6sa#f";
      stringArray0[2] = "V`2T9.tp6sa#f";
      stringArray0[3] = "V`2T9.tp6sa#f";
      stringArray0[4] = "V`2T9.tp6sa#f";
      boolean boolean0 = DoubleMetaphone.contains("V`2T9.tp6sa#f", 77, 76, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("V`2T9.tp6sa#f", "V`2T9.tp6sa#f");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(90);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("V`2T9.tp6sa#f", false);
      assertNotNull(string0);
      assertEquals("FTTP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "V`2T9.tp6sa#f");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("FTTP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone0.isDoubleMetaphoneEqual("SJPK", "ILLA");
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("V`2T9.tp6sa#f", true);
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)object0));
      assertNotNull(string2);
      assertEquals("FTTP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean5 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5 == boolean1);
      assertTrue(boolean5 == boolean0);
      assertFalse(boolean5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      boolean boolean6 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean6 == boolean5);
      assertTrue(boolean6 == boolean3);
      assertTrue(boolean6 == boolean2);
      assertTrue(boolean6 == boolean4);
      assertFalse(boolean6 == boolean1);
      assertTrue(boolean6 == boolean0);
      assertFalse(boolean6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("{DG-{", "P");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("(-m\"(E +** %zw+I!.", "DG", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\'');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("JOSE", "P", false);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('$');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNO", "i4Lff@*7Un\u0006lV", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('Z');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("KNO", "DD");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "V`2T9.tp6sa#f";
      stringArray0[1] = "V`2T9.tp6sa#f";
      stringArray0[2] = "V`2T9.tp6sa#f";
      stringArray0[3] = "V`2T9.tp6sa#f";
      stringArray0[4] = "V`2T9.tp6sa#f";
      boolean boolean0 = DoubleMetaphone.contains("V`2T9.tp6sa#f", 77, 76, stringArray0);
      assertEquals(5, stringArray0.length);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("V`2T9.tp6sa#f", "V`2T9.tp6sa#f");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(90);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("TF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("TF", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('D');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFD", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("V`2T9.tp6sa#f", false);
      assertNotNull(string0);
      assertEquals("FTTP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFD", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "V`2T9.tp6sa#f");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals("FTTP", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("V`2T9.tp6sa#f", true);
      assertTrue(string2.equals((Object)object0));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("FTTP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean4 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFD", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean5 = DoubleMetaphone.contains("", 77, 77, stringArray0);
      assertEquals(5, stringArray0.length);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean2);
      assertFalse(boolean5 == boolean1);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5);
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 90);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("FTTP", 76);
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("nJmZ6uafmh=#nB", "nJmZ6uafmh=#nB", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("D", "PN8)~TF");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(39);
      assertEquals(39, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("XC:p(![)e", (-194));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-1570));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('&');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\u0000');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("p1AIH((K&}7", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("PK", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      char char1 = doubleMetaphone3.charAt("", (-1936));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertTrue(char1 == char0);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode(" t6Q?R5x#Ll\"xRG");
      assertNotNull(string0);
      assertEquals("TKRK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(" t6Q?R5x#Ll\"xRG", " t6Q?R5x#Ll\"xRG");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(" t6Q?R5x#Ll\"xRG", " t6Q?R5x#Ll\"xRG");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode(" t6Q?R5x#Ll\"xRG");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TKRK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("0aA>-dYL]U>0");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("TL", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("OGGI", "x^F;_UF_%RR/B~q");
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "D";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TH", "D");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1029));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("|J]LAZ{+", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("JLS", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = "_+>q1*pzOH9!B6L:]-";
      String string3 = doubleMetaphone1.doubleMetaphone("D");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("T", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("WITZ");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("ATS", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("OI");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertNotNull(string5);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("A", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-385));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append("ATS", "A");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Dwz&p8", "Dwz&p8");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("(-m\"(E +** %zw+I!.", "Dwz&p8", false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("(-m\"(E +** %zw+I!.");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("aFaU!lo3\"2pp", false);
      assertNotNull(string0);
      assertEquals("AFLP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("hs1.QH&N0dvC", 73);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      char char1 = doubleMetaphone2.charAt("PNOS", 32);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(char1 == char0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ARKP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("PNCH:R}#?-:BREF");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("NXRP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("ARKP", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual(":I]L@u6Bvkf", "2");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(90);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('(');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(":I]L@u6Bvkf");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(":I]L@u6Bvkf", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean2);
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(":I]L@u6Bvkf", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("ARKP", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("W}.%", 73);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("", (-1075307805));
      assertTrue(char1 == char0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals('\u0000', char1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean3);
      assertEquals(1, doubleMetaphone1.getMaxCodeLen());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals(":I]L@u6Bvkf", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?D7\"O~;s[R$oP+", "?D7\"O~;s[R$oP+");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string0 = doubleMetaphone2.doubleMetaphone("?D7\"O~;s[R$oP+", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals("TSRP", string0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.doubleMetaphone("CGZ");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("KS", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "MW6z@cgnWVaFyk4");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?D7\"O~;s[R$oP+", "?D7\"O~;s[R$oP+");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("?D7\"O~;s[R$oP+", false);
      assertNotNull(string0);
      assertEquals("TSRP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("TSRP");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TSRP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(" ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WR", "WR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("W", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.doubleMetaphone("J< T9yuWy~");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("JT", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WR", "TSRP", false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("cH:r}#?-:bREF");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("XRPR", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("?D7\"O~;s[R$oP+");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("W", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('<');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("W", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string4 = doubleMetaphone0.doubleMetaphone("M", false);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("M", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
//      try { 
        doubleMetaphone0.encode(object1);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("nJmZ6uafmh=#nB", "nJmZ6uafmh=#nB", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("nJmZ6uafmh=#nB", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("NJMS", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("RANGER", "D");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean1 == boolean0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      int int0 = 1;
      doubleMetaphone0.setMaxCodeLen((-831));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals((-831), doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("D", 1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals('\u0000', char0);
      assertEquals((-831), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-1226));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\u0000');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('P');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("RANGER", "nJmZ6uafmh=#nB", false);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("{DG-{", "P");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("(-m\"(E +** %zw+I!.", "DG", false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\'');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('B');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("{DG-{", false);
      assertNotNull(string0);
      assertEquals("TK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("/lb&b.Q`4Pl1:`g");
      assertNotNull(string2);
      assertEquals("LPPK", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(85);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('i');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("i", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("i", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("i", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("i", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("W", false);
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 85);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Jf<", true);
      assertNotNull(string0);
      assertEquals("AF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(80);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(80);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("org.apache.commons.codec.EncoderException", "");
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string1);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("hd&2&88-BJD5apl");
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("TPJTPL", string2);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(80);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("K4{^D7D[9");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("K4{^D7D[9", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('`');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K4{^D7D[9`", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string3);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals("org.apache.commons.codec.EncoderException", string4);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "hd&2&88-BJD5apl");
      assertFalse(object2.equals((Object)string4));
      assertTrue(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)string0));
      assertNotNull(object2);
      assertEquals("TPJTPL", object2);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.encode("]4SgD--cCv\"YEA0AB(");
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)object2));
      assertFalse(string5.equals((Object)string4));
      assertNotNull(string5);
      assertEquals("SKTKFP", string5);
      assertEquals(80, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("+f9@XKeBf4z0");
      assertNotNull(string0);
      assertEquals("FKSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("+f9@XKeBf4z0");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("FKSK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("8)~TF");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("TF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK", "4NcZ@(a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = doubleMetaphone0.encode((Object) "FKSK");
      assertFalse(object0.equals((Object)string2));
      assertTrue(object0.equals((Object)string0));
      assertTrue(object0.equals((Object)string1));
      assertNotNull(object0);
      assertEquals("FKSK", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 69);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("ER", false);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertNotNull(string3);
      assertEquals("AR", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("4NcZ@(a", true);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals("NX", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("+f9@XKeBf4z0");
      assertNotNull(string0);
      assertEquals("FKSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("+f9@XKeBf4z0");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("FKSK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("8)~TF");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("TF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK", "4NcZ@(a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("TF");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,TF", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("RGY", "4NcZ@(a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,TFRGY", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("RGY");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("RJ", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,TFRGY", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string4 = doubleMetaphone0.doubleMetaphone("{O/-hI^WR&iop`T");
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals("RPT", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("d98ebQAj;N");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,TFRGYd98ebQAj;N", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,TFRGYd98ebQAj;N,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string5 = doubleMetaphone0.doubleMetaphone("RGY", true);
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertNotNull(string5);
      assertEquals("RK", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string5));
      assertNotNull(string6);
      assertEquals("FKSKFKSK,TFRGYd98ebQAj;N,", string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,TFRGYd98ebQAj;N,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object1 = doubleMetaphone1.encode((Object) "FKSK");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object1.equals((Object)string6));
      assertTrue(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string5));
      assertFalse(object1.equals((Object)string4));
      assertTrue(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string2));
      assertNotNull(object1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("FKSK", object1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string7 = doubleMetaphone1.encode("hO]>=");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)object1));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string5));
      assertNotNull(string7);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("H", string7);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1417);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(868);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WRO", "WRO");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("CHIA");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WROCHIA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('_');
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WROCHIA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("WROCHIA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("{'ln%7Qd).?\nsmK}");
      assertNotNull(string0);
      assertEquals("LNKTSMK", string0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("71}M", "EWSKI");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("EWSKI");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("ASK", string1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("WRO", 1417);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(56);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("org.apache.commons.codec.EncoderException", "JF");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JF", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("s<L`Py~DiX}");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JFs<L`Py~DiX}", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      String string2 = doubleMetaphone1.doubleMetaphone("JF", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("AF", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?D7\"O~;s[R$oP+", "?D7\"O~;s[R$oP+");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("?D7\"O~;s[R$oP+", false);
      assertNotNull(string0);
      assertEquals("TSRP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("TSRP");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TSRP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(" ");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WR", "WR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("W", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("J< T9yuWy~");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("JT", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("W", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone("cH:r}#?-:bREF");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("XRPR", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("?D7\"O~;s[R$oP+");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("W", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('<');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("W", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.doubleMetaphone("M", false);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals("M", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string5 = doubleMetaphone_DoubleMetaphoneResult1.getPrimary();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertNotNull(string5);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals("", string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      Object object2 = new Object();
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)object0));
      assertNotNull(object2);
      
//      try { 
        doubleMetaphone0.encode(object2);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?D7\"O~;s[R$oP+", "?D7\"O~;s[R$oP+");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WvKeQQ`Ie\"z58PwsG", "MANGER");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("ACH", "?D7\"O~;s[R$oP+", false);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('B');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("B", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("'", true);
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("GN");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("N", string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.doubleMetaphone("");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNull(string2);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("L", "UCCEE");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone2.encode("N");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals("N", string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      doubleMetaphone2.setMaxCodeLen(527);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertEquals(527, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("L", 5036);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone3.new DoubleMetaphoneResult(3821);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("Gz", "'");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("'", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Gz", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertEquals("'org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("Gz", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string4 = doubleMetaphone3.doubleMetaphone("h%R\"HhRm954Rs", false);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertEquals("RRMR", string4);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-385));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("_+>q1*jpzOH9!B6L:]-");
      assertNotNull(string1);
      assertEquals("KJPS", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("CAESAR");
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("SSR", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-385));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append("SSR", "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('$');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNO", "i4Lff@*7Un\u0006lV", false);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('Z');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SAN ");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("SN", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "SN");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-4592));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = false;
      String string0 = doubleMetaphone0.doubleMetaphone("bNb}blZKs}M[*6", false);
      assertNotNull(string0);
      assertEquals("PNPP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
//      try { 
        doubleMetaphone0.encode((Object) null);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?D7\"O~;s[R$oP+", "?D7\"O~;s[R$oP+");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("?D7\"O~;s[R$oP+", false);
      assertNotNull(string0);
      assertEquals("TSRP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("TSRP");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TSRP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("TSRP");
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("TSRP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("(-AY", true);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("W}.%", "W}.%");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(88);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(73);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('(');
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("srkGMq=#InC");
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("srkGMq=#InC", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      assertEquals("srkGMq=#InC", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("(", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string4 = doubleMetaphone0.doubleMetaphone("wgfisF{?U+G", true);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("KFSFK", string4);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("GN", 32);
      assertEquals('\u0000', char0);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
      
      char char1 = doubleMetaphone0.charAt("PNOS", 81);
      assertTrue(char1 == char0);
      assertEquals('\u0000', char1);
      assertEquals(88, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("U;1`i w,l-(t'$}75.");
      assertNotNull(string0);
      assertEquals("ALT", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("{,wVVM*", "ALT");
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Dwz&p8", "Dwz&p8");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("(-m\"(E +** %zw+I!.", "Dwz&p8", false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('B');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("B", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "cD(%";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("cD(%", "cD(%");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-385));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = true;
      String string1 = doubleMetaphone0.doubleMetaphone("cD(%", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("KT", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("_+>q1*jpzOH9!B6L:]-");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("KJPS", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("KJPS");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("KPS", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("ARKP", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-385));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult1.append("KJPS", "WRBACHER");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2003);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("O}9SHku:a%?X$");
      assertNotNull(string0);
      assertEquals("AXKKS", string0);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("`3`a", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("mNQ,ci");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("MNKS", string2);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "mNQ,ci");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object0.equals((Object)string2));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string1));
      assertNotNull(object0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("MNKS", object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "spsY!O##uS");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string2));
      assertNotNull(object1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("SPSS", object1);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNull(object2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(796);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('Y');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("Y", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("Y", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("dY$eKi./", "dY$eKi./");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("YdY$eKi./", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("YdY$eKi./", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.encode("BACHER");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)object1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("PKR", string3);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      char char0 = doubleMetaphone2.charAt("v{7m!ILxh%7TW=)l", 74);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?D7\"O~;s[R$oP+", "?D7\"O~;s[R$oP+");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("?D7\"O~;s[R$oP+", false);
      assertNotNull(string0);
      assertEquals("TSRP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("TSRP");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("TSRP", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("TSRP");
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("TSRP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("?D7\"O~;s[R$oP+", "s<L`Py~DiX}");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("<Rg[");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("RK", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-2892));
      assertEquals((-2892), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      char char0 = doubleMetaphone1.charAt("JF", (-1532));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("TSRP", "org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate("JOSE");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string4 = doubleMetaphone1.doubleMetaphone("RK", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("RK", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Jf<", true);
      assertNotNull(string0);
      assertEquals("AF", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "");
      assertNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "p6");
      assertFalse(object1.equals((Object)string0));
      assertNotNull(object1);
      assertEquals("P", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt(")4(gc#iPRu7|Ns(", 76);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("GN", true);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object1));
      assertNotNull(string1);
      assertEquals("N", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("AF", true);
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("AF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("9d", "9d", false);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("`a&U[=Z{7~", "`a&U[=Z{7~", true);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(209);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("FX");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FX", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FX", "`a&U[=Z{7~");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FXFX", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("`a&U[=Z{7~", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone1.doubleMetaphone("9d");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FXFX", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("`a&U[=Z{7~", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("sc");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("SK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("FX");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FXFXFX", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("`a&U[=Z{7~", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('`');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FXFXFX`", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("`a&U[=Z{7~", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone1.doubleMetaphone("`a&U[=Z{7~", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("S", string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("FXFXFX`", string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("FXFXFX`", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("`a&U[=Z{7~", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      Object object1 = doubleMetaphone2.encode((Object) "FXFXFX`");
      assertFalse(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(object1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals("FKSF", object1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.encode("0bbp!H:GKLPpzNv");
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertNotNull(string4);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals("PPKK", string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("+f9@XKeBf4z0");
      assertNotNull(string0);
      assertEquals("FKSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("+f9@XKeBf4z0");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("FKSK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("8)~TF");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("TF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK", "4NcZ@(a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("+f9@XKeBf4z0", "+f9@XKeBf4z0", false);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string3 = doubleMetaphone0.doubleMetaphone("TF");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("TF", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object1 = doubleMetaphone0.encode((Object) "4NcZ@(a");
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string3));
      assertNotNull(object1);
      assertEquals("NS", object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "8)~TF");
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertTrue(object2.equals((Object)string3));
      assertFalse(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)string2));
      assertNotNull(object2);
      assertEquals("TF", object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)object1));
      assertFalse(string4.equals((Object)object2));
      assertNotNull(string4);
      assertEquals("FKSKFKSK,,", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(',', ',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a,", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,,,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('\'', ',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK4NcZ@(a,,", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("FKSKFKSK,,,'", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "8)~TF";
      stringArray0[1] = "Z";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "TF";
      stringArray0[4] = "TF";
      stringArray0[5] = "8)~TF";
      stringArray0[6] = "TF";
      stringArray0[7] = "TF";
      boolean boolean3 = DoubleMetaphone.contains(",<c4gXH/FsJ&Aa", 69, 69, stringArray0);
      assertEquals(8, stringArray0.length);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      char char0 = doubleMetaphone0.charAt("tzLY(;xcO", 469);
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1173));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("J9 !E*>z$]\"4YUK/", "J9 !E*>z$]\"4YUK/", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(95);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('h');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("h", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("4T9Jq=e");
      assertNotNull(string0);
      assertEquals("TJK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("HIA");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("HIA", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("h", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(".5m[Nt~3U.6;<w6>b$");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2003);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("O}9SHku:a%?X$");
      assertNotNull(string0);
      assertEquals("AXKKS", string0);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("`3`a", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("mNQ,ci");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("MNKS", string2);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("O}9SHku:a%?X$", false);
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("AXKKS", string3);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.encode("");
      assertNull(string4);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("w+Ag{&vQB=");
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertNotNull(string5);
      assertEquals("KFKP", string5);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("AXKKS", "<Rg[");
      assertFalse(boolean0);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.encode("mNQ,ci");
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertTrue(string6.equals((Object)string2));
      assertNotNull(string6);
      assertEquals("MNKS", string6);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-1532));
      assertEquals((-1532), doubleMetaphone0.getMaxCodeLen());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "J";
      boolean boolean1 = DoubleMetaphone.contains("]x[Qv.bN9[c", 85, 0, stringArray0);
      assertEquals(2, stringArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals((-1532), int0);
      assertEquals((-1532), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-1532));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('I');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      // Undeclared exception!
//      try { 
        DoubleMetaphone.contains("MNKS", 0, (-1532), (String[]) null);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("t@:}&jse!Z)", "t@:}&jse!Z)", true);
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("b=6(|7|Q&lCJ3");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("b", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('2', 'w');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("2", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("b", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('>');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("2", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("b", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      assertNotNull(string1);
      assertEquals("b", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("2", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("b", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("^3l[|SN", 1978);
      assertEquals('\u0000', char0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(2485);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(1978);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult2.append("^3l[|SN", "zw;}xCm0aZk^ .a;");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("zw;}xCm0aZk^ .a;", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("^3l[|SN", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone0.new DoubleMetaphoneResult(2485);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult3.appendAlternate("KL");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertEquals("KL", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      
      String string2 = doubleMetaphone0.doubleMetaphone("669<J{aCs#X#lF", true);
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("J", string2);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("&dHih%p", (-1757));
      assertEquals('\u0000', char0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(2003);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("O}9SHku:a%?X$");
      assertNotNull(string0);
      assertEquals("AXKKS", string0);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("`3`a", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("mNQ,ci");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("MNKS", string2);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("O}9SHku:a%?X$", false);
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals("AXKKS", string3);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.encode("");
      assertNull(string4);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2003);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("PN");
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PN", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("PN", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("GN", "AXKKS", false);
      assertFalse(boolean0);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(71);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("AXKKS");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AXKKS", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('~');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AXKKS", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("~", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(1417);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(868);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("WRO", "WRO");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('_');
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO_", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("{'ln%7Qd).?\nsmK}");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WRO", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO_{'ln%7Qd).?\nsmK}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("{'ln%7Qd).?\nsmK}", "M");
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WROM", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO_{'ln%7Qd).?\nsmK}{'ln%7Qd).?\nsmK}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotNull(string0);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string0);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      assertEquals("WROM", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("WRO_{'ln%7Qd).?\nsmK}{'ln%7Qd).?\nsmK}", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = "N)_p&+]oG)7q.NYl";
      String string2 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", string2);
      assertEquals(1417, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = "K4{^D7D[9";
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-4592));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("MANGER", "4T9Jq=e", true);
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('h');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("MANGER");
      assertNotNull(string0);
      assertEquals("MNJR", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("cD(%", "cD(%");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-385));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = "Dwz&p8";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("Dwz&p8", "Dwz&p8");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
//      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2484));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('s');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('3');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = "";
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("", "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 1;
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("?D7\"O~;s[R$oP+", "?D7\"O~;s[R$oP+");
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("T");
      assertNotNull(string0);
      assertEquals("T", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("T");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("T", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("ARKP", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("T");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("ARKP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("cBL)<C");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("cBL)<C", "", true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string4 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals("", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('|');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "T";
      stringArray0[1] = "";
      // Undeclared exception!
//      try { 
        DoubleMetaphone.contains("ARKP", 0, (-538), stringArray0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertNotNull(string0);
      assertEquals("ARKP", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("a9O m");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AM", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("O");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("A", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "a9O m");
      assertTrue(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertNotNull(object0);
      assertEquals("AM", object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = (-180);
      doubleMetaphone0.setMaxCodeLen((-180));
      assertEquals((-180), doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("a9O m", (-180));
      assertEquals('\u0000', char0);
      assertEquals((-180), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.encode("a9O m");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "org.apache.commons.codec.EncoderException";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "9d|,ME+^cVpq^SG]T", true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\"');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "Py8e>G");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(795);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = '*';
      doubleMetaphone_DoubleMetaphoneResult0.append('*');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("*", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("", "org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("*org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(2383);
      assertEquals(2383, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "";
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      assertEquals(2383, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("*org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      assertEquals(2383, doubleMetaphone0.getMaxCodeLen());
      assertEquals("*", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("*org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.setMaxCodeLen(795);
      assertEquals(795, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "org.apache.commons.codec.EncoderException";
      Object object0 = new Object();
      assertNotNull(object0);
      
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "O}9SHku:a%?X$";
      doubleMetaphone0.setMaxCodeLen(2003);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("O}9SHku:a%?X$");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("AXKKS", string1);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = false;
      String string2 = doubleMetaphone0.doubleMetaphone("`3`a", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("", string2);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("mNQ,ci");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("MNKS", string3);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string4 = doubleMetaphone0.doubleMetaphone("O}9SHku:a%?X$", false);
      assertFalse(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals("AXKKS", string4);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.encode("");
      assertNull(string5);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string6 = doubleMetaphone0.doubleMetaphone("w+Ag{&vQB=");
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertNotNull(string6);
      assertEquals("KFKP", string6);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("AXKKS", "<Rg[");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      String string7 = doubleMetaphone0.encode("mNQ,ci");
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string6));
      assertTrue(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string4));
      assertNotNull(string7);
      assertEquals("MNKS", string7);
      assertEquals(2003, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-1532));
      assertEquals((-1532), doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("AXKKS", 0);
      assertEquals('A', char0);
      assertEquals((-1532), doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = null;
//      try {
        doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("+f9@XKeBf4z0");
      assertNotNull(string0);
      assertEquals("FKSK", string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("+f9@XKeBf4z0");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("FKSK", string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.doubleMetaphone("8)~TF");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("TF", string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(69);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("FKSK", "4NcZ@(a");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(',');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK,", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("org.apache.commons.codec.EncoderException");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK,org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("CeWK 9jQnu/", "_.+w0[Q7f0Rmpje");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK,org.apache.commons.codec.EncoderExceptionCeWK 9jQnu/", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a_.+w0[Q7f0Rmpje", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("ARKP", string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK,org.apache.commons.codec.EncoderExceptionCeWK 9jQnu/", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a_.+w0[Q7f0Rmpje", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.doubleMetaphone("N)_p&+]oG)7q.NYl");
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals("NPKK", string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("K4{^D7D[9");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK,org.apache.commons.codec.EncoderExceptionCeWK 9jQnu/K4{^D7D", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a_.+w0[Q7f0Rmpje", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('`');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK,org.apache.commons.codec.EncoderExceptionCeWK 9jQnu/K4{^D7D", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a_.+w0[Q7f0Rmpje", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string5 = "0h_.D&FK(jJ X9";
      String string6 = doubleMetaphone0.doubleMetaphone("0h_.D&FK(jJ X9", false);
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string4));
      assertNotNull(string6);
      assertEquals("TFKJ", string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string7 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string5));
      assertNotNull(string7);
      assertEquals("FKSKFKSK,org.apache.commons.codec.EncoderExceptionCeWK 9jQnu/K4{^D7D", string7);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKSKFKSK,org.apache.commons.codec.EncoderExceptionCeWK 9jQnu/K4{^D7D", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("FKSK4NcZ@(a_.+w0[Q7f0Rmpje", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(3821);
      doubleMetaphone0.doubleMetaphone("", false);
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.doubleMetaphone("/lb&b.Q`4Pl1:`g");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3821);
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("LPPKPLK", (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("$|p%*PJQ\"");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("\"QkCd.Xi'GH");
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('!');
      doubleMetaphone0.setMaxCodeLen((-782));
      assertEquals((-782), doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "61v02n2");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1937));
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      String string1 = "";
      doubleMetaphone0.encode((Object) "");
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "Z";
      stringArray0[2] = "Z";
      stringArray0[3] = "Z";
      stringArray0[4] = "Z";
      stringArray0[5] = "Z";
      DoubleMetaphone.contains("Z", 0, 1895, stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.append('X');
      doubleMetaphone0.doubleMetaphone((String) null, false);
      doubleMetaphone_DoubleMetaphoneResult0.append('H');
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "Z");
      doubleMetaphone0.doubleMetaphone("Z");
      doubleMetaphone0.doubleMetaphone("");
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      doubleMetaphone_DoubleMetaphoneResult0.append("w}.%OR>", "w}.%OR>");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("O");
      doubleMetaphone0.isDoubleMetaphoneEqual("w}.%OR>", "O");
      String string0 = "";
      doubleMetaphone_DoubleMetaphoneResult0.append("w}.%OR>", "");
      doubleMetaphone0.setMaxCodeLen((-1581));
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("OS", "OS");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-160));
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("", "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      String string0 = "";
      char char0 = 'h';
      doubleMetaphone0.encode("G");
      String string1 = "g?#=\"]e";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "jg+&v$.{=x[1/");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("t@:}&jse!Z)", "t@:}&jse!Z)", true);
      doubleMetaphone0.encode("");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1);
      char char0 = '2';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("b=6(|7|Q&lCJ3");
      doubleMetaphone_DoubleMetaphoneResult0.append('2', 'w');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('>');
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone0.setMaxCodeLen(1);
      String string0 = "CHIA";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CHIA";
      // Undeclared exception!
//      try { 
        DoubleMetaphone.contains("CHIA", 1, (-721), stringArray0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("_/", (String) null, false);
      doubleMetaphone0.doubleMetaphone((String) null);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone0.doubleMetaphone((String) null, false);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(';');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('X');
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.encode((String) null);
      String string0 = "";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", (String) null, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      boolean boolean0 = false;
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual(" t6Q?R5x#Ll\"xRG", " t6Q?R5x#Ll\"xRG");
      doubleMetaphone0.isDoubleMetaphoneEqual(" t6Q?R5x#Ll\"xRG", " t6Q?R5x#Ll\"xRG");
      doubleMetaphone0.encode(" t6Q?R5x#Ll\"xRG");
      String string0 = "";
      doubleMetaphone0.isDoubleMetaphoneEqual(" t6Q?R5x#Ll\"xRG", "x^F;_UF_%RR/B~q");
      doubleMetaphone0.encode("");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-864));
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "9-E{9{jW7P";
      String string1 = "~<";
      doubleMetaphone0.encode("~<");
      doubleMetaphone0.doubleMetaphone("");
      Object object0 = new Object();
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string0 = "es=7U \\7-PNP}~?";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("es=7U \u0007-PNP}~?");
//      try { 
        doubleMetaphone0.encode((Object) doubleMetaphone_DoubleMetaphoneResult0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.doubleMetaphone("Ns@shN");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.getMaxCodeLen();
      String string0 = "";
      doubleMetaphone0.charAt("", 0);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\u0000');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\u0000');
      doubleMetaphone_DoubleMetaphoneResult0.append('V');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('\u0000');
      String string1 = null;
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('3');
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
//      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("9d", "9d", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("`a&U[=Z{7~", "`a&U[=Z{7~", true);
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(209);
      char char0 = '(';
      doubleMetaphone1.isDoubleMetaphoneEqual("`a&U[=Z{7~", "sc");
      Object object0 = new Object();
      doubleMetaphone0.doubleMetaphone("sc");
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }
}
