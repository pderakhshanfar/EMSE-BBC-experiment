/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 24 06:25:15 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.DoubleMetaphone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMetaphone_ESTest extends DoubleMetaphone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("nccIAtNH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NXTN", string0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = DoubleMetaphone.contains("B", (-3661), (-3661), stringArray0);
      assertFalse(boolean0);
      assertEquals(0, stringArray0.length);
      
      String string1 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("sCHA");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("#3/$O{iBc(OGh?Y]", "#3/$O{iBc(OGh?Y]");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("#3/$O{iBc(OGh?Y]");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("#3/$O{iBc(OGh?Y]", true);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PK", string1);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Djygh2m{PA_S0V7U?QE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TJMP", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("IgLLA");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKL", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "AKL");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKL", object0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("GNDX");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NTKS", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Ghi}4[/a", "@!t73}yuvTQe", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("gHj7Mkv9$;&");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KJMK", string1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("KNP#JGLIB{-", "UMB", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("GNUGHYNLJ6O6");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NFNL", string0);
      
      String string1 = doubleMetaphone0.encode("NFNL");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NFNL", string1);
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.charAt((String) null, 3001);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PNUGHYNLJ<6O6");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKNL", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("HAIS");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("H", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(" q 2<GnEY<");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKN", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Z`f|.umBfz0'ddPql(/");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SFMP", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("yGN{<X4EW6E_");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKNK", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("oIgh7*naqxIU<6");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ANKK", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("#9J\"!GlI{?L+");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JKLL", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNGIER", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NJR", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TH", "TH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("K", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("jy3Wnd", "TH");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.encode("syN0");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SN", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("PSSMKJ", true);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMK ", string2);
      
      Object object0 = doubleMetaphone0.encode((Object) "|");
      assertFalse(object0.equals((Object)string1));
      assertFalse(object0.equals((Object)string0));
      assertFalse(object0.equals((Object)string2));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "");
      assertNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object2 = doubleMetaphone0.encode((Object) "SMK ");
      assertFalse(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)object0));
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMK", object2);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual(".aUx[e[Nr", "", true);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      doubleMetaphone0.setMaxCodeLen(2);
      assertEquals(2, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("|", "S%)", true);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertEquals(2, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean3);
      
      String string3 = doubleMetaphone0.encode("[{OgeT^$QTo>(");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)object2));
      assertFalse(string3.equals((Object)object0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals(2, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KT", string3);
      
      char char0 = doubleMetaphone0.charAt("C`qne_5?{9^%=2sS", 0);
      assertEquals(2, doubleMetaphone0.getMaxCodeLen());
      assertEquals('C', char0);
      
      char char1 = doubleMetaphone0.charAt("TH", 697);
      assertFalse(char1 == char0);
      assertEquals(2, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      
      char char2 = doubleMetaphone0.charAt("SN", 697);
      assertTrue(char2 == char1);
      assertFalse(char2 == char0);
      assertEquals(2, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char2);
      
      Object object3 = doubleMetaphone0.encode((Object) "O");
      assertFalse(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)string1));
      assertFalse(object3.equals((Object)string3));
      assertFalse(object3.equals((Object)string0));
      assertFalse(object3.equals((Object)string2));
      assertFalse(object3.equals((Object)object2));
      assertNotNull(object3);
      assertEquals(2, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", object3);
      
      Object object4 = doubleMetaphone0.encode((Object) "A");
      assertFalse(object4.equals((Object)string1));
      assertFalse(object4.equals((Object)string0));
      assertFalse(object4.equals((Object)string2));
      assertTrue(object4.equals((Object)object3));
      assertFalse(object4.equals((Object)object0));
      assertFalse(object4.equals((Object)object2));
      assertFalse(object4.equals((Object)string3));
      assertNotNull(object4);
      assertEquals(2, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", object4);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("yGNGN#ACHEER");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKNN", string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(";Q", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      
      doubleMetaphone0.setMaxCodeLen(81);
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("dW_/+iGyBt");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TJPT", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("xHTS~FSz8R");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(81, doubleMetaphone0.getMaxCodeLen());
      assertEquals("STSFSR", string2);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("NGNJ:E");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NNJ", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("7CCHG");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XK", string1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.doubleMetaphone("Hfd3yV}hc q)");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("FTFK", string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("j9&8$");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("t0ij'~VvXV>", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TJFK", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("E.", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string2);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("geySEu&H");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("KS", string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("PSOGHK7*NAVA/^Q#IU6");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("SKKN", string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("dgE", "");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("`xbc:L?");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSPK", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("ARKP", string0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("oghK7*naVA/^q#IU6", "B;E%{Z");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean0);
      
      char char0 = doubleMetaphone1.charAt((String) null, (-833));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("NCHAE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NK", string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("KNCHAE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NK", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("&`EJoy,[j");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JJ", string0);
      
      char char0 = doubleMetaphone0.charAt("&`EJoy,[j", (-527));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      Object object0 = doubleMetaphone0.encode((Object) "JJ");
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("J", object0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("PSHOEK", "C3zyxcC6:");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("UiNW/l<vw(/", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ANLF", string0);
      
      char char0 = doubleMetaphone0.charAt("PNSCH", 68);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CHOR{,E");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KR", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("SCH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("X", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("PSWITZ", true);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SFX", string2);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("NFzzIT$%GO;[");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NFST", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("KNOGGI", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NJ", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("KNOGGI", false);
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NJ", string2);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "CIO");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", object0);
      
      String string0 = doubleMetaphone0.encode("CIO");
      assertTrue(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("[KnNIlz", true);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KNLT", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("CIO", false);
      assertTrue(string2.equals((Object)object0));
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string2);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("MACHR");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKR", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("KNJOSE", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NJS", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("EAU", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string1);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "KNJOSE";
      // Undeclared exception!
//      try { 
        DoubleMetaphone.contains("KNJOSE", 0, (-1), stringArray0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("WH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string0);
      
      String string1 = doubleMetaphone0.encode("PNGHB)UP:B9NMD");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NKPP", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("#5~+j", (String) null);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("ghw3zyhB9k");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSPK", string0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "ghw3zyhB9k";
      stringArray0[1] = "KSPK";
      stringArray0[2] = "KSPK";
      stringArray0[3] = "ghw3zyhB9k";
      // Undeclared exception!
//      try { 
        DoubleMetaphone.contains("ghw3zyhB9k", 6081, (-70897887), stringArray0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("KN");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string0);
      
      String string1 = doubleMetaphone0.encode("2W')urr;4qM;_");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RKM", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("9");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("2W')urr;4qM;_", false);
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RKM", string3);
      
      char char0 = doubleMetaphone0.charAt("SH", 1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('H', char0);
      
      String string4 = doubleMetaphone0.doubleMetaphone("9hMw?$NPC,$31", true);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MNPK", string4);
      
//      try { 
        doubleMetaphone0.encode((Object) null);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("SUGAR");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XKR", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) " GNJLLE");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NL", object0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("PSCI");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      
      String string1 = ":UiNW/<vw4]D/X";
      Object object0 = new Object();
      assertNotNull(object0);
      
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = "j@6_D2.cCh";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "j@6_D2.cCh");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("GfALL");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KFL", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("i_<.!#.r&ZHr|");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARJR", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = doubleMetaphone0.encode("ChH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("2/o^_iVKD-#qVdYRj", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKTK", string0);
      
      doubleMetaphone0.setMaxCodeLen(1724);
      assertEquals(1724, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("jEaMjjBS");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(1724, doubleMetaphone0.getMaxCodeLen());
      assertEquals("JMJPS", string1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("WICZ");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKS", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "WICZ");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("AKS", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "AKS");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("AKS", object1);
      
      String string1 = doubleMetaphone1.encode("X");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)object0));
      assertFalse(string1.equals((Object)object1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("S", string1);
      
      Object object2 = doubleMetaphone1.encode((Object) "AKS");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object2.equals((Object)string1));
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)string0));
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("AKS", object2);
      
      Object object3 = doubleMetaphone0.encode((Object) "AKS");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(object3.equals((Object)object1));
      assertTrue(object3.equals((Object)string0));
      assertTrue(object3.equals((Object)object2));
      assertTrue(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)string1));
      assertNotNull(object3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("AKS", object3);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Os0bLyS$z:W&-K4Q");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("ASPL", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "JOSE");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("HS", object0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ASPL";
      boolean boolean0 = DoubleMetaphone.contains("Pw!y1", (-1), 574, stringArray0);
      assertFalse(boolean0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(")-Fp-CHZAGI;EljFv4", "GhB)UP:b9n2");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(")-Fp-CHZAGI;EljFv4", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FPKS", string0);
      
      boolean boolean1 = DoubleMetaphone.contains(")-Fp-CHZAGI;EljFv4", (-2850), (-2850), (String[]) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("+LL(Drz}isoQQFiz");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("LTRS", string0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("+LL(Drz}isoQQFiz", "K");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("HOLM", "K", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("LTRS", "OU");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean2);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone3.isDoubleMetaphoneEqual("+LL(Drz}isoQQFiz", "Y'YpdOa1Zfwe", true);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertFalse(boolean3);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "HOLM";
      stringArray0[1] = "K";
      stringArray0[2] = "K";
      boolean boolean4 = DoubleMetaphone.contains("YSL", 79, 79, stringArray0);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CHORE");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("XR", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone1.encode("|*a");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("</HW^!7MZZQiAw");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("MSK", string1);
      
      String string2 = doubleMetaphone0.encode("MSK");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("MSK", string2);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("F>7V~<N");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FFN", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("FFN", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FN", string1);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("IER");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", string1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("MACHER");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("MKR", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = doubleMetaphone1.encode((Object) "MKR");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("MKR", object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("%-xAfXRN8;hps2;[r", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("KSFK", string1);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("]^adC");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("TK", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("40@1qD ps<`B2paFo", "WRSIA");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean0);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, int0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("7", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("h7f4m0gGZ#fa54");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FMKS", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("FMKS");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FMKS", string1);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("]^adC");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("Z]'zWY,bB!?JG]", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("STSP", string1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone1.encode("]u!bbMZ(}[0|?LyaHg");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("PMSL", string1);
      
      String string2 = doubleMetaphone0.encode("'!5Oo");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("", string2);
      
      String string3 = doubleMetaphone1.doubleMetaphone("]u!bbMZ(}[0|?LyaHg");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("PMSL", string3);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
//      try { 
        doubleMetaphone1.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("6!\"^-y}QmIJMj0");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMMJ", string0);
      
      String string1 = doubleMetaphone0.encode("OGY");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string1);
      
      String string2 = doubleMetaphone0.encode("AJ");
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AJ", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1578);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("CH", "CH");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.doubleMetaphone("PS", true);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("UeXzYnFPgx^jRs", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKSS", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("UeXzYnFPgx^jRs", true);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKSS", string1);
      
      doubleMetaphone0.setMaxCodeLen(9);
      assertEquals(9, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.encode("+w >{S<NO\f");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("SN", string2);
      
      String string3 = doubleMetaphone1.encode("XY$.CHT uoF#{");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("SKTF", string3);
      
      String string4 = doubleMetaphone1.doubleMetaphone("PSJ9 0L-LJY)XQHC]");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("SLLK", string4);
      
      char char0 = doubleMetaphone1.charAt("+w >{S<NO\f", 67);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "SNF";
      stringArray0[1] = "SKTF";
      stringArray0[2] = "PSJ9 0L-LJY)XQHC]";
      stringArray0[3] = "SKTF";
      stringArray0[4] = "AKSS";
      stringArray0[5] = "AKSS";
      stringArray0[6] = "HDk";
      stringArray0[7] = "XY$.CHT uoF#{";
      boolean boolean0 = DoubleMetaphone.contains("SIO", 199, 9, stringArray0);
      assertFalse(boolean0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Vucp=uEp6v]cP* ~");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPP", string0);
      
      String string1 = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "FKPP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("FKPP", false);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKP", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("ARKP", string3);
      
      String string4 = null;
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("K", "UMB");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone2.isDoubleMetaphoneEqual((String) null, "^kVsLeZ");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("px");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('Z');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = doubleMetaphone0.doubleMetaphone("px", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PKS", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string0 = doubleMetaphone0.encode("7'as<Y6g:+q NMmHWK7");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKKN", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("7'as<Y6g:+q NMmHWK7");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("SKKN", string1);
      
      String string2 = doubleMetaphone0.encode(")0BIjA");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("PJ", string2);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
//      try { 
        doubleMetaphone2.encode((Object) null);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("6!\"^-y}QmIJMj0", "6!\"^-y}QmIJMj0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SIA", "8RsCn", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertTrue(boolean2);
      
      String string0 = doubleMetaphone0.doubleMetaphone("G?2f'>DMZYoktb/&", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("KFTM", string0);
      
      String string1 = doubleMetaphone1.encode("KFTM");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("KFTM", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(1854);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('2');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("2", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('g');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("KFTM", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("KFTM", string2);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(";ObI(WMF:iT/", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PMFT", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(2900);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(2900, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("org.apache.commons.codc.EncoderException", "qs\"3&R7+MT@aIQjFF", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(2900, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone1.doubleMetaphone("PMFT", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(2900, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("PMFT", string1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult((-1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string2 = doubleMetaphone2.encode(" Pb9Yl6");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals("PL", string2);
      
      String string3 = doubleMetaphone2.doubleMetaphone("PMFT");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals("PMFT", string3);
      
      char char0 = doubleMetaphone2.charAt("org.apache.commons.codc.EncoderException", (-18580107));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "E";
      stringArray0[1] = "E";
      stringArray0[2] = "E";
      boolean boolean0 = DoubleMetaphone.contains("E", 2, 2, stringArray0);
      assertFalse(boolean0);
      assertEquals(3, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(")-Fp-CHZAGI;EljFv4", "e&)Je.");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      doubleMetaphone0.setMaxCodeLen(67);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "E");
      assertNotNull(object0);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals("A", object0);
      
      doubleMetaphone0.setMaxCodeLen(67);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      
      char char0 = doubleMetaphone0.charAt("KNTHV'\"LJP3W", 1401);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("_L&Q]$Ge", false);
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LKJ", string0);
      
      char char1 = doubleMetaphone0.charAt("L", 1);
      assertTrue(char1 == char0);
      assertEquals(67, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char1);
      
      boolean boolean2 = DoubleMetaphone.contains("3", (-944), 1, stringArray0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1927);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1927);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("M1z1");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M1z1", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("M1z1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("org.apache.commons.codec.EncoderException");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M1z1org.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("M1z1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("M");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M1z1org.apache.commons.codec.EncoderExceptionM", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("M1z1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      char char0 = doubleMetaphone0.charAt("M1z1", 1927);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary('w');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("w", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("M1z1", "ao-6zzl@gi^U");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult((-1351));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult2.append(',');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Vucp=uEpv]cP* ~");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPP", string0);
      
      String string1 = "org.apache.commons.codec.EncoderException";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "FKPP");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.doubleMetaphone("FKPP", false);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKP", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.doubleMetaphone("HEM");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("HM", string3);
      
      String string4 = null;
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("K", "UMB");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone2.isDoubleMetaphoneEqual((String) null, "^kVsLeZ");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen((-657));
      assertEquals((-657), doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "6!\"^-y}QmIJMj0";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("6!\"^-y}QmIJMj0", "6!\"^-y}QmIJMj0");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("WRDT");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RT", string0);
      
      String string1 = doubleMetaphone0.encode("WRDT");
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RT", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("Os0bLyS$z:W&-K4Q");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASPL", string2);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Th,_d.B2", "Os0bLyS$z:W&-K4Q");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("'S~71E[#$I5Gngf|", "Th,_d.B2", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Vucp=uEpv]cP* ~");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPP", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("FKPP");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKP", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("y1K");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AK", string3);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string4 = doubleMetaphone1.doubleMetaphone("4g$qW/Psb^tH");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("KKPS", string4);
      
      String string5 = doubleMetaphone0.encode("J9vpE?5");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("JFP", string5);
      
      String string6 = doubleMetaphone0.doubleMetaphone("AK", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string2));
      assertTrue(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertNotNull(string6);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("AK", string6);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = doubleMetaphone1.encode((Object) "FKPP");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(object1.equals((Object)string2));
      assertFalse(object1.equals((Object)string3));
      assertFalse(object1.equals((Object)string5));
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string4));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)string6));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("FKP", object1);
      
      Object object2 = doubleMetaphone1.encode((Object) "ARCHIT");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(object2.equals((Object)string3));
      assertFalse(object2.equals((Object)string4));
      assertFalse(object2.equals((Object)string6));
      assertFalse(object2.equals((Object)string2));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)string0));
      assertFalse(object2.equals((Object)string1));
      assertFalse(object2.equals((Object)string5));
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("ARKT", object2);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("Ei5sfaJGw)ZSaL|O+@");
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASFJ", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.encode("");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult((-155));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone1.encode("GNSCH");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("NX", string3);
      
      char char0 = doubleMetaphone0.charAt("Y", 71);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("- 6o,~", "]y<%:yfp8");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone(",]uH'z|", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("S", "A<N*_Td<}\u0005{naM/nOg");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1548);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('6');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("6", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("6", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("SUc%)M?K=|joEc'7B");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKMK", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean0);
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string1 = doubleMetaphone2.doubleMetaphone("Qq1f#x`FX", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals("KFKS", string1);
      
      String string2 = doubleMetaphone2.encode("KFKS");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals("KFKS", string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-2001));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('*');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('5');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string3 = doubleMetaphone2.doubleMetaphone(")/0zj8$wb]>6 ", false);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals("SJP", string3);
      
      char char0 = doubleMetaphone0.charAt(">Tkx@` ^WmDH", (-2001));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("CHIA", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("&", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("ARKP", true);
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("65kKwW=5");
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string3);
      
      String string4 = doubleMetaphone0.doubleMetaphone("CAESAR", false);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SSR", string4);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string5 = doubleMetaphone0.encode("ARKP");
      assertTrue(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertTrue(string5.equals((Object)string1));
      assertNotNull(string5);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string5);
      
      String string6 = "$6";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("$6", "CAESAR");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("=?9`~V~6,hfnbF?L", "=?9`~V~6,hfnbF?L");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertTrue(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "GN");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("N", object0);
      
      String string0 = "WH";
      String string1 = doubleMetaphone0.encode("WH");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("A", string1);
      
//      try { 
        doubleMetaphone1.encode((Object) doubleMetaphone0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "PNACH";
      stringArray0[1] = "m";
      boolean boolean0 = DoubleMetaphone.contains("m", (-332), 8, stringArray0);
      assertFalse(boolean0);
      assertEquals(9, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("m");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", string0);
      
      String string1 = null;
      String string2 = doubleMetaphone0.doubleMetaphone((String) null, false);
      assertNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PNACH", "p5Ow*Hs/;oN-,p");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string3 = "";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "TTH", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "TFTN");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("TFTN", object0);
      
      String string0 = doubleMetaphone0.encode("RqK{X%Bd:( <H=sFfwP");
      assertFalse(string0.equals((Object)object0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RKKK", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1578);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen(1578);
      assertEquals(1578, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("[|A=]--*(ykS_Rt", "KNRANGER", false);
      assertEquals(1578, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone0.encode("KNRANGER");
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals(1578, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NRNKR", string1);
      
      Object object1 = doubleMetaphone0.encode((Object) "RKKK");
      assertFalse(object1.equals((Object)string1));
      assertFalse(object1.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals(1578, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RKK", object1);
      
//      try { 
        doubleMetaphone0.encode((Object) null);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = (-1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "EWSKY";
      stringArray0[1] = "EWSKY";
      boolean boolean0 = DoubleMetaphone.contains("EWSKY", (-67), (-67), stringArray0);
      assertFalse(boolean0);
      assertEquals(2, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("CQ");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "EWSKY");
      assertFalse(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASK", object0);
      
      String string1 = "SCg2{C_p";
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SCg2{C_p", "EWSKY");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
//      try { 
        doubleMetaphone0.encode(object1);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("F", "F");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("VbU}l", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FPL", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("_:", "GNUCCES", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(732);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.encode("X");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(732);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult1.getPrimary();
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals("", string2);
      
      doubleMetaphone_DoubleMetaphoneResult1.append("7'as<Y6g:+q NMmHWK7");
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7'as<Y6g:+q NMmHWK7", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("7'as<Y6g:+q NMmHWK7", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone0.doubleMetaphone("7'as<Y6g:+q NMmHWK7");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("SKKN", string3);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('=');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7'as<Y6g:+q NMmHWK7", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("7'as<Y6g:+q NMmHWK7=", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone1.setMaxCodeLen((-1414));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals((-1414), doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('?');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("7'as<Y6g:+q NMmHWK7=?", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("7'as<Y6g:+q NMmHWK7?", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string4 = "jQHHH42Gyv";
      // Undeclared exception!
//      try { 
        doubleMetaphone1.doubleMetaphone("jQHHH42Gyv", true);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("6!\"^-y}QmIJMj0", "6!\"^-y}QmIJMj0");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("6!\"^-y}QmIJMj0", "SIA", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone1.new DoubleMetaphoneResult(1);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean2);
      
      String string0 = doubleMetaphone0.doubleMetaphone("n@HmQxOQy0AiD(me", true);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("NMKK", string0);
      
      String string1 = doubleMetaphone1.encode("6!\"^-y}QmIJMj0");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("KMMJ", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult((-2001));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('*');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('5');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      String string2 = doubleMetaphone1.doubleMetaphone("NMKK", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("NMK", string2);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Sw,bcm:");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPKM", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("ulj!d[G~/E|");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LTK", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone(":GR$h@l");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KRL", string2);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string3 = doubleMetaphone1.encode("ZG<1");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("SK", string3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3542));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.encode("ulj!d[G~/E|");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string1));
      assertNotNull(string4);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals("LTK", string4);
      
      char char0 = doubleMetaphone1.charAt("'0Fr6:}{&0|lH{`=DTy", 7);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('{', char0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("P==LgtwCbSJ~]>vXs");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PLKT", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("P==LgtwCbSJ~]>vXs", "PLKT", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("PLKT", true);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PLKT", string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("t8_~vv*&t2!+E>,nR\"", "#5:9wO\"I#W6zg<1w]", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3165));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone0.encode("D");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult((-3165));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("#5:9wO\"I#W6zg<1w]", "#5:9wO\"I#W6zg<1w]");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertTrue(boolean2);
      
      doubleMetaphone1.setMaxCodeLen(0);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(0, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      
      boolean boolean3 = doubleMetaphone1.isDoubleMetaphoneEqual(".", "N", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertEquals(0, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertTrue(boolean3);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertEquals(0, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertEquals(0, int0);
      
      char char0 = doubleMetaphone2.charAt(".", 54);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("UeXzYnFPgx^jRs", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AKSS", string0);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      doubleMetaphone1.setMaxCodeLen(2900);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(2900, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "qs\"3&R7+MT@aIQjFF", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(2900, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean0);
      
      String string1 = doubleMetaphone1.encode((String) null);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNull(string1);
      assertEquals(2900, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      String string2 = doubleMetaphone1.encode("AKSS");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(2900, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("AKS", string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-811));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("UeXzYnFPgx^jRs", "uU M}?xp!");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean1);
      
      doubleMetaphone2.setMaxCodeLen((-811));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertEquals((-811), doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("DG", "&QVs'ph?_@z", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(4, int0);
      
      char char0 = doubleMetaphone1.charAt("AKSS", (-478));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone3));
      assertEquals(2900, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone1, doubleMetaphone3);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("<XO@", "yuSxDH],1q9");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("<XO@", "<XO@");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("|", "UCCES");
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('7');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("SKL", "{m%YNLOi");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('-');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      char char0 = doubleMetaphone0.charAt("30", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("Vucp=uEpv]cP* ~");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKPP", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Vucp=uEpv]cP* ~", "Z");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("cCKW:,eN[", "HEM", false);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("FKPP", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FKP", string1);
      
      doubleMetaphone0.setMaxCodeLen(441);
      assertEquals(441, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("8B[=7*0'_4OfAg");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(441, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PFK", string2);
      
      char char0 = doubleMetaphone0.charAt(";}_W(>y_w@I Tm?", (-40366234));
      assertEquals(441, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Z";
      stringArray0[1] = "8B[=7*0'_4OfAg";
      stringArray0[2] = "HEM";
      boolean boolean2 = DoubleMetaphone.contains("C6,V", 441, 209, stringArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "PNACH";
      stringArray0[1] = "m";
      stringArray0[2] = "PNACH";
      stringArray0[3] = "PNACH";
      stringArray0[4] = "PNACH";
      stringArray0[5] = "PNACH";
      stringArray0[6] = "PNACH";
      stringArray0[7] = "PNACH";
      stringArray0[8] = "PNACH";
      boolean boolean0 = DoubleMetaphone.contains("PNACH", 722, 722, stringArray0);
      assertFalse(boolean0);
      assertEquals(9, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PNACH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NK", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(722);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('e');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("e", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("zOC$=KIcvRQH]^j[wg1");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKKK", string1);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("PN'AU$O-HH*+MYZRVDW", "g");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("DDt,NNO4R3", "EY");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean2);
      
      boolean boolean3 = doubleMetaphone0.isDoubleMetaphoneEqual("YeI=i", "EM", false);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean3);
      
      int int0 = doubleMetaphone1.getMaxCodeLen();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals(4, int0);
      
      boolean boolean4 = DoubleMetaphone.contains("SKKK", 4, 4, stringArray0);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
      assertEquals(9, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("A..Bq06 j{t1s!uE)uF", "<XO@");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("<XO@", "Q.E}3", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SH", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string0);
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "'aU$O-hh*+mYzrvDw");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ZbQ'__]IQ_XHC0");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPKK", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ZbQ'__]IQ_XHC0", "$z", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "WITZ", true);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(81);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean2);
      
      String string1 = doubleMetaphone0.doubleMetaphone("GNILLO", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("N", string1);
      
      String string2 = doubleMetaphone0.encode("WRZ30KL]SA2 -8DUU@");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("RSKL", string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(78);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('1');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(81);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult2.appendAlternate('%');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult2.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("%", doubleMetaphone_DoubleMetaphoneResult2.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult2, doubleMetaphone_DoubleMetaphoneResult0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult3 = doubleMetaphone0.new DoubleMetaphoneResult(68);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult3);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult3.append('1');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult2));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult3.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult3.getAlternate());
      assertEquals("1", doubleMetaphone_DoubleMetaphoneResult3.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult2);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult3, doubleMetaphone_DoubleMetaphoneResult1);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("S%)M?K=|joEc'7B");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SMKJ", string0);
      
      String string1 = "A";
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("A", (String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      int int0 = (-3294);
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("A", "S%)M?K=|joEc'7B");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("SMKJ", "ILLO");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3294));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("S%)M?K=|joEc'7B", (String) null);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "PNACH";
      stringArray0[1] = "m";
      stringArray0[2] = "PNACH";
      stringArray0[3] = "PNACH";
      stringArray0[4] = "PNACH";
      stringArray0[5] = "PNACH";
      stringArray0[6] = "PNACH";
      stringArray0[7] = "PNACH";
      stringArray0[8] = "PNACH";
      boolean boolean0 = DoubleMetaphone.contains("PNACH", 722, 722, stringArray0);
      assertFalse(boolean0);
      assertEquals(9, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("PNACH");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NK", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("WRSY)M?D8|JQEC'7B", "m");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("|vX1JwIm__j?{", "", true);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      String string2 = doubleMetaphone0.doubleMetaphone("-BmwV057\"*qPLTP", false);
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PMFK", string2);
      
      char char0 = doubleMetaphone0.charAt("NK", (-194993158));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("ZbQ'__]IQ_XHC0");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPKK", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1578);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone1.isDoubleMetaphoneEqual("KNRANGER", "SH", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean0);
      
      doubleMetaphone0.setMaxCodeLen(30);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(30, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string1 = doubleMetaphone1.doubleMetaphone("gy)mzKIG", true);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("JMTS", string1);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("gQvcnCp/:56sf{o!", "jz:G|@ C~d");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
      
      String string2 = doubleMetaphone1.encode("ly");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("L", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('F');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(30, doubleMetaphone0.getMaxCodeLen());
      assertEquals("F", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('F');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(30, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FF", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('%');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(30, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FF%", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("%", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ly";
      stringArray0[1] = "jz:G|@ C~d";
      boolean boolean2 = DoubleMetaphone.contains("[54x3:RO}", (-526), (-526), stringArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(2, stringArray0.length);
      
      char char0 = doubleMetaphone1.charAt("gy)mzKIG", (-623));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("ZbQ'__]IQ_XHC0");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPKK", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("ZbQ'__]IQ_XHC0", "$z", true);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1);
      
      String string1 = doubleMetaphone0.encode("SPKK");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPK", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(12);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("R", "}p]x8>eYGH>E>7bP");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertFalse(boolean2);
      
      doubleMetaphone1.setMaxCodeLen(78);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(78, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone2);
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      
      DoubleMetaphone doubleMetaphone3 = new DoubleMetaphone();
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone3);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      
      boolean boolean3 = doubleMetaphone3.isDoubleMetaphoneEqual("wBsZ{3U{=.6J rYI", "R", true);
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone3.equals((Object)doubleMetaphone0));
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertEquals(4, doubleMetaphone3.getMaxCodeLen());
      assertNotSame(doubleMetaphone3, doubleMetaphone2);
      assertNotSame(doubleMetaphone3, doubleMetaphone1);
      assertNotSame(doubleMetaphone3, doubleMetaphone0);
      assertFalse(boolean3);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone3));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone3);
      assertEquals(4, int0);
      
      char char0 = doubleMetaphone2.charAt((String) null, (-2517));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone3));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone3);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "P==LgtwCbSJ~\\]>vXs";
      String string1 = doubleMetaphone0.doubleMetaphone("P==LgtwCbSJ~]>vXs");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PLKT", string1);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("P==LgtwCbSJ~]>vXs", "PLKT", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      boolean boolean1 = true;
      String string2 = doubleMetaphone0.doubleMetaphone("PLKT", true);
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PLKT", string2);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("t8_~vv*&t2!+E>,nR\"", "#5:9wO\"I#W6zg<1w]");
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3165));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = "VAN ";
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("VAN ");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("U5:B[})j3LCmdih5?q", true);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APJL", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("APJL");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APL", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      String string2 = doubleMetaphone1.encode("E");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("A", string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('d');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      String string3 = doubleMetaphone1.doubleMetaphone("h<m`5~HDEZA6]E(YqUQ");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("MTSK", string3);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(":$[dc", "aOcN\"W:");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("CC^y -r0tM.)XIZu", "OGGI", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean1);
      
      char char0 = doubleMetaphone0.charAt("MTSK", 81);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("F", "F");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode("7'as<Y6g:+q NMmHWK7");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKKN", string0);
      
      doubleMetaphone0.setMaxCodeLen(75);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode((String) null);
      assertNull(string1);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(172);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("sK_r3J-52hA80'qv");
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("sK_r3J-52hA80'qv", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("sK_r3J-52hA80'qv", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("BhD5o`");
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("PT", string3);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(3538);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('g');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("g", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('g');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("sK_r3J-52hA80'qvg", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("sK_r3J-52hA80'qvg", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string4 = doubleMetaphone0.doubleMetaphone("7'as<Y6g:+q NMmHWK7", true);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      assertEquals(75, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKKNMK", string4);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("SIA");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("G5ZR$wh@l");
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KSRL", string1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      String string2 = doubleMetaphone2.encode("S");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertEquals("S", string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone2.new DoubleMetaphoneResult(74);
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("S", "SIA");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("SIA", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('>');
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("SIA>", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('>');
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("S", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("SIA>>", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('>');
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertEquals("S>", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("SIA>>>", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(70);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertNotNull(object0);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPXKMNSKTKNKTRKSPXN", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "ARKPXKMNSKTKNKTRKSPXN");
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals(70, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKPKSKMNSKTKNKTRKSPKSN", object1);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "C";
      stringArray0[2] = "C";
      stringArray0[3] = "C";
      stringArray0[4] = "C";
      stringArray0[5] = "org.apache.commons.codec.EncoderException";
      stringArray0[6] = "Wlk5B'HH+7|wagU$Y:";
      boolean boolean0 = DoubleMetaphone.contains("C", (-1207), (-1207), stringArray0);
      assertFalse(boolean0);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("OWSKY", "P==LgtwCbSJ~]>vXs", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string0 = doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ARKP", string0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual(";!QcJ+{0ma", "P==LgtwCbSJ~]>vXs");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      char char0 = doubleMetaphone0.charAt("iQ(wo6Y1Twv]^`oyC", 0);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals('i', char0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("7'as<Y6g:+q NMmHWK7", "7'as<Y6g:+q NMmHWK7");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("n2nMSo2>XJve\".", "EI", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("n2nMSo2>XJve\".", true);
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("NNMS", string1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("NNMS", "EY");
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean3 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean3);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('j');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      char char0 = doubleMetaphone0.charAt("UMB", (-708));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "n2nMSo2>XJve\".";
      stringArray0[1] = null;
      stringArray0[2] = "7'as<Y6g:+q NMmHWK7";
      boolean boolean4 = DoubleMetaphone.contains("UMB", 209, 0, stringArray0);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1927);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(2);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.append("M1z1");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("M1", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("M1", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(' ');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('/');
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("M1", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("M1", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("M1", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("M1", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendPrimary("M1z1");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertEquals("M1", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("M1", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      char char0 = doubleMetaphone1.charAt("WRU5:B[})J3LCMDIH5?Q", 1927);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals('\u0000', char0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(' ');
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(" ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      String string0 = doubleMetaphone1.doubleMetaphone("?1fAf;S5c]IFk[8@ ");
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertEquals("FFSK", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("TH", "aOcN\"W:");
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone1.isDoubleMetaphoneEqual("OGGI", "PS80?ON\"#T", false);
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      assertNotSame(doubleMetaphone1, doubleMetaphone0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(",ty\"PnUiw,2uJ");
      assertNotNull(string0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "lRWs[~");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("lRWs[~", true);
      assertTrue(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      
      doubleMetaphone0.setMaxCodeLen(13);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("89JL]i`:,*Y5Rp", "qs\"3&R7+MT@aIQjFF", true);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.encode("5<fT6*b(^|Gd1.D");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FTPKTT", string2);
      
      String string3 = doubleMetaphone0.encode("");
      assertNull(string3);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      assertFalse(doubleMetaphone1.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone1);
      assertEquals(4, doubleMetaphone1.getMaxCodeLen());
      
      DoubleMetaphone doubleMetaphone2 = new DoubleMetaphone();
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertNotNull(doubleMetaphone2);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      
      boolean boolean1 = doubleMetaphone2.isDoubleMetaphoneEqual("}p]x8>eYGH>E>7bP", "DG");
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone1));
      assertFalse(doubleMetaphone2.equals((Object)doubleMetaphone0));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone2.getMaxCodeLen());
      assertNotSame(doubleMetaphone2, doubleMetaphone1);
      assertNotSame(doubleMetaphone2, doubleMetaphone0);
      assertFalse(boolean1);
      
      doubleMetaphone0.setMaxCodeLen(1);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("<~e.", "}p]x8>eYGH>E>7bP", false);
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertFalse(boolean2);
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone2));
      assertFalse(doubleMetaphone0.equals((Object)doubleMetaphone1));
      assertEquals(1, doubleMetaphone0.getMaxCodeLen());
      assertNotSame(doubleMetaphone0, doubleMetaphone2);
      assertNotSame(doubleMetaphone0, doubleMetaphone1);
      assertEquals(1, int0);
      
      // Undeclared exception!
//      try { 
        doubleMetaphone1.charAt((String) null, 13);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("<XO@", "yuSxDH],1q9");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("SKI", "SKI", true);
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone((String) null, true);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("|", "UCCES");
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(';');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      char char0 = doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('o', char0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "FW0RGN=~Z4(md";
      stringArray0[2] = "FW0RGN=~Z4(md";
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("FW0RGN=~Z4(md", stringArray0[1], false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      assertEquals(7, stringArray0.length);
      
      int int0 = (-3294);
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("EWSKI", "c.@%AE<xt.F");
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1807));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = "CH";
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("CH");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = "B?vyT<e(<_Ym<{";
      doubleMetaphone0.setMaxCodeLen((-1));
      assertEquals((-1), doubleMetaphone0.getMaxCodeLen());
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.doubleMetaphone("Qd%F9ToS<MGgHG%pn", true);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "FW0RGN=~Z4(md";
      stringArray0[1] = "FW0RGN=~Z4(md";
      stringArray0[2] = "FW0RGN=~Z4(md";
      stringArray0[3] = "FW0RGN=~Z4(md";
      stringArray0[4] = "FW0RGN=~Z4(md";
      stringArray0[5] = "FW0RGN=~Z4(md";
      stringArray0[6] = "FW0RGN=~Z4(md";
      boolean boolean0 = DoubleMetaphone.contains("FW0RGN=~Z4(md", (-1), 1274, stringArray0);
      assertFalse(boolean0);
      assertEquals(7, stringArray0.length);
      
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("FW0RGN=~Z4(md");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FRKN", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "FW0RGN=~Z4(md");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FRKN", object0);
      
      boolean boolean1 = doubleMetaphone0.isDoubleMetaphoneEqual("FRKN", "FW0RGN=~Z4(md");
      assertFalse(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean1);
      
      Object object1 = doubleMetaphone0.encode((Object) "FW0RGN=~Z4(md");
      assertTrue(object1.equals((Object)string0));
      assertTrue(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FRKN", object1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("FW0RGN=~Z4(md", false);
      assertTrue(string1.equals((Object)object0));
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object1));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FRKN", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("CZ");
      assertFalse(string2.equals((Object)object1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string2);
      
      Object object2 = doubleMetaphone0.encode((Object) "FRKN");
      assertFalse(object2.equals((Object)string2));
      assertTrue(object2.equals((Object)object0));
      assertTrue(object2.equals((Object)string1));
      assertTrue(object2.equals((Object)object1));
      assertTrue(object2.equals((Object)string0));
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FRKN", object2);
      
      int int0 = (-878);
      char char0 = doubleMetaphone0.charAt("FW0RGN=~Z4(md", (-878));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals('\u0000', char0);
      
      int int1 = 199;
      Object object3 = new Object();
      assertNotNull(object3);
      
      boolean boolean2 = doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException");
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean2);
      
//      try { 
        doubleMetaphone0.encode(object3);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.encode("]Lg:D[mXmhD");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LKTM", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('f', '%');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("f", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("%", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = '|';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('f');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("%f", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("f", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      char char1 = 'C';
      doubleMetaphone_DoubleMetaphoneResult0.append('C');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("fC", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("%f", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SFAJ", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SFJ", string1);
      
//      try { 
        doubleMetaphone0.encode((Object) null);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = 172;
      doubleMetaphone0.setMaxCodeLen(172);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("EisfaJG#)ZSaL5O+P");
      assertNotNull(string2);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASFJKSSLP", string2);
      
      String string3 = doubleMetaphone0.doubleMetaphone("LI");
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      assertEquals("L", string3);
      
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "Th,_d.B2");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1927);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('|', '|');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("|", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("|", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('|');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("||", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("|", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('|');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("||", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("|||", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("ZO");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("||ZO", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("|||ZO", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string0 = doubleMetaphone0.doubleMetaphone("IBLZ~E)A^");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APLS", string0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('7');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("|||ZO7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("||ZO", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('7');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("|||ZO77", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("||ZO7", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string1 = doubleMetaphone0.doubleMetaphone("SCH", true);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("S", string1);
      
      String string2 = doubleMetaphone0.doubleMetaphone("IBLZ~E)A^", true);
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("APLS", string2);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1910));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('|', '}');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('*');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('}');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string0 = "CK";
      String string1 = doubleMetaphone0.doubleMetaphone("CK", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("K", string1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("c$qwMJa?kR.{7FWu20d", (String) null, false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      Object object0 = doubleMetaphone0.encode((Object) "c$qwMJa?kR.{7FWu20d");
      assertNotNull(object0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KKMJ", object0);
      
      Object object1 = doubleMetaphone0.encode((Object) "KKMJ");
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("KMJ", object1);
      
      Object object2 = doubleMetaphone0.encode((Object) "7'as<Y6g:+q NMmHWK7");
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)object0));
      assertNotNull(object2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKKN", object2);
      
      int int1 = doubleMetaphone0.getMaxCodeLen();
      assertTrue(int1 == int0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertFalse(boolean1);
      
      String string0 = doubleMetaphone0.doubleMetaphone("ISL", false);
      assertFalse(string0.equals((Object)object0));
      assertFalse(string0.equals((Object)object1));
      assertFalse(string0.equals((Object)object2));
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("AL", string0);
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(3027);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('x');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertEquals("x", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('$');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('$');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult0.equals((Object)doubleMetaphone_DoubleMetaphoneResult1));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("$$", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("$", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult0, doubleMetaphone_DoubleMetaphoneResult1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone(",ty\"PnUiw,2uJ");
      assertNotNull(string0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "lRWs[~");
      assertTrue(object0.equals((Object)string0));
      assertNotNull(object0);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", object0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("lRWs[~", true);
      assertTrue(string1.equals((Object)string0));
      assertTrue(string1.equals((Object)object0));
      assertNotNull(string1);
      assertEquals(0, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", string1);
      
      doubleMetaphone0.setMaxCodeLen(13);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("89JL]i`:,*Y5Rp", "qs\"3&R7+MT@aIQjFF", true);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertFalse(boolean0);
      
      String string2 = doubleMetaphone0.encode("5<fT6*b(^|Gd1.D");
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)object0));
      assertNotNull(string2);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertEquals("FTPKTT", string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertFalse(boolean1 == boolean0);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1);
      
      doubleMetaphone_DoubleMetaphoneResult0.append(';');
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean2 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append('5', '5');
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(",ty\"PnUiw,2uJ", "");
      assertEquals(13, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.setMaxCodeLen((-3584));
      assertEquals((-3584), doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone_DoubleMetaphoneResult0.append(",ty\"PnUiw,2uJ", ",ty\"PnUiw,2uJ");
      assertEquals((-3584), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("");
      assertNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(172);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      
      String string2 = doubleMetaphone0.encode("EisfaJG#)ZSaL5O+P");
      assertNotNull(string2);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASFJKSSLP", string2);
      
      doubleMetaphone0.setMaxCodeLen(3108);
      assertEquals(3108, doubleMetaphone0.getMaxCodeLen());
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(837);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(3108, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string3 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(3108, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("ASFJKSSLP");
      assertEquals(3108, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASFJKSSLP", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append("EisfaJG#)ZSaL5O+P");
      assertEquals(3108, doubleMetaphone0.getMaxCodeLen());
      assertEquals("ASFJKSSLPEisfaJG#)ZSaL5O+P", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("EisfaJG#)ZSaL5O+P", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('g');
      assertEquals(3108, doubleMetaphone0.getMaxCodeLen());
      assertEquals("EisfaJG#)ZSaL5O+Pg", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ASFJKSSLPEisfaJG#)ZSaL5O+P", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('g');
      assertEquals(3108, doubleMetaphone0.getMaxCodeLen());
      assertEquals("EisfaJG#)ZSaL5O+Pgg", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("ASFJKSSLPEisfaJG#)ZSaL5O+Pg", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals(4, int0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("7'as<Y6g:+q NMmHWK7", "7'as<Y6g:+q NMmHWK7");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      String string0 = doubleMetaphone0.encode((String) null);
      assertNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(172);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      
      String string1 = doubleMetaphone0.encode("z30KL]SA2 -8dUu@");
      assertNotNull(string1);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKLST", string1);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(172);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string2 = doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", string2);
      
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      String string3 = doubleMetaphone0.doubleMetaphone("SCH");
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      assertEquals("X", string3);
      
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('g');
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("g", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone_DoubleMetaphoneResult0.append('g');
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      assertEquals("g", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("gg", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String string4 = doubleMetaphone0.doubleMetaphone("", true);
      assertNull(string4);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      
      String string5 = doubleMetaphone0.doubleMetaphone("SKLST", true);
      assertTrue(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertNotNull(string5);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SKLST", string5);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      assertNotNull(doubleMetaphone0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      String string0 = doubleMetaphone0.doubleMetaphone("Sw,bcm:");
      assertNotNull(string0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("SPKM", string0);
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("Sw,bcm:", "SPKM", false);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertTrue(boolean0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean1 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean1 == boolean0);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertTrue(boolean1);
      
      String string1 = doubleMetaphone0.doubleMetaphone("lRWs[~", false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("LRS", string1);
      
      String string2 = doubleMetaphone0.encode("M");
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("M", string2);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertNotNull(doubleMetaphone_DoubleMetaphoneResult1);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('8');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('>');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
      
      doubleMetaphone_DoubleMetaphoneResult1.append('8');
      assertFalse(doubleMetaphone_DoubleMetaphoneResult1.equals((Object)doubleMetaphone_DoubleMetaphoneResult0));
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getPrimary());
      assertNotSame(doubleMetaphone_DoubleMetaphoneResult1, doubleMetaphone_DoubleMetaphoneResult0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.isDoubleMetaphoneEqual("c$qwMJa?kR.{7FWu20d", (String) null, false);
      doubleMetaphone0.encode((Object) "c$qwMJa?kR.{7FWu20d");
      doubleMetaphone0.encode((Object) "KKMJ");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.doubleMetaphone("c$qwMJa?kR.{7FWu20d", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(490);
      doubleMetaphone_DoubleMetaphoneResult0.append("TIA", "KKMJ");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('m');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('N');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("org.apache.commons.codec.EncoderException");
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone1.new DoubleMetaphoneResult(4);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('N');
      doubleMetaphone_DoubleMetaphoneResult1.appendAlternate('`');
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(4);
      doubleMetaphone_DoubleMetaphoneResult2.appendPrimary("YJ[<}cuqE|g=X8");
      doubleMetaphone_DoubleMetaphoneResult2.append('D');
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult2.isComplete();
      assertEquals("YJ[<", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("]Lg:D[mXmhD");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2);
      doubleMetaphone_DoubleMetaphoneResult0.append("M1z1");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('w');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("]Lg:D[mXmhD");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("?1fAf;S5c]IFk[8@ ");
      doubleMetaphone0.charAt("TH", 80);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('w');
      doubleMetaphone0.doubleMetaphone("f$=| BE[i'`z60pd,s");
      doubleMetaphone0.encode("org.apache.commons.codec.EncoderException");
      // Undeclared exception!
//      try { 
        DoubleMetaphone.contains("f$=| BE[i'`z60pd,s", 2, (-44236554), (String[]) null);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(82);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append("|");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("#\"~nY2W2i?");
      doubleMetaphone_DoubleMetaphoneResult0.append("CIE", " Q");
      doubleMetaphone_DoubleMetaphoneResult0.append("1gjTU");
      doubleMetaphone0.isDoubleMetaphoneEqual("W", "W");
      doubleMetaphone0.isDoubleMetaphoneEqual("CIE", "CIE");
      doubleMetaphone0.isDoubleMetaphoneEqual("", "1gjTU", false);
      doubleMetaphone0.getMaxCodeLen();
      String string0 = doubleMetaphone0.doubleMetaphone("[G", true);
      assertEquals("K", string0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("SAN ", false);
      assertEquals("SN", string1);
      
      String[] stringArray0 = new String[0];
      DoubleMetaphone.contains("IAU", 5, 2, stringArray0);
      doubleMetaphone0.getMaxCodeLen();
      DoubleMetaphone.contains("", 88, 24, stringArray0);
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.charAt("1gjTU", 3009);
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      String string0 = doubleMetaphone0.encode("\"p'ce=$>a?)%HT5>GK");
      assertEquals("PSTK", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('8');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('8');
      doubleMetaphone_DoubleMetaphoneResult0.append('1');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("ZbQ'__]IQ_XHC0");
      assertEquals("SPKK", string0);
      
      doubleMetaphone0.isDoubleMetaphoneEqual("ZbQ'__]IQ_XHC0", "", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      boolean boolean0 = doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      assertTrue(boolean0);
      
      String string1 = doubleMetaphone0.doubleMetaphone("WRZ30KL]SA2 -8DUU@", false);
      assertEquals("RSKL", string1);
      
      doubleMetaphone0.encode("");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('8');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('8');
      doubleMetaphone_DoubleMetaphoneResult1.append('i');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult1.getAlternate());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("WRFZQ8!KCDYDK^_XT", "HI");
      doubleMetaphone0.isDoubleMetaphoneEqual("HI", (String) null, false);
      doubleMetaphone0.doubleMetaphone("HI", false);
      doubleMetaphone0.isDoubleMetaphoneEqual("fV.M$:t*RHF@l{:`", "fV.M$:t*RHF@l{:`");
      doubleMetaphone0.encode("H");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(3);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('h');
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.encode((String) null);
      // Undeclared exception!
//      try { 
        DoubleMetaphone.contains((String) null, 3, 3, (String[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("Sy)M?D8|jqEc'7B", false);
      Object object0 = new Object();
      doubleMetaphone0.encode("");
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone1.setMaxCodeLen(0);
      doubleMetaphone1.encode("w5ru:.u)($v*$>");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(89);
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.append("QT");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "Zn";
      stringArray0[2] = "w5ru:.u)($v*$>";
      stringArray0[3] = "TH";
      stringArray0[4] = "";
      stringArray0[5] = "QT";
      stringArray0[6] = "QT";
      stringArray0[7] = "SMTJ";
      stringArray0[8] = "SMTJ";
      DoubleMetaphone.contains("TH", (-4992), 0, stringArray0);
      doubleMetaphone1.doubleMetaphone("SIAN", false);
      // Undeclared exception!
//      try { 
        DoubleMetaphone.contains((String) null, 18, 9146, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1167));
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('O');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('8');
      doubleMetaphone_DoubleMetaphoneResult0.append('z');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = null;
      String string1 = doubleMetaphone0.encode("d$iO5.");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("T", string1);
      
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = null;
      boolean boolean0 = DoubleMetaphone.contains("", (-1167), 878, stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.encode("Ei5sfaJGw)ZSaL|O+@");
      String string0 = doubleMetaphone0.doubleMetaphone("ASFJ", true);
      assertEquals("ASF ", string0);
      
      doubleMetaphone0.encode((Object) "F");
      Object object0 = doubleMetaphone0.encode((Object) "Qt_@16v+A/raA%");
      assertEquals("KTFR", object0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("RqK{X%Bd:( <H=sFfwP");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1578);
      doubleMetaphone0.encode("[|A=]--*(ykS_Rt");
      doubleMetaphone0.doubleMetaphone("RKKK");
      Object object0 = new Object();
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "Sy)M?D8|jqEc'7B";
      doubleMetaphone0.doubleMetaphone("Sy)M?D8|jqEc'7B", true);
      String string1 = "AGGI";
      doubleMetaphone0.doubleMetaphone("AGGI");
      String string2 = "uwPxQc?m K'Q'";
      doubleMetaphone0.doubleMetaphone("uwPxQc?m K'Q'", false);
      doubleMetaphone0.encode((Object) "AGGI");
//      try { 
        doubleMetaphone0.encode((Object) null);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "";
      Object object0 = new Object();
      doubleMetaphone0.isDoubleMetaphoneEqual("WARF=>!~)!W8F", "", true);
      doubleMetaphone0.encode((Object) "");
//      try { 
        doubleMetaphone0.encode((Object) null);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("RqK{X%Bd:( <H=sFfwP");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1578);
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("[|A=]--*(ykS_Rt", "KNRANGER", false);
      doubleMetaphone0.doubleMetaphone("jz:G|@ C~d", true);
      doubleMetaphone0.isDoubleMetaphoneEqual("DANGER", "DANGER");
      doubleMetaphone0.encode("4]cOvF_^/S&'{t;");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult1 = doubleMetaphone0.new DoubleMetaphoneResult(1578);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult2 = doubleMetaphone0.new DoubleMetaphoneResult(3);
      doubleMetaphone_DoubleMetaphoneResult2.appendPrimary("fV.M$:t*RHF@l{:`");
      assertEquals("fV.", doubleMetaphone_DoubleMetaphoneResult2.getPrimary());
      
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('h');
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      doubleMetaphone0.encode("GNTCH");
      boolean boolean1 = DoubleMetaphone.contains("kCs@", 1578, 2138, (String[]) null);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("lyHFE\"(", (String) null, true);
      doubleMetaphone0.isDoubleMetaphoneEqual("lyHFE\"(", (String) null);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1453);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('a');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("OM");
      assertEquals("aorg.apache.commons.codec.EncoderException", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", false);
      doubleMetaphone0.doubleMetaphone("TCH", false);
      doubleMetaphone0.charAt("VON ", 1453);
      Object object0 = doubleMetaphone0.encode((Object) "org.apache.commons.codec.EncoderException");
      assertEquals("ARKP", object0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1927);
      doubleMetaphone_DoubleMetaphoneResult0.append('|', '|');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('|');
      doubleMetaphone_DoubleMetaphoneResult0.append('4');
      doubleMetaphone0.doubleMetaphone("UeXzYnFPgx^jRs", false);
      doubleMetaphone0.encode((Object) "UeXzYnFPgx^jRs");
      doubleMetaphone0.doubleMetaphone("UeXzYnFPgx^jRs");
      doubleMetaphone_DoubleMetaphoneResult0.append("UeXzYnFPgx^jRs", "PS7'AS<Y6G:+Q NMMHWK7");
      doubleMetaphone0.doubleMetaphone(">EFEA-,[^.tNRd");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("PS7'AS<Y6G:+Q NMMHWK7");
      assertEquals("||4PS7'AS<Y6G:+Q NMMHWK7", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      char char0 = doubleMetaphone0.charAt("AKSS", 0);
      assertEquals('A', char0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "Sy)M?D8|jqEc'7B";
      doubleMetaphone0.encode("Sy)M?D8|jqEc'7B");
      Object object0 = new Object();
      String string1 = null;
      String string2 = "ACH";
      doubleMetaphone0.isDoubleMetaphoneEqual("ACH", (String) null, false);
      doubleMetaphone0.isDoubleMetaphoneEqual("ACH", "Sy)M?D8|jqEc'7B");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-3294));
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 1453;
      String string0 = "lyHFE\"(";
      String string1 = "";
      String string2 = null;
      String string3 = "YSL";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "YSL", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "5]!:v]:";
      stringArray0[1] = "5]!:v]:";
      stringArray0[2] = "5]!:v]:";
      stringArray0[3] = "5]!:v]:";
      stringArray0[4] = "eEQyK\"L\"Ev2Ro5`(AE2";
      stringArray0[5] = "5]!:v]:";
      stringArray0[6] = "5]!:v]:";
      DoubleMetaphone.contains("5]!:v]:", 0, 5, stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", (-1));
      char char0 = doubleMetaphone0.charAt(" G", 4);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.isDoubleMetaphoneEqual("7'as<Y6g:+q NMmHWK7", "7'as<Y6g:+q NMmHWK7");
      doubleMetaphone0.encode((String) null);
      doubleMetaphone0.setMaxCodeLen(172);
      doubleMetaphone0.encode("z30KL]SA2 -8dUu@");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(172);
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      DoubleMetaphone.contains("", 172, 172, stringArray0);
      doubleMetaphone0.doubleMetaphone("", false);
      assertEquals(172, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      String string0 = doubleMetaphone0.doubleMetaphone("uwPxQc?m K'Q'", false);
      assertEquals("APKS", string0);
      
      doubleMetaphone0.encode((Object) "Qt_@16v+A/raA%");
      Object object0 = doubleMetaphone0.encode((Object) "Qt_@16v+A/raA%");
      assertEquals("KTFR", object0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      String string1 = "^";
      doubleMetaphone0.isDoubleMetaphoneEqual("^", "^", true);
      doubleMetaphone0.charAt("Y", (-1));
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      String string2 = "";
      String string3 = "N|9xb9_ZpDPd~E][";
      doubleMetaphone0.doubleMetaphone("N|9xb9_ZpDPd~E][", true);
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      doubleMetaphone0.doubleMetaphone("");
      String string4 = "";
      doubleMetaphone_DoubleMetaphoneResult0.append("", "");
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1927);
      doubleMetaphone_DoubleMetaphoneResult0.append('|', '|');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('|');
      doubleMetaphone_DoubleMetaphoneResult0.append('4');
      String string0 = "SFA";
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("SFA");
      doubleMetaphone_DoubleMetaphoneResult0.append(']');
      doubleMetaphone0.setMaxCodeLen((-1));
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('#');
      String string1 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('|');
      doubleMetaphone_DoubleMetaphoneResult0.append('|');
      DoubleMetaphone doubleMetaphone1 = new DoubleMetaphone();
      int int0 = (-4902);
      doubleMetaphone1.setMaxCodeLen((-4902));
      String string2 = "|x[@Eg8cf!=F";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.encode("|x[@Eg8cf!=F");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      String string0 = doubleMetaphone0.encode("FzQ8!kCdYdk^_xT");
      assertEquals("FSKK", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append('}', 'W');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('1');
      doubleMetaphone_DoubleMetaphoneResult0.append('1');
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("c5yRVo98%lo");
      doubleMetaphone0.isDoubleMetaphoneEqual("c5yRVo98%lo", "]m~|+e0a", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      doubleMetaphone0.isDoubleMetaphoneEqual("Ww(&9^/4r8!xc]", (String) null, false);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("e:N?`RE");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("YvF2VL&i\"kC@^");
      doubleMetaphone_DoubleMetaphoneResult0.append('(', '(');
      String string0 = "F<iNRZ<rs<m c|";
      doubleMetaphone0.isDoubleMetaphoneEqual("KRFL", "F<iNRZ<rs<m c|");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('(');
      doubleMetaphone0.charAt("=5P[M", 84);
      doubleMetaphone_DoubleMetaphoneResult0.append("e:N?`RE");
      doubleMetaphone_DoubleMetaphoneResult0.append("KRFL");
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.doubleMetaphone("YvF2VL&i\"kC@^", false);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.setMaxCodeLen((-2073));
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.getMaxCodeLen();
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("]Lg:D[mXmhD");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2);
      doubleMetaphone_DoubleMetaphoneResult0.append("M1z1");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('w');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("]Lg:D[mXmhD");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("?1fAf;S5c]IFk[8@ ");
      doubleMetaphone0.charAt("TH", 80);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('w');
      doubleMetaphone0.doubleMetaphone("f$=| BE[i'`z60pd,s");
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "LKTM");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "lRWs[~";
      int int0 = (-1702);
      doubleMetaphone0.setMaxCodeLen((-1702));
      String string1 = ",ty\"PnUiw,2uJ";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.doubleMetaphone(",ty\"PnUiw,2uJ");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone((String) null);
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.setMaxCodeLen((-695));
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "43%", false);
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1927);
      doubleMetaphone_DoubleMetaphoneResult0.append('|', '|');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('|');
      doubleMetaphone_DoubleMetaphoneResult0.append('4');
      assertEquals("|4", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      doubleMetaphone0.doubleMetaphone("UeXzYnFPgx^jRs", false);
      doubleMetaphone0.encode((Object) "UeXzYnFPgx^jRs");
      doubleMetaphone0.doubleMetaphone("AKSS", false);
      doubleMetaphone0.doubleMetaphone("AKS", true);
      doubleMetaphone0.charAt("org.apache.commons.codec.EncoderException", 1927);
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("c5yRVo98%lo");
      String string0 = "E:s8 d&RyOXl CQNG";
      doubleMetaphone0.isDoubleMetaphoneEqual("E:s8 d&RyOXl CQNG", "]m~|+e0a", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(84);
      String string1 = null;
      doubleMetaphone0.isDoubleMetaphoneEqual("Ww(&9^/4r8!xc]", (String) null, false);
      String string2 = "YvF2VL&i\"kC@^";
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("e:N?`RE");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("YvF2VL&i\"kC@^");
      doubleMetaphone_DoubleMetaphoneResult0.append('(', '(');
      doubleMetaphone0.isDoubleMetaphoneEqual("E:s8 d&RyOXl CQNG", "F<iNRZ<rs<m c|");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('(');
      doubleMetaphone0.charAt("=5P[M", 84);
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.encode("Ei5sfaJGw)ZSaL|O+@");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('8');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('8');
      doubleMetaphone_DoubleMetaphoneResult0.append('4');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "org.apache.commons.codec.EncoderException";
      doubleMetaphone0.doubleMetaphone("org.apache.commons.codec.EncoderException", true);
      String string1 = "";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone0.getMaxCodeLen();
      // Undeclared exception!
//      try { 
        doubleMetaphone0.charAt((String) null, 4);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.getMaxCodeLen();
      doubleMetaphone0.isDoubleMetaphoneEqual("7'as<Y6g:+q NMmHWK7", "7'as<Y6g:+q NMmHWK7");
      doubleMetaphone0.encode((String) null);
      doubleMetaphone0.setMaxCodeLen(172);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(172);
      doubleMetaphone_DoubleMetaphoneResult0.getPrimary();
      doubleMetaphone_DoubleMetaphoneResult0.append("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      DoubleMetaphone.contains("", 172, 172, stringArray0);
      String string0 = doubleMetaphone0.doubleMetaphone("", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = (-2425);
      doubleMetaphone0.doubleMetaphone("q", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-2425));
      doubleMetaphone0.setMaxCodeLen((-2425));
      // Undeclared exception!
//      try { 
        doubleMetaphone0.encode((Object) "K");
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.lang.AbstractStringBuilder", e);
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-1540));
      doubleMetaphone_DoubleMetaphoneResult0.append('|', '|');
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 48;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(48);
      doubleMetaphone0.encode("\u0003I");
      boolean boolean0 = false;
      doubleMetaphone0.doubleMetaphone("V]AuOQ?[#:n", false);
      char char0 = 'i';
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('i');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append('Z', ' ');
      char char1 = '6';
      doubleMetaphone0.doubleMetaphone("FKN", false);
      doubleMetaphone_DoubleMetaphoneResult0.append('6', 'g');
      String string0 = "";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, ":n-;5i&lhb/", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("lyHFE\"(", (String) null);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1453);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("org.apache.commons.codec.EncoderException");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("OM");
      doubleMetaphone_DoubleMetaphoneResult0.append("VON ", "");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('i');
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("uV!8");
      assertEquals("OMVON uV!8", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-4344));
      String string0 = "|Xjt%x$\\zXI[l";
      String string1 = "@cAeB0SrKxt\\C1";
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.isDoubleMetaphoneEqual("|Xjt%x$zXI[l", "@cAeB0SrKxtC1", false);
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("|Xjt%x$zXI[l", "|Xjt%x$zXI[l");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "Sy)M?D8|jqEc'7B";
      doubleMetaphone0.doubleMetaphone("Sy)M?D8|jqEc'7B", false);
      Object object0 = new Object();
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "Sy)M?D8|jqEc'7B", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("]Lg:D[mXmhD");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(2);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("]Lg:D[mXmhD");
      assertEquals("]L", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("P3L7)]Di6d}", "P3L7)]Di6d}");
      String string0 = doubleMetaphone0.encode("?$r[");
      assertEquals("R", string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("P3L7)]Di6d}");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("EY");
      doubleMetaphone_DoubleMetaphoneResult0.append("P3L7)]Di6d}", "P3L7)]Di6d}");
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      
      int int0 = doubleMetaphone0.getMaxCodeLen();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.encode("RqK{X%Bd:( <H=sFfwP");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(1578);
      doubleMetaphone0.encode("[|A=]--*(ykS_Rt");
      doubleMetaphone0.doubleMetaphone("[|A=]--*(ykS_Rt", false);
      Object object0 = new Object();
//      try { 
        doubleMetaphone0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // DoubleMetaphone encode parameter is not of type String
//         //
//         verifyException("org.apache.commons.codec.language.DoubleMetaphone", e);
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.doubleMetaphone("U5:B[})j3LCmdih5?q", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(15);
      String string0 = "x=<T~91wr^Nr";
      doubleMetaphone0.doubleMetaphone("x=<T~91wr^Nr", false);
      String string1 = null;
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = "HIA";
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "HIA");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.encode("RA@Z\"bg6odBh?4U");
      assertEquals("RSPK", string0);
      
      Object object0 = doubleMetaphone0.encode((Object) "Qt_@16v+A/raA%");
      assertEquals("KTFR", object0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.commons.codec.EncoderException";
      stringArray0[1] = "org.apache.commons.codec.EncoderException";
      stringArray0[2] = "org.apache.commons.codec.EncoderException";
      stringArray0[3] = "org.apache.commons.codec.EncoderException";
      stringArray0[4] = "org.apache.commons.codec.EncoderException";
      stringArray0[5] = "org.apache.commons.codec.EncoderException";
      stringArray0[6] = "org.apache.commons.codec.EncoderException";
      DoubleMetaphone.contains("org.apache.commons.codec.EncoderException", 0, 890, stringArray0);
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("org.apache.commons.codec.EncoderException", "org.apache.commons.codec.EncoderException", false);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("<I{66)h!I{V;|C]r#");
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = 0;
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('?');
      doubleMetaphone0.isDoubleMetaphoneEqual("RANGER", "YI`ZRz>-");
      String string0 = null;
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, "", true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(532);
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone0.setMaxCodeLen(532);
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('a');
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary(' ');
      String[] stringArray0 = new String[6];
      stringArray0[0] = "fOM.>";
      stringArray0[1] = "";
      stringArray0[2] = "fOM.>";
      stringArray0[3] = "";
      stringArray0[4] = "fOM.>";
      stringArray0[5] = "";
      DoubleMetaphone.contains("fOM.>", 0, 0, stringArray0);
      doubleMetaphone0.doubleMetaphone("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate(".>/s");
      assertEquals("a ", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      
      boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual("fOM.>", "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen((-889));
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual("", "", false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      String string0 = doubleMetaphone0.doubleMetaphone("");
      assertNull(string0);
      
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.append("-p9NQAeGJ8T", "");
      doubleMetaphone_DoubleMetaphoneResult0.append("", "-p9NQAeGJ8T");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate('-');
      doubleMetaphone_DoubleMetaphoneResult0.append("-p9NQAeGJ8T", "5u3[[S.54]BK~Ds;=C4");
      doubleMetaphone_DoubleMetaphoneResult0.append('-');
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("");
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getPrimary());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
      assertEquals(4, doubleMetaphone0.getMaxCodeLen());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-590));
      String string0 = "v/7#Y";
      doubleMetaphone0.doubleMetaphone("", true);
      char char0 = '+';
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary('+');
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("v/7#Y");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.isDoubleMetaphoneEqual("ZbQ'__]IQ_XHC0", "", true);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone0.encode("");
      doubleMetaphone_DoubleMetaphoneResult0.appendAlternate("");
      doubleMetaphone_DoubleMetaphoneResult0.appendPrimary("h(");
      String string0 = null;
      // Undeclared exception!
//      try { 
        doubleMetaphone0.isDoubleMetaphoneEqual((String) null, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.doubleMetaphone(",ty\"PnUiw,2uJ");
      doubleMetaphone0.encode((Object) "lRWs[~");
      doubleMetaphone0.doubleMetaphone("lRWs[~", true);
      doubleMetaphone0.setMaxCodeLen(0);
      doubleMetaphone0.isDoubleMetaphoneEqual("89JL]i`:,*Y5Rp", "qs\"3&R7+MT@aIQjFF", true);
      doubleMetaphone0.encode("5<fT6*b(^|Gd1.D");
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult(0);
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append(';');
      doubleMetaphone_DoubleMetaphoneResult0.isComplete();
      doubleMetaphone_DoubleMetaphoneResult0.append('5', '5');
      doubleMetaphone_DoubleMetaphoneResult0.append(",ty\"PnUiw,2uJ", "");
      doubleMetaphone0.setMaxCodeLen((-3584));
      doubleMetaphone_DoubleMetaphoneResult0.append(",ty\"PnUiw,2uJ", ",ty\"PnUiw,2uJ");
      assertEquals((-3584), doubleMetaphone0.getMaxCodeLen());
      assertEquals("", doubleMetaphone_DoubleMetaphoneResult0.getAlternate());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
      int int0 = (-596);
      DoubleMetaphone.DoubleMetaphoneResult doubleMetaphone_DoubleMetaphoneResult0 = doubleMetaphone0.new DoubleMetaphoneResult((-596));
      String string0 = "_x=_}\\FZ";
      doubleMetaphone0.isDoubleMetaphoneEqual("_x=_}FZ", "_x=_}FZ");
      doubleMetaphone_DoubleMetaphoneResult0.getAlternate();
      String string1 = "-&6RQ\\w=@.hSyR!KP@";
      // Undeclared exception!
//      try { 
        doubleMetaphone_DoubleMetaphoneResult0.append("-&6RQw=@.hSyR!KP@");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }
}
