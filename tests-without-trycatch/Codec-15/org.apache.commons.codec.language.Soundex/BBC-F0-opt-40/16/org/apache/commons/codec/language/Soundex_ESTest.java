/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 22:10:06 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.Soundex;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Soundex_ESTest extends Soundex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[3];
      Soundex soundex0 = new Soundex(charArray0);
      // Undeclared exception!
//      try { 
        soundex0.encode("^'[dcFFtn$|");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The character is not mapped: D
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      int int0 = soundex0.US_ENGLISH.difference(")g S+Hpy1RJoJDSA", (String) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Soundex soundex0 = new Soundex("org.apache.commons.codec.EncoderException");
      int int0 = soundex0.difference("", "e.oSW5y?~q .!aHOb0");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      soundex0.setMaxLength((-3179));
      int int0 = soundex0.getMaxLength();
      assertEquals((-3179), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      String string0 = soundex0.US_ENGLISH.encode("01230120022455012623010202");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      int int0 = soundex0.US_ENGLISH.difference("M*F!", "M*F!");
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[6];
      Soundex soundex0 = new Soundex(charArray0);
      // Undeclared exception!
//      try { 
        soundex0.soundex("wz@2,G:Xwl");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The character is not mapped: W
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Soundex soundex0 = new Soundex("IngY}@b%I+:1p+");
      // Undeclared exception!
//      try { 
        soundex0.difference("IngY}@b%I+:1p+", "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The character is not mapped: Y
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Soundex soundex0 = null;
//      try {
        soundex0 = new Soundex((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Soundex soundex0 = null;
//      try {
        soundex0 = new Soundex((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      String string0 = soundex0.US_ENGLISH.soundex("org.apache.commons.codec.language.Soundex");
      assertEquals("O621", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Soundex soundex0 = new Soundex("MNb-kmKP|cVR0(T");
      String string0 = soundex0.soundex("");
      assertEquals("", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      soundex0.soundex((String) null);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Soundex soundex0 = new Soundex("MNb-kmKP|cVR0(T");
      String string0 = soundex0.encode((String) null);
      assertEquals(4, soundex0.getMaxLength());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      int int0 = soundex0.difference("z:`Q/t0{Y[f,s_txq|+", "=@ewW/<C<Xd-i9)rsJ*");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      int int0 = soundex0.US_ENGLISH.difference("vHw*Ll\"'^,LDF9H1-", "");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.soundex("PxZx$w q");
      assertEquals("P200", string0);
      assertEquals(4, soundex0.getMaxLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      soundex0.difference("01230120022455012623010202", "tw>>% )YwcSX/]>");
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      int int0 = soundex0.difference("01230120022455012623010202", "RT<=IFHL&oa24{y");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      Object object0 = new Object();
//      try { 
        soundex0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Parameter supplied to Soundex encode is not of type java.lang.String
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Soundex soundex0 = new Soundex("MNb-kmKP|cVR0(T");
      Object object0 = soundex0.encode((Object) "01230120022455012623010202");
      assertNotNull(object0);
      assertEquals("", object0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[1];
      Soundex soundex0 = new Soundex(charArray0);
      // Undeclared exception!
//      try { 
        soundex0.encode((Object) "nVb~]6OA0WB5");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The character is not mapped: N
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.encode("The character is not mapped: ");
      assertEquals("T262", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Soundex soundex0 = new Soundex("MNb-kmKP|cVR0(T");
      int int0 = soundex0.getMaxLength();
      assertEquals(4, int0);
  }
}
