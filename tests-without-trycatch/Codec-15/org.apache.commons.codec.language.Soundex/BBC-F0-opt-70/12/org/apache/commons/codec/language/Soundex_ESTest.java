/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 21:51:10 GMT 2021
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.Soundex;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Soundex_ESTest extends Soundex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Soundex soundex0 = new Soundex("Parameter supplied to Soundex encode is not of type java.lang.String");
      String string0 = soundex0.encode("@e]'HP");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("Eei0", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Soundex soundex0 = new Soundex("org.apache.commons.codec.EncoderException");
      String string0 = soundex0.soundex("The character is not mapped: ");
      assertEquals("Tagc", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Soundex soundex0 = new Soundex("org.apache.commons.codec.EncoderException");
      String string0 = soundex0.soundex("H[by]k1AGA-\"L!9ti");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("Hr.o", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Soundex soundex0 = new Soundex("Parameter supplied to Soundex encode is not of type java.lang.String");
      assertEquals(4, soundex0.getMaxLength());
      
      soundex0.setMaxLength(0);
      int int0 = soundex0.getMaxLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Soundex soundex0 = new Soundex("Parameter supplied to Soundex encode is not of type java.lang.String");
      soundex0.setMaxLength((-1771));
      int int0 = soundex0.getMaxLength();
      assertEquals((-1771), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      String string0 = soundex0.encode((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.encode("01230120022455012623010202");
      assertEquals("", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      int int0 = soundex0.difference("cc'/r$t|ZL|EN", "org.apache.commons.codec.EncoderException");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Soundex soundex0 = new Soundex("");
      // Undeclared exception!
//      try { 
        soundex0.soundex("H200");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The character is not mapped: H
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Soundex soundex0 = new Soundex("");
      // Undeclared exception!
//      try { 
        soundex0.encode("#mZ;K[Xd|$6A0p");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The character is not mapped: M
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Soundex soundex0 = new Soundex("^M9L");
      // Undeclared exception!
//      try { 
        soundex0.difference("The character is not mapped: ", "^M9L");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The character is not mapped: T
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Soundex soundex0 = null;
//      try {
        soundex0 = new Soundex((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Soundex soundex0 = null;
//      try {
        soundex0 = new Soundex((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.soundex("");
      assertEquals(4, soundex0.getMaxLength());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      String string0 = soundex0.soundex((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Soundex soundex0 = new Soundex("44R#D;&Pu uo SJ\"F");
      // Undeclared exception!
//      try { 
        soundex0.encode((Object) "44R#D;&Pu uo SJ\"F");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The character is not mapped: R
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      String string0 = soundex0.soundex("!l0D<wHXX");
      assertEquals("L320", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.soundex("1jHXeLgiq$");
      assertEquals("J422", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      String string0 = soundex0.encode("Uw|XJyN>x2s` 8");
      assertEquals("U252", string0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      Object object0 = new Object();
//      try { 
        soundex0.encode(object0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Parameter supplied to Soundex encode is not of type java.lang.String
//         //
//         verifyException("org.apache.commons.codec.language.Soundex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      Object object0 = soundex0.encode((Object) "2\u0001Hw?Nk");
      assertEquals("H200", object0);
      assertEquals(4, soundex0.getMaxLength());
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      int int0 = soundex0.difference("01230120022455012623010202", "k7mz@?b38W7,[BRP");
      assertEquals(0, int0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[2];
      Soundex soundex0 = new Soundex(charArray0);
      assertEquals(4, soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      String string0 = soundex0.encode("\"[XHTqd5K8O`");
      assertEquals("X323", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      int int0 = soundex0.getMaxLength();
      assertEquals(4, int0);
  }
}
