/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 03:02:55 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultParser_ESTest extends DefaultParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      defaultParser0.handleConcatenatedOptions("");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      Options options1 = options0.addRequiredOption("oMvMt5rY6n", "oMvMt5rY6n", true, "oMvMt5rY6n");
      options1.addOption("8r", "--=", true, "8rI");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=";
//      try { 
        defaultParser0.parse(options0, stringArray0, true);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: 'oMvMt5rY6n', '--=')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      Options options1 = options0.addRequiredOption("oMvMt5rY6n", "oMvMt5rY6n", true, "oMvMt5rY6n");
      options1.addOption("8r", "--=", true, "8rI");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=";
      Properties properties0 = new Properties();
//      try { 
        defaultParser0.parse(options1, stringArray0, properties0, false);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: 'oMvMt5rY6n', '--=')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Properties properties0 = new Properties();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-=BHq=gMV:a.|-n";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0, true);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "ddL";
      Properties properties0 = new Properties();
      OptionGroup optionGroup0 = new OptionGroup();
      properties0.put(defaultParser0, optionGroup0);
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0, true);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.cli.DefaultParser cannot be cast to java.lang.String
//         //
//         verifyException("java.util.Properties", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      Options options1 = options0.addRequiredOption("oMvMt5rY6n", "oMvMt5rY6n", true, "oMvMt5rY6n");
      options1.addOption("8r", "--=", true, "8rI");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=";
      Properties properties0 = new Properties();
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: 'oMvMt5rY6n', '--=')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Properties properties0 = new Properties();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-=BHq=gMV:a.|-n";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[6];
      Properties properties0 = new Properties();
      // Undeclared exception!
//      try { 
        defaultParser0.parse((Options) null, stringArray0, properties0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.apache.commons.cli.Option$1";
      stringArray0[1] = "true";
      stringArray0[2] = "";
      stringArray0[3] = "sv";
      stringArray0[4] = "c;uoV@l`D%wAC/";
      stringArray0[5] = "N0?";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, true);
      Properties properties0 = new Properties();
      OptionGroup optionGroup0 = new OptionGroup();
      properties0.put(commandLine0, optionGroup0);
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.apache.commons.cli.CommandLine cannot be cast to java.lang.String
//         //
//         verifyException("java.util.Properties", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "`\"Dp=O";
      stringArray0[1] = "R!^W{LqfC+";
      stringArray0[2] = "-=R";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*Z^+^PaO";
      stringArray0[1] = "/%O:U~)=)8b>Mcer";
      stringArray0[2] = "=h<2=7:J";
      defaultParser0.parse(options0, stringArray0);
//      try { 
        defaultParser0.handleConcatenatedOptions("--=h<2=7:J");
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: --=h<2=7:J
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      // Undeclared exception!
//      try { 
        defaultParser0.handleConcatenatedOptions("org.apache.commons.cli.Options");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Properties properties0 = new Properties();
      CommandLine commandLine0 = defaultParser0.parse(options0, (String[]) null, properties0, false);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-o9GvMt5QY6n";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Options options0 = new Options();
      options0.addRequiredOption("o", "ClJM", false, "o");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-o9GvMtQY6n";
      DefaultParser defaultParser0 = new DefaultParser();
      defaultParser0.parse(options0, stringArray0, true);
      defaultParser0.handleConcatenatedOptions("-o9GvMtQY6n");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("", "", true, "");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=";
      DefaultParser defaultParser0 = new DefaultParser();
      defaultParser0.parse(options1, stringArray0);
      defaultParser0.handleConcatenatedOptions("--");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("true", true, "--=");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      optionGroup1.setRequired(true);
      Options options1 = options0.addOptionGroup(optionGroup1);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-true";
      Properties properties0 = new Properties();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0, properties0, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("true", true, "--=");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-true";
      Properties properties0 = new Properties();
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0, properties0, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "- -=m:dCmFqPV$^F";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-=m:LC31F";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, true);
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Options options0 = new Options();
      options0.addRequiredOption("1B", "oMvMt5rY6n", false, "Gtfz`UG&&YwS6");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[12];
      stringArray0[0] = "-oMvMt5rY6n";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-d=";
      Properties properties0 = new Properties();
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, properties0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("o", "o", false, "o");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "o";
      stringArray0[1] = "o";
      stringArray0[2] = "o";
      stringArray0[3] = "o";
      stringArray0[4] = "-o";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options0, stringArray0, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "o";
      stringArray0[1] = "o";
      stringArray0[2] = "o";
      stringArray0[3] = "o";
      stringArray0[4] = "-o";
//      try { 
        defaultParser0.parse(options0, stringArray0, false);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: -o
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("oqGvMt5QY6n", "oqGvMt5QY6n", false, "oqGvMt5QY6n");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "oqGvMt5QY6n";
      stringArray0[1] = "--=";
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: --=
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Options options0 = new Options();
      options0.addRequiredOption("oMvMt5rY6n", "oMvMt5rY6n", true, "oMvMt5rY6n");
      DefaultParser defaultParser0 = new DefaultParser();
      Options options1 = options0.addOption("8r", "--=", true, "8rI");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=";
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Ambiguous option: '--'  (could be: 'oMvMt5rY6n', '--=')
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "--EK@";
//      try { 
        defaultParser0.parse(options0, stringArray0, (Properties) null);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Unrecognized option: --EK@
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("oMvMt5rY6n", "oMvMt5rY6n", true, "oMvMt5rY6n");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "oMvMt5rY6n";
      stringArray0[1] = "oMvMt5rY6n";
      stringArray0[2] = "--oMvMt5rY6n";
      stringArray0[3] = "oMvMt5rY6n";
      stringArray0[4] = "--oMvMt5rY6n";
      stringArray0[5] = "--R-=m:LC1FV8F";
      // Undeclared exception!
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Options options0 = new Options();
      options0.addRequiredOption("oMvMt5rY6n", "oMvMt5rY6n", true, "?r1e");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      stringArray0[2] = "-";
      stringArray0[3] = "--oMvMt5rY6n";
      stringArray0[4] = "-";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Options options0 = new Options();
      options0.addRequiredOption("oMvMt5rY6n", "oMvMt5rY6n", true, "true");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "oMvMt5rY6n";
      stringArray0[1] = "oMvMt5rY6n";
      stringArray0[2] = "--oMvMt5rY6n";
      stringArray0[3] = "--oMvMt5rY6n";
//      try { 
        defaultParser0.parse(options0, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Missing argument for option: oMvMt5rY6n
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "1/[35;5)a~1`hO0";
      stringArray0[1] = "6'tgj~rRx{.G:tnB~#";
      stringArray0[2] = "6'tgj~rRx{.G:tnB~#";
      stringArray0[3] = "1/[35;5)a~1`hO0";
      stringArray0[4] = "--";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, false);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Options options0 = new Options();
      options0.addRequiredOption("", "", true, "");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=";
      DefaultParser defaultParser0 = new DefaultParser();
      defaultParser0.parse(options0, stringArray0);
      defaultParser0.handleConcatenatedOptions("--- =Mm:LCmFqLV8^F");
      defaultParser0.handleConcatenatedOptions("--- =Mm:LCmFqLV8^F");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("oMvMt5rY6n", "oMvMt5rY6n", true, "oMvMt5rY6n");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Va![T)eis}u9LK4=g<";
//      try { 
        defaultParser0.parse(options1, stringArray0);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Missing required option: oMvMt5rY6n
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Properties properties0 = new Properties();
      properties0.setProperty("klKUhVATGkTW{=J;w", "klKUhVATGkTW{=J;w");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "--klKUhVATGkTW{=J;w";
//      try { 
        defaultParser0.parse(options0, stringArray0, properties0, true);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Default option wasn't defined
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Options options0 = new Options();
      Properties properties0 = new Properties();
      DefaultParser defaultParser0 = new DefaultParser();
      CommandLine commandLine0 = defaultParser0.parse(options0, (String[]) null, properties0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      options0.addOption("true", true, "-true");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-true";
      stringArray0[1] = "-true";
//      try { 
        defaultParser0.parse(options0, stringArray0, (Properties) null, false);
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Missing argument for option: true
//         //
//         verifyException("org.apache.commons.cli.DefaultParser", e);
//      }
  }
}
