/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 14:01:29 GMT 2021
 */

package org.mockito.internal.invocation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import java.math.BigDecimal;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hamcrest.Matcher;
import org.hamcrest.collection.IsIn;
import org.hamcrest.core.StringStartsWith;
import org.hamcrest.number.BigDecimalCloseTo;
import org.hamcrest.text.IsEmptyString;
import org.junit.runner.RunWith;
import org.mockito.Answers;
import org.mockito.internal.creation.util.MockitoMethodProxy;
import org.mockito.internal.invocation.InvocationImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.invocation.MockitoMethod;
import org.mockito.internal.invocation.realmethod.CleanTraceRealMethod;
import org.mockito.internal.invocation.realmethod.DefaultRealMethod;
import org.mockito.internal.matchers.LocalizedMatcher;
import org.mockito.internal.stubbing.StubbedInvocationMatcher;
import org.mockito.invocation.Invocation;
import org.mockito.invocation.Location;
import org.mockito.stubbing.Answer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvocationMatcher_ESTest extends InvocationMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      CleanTraceRealMethod cleanTraceRealMethod0 = new CleanTraceRealMethod((MockitoMethodProxy) null);
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, (Object[]) null, 0, cleanTraceRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Location) null).when(invocation0).getLocation();
      doReturn(objectArray0).when(invocation0).getArguments();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocation0);
      Location location0 = invocationMatcher0.getLocation();
      assertNull(location0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      BigDecimal bigDecimal0 = BigDecimal.valueOf(1528L, (-10));
      BigDecimalCloseTo bigDecimalCloseTo0 = new BigDecimalCloseTo(bigDecimal0, bigDecimal0);
      Object[] objectArray0 = new Object[9];
      CleanTraceRealMethod cleanTraceRealMethod0 = new CleanTraceRealMethod((MockitoMethodProxy) null);
      InvocationImpl invocationImpl0 = new InvocationImpl(bigDecimalCloseTo0, mockitoMethod0, objectArray0, (-10), cleanTraceRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Answers answers0 = Answers.CALLS_REAL_METHODS;
      StubbedInvocationMatcher stubbedInvocationMatcher0 = new StubbedInvocationMatcher(invocationMatcher0, answers0);
      invocationImpl0.ignoreForVerification();
      Invocation invocation0 = stubbedInvocationMatcher0.getInvocation();
      assertTrue(invocation0.isVerified());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      CleanTraceRealMethod cleanTraceRealMethod0 = new CleanTraceRealMethod((MockitoMethodProxy) null);
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, (Object[]) null, 0, cleanTraceRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Answer<InvocationImpl> answer0 = (Answer<InvocationImpl>) mock(Answer.class, new ViolatedAssumptionAnswer());
      StubbedInvocationMatcher stubbedInvocationMatcher0 = new StubbedInvocationMatcher(invocationMatcher0, answer0);
      Invocation invocation0 = stubbedInvocationMatcher0.getInvocation();
      assertEquals(0, invocation0.getSequenceNumber());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      StringStartsWith[] stringStartsWithArray0 = new StringStartsWith[9];
      StringStartsWith stringStartsWith0 = new StringStartsWith("starting with");
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      CleanTraceRealMethod cleanTraceRealMethod0 = new CleanTraceRealMethod(mockitoMethodProxy0);
      InvocationImpl invocationImpl0 = new InvocationImpl(stringStartsWith0, mockitoMethod0, stringStartsWithArray0, 196638, cleanTraceRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Answer<IsEmptyString> answer0 = (Answer<IsEmptyString>) mock(Answer.class, new ViolatedAssumptionAnswer());
      StubbedInvocationMatcher stubbedInvocationMatcher0 = new StubbedInvocationMatcher(invocationMatcher0, answer0);
      Invocation invocation0 = stubbedInvocationMatcher0.getInvocation();
      assertSame(invocation0, invocationImpl0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocation0).getArguments();
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher(invocation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null, (Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      StringStartsWith[] stringStartsWithArray0 = new StringStartsWith[9];
      StringStartsWith stringStartsWith0 = new StringStartsWith("starting with");
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      CleanTraceRealMethod cleanTraceRealMethod0 = new CleanTraceRealMethod(mockitoMethodProxy0);
      InvocationImpl invocationImpl0 = new InvocationImpl(stringStartsWith0, mockitoMethod0, stringStartsWithArray0, 196638, cleanTraceRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
//      try { 
        invocationMatcher0.hasSameMethod(invocationImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
//      try { 
        InvocationMatcher.createFrom((List<Invocation>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[13];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocation0).getArguments();
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher(invocation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher((Invocation) null, (List<Matcher>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher((Invocation) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocation0).getArguments();
      InvocationMatcher invocationMatcher0 = null;
//      try {
        invocationMatcher0 = new InvocationMatcher(invocation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Stack<Invocation> stack0 = new Stack<Invocation>();
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod(mockitoMethodProxy0);
      InvocationImpl invocationImpl0 = new InvocationImpl(defaultRealMethod0, mockitoMethod0, (Object[]) null, (-3), defaultRealMethod0);
      stack0.add((Invocation) invocationImpl0);
      List<InvocationMatcher> list0 = InvocationMatcher.createFrom(stack0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Stack<Invocation> stack0 = new Stack<Invocation>();
      List<InvocationMatcher> list0 = InvocationMatcher.createFrom(stack0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null, (Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object object0 = new Object();
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod(mockitoMethodProxy0);
      CleanTraceRealMethod cleanTraceRealMethod0 = new CleanTraceRealMethod(defaultRealMethod0);
      Object[] objectArray0 = new Object[4];
      InvocationImpl invocationImpl0 = new InvocationImpl(object0, mockitoMethod0, objectArray0, (-3), cleanTraceRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
//      try { 
        invocationMatcher0.matches(invocationImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      CleanTraceRealMethod cleanTraceRealMethod0 = new CleanTraceRealMethod(mockitoMethodProxy0);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      InvocationImpl invocationImpl0 = new InvocationImpl(cleanTraceRealMethod0, mockitoMethod0, objectArray0, 635, cleanTraceRealMethod0);
      MockitoMethod mockitoMethod1 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod1).isVarArgs();
      InvocationImpl invocationImpl1 = new InvocationImpl(invocationImpl0, mockitoMethod1, objectArray0, 57, cleanTraceRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl1);
      boolean boolean0 = invocationMatcher0.matches(invocationImpl0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      StringStartsWith[] stringStartsWithArray0 = new StringStartsWith[9];
      StringStartsWith stringStartsWith0 = new StringStartsWith("starting with");
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      CleanTraceRealMethod cleanTraceRealMethod0 = new CleanTraceRealMethod(mockitoMethodProxy0);
      InvocationImpl invocationImpl0 = new InvocationImpl(stringStartsWith0, mockitoMethod0, stringStartsWithArray0, 196638, cleanTraceRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Location location0 = invocationMatcher0.getLocation();
      assertNotNull(location0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[13];
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocation0).getArguments();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocation0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      invocationMatcher1.getInvocation();
      assertFalse(list0.isEmpty());
      assertEquals(13, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      StringStartsWith[] stringStartsWithArray0 = new StringStartsWith[9];
      Matcher<StringStartsWith> matcher0 = IsIn.isOneOf(stringStartsWithArray0);
      LocalizedMatcher localizedMatcher0 = new LocalizedMatcher(matcher0);
      CleanTraceRealMethod cleanTraceRealMethod0 = new CleanTraceRealMethod(mockitoMethodProxy0);
      InvocationImpl invocationImpl0 = new InvocationImpl(localizedMatcher0, mockitoMethod0, (Object[]) null, 355, cleanTraceRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
//      try { 
        invocationMatcher0.hasSimilarMethod(invocationImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
//      }
  }
}
