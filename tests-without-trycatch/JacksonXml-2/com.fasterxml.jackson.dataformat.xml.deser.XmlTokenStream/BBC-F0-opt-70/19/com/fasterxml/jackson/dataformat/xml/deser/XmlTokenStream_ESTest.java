/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 10:43:58 GMT 2021
 */

package com.fasterxml.jackson.dataformat.xml.deser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.api.ReaderConfig;
import com.ctc.wstx.dom.WstxDOMWrappingReader;
import com.ctc.wstx.io.BranchingReaderSource;
import com.ctc.wstx.io.ReaderBootstrapper;
import com.ctc.wstx.io.SystemId;
import com.ctc.wstx.sr.ValidatingStreamReader;
import com.ctc.wstx.stax.WstxInputFactory;
import com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper;
import com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream;
import java.io.IOException;
import java.io.StringReader;
import java.util.NoSuchElementException;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.stream.StreamFilter;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.util.StreamReaderDelegate;
import javax.xml.transform.dom.DOMSource;
import org.codehaus.stax2.ri.Stax2FilteredStreamReader;
import org.codehaus.stax2.util.StreamReader2Delegate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlTokenStream_ESTest extends XmlTokenStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "4");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0._nextLocalName = "Empty value (all white space) not a valid lexical representation of ";
      String string0 = xmlTokenStream0.toString();
      assertEquals("(Token stream: state=1 attr#=0 nextAttr#=0 name= text=null repeat?=0 wrapper=[null] repeatElement=0 nextName=Empty value (all white space) not a valid lexical representation of )", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("", "", "");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "");
      xmlTokenStream0.next();
      xmlTokenStream0.next();
      xmlTokenStream0.next();
      xmlTokenStream0.toString();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS("Can not access per-stream-writer properties via factory", "Can not access per-stream-writer properties via factory", "Can not access per-stream-writer properties via factory");
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      String string0 = xmlTokenStream0.toString();
      assertEquals("(Token stream: state=1 attr#=1 nextAttr#=0 name=&u1l* text=null repeat?=0 wrapper=[null] repeatElement=0 nextName=null)", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      String string0 = xmlTokenStream0.toString();
      assertEquals("(Token stream: state=2 attr#=0 nextAttr#=0 name=&u1l* text=null repeat?=0 wrapper=[null] repeatElement=0 nextName=null)", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "AjD,v{>S(#/ O<^i");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "AjD,v{>S(#/ O<^i");
      xmlTokenStream0._namespaceURI = "AjD,v{>S(#/ O<^i";
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Expected END_ELEMENT, got event of type 1
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("},L%nf(]cGQNxh");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "},L%nf(]cGQNxh");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Expected END_ELEMENT, got event of type 1
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQINMbZv1A<#t9A[");
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      ElementWrapper elementWrapper0 = ElementWrapper.matchingWrapper((ElementWrapper) null, ",uQINMbZv1A<#t9A[", ",uQINMbZv1A<#t9A[");
      xmlTokenStream0._namespaceURI = ",uQINMbZv1A<#t9A[";
      xmlTokenStream0._currentWrapper = elementWrapper0;
      int int0 = xmlTokenStream0.next();
      assertEquals(",uQINMbZv1A<#t9A[", xmlTokenStream0.getNamespaceURI());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQINMbZv1A<#t9A[");
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      ElementWrapper elementWrapper0 = ElementWrapper.matchingWrapper((ElementWrapper) null, ",uQINMbZv1A<#t9A[", ",uQINMbZv1A<#t9A[");
      xmlTokenStream0._currentWrapper = elementWrapper0;
      xmlTokenStream0._localName = ",uQINMbZv1A<#t9A[";
      int int0 = xmlTokenStream0.next();
      assertEquals(",uQINMbZv1A<#t9A[", xmlTokenStream0.getNamespaceURI());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(",uQINMbZv1A<#t9A[");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQINMbZv1A<#t9A[");
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      ElementWrapper elementWrapper0 = ElementWrapper.matchingWrapper((ElementWrapper) null, ",uQINMbZv1A<#t9A[", ",uQINMbZv1A<#t9A[");
      xmlTokenStream0._currentWrapper = elementWrapper0;
      int int0 = xmlTokenStream0.next();
      assertEquals(",uQINMbZv1A<#t9A[", xmlTokenStream0.getNamespaceURI());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0._nextLocalName = "?vuis";
      int int0 = xmlTokenStream0.next();
      assertEquals(2, xmlTokenStream0.getCurrentToken());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "read(buf,");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "^K^xmGo?WY;[B.'3");
      xmlTokenStream0._nextNamespaceURI = "read(buf,";
      int int0 = xmlTokenStream0.next();
      assertEquals(2, xmlTokenStream0.getCurrentToken());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("", "", "");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttribute("'f~3W#", "'f~3W#");
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "");
      xmlTokenStream0.next();
      xmlTokenStream0.next();
      int int0 = xmlTokenStream0.next();
      assertFalse(xmlTokenStream0.hasAttributes());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQ:,9bZv1<pt9A[");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS(",uQ:,9bZv1<pt9A[", ",uQ:,9bZv1<pt9A[", ",uQ:,9bZv1<pt9A[");
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0.next();
      xmlTokenStream0._nextAttributeIndex = 524288;
      xmlTokenStream0.next();
      int int0 = xmlTokenStream0.next();
      assertTrue(wstxDOMWrappingReader0.hasName());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS("&u1l*", "&u1l*", "&u1l*");
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "&u1l*");
      xmlTokenStream0._nextLocalName = ",Ma 9LE4Lsfrq{<ro%#";
      xmlTokenStream0.next();
      String string0 = xmlTokenStream0.convertToString();
      assertEquals(1, wstxDOMWrappingReader0.getDepth());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      iIOMetadataNode0.setAttributeNS("OB9D-(54F^m=Ndt<", "OB9D-(54F^m=Ndt<", "OB9D-(54F^m=Ndt<");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0._nextNamespaceURI = "OB9D-(54F^m=Ndt<";
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      assertEquals("", xmlTokenStream0.getLocalName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      assertEquals(6, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
      xmlTokenStream0._currentState = 1000;
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipAttributes();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but 1000
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0.repeatStartElement();
      assertEquals(2, XmlTokenStream.XML_END_ELEMENT);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      iIOMetadataNode0.setAttributeNS("OB9D-(54F^m=Ndt<", "OB9D-(54F^m=Ndt<", "OB9D-(54F^m=Ndt<");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0.next();
      // Undeclared exception!
//      try { 
        xmlTokenStream0.repeatStartElement();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Current state not XML_START_ELEMENT (1) but 3
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQI,MbZv1<#t9A[");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      assertEquals(1, xmlTokenStream0.getCurrentToken());
      
      xmlTokenStream0.next();
      int int0 = xmlTokenStream0.getCurrentToken();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0._repeatElement = (-1197);
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Unrecognized type to repeat: -1197
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS("`fH}V|KZ53K6mn#", "Can not access per-stream-writer properties via factory", "Can not access per-stream-writer properties via factory");
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.getText();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS("&u1l*", "&u1l*", "&u1l*");
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "&u1l*");
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      xmlTokenStream0.getText();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQ:,9bZv1<#t9A[");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
      xmlTokenStream0._repeatElement = 3;
      xmlTokenStream0.next();
      xmlTokenStream0.getNamespaceURI();
      assertEquals(1, wstxDOMWrappingReader0.getEventType());
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "read(buf,");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "^K^xmGo?WY;[B.'3");
      xmlTokenStream0._namespaceURI = "RvQC)W`Jo|T";
      String string0 = xmlTokenStream0.getNamespaceURI();
      assertEquals("RvQC)W`Jo|T", xmlTokenStream0.getNamespaceURI());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQ:,9bZv1<#t9A[");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
      xmlTokenStream0._repeatElement = 3;
      xmlTokenStream0.next();
      xmlTokenStream0.getLocalName();
      assertEquals(1, wstxDOMWrappingReader0.getEventType());
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
      String string0 = xmlTokenStream0.getLocalName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      XmlTokenStream xmlTokenStream1 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream1.next();
      xmlTokenStream1.next();
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: NoSuchElementException");
      
//      } catch(NoSuchElementException e) {
//         //
//         // Can not call next() after receiving END_DOCUMENT
//         //
//         verifyException("org.codehaus.stax2.ri.dom.DOMWrappingReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0._handleRepeatElement();
      xmlTokenStream0._nextAttributeIndex = (-1196);
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal attribute index -1196; element <&u1l*> has no attributes
//         //
//         verifyException("org.codehaus.stax2.ri.dom.DOMWrappingReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      XmlTokenStream xmlTokenStream1 = new XmlTokenStream(wstxDOMWrappingReader0, "com.ctc.wstx.normalizeLFs");
      xmlTokenStream0.next();
      xmlTokenStream0.next();
      // Undeclared exception!
//      try { 
        xmlTokenStream1.next();
//        fail("Expecting exception: NoSuchElementException");
      
//      } catch(NoSuchElementException e) {
//         //
//         // Can not call next() after receiving END_DOCUMENT
//         //
//         verifyException("org.codehaus.stax2.ri.dom.DOMWrappingReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      Stax2FilteredStreamReader stax2FilteredStreamReader0 = new Stax2FilteredStreamReader(wstxDOMWrappingReader0, (StreamFilter) null);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(stax2FilteredStreamReader0, object0);
      // Undeclared exception!
//      try { 
        xmlTokenStream0.next();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.codehaus.stax2.ri.Stax2FilteredStreamReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, dOMSource0);
      xmlTokenStream0._attributeCount = 6;
      // Undeclared exception!
//      try { 
        xmlTokenStream0.next();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal attribute index 0; element <null> has no attributes
//         //
//         verifyException("org.codehaus.stax2.ri.dom.DOMWrappingReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQI,MbZv1<#t9A[");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      // Undeclared exception!
//      try { 
        xmlTokenStream0._handleRepeatElement();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Unrecognized type to repeat: 0
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      streamReaderDelegate0.setParent(streamReaderDelegate0);
      XmlTokenStream xmlTokenStream0 = null;
//      try {
        xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, streamReaderDelegate0);
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = null;
//      try {
        xmlTokenStream0 = new XmlTokenStream((XMLStreamReader) null, object0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      XmlTokenStream xmlTokenStream1 = new XmlTokenStream(wstxDOMWrappingReader0, "+P@{fVh+1:pOn+SRq");
      xmlTokenStream0.next();
      xmlTokenStream1.next();
      // Undeclared exception!
//      try { 
        xmlTokenStream1.next();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Expected to find a tag, instead reached end of input
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS("&u1l*", "&u1l*", "&u1l*");
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "&u1l*");
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      int int0 = xmlTokenStream0.next();
      assertFalse(xmlTokenStream0.hasAttributes());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0._handleRepeatElement();
      xmlTokenStream0.skipEndElement();
      assertEquals(5, XmlTokenStream.XML_TEXT);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQI,MbZv1<#t9A[");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      ElementWrapper elementWrapper0 = ElementWrapper.matchingWrapper((ElementWrapper) null, ",uQI,MbZv1<#t9A[", ",uQI,MbZv1<#t9A[");
      xmlTokenStream0._currentWrapper = elementWrapper0;
      xmlTokenStream0.next();
      int int0 = xmlTokenStream0.next();
      assertTrue(wstxDOMWrappingReader0.hasName());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQI,MbZv1<#t9A[");
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0.next();
      int int0 = xmlTokenStream0.next();
      assertEquals(1, wstxDOMWrappingReader0.getDepth());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQINMbZv1A<#t9A[");
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      ElementWrapper elementWrapper0 = ElementWrapper.matchingWrapper((ElementWrapper) null, ",uQINMbZv1A<#t9A[", ",uQINMbZv1A<#t9A[");
      xmlTokenStream0._currentWrapper = elementWrapper0;
      xmlTokenStream0.next();
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Expected END_ELEMENT, got event of type 1
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
      xmlTokenStream0._currentState = 524288;
      int int0 = xmlTokenStream0.next();
      assertEquals(1, wstxDOMWrappingReader0.getDepth());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
      xmlTokenStream0._currentState = 524288;
      int int0 = xmlTokenStream0.next();
      assertFalse(wstxDOMWrappingReader0.isStartElement());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.next();
      int int0 = xmlTokenStream0.next();
      assertEquals(8, wstxDOMWrappingReader0.getEventType());
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQI,MbZv1<#t9A[");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS(",uQI,MbZv1<#t9A[", ",uQI,MbZv1<#t9A[", ",uQI,MbZv1<#t9A[");
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      ElementWrapper elementWrapper0 = ElementWrapper.matchingWrapper((ElementWrapper) null, ",uQI,MbZv1<#t9A[", "");
      xmlTokenStream0._currentWrapper = elementWrapper0;
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      assertEquals(5, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS("&u1l*", "&u1l*", "&u1l*");
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "&u1l*");
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      xmlTokenStream0.convertToString();
      assertEquals(1, wstxDOMWrappingReader0.getEventType());
      assertTrue(wstxDOMWrappingReader0.isStartElement());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS("&u1l*", "&u1l*", "&u1l*");
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "&u1l*");
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      xmlTokenStream0.skipAttributes();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "&u1l*");
      xmlTokenStream0.next();
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipAttributes();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but 2
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS("`fH}V|KZ53K6mn#", "Can not access per-stream-writer properties via factory", "Can not access per-stream-writer properties via factory");
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.skipAttributes();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "&u1l*");
      xmlTokenStream0.skipAttributes();
      assertNull(xmlTokenStream0.getText());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS("`fH}V|KZ53K6mn#", "Can not access per-stream-writer properties via factory", "Can not access per-stream-writer properties via factory");
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      boolean boolean0 = xmlTokenStream0.hasAttributes();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
      boolean boolean0 = xmlTokenStream0.hasAttributes();
      assertFalse(boolean0);
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      boolean boolean0 = xmlTokenStream0.hasAttributes();
      assertEquals(2, wstxDOMWrappingReader0.getEventType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      iIOMetadataNode0.setAttributeNS("`fH}V|KZ53K6mn#", "Can not access per-stream-writer properties via factory", "Can not access per-stream-writer properties via factory");
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Expected END_ELEMENT, got event of type 3
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0._repeatElement = 7;
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Unrecognized type to repeat: 7
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0.next();
      // Undeclared exception!
//      try { 
        xmlTokenStream0.repeatStartElement();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Current state not XML_START_ELEMENT (1) but 2
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      SystemId systemId0 = SystemId.construct("(");
      StringReader stringReader0 = new StringReader("(");
      BranchingReaderSource branchingReaderSource0 = new BranchingReaderSource(readerConfig0, "/,Tb>r", systemId0, stringReader0, false);
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      ReaderBootstrapper readerBootstrapper0 = ReaderBootstrapper.getInstance("V.O%~z!Yk,P9", systemId0, stringReader0, (String) null);
      ValidatingStreamReader validatingStreamReader0 = ValidatingStreamReader.createValidatingStreamReader(branchingReaderSource0, wstxInputFactory0, readerConfig0, readerBootstrapper0, false);
      StreamReader2Delegate streamReader2Delegate0 = new StreamReader2Delegate(validatingStreamReader0);
      XmlTokenStream xmlTokenStream0 = null;
//      try {
        xmlTokenStream0 = new XmlTokenStream(streamReader2Delegate0, streamReader2Delegate0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid XMLStreamReader passed: should be pointing to START_ELEMENT (1), instead got 7
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      xmlTokenStream0.getTokenLocation();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      int int0 = xmlTokenStream0.getCurrentToken();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "&u1l*");
      String string0 = xmlTokenStream0.getText();
      assertNull(string0);
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "&u1l*");
      String string0 = xmlTokenStream0.getLocalName();
      assertEquals("&u1l*", string0);
      assertEquals(1, xmlTokenStream0.getCurrentToken());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      xmlTokenStream0.getCurrentLocation();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      xmlTokenStream0.getXmlReader();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      xmlTokenStream0.close();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&u1l*");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "&u1l*");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.closeCompletely();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, ",uQ:,9bZv1<#t9A[");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
      String string0 = xmlTokenStream0.getNamespaceURI();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
      assertNotNull(string0);
  }
}
