/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 15:49:19 GMT 2021
 */

package com.fasterxml.jackson.dataformat.xml.deser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.api.ReaderConfig;
import com.ctc.wstx.io.ReaderBootstrapper;
import com.ctc.wstx.io.SystemId;
import com.ctc.wstx.stax.WstxInputFactory;
import com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.util.StreamReaderDelegate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlTokenStream_ESTest extends XmlTokenStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      streamReaderDelegate0.setParent(streamReaderDelegate0);
      XmlTokenStream xmlTokenStream0 = null;
//      try {
        xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, streamReaderDelegate0);
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      URL uRL0 = MockURL.getHttpExample();
      SystemId systemId0 = SystemId.construct(uRL0);
      StringReader stringReader0 = new StringReader(" text=");
      ReaderBootstrapper readerBootstrapper0 = ReaderBootstrapper.getInstance("org.codehaus.stax2.propDtdOverride", systemId0, stringReader0, "At");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      Reader reader0 = readerBootstrapper0.bootstrapInput(readerConfig0, true, 524288);
      XMLStreamReader xMLStreamReader0 = wstxInputFactory0.createXMLStreamReader("'g{Krf8G", reader0);
      XmlTokenStream xmlTokenStream0 = null;
//      try {
        xmlTokenStream0 = new XmlTokenStream(xMLStreamReader0, "'g{Krf8G");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid XMLStreamReader passed: should be pointing to START_ELEMENT (1), instead got 7
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }
}
