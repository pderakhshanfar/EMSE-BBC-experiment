/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 10:43:16 GMT 2021
 */

package com.fasterxml.jackson.dataformat.xml.deser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.api.ReaderConfig;
import com.ctc.wstx.dom.WstxDOMWrappingReader;
import com.ctc.wstx.io.SystemId;
import com.ctc.wstx.sax.WstxSAXParser;
import com.ctc.wstx.stax.WstxInputFactory;
import com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.net.URL;
import java.util.Enumeration;
import java.util.NoSuchElementException;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.stream.StreamFilter;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.util.StreamReaderDelegate;
import javax.xml.transform.dom.DOMSource;
import org.codehaus.stax2.ri.Stax2FilteredStreamReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlTokenStream_ESTest extends XmlTokenStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "PY");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
      xmlTokenStream0._nextLocalName = "PY";
      String string0 = xmlTokenStream0.toString();
      assertEquals("(Token stream: state=1 attr#=0 nextAttr#=0 name= text=null repeat?=0 wrapper=[null] repeatElement=0 nextName=PY)", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      iIOMetadataNode0.setAttributeNS("", "Ve}zGD g1A", "#gKn[d");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, dataInputStream0);
      xmlTokenStream0.next();
      xmlTokenStream0.toString();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0.repeatStartElement();
      String string0 = xmlTokenStream0.toString();
      assertEquals("(Token stream: state=1 attr#=0 nextAttr#=0 name= text=null repeat?=1 wrapper=[Wrapper: ROOT, matching: ] repeatElement=1 nextName=null)", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, dataInputStream0);
      xmlTokenStream0.next();
      String string0 = xmlTokenStream0.toString();
      assertEquals("(Token stream: state=2 attr#=0 nextAttr#=0 name= text=null repeat?=0 wrapper=[null] repeatElement=0 nextName=null)", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "Ov");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "Ov");
      xmlTokenStream0._nextNamespaceURI = "Ov";
      xmlTokenStream0._repeatElement = 3;
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Expected END_ELEMENT, got event of type 1
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0._repeatElement = 23;
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Unrecognized type to repeat: 23
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("~)J/``'lgbFTy2H'");
      iIOMetadataNode1.appendChild(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode1);
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      PipedInputStream pipedInputStream0 = new PipedInputStream(11);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, pipedInputStream0);
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0.next();
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Expected END_ELEMENT, got event of type 1
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("Internal error: skipping validatable text");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      URL uRL0 = MockURL.getFileExample();
      SystemId systemId0 = SystemId.construct(uRL0);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, systemId0);
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0.next();
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Expected END_ELEMENT, got event of type 1
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "PY");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0._textValue = "PY";
      int int0 = xmlTokenStream0.next();
      assertEquals(2, xmlTokenStream0.getCurrentToken());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "PY");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
      xmlTokenStream0._nextLocalName = "PY";
      xmlTokenStream0.skipEndElement();
      assertEquals(6, XmlTokenStream.XML_END);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      WstxSAXParser wstxSAXParser0 = new WstxSAXParser(wstxInputFactory0, true);
      ReaderConfig readerConfig0 = wstxSAXParser0.getStaxConfig();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0._nextNamespaceURI = "";
      xmlTokenStream0.skipEndElement();
      assertNull(xmlTokenStream0.getText());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "$");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
      xmlTokenStream0._nextAttributeIndex = (-2680);
      xmlTokenStream0._currentState = 4;
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal attribute index -2679; element <null> has no attributes
//         //
//         verifyException("org.codehaus.stax2.ri.dom.DOMWrappingReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "PY");
      iIOMetadataNode0.setAttributeNS("PY", "PY", "PY");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0.next();
      xmlTokenStream0._repeatElement = (-2048);
      xmlTokenStream0.convertToString();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.%AhfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      xmlTokenStream0._currentState = 1000;
      xmlTokenStream0.convertToString();
      assertEquals(1000, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "H}@/%>wK");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      xmlTokenStream0.skipEndElement();
      xmlTokenStream0.next();
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipAttributes();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but 6
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "HT@/.AfQK");
      xmlTokenStream0._namespaceURI = "HT@/.AfQK";
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0.repeatStartElement();
      assertEquals(6, XmlTokenStream.XML_END);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.%AhfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      xmlTokenStream0._currentState = 1000;
      // Undeclared exception!
//      try { 
        xmlTokenStream0.repeatStartElement();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Current state not XML_START_ELEMENT (1) but 1000
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      WstxSAXParser wstxSAXParser0 = new WstxSAXParser(wstxInputFactory0, true);
      ReaderConfig readerConfig0 = wstxSAXParser0.getStaxConfig();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      assertEquals(1, xmlTokenStream0.getCurrentToken());
      
      xmlTokenStream0.skipEndElement();
      int int0 = xmlTokenStream0.getCurrentToken();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0._textValue = " state=";
      String string0 = xmlTokenStream0.getText();
      assertNotNull(string0);
      assertEquals(" state=", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      iIOMetadataNode0.setAttributeNS("", "Ve}zGD g1A", "#gKn[d");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      xmlTokenStream0.getText();
      assertEquals("", xmlTokenStream0.getLocalName());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      WstxSAXParser wstxSAXParser0 = new WstxSAXParser(wstxInputFactory0, true);
      ReaderConfig readerConfig0 = wstxSAXParser0.getStaxConfig();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0._namespaceURI = null;
      String string0 = xmlTokenStream0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "HT@/.AfQK");
      xmlTokenStream0._namespaceURI = "HT@/.AfQK";
      String string0 = xmlTokenStream0.getNamespaceURI();
      assertEquals("HT@/.AfQK", xmlTokenStream0.getNamespaceURI());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      iIOMetadataNode0.setAttributeNS("et", "et", "et");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "et");
      xmlTokenStream0.next();
      String string0 = xmlTokenStream0.getLocalName();
      assertEquals(1, wstxDOMWrappingReader0.getEventType());
      assertEquals("et", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0.repeatStartElement();
      int int0 = xmlTokenStream0._handleRepeatElement();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "PY");
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      StreamFilter streamFilter0 = mock(StreamFilter.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(streamFilter0).accept(any(javax.xml.stream.XMLStreamReader.class));
      Stax2FilteredStreamReader stax2FilteredStreamReader0 = new Stax2FilteredStreamReader(wstxDOMWrappingReader0, streamFilter0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(stax2FilteredStreamReader0, sequenceInputStream0);
      // Undeclared exception!
      xmlTokenStream0.skipEndElement();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "Ov");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "Ov");
      XmlTokenStream xmlTokenStream1 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
      wstxDOMWrappingReader0.getElementAsBinary();
      xmlTokenStream0.skipEndElement();
      // Undeclared exception!
//      try { 
        xmlTokenStream1.skipEndElement();
//        fail("Expecting exception: NoSuchElementException");
      
//      } catch(NoSuchElementException e) {
//         //
//         // Can not call next() after receiving END_DOCUMENT
//         //
//         verifyException("org.codehaus.stax2.ri.dom.DOMWrappingReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Stax2FilteredStreamReader stax2FilteredStreamReader0 = new Stax2FilteredStreamReader(wstxDOMWrappingReader0, (StreamFilter) null);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(stax2FilteredStreamReader0, "");
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.codehaus.stax2.ri.Stax2FilteredStreamReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "Ov");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "Ov");
      xmlTokenStream0._repeatElement = (-21);
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Unrecognized type to repeat: -21
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "PY");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0._currentWrapper = null;
      // Undeclared exception!
//      try { 
        xmlTokenStream0.next();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      streamReaderDelegate0.setParent(streamReaderDelegate0);
      XmlTokenStream xmlTokenStream0 = null;
//      try {
        xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, streamReaderDelegate0);
//        fail("Expecting exception: StackOverflowError");
      
//      } catch(StackOverflowError e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XmlTokenStream xmlTokenStream0 = null;
//      try {
        xmlTokenStream0 = new XmlTokenStream((XMLStreamReader) null, (Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "PY");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "PY");
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0._repeatElement = 3;
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Expected END_ELEMENT, got event of type 1
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "");
      // Undeclared exception!
//      try { 
        xmlTokenStream0._handleRepeatElement();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Unrecognized type to repeat: 0
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.%AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      wstxDOMWrappingReader0.getElementAsBinary();
      xmlTokenStream0.skipEndElement();
      // Undeclared exception!
//      try { 
        xmlTokenStream0.next();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Expected to find a tag, instead reached end of input
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "$");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
      xmlTokenStream0._currentState = 5;
      xmlTokenStream0.skipEndElement();
      int int0 = xmlTokenStream0.next();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.%AhfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      xmlTokenStream0._currentState = 1000;
      xmlTokenStream0.skipEndElement();
      assertEquals(1, XmlTokenStream.XML_START_ELEMENT);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "$");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
      xmlTokenStream0._currentState = 5;
      xmlTokenStream0.skipEndElement();
      assertEquals(1, wstxDOMWrappingReader0.getEventType());
      assertTrue(wstxDOMWrappingReader0.isStartElement());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "$");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
      xmlTokenStream0._currentState = 4;
      xmlTokenStream0.skipEndElement();
      assertEquals(2, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      iIOMetadataNode0.setAttributeNS("", "Ve}zGD g1A", "#gKn[d");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, dataInputStream0);
      xmlTokenStream0.next();
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Expected END_ELEMENT, got event of type 4
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
      xmlTokenStream0._currentState = 6;
//      try { 
        xmlTokenStream0.skipEndElement();
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Expected END_ELEMENT, got event of type 6
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      iIOMetadataNode0.setAttributeNS("et", "et", "et");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "et");
      xmlTokenStream0.next();
      wstxDOMWrappingReader0.skipElement();
      xmlTokenStream0.convertToString();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      URL uRL0 = MockURL.getFileExample();
      SystemId systemId0 = SystemId.construct(uRL0);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, systemId0);
      xmlTokenStream0.convertToString();
      assertEquals(1, wstxDOMWrappingReader0.getEventType());
      assertFalse(wstxDOMWrappingReader0.isEndElement());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      iIOMetadataNode0.setAttributeNS("", "Ve}zGD g1A", "#gKn[d");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      xmlTokenStream0.skipAttributes();
      assertFalse(wstxDOMWrappingReader0.isStartElement());
      assertEquals(5, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      // Undeclared exception!
//      try { 
        xmlTokenStream0.skipAttributes();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but 2
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      iIOMetadataNode0.setAttributeNS("et", "et", "et");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "et");
      xmlTokenStream0.next();
      xmlTokenStream0.skipAttributes();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.skipAttributes();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      iIOMetadataNode0.setAttributeNS("", "Ve}zGD g1A", "#gKn[d");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, dataInputStream0);
      boolean boolean0 = xmlTokenStream0.hasAttributes();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, dataInputStream0);
      boolean boolean0 = xmlTokenStream0.hasAttributes();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      boolean boolean0 = xmlTokenStream0.hasAttributes();
      assertFalse(wstxDOMWrappingReader0.isStartElement());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "PY");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, iIOMetadataNode0);
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0.next();
      xmlTokenStream0.skipEndElement();
      assertEquals(1, XmlTokenStream.XML_START_ELEMENT);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      WstxSAXParser wstxSAXParser0 = new WstxSAXParser(wstxInputFactory0, true);
      ReaderConfig readerConfig0 = wstxSAXParser0.getStaxConfig();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = null;
//      try {
        xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid XMLStreamReader passed: should be pointing to START_ELEMENT (1), instead got 7
//         //
//         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
//      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0);
      xmlTokenStream0.getTokenLocation();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      WstxSAXParser wstxSAXParser0 = new WstxSAXParser(wstxInputFactory0, true);
      ReaderConfig readerConfig0 = wstxSAXParser0.getStaxConfig();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      int int0 = xmlTokenStream0.getCurrentToken();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      String string0 = xmlTokenStream0.getText();
      assertNull(string0);
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "et");
      String string0 = xmlTokenStream0.getLocalName();
      assertNotNull(string0);
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      WstxSAXParser wstxSAXParser0 = new WstxSAXParser(wstxInputFactory0, true);
      ReaderConfig readerConfig0 = wstxSAXParser0.getStaxConfig();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.getCurrentLocation();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.AfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, "HT@/.AfQK");
      xmlTokenStream0.getXmlReader();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.%AhfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      xmlTokenStream0.close();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "HT@/.%AhfQK");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, (Object) null);
      xmlTokenStream0.closeCompletely();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "");
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      WstxSAXParser wstxSAXParser0 = new WstxSAXParser(wstxInputFactory0, true);
      ReaderConfig readerConfig0 = wstxSAXParser0.getStaxConfig();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      wstxDOMWrappingReader0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      String string0 = xmlTokenStream0.getNamespaceURI();
      assertNotNull(string0);
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }
}
