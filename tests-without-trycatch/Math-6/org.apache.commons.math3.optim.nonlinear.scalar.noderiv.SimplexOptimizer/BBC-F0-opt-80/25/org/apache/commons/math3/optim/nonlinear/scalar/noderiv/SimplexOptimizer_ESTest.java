/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 16:18:42 GMT 2021
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.exception.MathUnsupportedOperationException;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.SimplePointChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimplexOptimizer_ESTest extends SimplexOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(0.0, (-1812.595));
      OptimizationData[] optimizationDataArray0 = new OptimizationData[3];
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(1);
      optimizationDataArray0[0] = (OptimizationData) simpleBounds0;
      double[] doubleArray0 = new double[5];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      // Undeclared exception!
//      try { 
        simplexOptimizer0.parseOptimizationData(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 1 != 5
//         //
//         verifyException("org.apache.commons.math3.optim.BaseMultivariateOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer((-3725.70743838), 440.33963014328435);
      // Undeclared exception!
//      try { 
        simplexOptimizer0.parseOptimizationData((OptimizationData[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.BaseOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-950.796), (-950.796));
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-950.796);
      doubleArray0[1] = (-950.796);
      doubleArray0[2] = (-950.796);
      doubleArray0[3] = (-950.796);
      doubleArray0[4] = (-950.796);
      doubleArray0[5] = (-950.796);
      doubleArray0[6] = (-950.796);
      doubleArray0[7] = (-950.796);
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0, (-1336.74896404), (-248.61559427), (-950.796), (-950.796));
      optimizationDataArray0[1] = (OptimizationData) nelderMeadSimplex0;
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(2);
      optimizationDataArray0[2] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
//      try { 
        simplexOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: MathUnsupportedOperationException");
      
//      } catch(MathUnsupportedOperationException e) {
//         //
//         // constraint
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer((-4337.688), 1.0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[3];
      double[] doubleArray0 = new double[9];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(6);
      optimizationDataArray0[1] = (OptimizationData) nelderMeadSimplex0;
      // Undeclared exception!
//      try { 
        simplexOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 6 != 9
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(3273.07674222482, 3273.07674222482);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 3273.07674222482;
      doubleArray0[1] = 3273.07674222482;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3273.07674222482;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[9];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0);
      optimizationDataArray0[2] = (OptimizationData) nelderMeadSimplex0;
      simplexOptimizer0.parseOptimizationData(optimizationDataArray0);
      // Undeclared exception!
//      try { 
        simplexOptimizer0.doOptimize();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // illegal state: maximal count (0) exceeded: evaluations
//         //
//         verifyException("org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer((-733.6931060072665), 59.7259);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[3];
      double[] doubleArray0 = new double[7];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(14);
      optimizationDataArray0[1] = (OptimizationData) multiDirectionalSimplex0;
      simplexOptimizer0.parseOptimizationData(optimizationDataArray0);
      // Undeclared exception!
//      try { 
        simplexOptimizer0.doOptimize();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 14 != 7
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer((-1.0), (-1.0));
      // Undeclared exception!
//      try { 
        simplexOptimizer0.doOptimize();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // null is not allowed
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer((-0.1666666667), (-0.1666666667));
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-0.1666666667);
      doubleArray0[1] = (-0.1666666667);
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(doubleArray0);
      optimizationDataArray0[0] = (OptimizationData) nelderMeadSimplex0;
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(504);
      optimizationDataArray0[1] = (OptimizationData) simpleBounds0;
      simplexOptimizer0.parseOptimizationData(optimizationDataArray0);
      // Undeclared exception!
//      try { 
        simplexOptimizer0.doOptimize();
//        fail("Expecting exception: MathUnsupportedOperationException");
      
//      } catch(MathUnsupportedOperationException e) {
//         //
//         // constraint
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(347.6255521588, 347.6255521588);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1723.624167639);
      doubleArray0[1] = (-1962.5766);
      MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(doubleArray0, 812.5165783603, 0.0);
      optimizationDataArray0[0] = (OptimizationData) multiDirectionalSimplex0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[5] = (OptimizationData) initialGuess0;
      // Undeclared exception!
//      try { 
        simplexOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // illegal state: maximal count (0) exceeded: evaluations
//         //
//         verifyException("org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(347.6255521588, 347.6255521588);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(12, 347.6255521588, 812.5165783603);
      optimizationDataArray0[0] = (OptimizationData) multiDirectionalSimplex0;
      // Undeclared exception!
//      try { 
        simplexOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(347.6255521588, 347.6255521588);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      // Undeclared exception!
//      try { 
        simplexOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // null is not allowed
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(1.1867394401011413, 1.1867394401011413);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[2];
      MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(9);
      optimizationDataArray0[0] = (OptimizationData) multiDirectionalSimplex0;
      simplexOptimizer0.parseOptimizationData(optimizationDataArray0);
      // Undeclared exception!
//      try { 
        simplexOptimizer0.doOptimize();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex", e);
//      }
  }
}
