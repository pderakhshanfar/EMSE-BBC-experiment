/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 16:28:52 GMT 2021
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.exception.MathUnsupportedOperationException;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.SimpleValueChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimplexOptimizer_ESTest extends SimplexOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-1088.99226923709), (-1088.99226923709));
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(simpleValueChecker0);
      assertNull(simplexOptimizer0.getGoalType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(270.2630091463709, 1.0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      double[] doubleArray0 = new double[1];
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(12);
      optimizationDataArray0[4] = (OptimizationData) simpleBounds0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[6] = (OptimizationData) initialGuess0;
      // Undeclared exception!
//      try { 
        simplexOptimizer0.parseOptimizationData(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 12 != 1
//         //
//         verifyException("org.apache.commons.math3.optim.BaseMultivariateOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer((-361.7), (-361.7));
      // Undeclared exception!
//      try { 
        simplexOptimizer0.parseOptimizationData((OptimizationData[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.BaseOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(0.0, (-1926.072244912664));
      OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(1, 1);
      optimizationDataArray0[0] = (OptimizationData) nelderMeadSimplex0;
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(1);
      optimizationDataArray0[2] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
//      try { 
        simplexOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: MathUnsupportedOperationException");
      
//      } catch(MathUnsupportedOperationException e) {
//         //
//         // constraint
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(270.2630091463709, 270.2630091463709);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      double[] doubleArray0 = new double[8];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(6, (-1.0), 0.0, (-2.1139124097042925E-7), (-1.0));
      optimizationDataArray0[1] = (OptimizationData) nelderMeadSimplex0;
      // Undeclared exception!
//      try { 
        simplexOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 6 != 8
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(270.2630091463709, 1.0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 270.2630091463709;
      MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(doubleArray0, 270.2630091463709, (-444.99116139126903));
      optimizationDataArray0[0] = (OptimizationData) multiDirectionalSimplex0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[6] = (OptimizationData) initialGuess0;
      simplexOptimizer0.parseOptimizationData(optimizationDataArray0);
      // Undeclared exception!
//      try { 
        simplexOptimizer0.doOptimize();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // illegal state: maximal count (0) exceeded: evaluations
//         //
//         verifyException("org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer((-34.20227013458221), (-34.20227013458221));
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(22, (-2197.4179));
      optimizationDataArray0[0] = (OptimizationData) nelderMeadSimplex0;
      double[] doubleArray0 = new double[0];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[1] = (OptimizationData) initialGuess0;
      simplexOptimizer0.parseOptimizationData(optimizationDataArray0);
      // Undeclared exception!
//      try { 
        simplexOptimizer0.doOptimize();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 22 != 0
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(272.0, 272.0);
      // Undeclared exception!
//      try { 
        simplexOptimizer0.doOptimize();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // null is not allowed
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(270.2630091463709, 270.2630091463709);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 270.2630091463709;
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(doubleArray0, (-1294.95602), (-1294.95602));
      optimizationDataArray0[0] = (OptimizationData) multiDirectionalSimplex0;
      simplexOptimizer0.parseOptimizationData(optimizationDataArray0);
      // Undeclared exception!
//      try { 
        simplexOptimizer0.doOptimize();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer((-43.08402), (-43.08402));
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-43.08402);
      MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(doubleArray0, (-43.08402), (-1294.95602));
      OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
      optimizationDataArray0[0] = (OptimizationData) multiDirectionalSimplex0;
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(341);
      optimizationDataArray0[2] = (OptimizationData) simpleBounds0;
      simplexOptimizer0.parseOptimizationData(optimizationDataArray0);
      // Undeclared exception!
//      try { 
        simplexOptimizer0.doOptimize();
//        fail("Expecting exception: MathUnsupportedOperationException");
      
//      } catch(MathUnsupportedOperationException e) {
//         //
//         // constraint
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(270.2630091463709, 270.2630091463709);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-925.393841315589);
      doubleArray0[1] = 270.2630091463709;
      doubleArray0[2] = (-925.393841315589);
      doubleArray0[3] = 270.2630091463709;
      doubleArray0[4] = 1976.8624731;
      doubleArray0[5] = (-925.393841315589);
      MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(doubleArray0, (-925.393841315589), 0.40220457315444946);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[1] = (OptimizationData) multiDirectionalSimplex0;
      // Undeclared exception!
//      try { 
        simplexOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // illegal state: maximal count (0) exceeded: evaluations
//         //
//         verifyException("org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(270.2630091463709, 270.2630091463709);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      NelderMeadSimplex nelderMeadSimplex0 = new NelderMeadSimplex(6, (-1.0), 0.0, (-2.1139124097042925E-7), (-1.0));
      optimizationDataArray0[1] = (OptimizationData) nelderMeadSimplex0;
      // Undeclared exception!
//      try { 
        simplexOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(270.2630091463709, 270.2630091463709);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      // Undeclared exception!
//      try { 
        simplexOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // null is not allowed
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer", e);
//      }
  }
}
