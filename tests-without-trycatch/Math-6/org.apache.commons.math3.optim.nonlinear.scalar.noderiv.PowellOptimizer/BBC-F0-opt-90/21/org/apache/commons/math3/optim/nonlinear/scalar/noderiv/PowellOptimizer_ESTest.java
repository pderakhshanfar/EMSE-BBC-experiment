/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 15:43:05 GMT 2021
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.apache.commons.math3.exception.MathUnsupportedOperationException;
import org.apache.commons.math3.optim.ConvergenceChecker;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.SimplePointChecker;
import org.apache.commons.math3.optim.SimpleValueChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PowellOptimizer_ESTest extends PowellOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(4.9E-324, 4.9E-324);
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(4.440892098500626E-16, 309.72428, 1875.4486658705155, 1875.4486658705155, simpleValueChecker0);
      assertNull(powellOptimizer0.getGoalType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-1631.34510896), (-1631.34510896));
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(0.09090909090909091, 3370.7938570690026, 0.09090909090909091, (-1631.34510896), simplePointChecker0);
      // Undeclared exception!
//      try { 
        powellOptimizer0.doOptimize();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(0.0, 0.875);
      PowellOptimizer powellOptimizer0 = null;
//      try {
        powellOptimizer0 = new PowellOptimizer(0.0, 0.0, simpleValueChecker0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 0 is smaller than the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-2341.0), Double.POSITIVE_INFINITY);
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, simpleValueChecker0);
      PowellOptimizer powellOptimizer1 = null;
//      try {
        powellOptimizer1 = new PowellOptimizer(0.19999999999923582, 0.19999999999923582, simpleValueChecker0);
//       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
//      } catch(NoSuchElementException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.LinkedList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-0.2499999997677497), (-2341.0));
      PowellOptimizer powellOptimizer0 = null;
//      try {
        powellOptimizer0 = new PowellOptimizer(2272.7, (-1216.1672), 2272.7, 1894.11, simpleValueChecker0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -1,216.167 is smaller than, or equal to, the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-1.0129027912496858E-9), (-3901.4846873254496));
      PowellOptimizer powellOptimizer0 = null;
//      try {
        powellOptimizer0 = new PowellOptimizer((-1227.2939646391665), 0.1246747374534607, 0.0, 1.0, simplePointChecker0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -1,227.294 is smaller than the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(2.479773539153719E-5, 232.5782616393, (-1255.8080135303023), 232.5782616393);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-1636.0), (-1636.0));
      PowellOptimizer powellOptimizer1 = null;
//      try {
        powellOptimizer1 = new PowellOptimizer(2.479773539153719E-5, 2.479773539153719E-5, 232.5782616393, (-1255.8080135303023), simplePointChecker0);
//       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
//      } catch(NoSuchElementException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.LinkedList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PowellOptimizer powellOptimizer0 = null;
//      try {
        powellOptimizer0 = new PowellOptimizer(125.5769, (-86.2648768), 125.5769, 125.5769);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -86.265 is smaller than, or equal to, the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-2341.0), Double.POSITIVE_INFINITY);
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, simpleValueChecker0);
      PowellOptimizer powellOptimizer1 = null;
//      try {
        powellOptimizer1 = new PowellOptimizer(Double.POSITIVE_INFINITY, 1255.367506, (-2341.0), 2276.3373);
//       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
//      } catch(NoSuchElementException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.LinkedList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PowellOptimizer powellOptimizer0 = null;
//      try {
        powellOptimizer0 = new PowellOptimizer(0.7214844226837158, (-1049.8103549));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -1,049.81 is smaller than, or equal to, the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PowellOptimizer powellOptimizer0 = null;
//      try {
        powellOptimizer0 = new PowellOptimizer((-6219.074722102256), (-6219.074722102256));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -6,219.075 is smaller than the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-2341.0), Double.POSITIVE_INFINITY);
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, simpleValueChecker0);
      PowellOptimizer powellOptimizer1 = null;
//      try {
        powellOptimizer1 = new PowellOptimizer(Double.POSITIVE_INFINITY, 647.702177737);
//       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
//      } catch(NoSuchElementException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.LinkedList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-2341.0), Double.POSITIVE_INFINITY);
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      double[] doubleArray0 = new double[8];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
//      try { 
        powellOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // illegal state: maximal count (0) exceeded: evaluations
//         //
//         verifyException("org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PowellOptimizer powellOptimizer0 = null;
//      try {
        powellOptimizer0 = new PowellOptimizer(2.0, 0.0, (ConvergenceChecker<PointValuePair>) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 0 is smaller than, or equal to, the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PowellOptimizer powellOptimizer0 = null;
//      try {
        powellOptimizer0 = new PowellOptimizer((-2008.637), 0.0, (-2202.7859483414), 0.0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -2,008.637 is smaller than the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[3];
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(191);
      optimizationDataArray0[2] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
//      try { 
        powellOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: MathUnsupportedOperationException");
      
//      } catch(MathUnsupportedOperationException e) {
//         //
//         // constraint
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer", e);
//      }
  }
}
