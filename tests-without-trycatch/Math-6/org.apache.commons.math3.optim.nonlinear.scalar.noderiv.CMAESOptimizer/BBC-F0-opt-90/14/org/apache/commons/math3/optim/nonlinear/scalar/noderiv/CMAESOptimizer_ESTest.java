/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 10:01:21 GMT 2021
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.linear.RealMatrix;
import org.apache.commons.math3.optim.ConvergenceChecker;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.SimplePointChecker;
import org.apache.commons.math3.optim.SimpleValueChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer;
import org.apache.commons.math3.random.ISAACRandom;
import org.apache.commons.math3.random.JDKRandomGenerator;
import org.apache.commons.math3.random.MersenneTwister;
import org.apache.commons.math3.random.RandomAdaptor;
import org.apache.commons.math3.random.Well1024a;
import org.apache.commons.math3.random.Well19937c;
import org.apache.commons.math3.random.Well44497b;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAESOptimizer_ESTest extends CMAESOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom((-794L));
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(4091.6, 732.0, 1963);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-1), 0.3, false, (-1), 1407, iSAACRandom0, false, simpleValueChecker0);
      double[] doubleArray0 = new double[1];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) (-1);
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray1, doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[9];
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      optimizationDataArray0[4] = (OptimizationData) simpleBounds0;
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertNull(cMAESOptimizer0.getGoalType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom(4669L);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-794L), (-794L), 1963);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1407, 1407, true, 1963, (-875), iSAACRandom0, false, simpleValueChecker0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 10.0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[1] = (OptimizationData) initialGuess0;
      optimizationDataArray0[2] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 10 out of [0, 0] range
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1963, 1121.66602504, 1963);
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1963, (-809.79), true, 2146568657, 1963, jDKRandomGenerator0, false, simpleValueChecker0);
      double[] doubleArray0 = new double[6];
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      double[] doubleArray1 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      optimizationDataArray0[2] = (OptimizationData) cMAESOptimizer_Sigma0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[4] = (OptimizationData) initialGuess0;
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 0 != 6
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
//      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize((-287));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -287 is smaller than, or equal to, the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom((-794L));
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-116.688736466), 2124.0, 1981);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1981, 1981, false, 1981, 1981, iSAACRandom0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(1585);
      optimizationDataArray0[0] = (OptimizationData) simpleBounds0;
      double[] doubleArray0 = new double[0];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
//      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 1,585 != 0
//         //
//         verifyException("org.apache.commons.math3.optim.BaseMultivariateOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom((-773L));
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1963, 2124.0, 1963);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1963, 1963, false, 1963, 1963, iSAACRandom0, false, simpleValueChecker0);
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.doOptimize();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(2919);
      int int0 = cMAESOptimizer_PopulationSize0.getPopulationSize();
      assertEquals(2919, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = cMAESOptimizer_Sigma0.getSigma();
      assertEquals(0, doubleArray1.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(10, 10, 10);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 10, true, 10, 10, iSAACRandom0, true, simpleValueChecker0);
      double[] doubleArray0 = new double[1];
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      optimizationDataArray0[0] = (OptimizationData) simpleBounds0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[6] = (OptimizationData) initialGuess0;
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      doubleArray0[0] = (double) 121;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      OptimizationData[] optimizationDataArray1 = new OptimizationData[7];
      optimizationDataArray1[6] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.optimize(optimizationDataArray1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 121 out of [0, 0] range
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom((-773L));
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1963, 2124.0, 1963);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1963, 1963, false, 1963, 1963, iSAACRandom0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      double[] doubleArray0 = new double[2];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[3] = (OptimizationData) cMAESOptimizer_Sigma0;
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      optimizationDataArray0[4] = (OptimizationData) simpleBounds0;
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertEquals(6, optimizationDataArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-1.0808162722402073E-8), 1963.0, 941);
      Well19937c well19937c0 = new Well19937c((-2678L));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(25, (-121.5545169575), false, 2012, 2012, well19937c0, false, simpleValueChecker0);
      double[] doubleArray0 = new double[0];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      double[] doubleArray1 = new double[13];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[3];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 13 != 0
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom((-773L));
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1963, 2124.0, 1963);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1963, 1963, false, 1963, 1963, iSAACRandom0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      double[] doubleArray0 = new double[2];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[3] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
//      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 0 is smaller than, or equal to, the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[2] = (-2628.0);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = null;
//      try {
        cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -2,628 is smaller than the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Well1024a well1024a0 = new Well1024a((-2715));
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well1024a0);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(0.0, 0.0);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2715), 0.1, false, (-2715), (-2715), randomAdaptor0, false, simpleValueChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsMeanHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MersenneTwister mersenneTwister0 = new MersenneTwister(2144974905);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2247), (-3.141592653589793), true, (-11), (-2247), mersenneTwister0, true, (ConvergenceChecker<PointValuePair>) null);
      List<Double> list0 = cMAESOptimizer0.getStatisticsFitnessHistory();
      assertFalse(list0.contains((-3.141592653589793)));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Well44497b well44497b0 = new Well44497b();
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-2054.9114529), 0.0);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, 0, true, 0, 0, well44497b0, true, simplePointChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsDHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(10, 10, 10);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 10, true, 10, 10, iSAACRandom0, true, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom((-794L));
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-116.688736466), 2124.0, 1981);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1981, 1981, false, 1981, 1981, iSAACRandom0, false, simpleValueChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsSigmaHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(10, 10, 10);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 10, true, 10, 10, iSAACRandom0, true, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(19);
      optimizationDataArray0[2] = (OptimizationData) cMAESOptimizer_PopulationSize0;
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertNull(cMAESOptimizer0.getGoalType());
  }
}
