/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 19 18:16:05 GMT 2021
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.linear.RealMatrix;
import org.apache.commons.math3.optim.ConvergenceChecker;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.SimplePointChecker;
import org.apache.commons.math3.optim.SimpleValueChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer;
import org.apache.commons.math3.random.ISAACRandom;
import org.apache.commons.math3.random.MersenneTwister;
import org.apache.commons.math3.random.SynchronizedRandomGenerator;
import org.apache.commons.math3.random.Well19937a;
import org.apache.commons.math3.random.Well44497b;
import org.apache.commons.math3.random.Well512a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAESOptimizer_ESTest extends CMAESOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a(1986);
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = (double) 1986;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      double[] doubleArray1 = new double[8];
      doubleArray1[1] = (double) 113236205062349913L;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray1);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1502.866, 1.1323620506234992E17, 1986);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1986, (-2986.18318566555), true, 1427, 1986, well19937a0, true, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[1] = (OptimizationData) initialGuess0;
      optimizationDataArray0[2] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 113,236,205,062,349,920 out of [0, 113,236,205,062,347,936] range
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
//      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize((-2090));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -2,090 is smaller than, or equal to, the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      Well19937a well19937a0 = new Well19937a((-426));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-426), 1.0, true, 2146070829, (-426), well19937a0, true, (ConvergenceChecker<PointValuePair>) null);
      double[] doubleArray1 = new double[4];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray1);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[1] = (OptimizationData) initialGuess0;
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 0 != 4
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a(2146070829);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1980, 1980, true, 2146070829, 2146070829, well19937a0, true, (ConvergenceChecker<PointValuePair>) null);
      double[] doubleArray0 = new double[9];
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[2] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Well44497b well44497b0 = new Well44497b();
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(4, 0, 426);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, 0, false, 0, 4, well44497b0, true, simplePointChecker0);
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.doOptimize();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(229);
      int int0 = cMAESOptimizer_PopulationSize0.getPopulationSize();
      assertEquals(229, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = cMAESOptimizer_Sigma0.getSigma();
      assertFalse(doubleArray1.equals((Object)doubleArray0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a();
      double[] doubleArray0 = new double[6];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(1986, (-2098.26989983), 1957);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(30, 30, false, 1986, (-353), well19937a0, true, simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[3];
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[1] = (OptimizationData) initialGuess0;
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(6);
      optimizationDataArray0[2] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a(2146070829);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1980, 1980, true, 2146070829, 2146070829, well19937a0, true, (ConvergenceChecker<PointValuePair>) null);
      double[] doubleArray0 = new double[9];
      double[] doubleArray1 = new double[7];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray1);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
//      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 9 != 7
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
//      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // 0 is smaller than, or equal to, the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[2] = (-1495.086869594);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = null;
//      try {
        cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // -1,495.087 is smaller than the minimum (0)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Well512a well512a0 = new Well512a();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(2286.44363, (-1221985044), 14);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-1221985044), (-1221985044), true, (-1221985044), (-1221985044), well512a0, true, simpleValueChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsMeanHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Well512a well512a0 = new Well512a();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(2286.44363, (-1221985044), 14);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-1221985044), (-1221985044), true, (-1221985044), (-1221985044), well512a0, true, simpleValueChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsFitnessHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Well512a well512a0 = new Well512a(0);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-6.36194), 229.0);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-322), 1104, true, 5034, 1104, well512a0, true, simpleValueChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsDHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a();
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(1986, (-2098.26989983), 1957);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(30, 30, false, 1986, (-353), well19937a0, true, simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[3];
      // Undeclared exception!
//      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MersenneTwister mersenneTwister0 = new MersenneTwister();
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(3387.481157968, 32);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(32, (-2081.74755631), false, 32, 2119, mersenneTwister0, false, simplePointChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsSigmaHistory();
      assertFalse(list0.contains((-2081.74755631)));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom();
      SynchronizedRandomGenerator synchronizedRandomGenerator0 = new SynchronizedRandomGenerator(iSAACRandom0);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(32, 804.11645131695, 10);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(32, 32, true, 32, 32, synchronizedRandomGenerator0, true, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(10);
      optimizationDataArray0[3] = (OptimizationData) cMAESOptimizer_PopulationSize0;
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertEquals(8, optimizationDataArray0.length);
  }
}
