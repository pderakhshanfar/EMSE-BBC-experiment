/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 16:19:52 GMT 2021
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.TypeInference;
import com.google.javascript.rhino.jstype.BooleanLiteralSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeInference_ESTest extends TypeInference_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseSyntheticCode("Irototype", "Irototype");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BooleanLiteralSet booleanLiteralSet0 = BooleanLiteralSet.FALSE;
      // Undeclared exception!
//      try { 
        TypeInference.getBooleanOutcomes(booleanLiteralSet0, (BooleanLiteralSet) null, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.google.javascript.jscomp.TypeInference", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("Irototype");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("prototype");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("Irototyp");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("Iroto9vtype");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BooleanLiteralSet booleanLiteralSet0 = BooleanLiteralSet.FALSE;
      BooleanLiteralSet booleanLiteralSet1 = TypeInference.getBooleanOutcomes(booleanLiteralSet0, booleanLiteralSet0, false);
      assertSame(booleanLiteralSet0, booleanLiteralSet1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BooleanLiteralSet booleanLiteralSet0 = BooleanLiteralSet.EMPTY;
      BooleanLiteralSet booleanLiteralSet1 = TypeInference.getBooleanOutcomes(booleanLiteralSet0, booleanLiteralSet0, true);
      assertEquals(BooleanLiteralSet.EMPTY, booleanLiteralSet1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("Ir3to1=ype");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("com.google.javascript.jscomp.TypeInference");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode(":a} e");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("Irqototyp");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseSyntheticCode("IrototypAe", "IrototypAe");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: constructor=NOT_IMPLEMENTED and constructor=CONSTRUCTOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("r3to1=ype");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.jscomp.TypeInference$TemplateTypeReplacer");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("Rroqt>be");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("com.google.javascript.jscomp.TypeInference$TemplateTypeReplacer");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("zL");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("Iroqtotype");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("I1otogype");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("SIrotot:pe");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("roqtotype");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("com.google.common.base.Predicates$ObjectPredicate");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("rototype");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
//      try { 
        compiler0.parseTestCode("com.google.javascript.jscomp.TypeInference$1");
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
//         //
//         verifyException("com.google.common.collect.ImmutableMap", e);
//      }
  }
}
