/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 14:11:51 GMT 2021
 */

package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.filter.FilteringParserDelegate;
import com.fasterxml.jackson.core.filter.TokenFilter;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
import com.fasterxml.jackson.core.json.UTF8DataInputJsonParser;
import com.fasterxml.jackson.core.json.UTF8StreamJsonParser;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.JsonParserDelegate;
import com.fasterxml.jackson.core.util.JsonParserSequence;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.DeserializationConfig;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.InjectableValues;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonSerializer;
import com.fasterxml.jackson.databind.Module;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyMetadata;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.cfg.BaseSettings;
import com.fasterxml.jackson.databind.cfg.ConfigOverrides;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializer;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.NullValueProvider;
import com.fasterxml.jackson.databind.deser.SettableBeanProperty;
import com.fasterxml.jackson.databind.deser.std.DateDeserializers;
import com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer;
import com.fasterxml.jackson.databind.deser.std.NumberDeserializers;
import com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers;
import com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
import com.fasterxml.jackson.databind.deser.std.StringDeserializer;
import com.fasterxml.jackson.databind.introspect.AnnotatedMember;
import com.fasterxml.jackson.databind.introspect.ClassIntrospector;
import com.fasterxml.jackson.databind.introspect.SimpleMixInResolver;
import com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
import com.fasterxml.jackson.databind.jsontype.NamedType;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
import com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.databind.node.BooleanNode;
import com.fasterxml.jackson.databind.node.DoubleNode;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.type.ArrayType;
import com.fasterxml.jackson.databind.type.CollectionLikeType;
import com.fasterxml.jackson.databind.type.CollectionType;
import com.fasterxml.jackson.databind.type.PlaceholderForType;
import com.fasterxml.jackson.databind.type.ReferenceType;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.AccessPattern;
import com.fasterxml.jackson.databind.util.Converter;
import com.fasterxml.jackson.databind.util.RootNameLookup;
import java.io.DataInput;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.format.ResolverStyle;
import java.util.Calendar;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StdDeserializer_ESTest extends StdDeserializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._intOverflow(2147483647L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._intOverflow((-2147483648L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_IntegerDeserializer0._shortOverflow((-32768));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      JavaType javaType0 = TypeFactory.unknownType();
      Converter<Object, MockFileInputStream> converter0 = (Converter<Object, MockFileInputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<MockFileInputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<MockFileInputStream>(converter0, javaType0, numberDeserializers_BooleanDeserializer0);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow(255);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._isIntNumber("01lF '");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._isIntNumber("9^9ZlfN[S8@5}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      PlaceholderForType placeholderForType0 = new PlaceholderForType(4);
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<Object, Date>) null, placeholderForType0, numberDeserializers_BooleanDeserializer0);
      String string0 = stdDelegatingDeserializer0._coercedTypeDesc();
      assertEquals("for type `java.lang.Boolean`", string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseIntPrimitive((DeserializationContext) null, "pa9;gI (");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      primitiveArrayDeserializers_CharDeser0._verifyNullForPrimitive(deserializationContext0);
      assertEquals(AccessPattern.CONSTANT, primitiveArrayDeserializers_CharDeser0.getEmptyAccessPattern());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      Converter<Object, BeanDeserializer> converter0 = (Converter<Object, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0, (JavaType) null, numberDeserializers_BooleanDeserializer0);
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      UTF8DataInputJsonParser uTF8DataInputJsonParser0 = new UTF8DataInputJsonParser(iOContext0, 443, (DataInput) null, (ObjectCodec) null, byteQuadsCanonicalizer0, (-3809));
      JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate(uTF8DataInputJsonParser0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._deserializeFromArray(jsonParserDelegate0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      double double0 = StdDeserializer.parseDouble("6");
      assertEquals(6.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PrimitiveArrayDeserializers.FloatDeser primitiveArrayDeserializers_FloatDeser0 = new PrimitiveArrayDeserializers.FloatDeser();
      Class<InputStream> class0 = InputStream.class;
      StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, primitiveArrayDeserializers_FloatDeser0);
      boolean boolean0 = primitiveArrayDeserializers_FloatDeser0.isDefaultKeyDeserializer(stdKeyDeserializer_DelegatingKD0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Converter<BuilderBasedDeserializer, Boolean> converter0 = (Converter<BuilderBasedDeserializer, Boolean>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Boolean> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Boolean>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0.isDefaultDeserializer(stdDelegatingDeserializer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.primitiveInstance;
      Class<?> class0 = numberDeserializers_IntegerDeserializer0.handledType();
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      Class<?> class0 = numberDeserializers_BooleanDeserializer0.getValueClass();
      assertEquals(17, class0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Converter<Date, Calendar> converter0 = (Converter<Date, Calendar>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Calendar> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Calendar>(converter0);
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      Class<String> class0 = String.class;
      JsonFormat.Value jsonFormat_Value0 = stdDelegatingDeserializer0.findFormatOverrides(defaultDeserializationContext_Impl0, beanProperty_Bogus0, class0);
      assertNull(jsonFormat_Value0.getLenient());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      PrimitiveArrayDeserializers.ByteDeser primitiveArrayDeserializers_ByteDeser0 = new PrimitiveArrayDeserializers.ByteDeser();
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      Class<JsonDeserializer> class0 = JsonDeserializer.class;
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.WRITE_SORTED_MAP_ENTRIES;
      Boolean boolean0 = primitiveArrayDeserializers_ByteDeser0.findFormatFeature(deserializationContext0, beanProperty_Bogus0, class0, jsonFormat_Feature0);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      stringDeserializer0.findContentNullStyle(defaultDeserializationContext_Impl0, beanProperty_Bogus0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Converter<Date, BeanDeserializer> converter0 = (Converter<Date, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0);
      NullValueProvider nullValueProvider0 = stdDelegatingDeserializer0.findContentNullProvider((DeserializationContext) null, (BeanProperty) null, (JsonDeserializer<?>) null);
      assertNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Converter<BuilderBasedDeserializer, Boolean> converter0 = (Converter<BuilderBasedDeserializer, Boolean>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Boolean> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Boolean>(converter0);
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      StdDelegatingDeserializer stdDelegatingDeserializer1 = (StdDelegatingDeserializer)stdDelegatingDeserializer0.findContentNullProvider((DeserializationContext) null, beanProperty_Bogus0, stdDelegatingDeserializer0);
      assertEquals(AccessPattern.DYNAMIC, stdDelegatingDeserializer1.getEmptyAccessPattern());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      float float0 = numberDeserializers_BooleanDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "2.2250738585072012e-308");
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      double double0 = numberDeserializers_BooleanDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "0");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      Number number0 = numberDeserializers_BooleanDeserializer0._nonNullNumber(bigDecimal0);
      assertSame(number0, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Converter<Boolean, InputStream> converter0 = (Converter<Boolean, InputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<InputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<InputStream>(converter0);
      BigInteger bigInteger0 = BigInteger.ONE;
      Number number0 = stdDelegatingDeserializer0._nonNullNumber(bigInteger0);
      assertSame(bigInteger0, number0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      boolean boolean0 = StdDeserializer._neitherNull(",3!<uC5a1G@.^E9<c!J", objectMapper0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BooleanNode booleanNode0 = BooleanNode.getTrue();
      boolean boolean0 = StdDeserializer._neitherNull(booleanNode0, (Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_IntegerDeserializer0._isPosInf("INF");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_IntegerDeserializer0._isPosInf("JSON");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._isNegInf("-Infinity");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._isNegInf(";SON");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      Converter<Object, SimpleModule> converter0 = (Converter<Object, SimpleModule>) mock(Converter.class, new ViolatedAssumptionAnswer());
      JavaType javaType0 = TypeFactory.unknownType();
      StdDelegatingDeserializer<SimpleModule> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleModule>(converter0, javaType0, numberDeserializers_BooleanDeserializer0);
      boolean boolean0 = stdDelegatingDeserializer0._isNaN("P@Rq");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StdDelegatingDeserializer<ResolverStyle> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ResolverStyle>((Converter<?, ResolverStyle>) null);
      boolean boolean0 = stdDelegatingDeserializer0._isEmptyOrTextualNull("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StdDelegatingDeserializer<ResolverStyle> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ResolverStyle>((Converter<?, ResolverStyle>) null);
      boolean boolean0 = stdDelegatingDeserializer0._isEmptyOrTextualNull(",3!<uC5a1G@.^E9<c!J");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NullifyingDeserializer nullifyingDeserializer0 = new NullifyingDeserializer();
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      Short short0 = new Short((short) (-32768));
      IOContext iOContext0 = new IOContext(bufferRecycler0, short0, false);
      PipedReader pipedReader0 = new PipedReader();
      JsonFactory jsonFactory0 = new JsonFactory();
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 613, pipedReader0, objectMapper0, charsToNameCanonicalizer0);
      JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(false, (JsonParser) readerBasedJsonParser0, (JsonParser) readerBasedJsonParser0);
      Object object0 = nullifyingDeserializer0._deserializeWrappedValue(jsonParserSequence0, defaultDeserializationContext_Impl0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      ObjectReader objectReader0 = objectMapper0.reader();
      DoubleNode doubleNode0 = DoubleNode.valueOf(0.0);
      JsonParser jsonParser0 = objectReader0.treeAsTokens(doubleNode0);
      StdDelegatingDeserializer<LinkedList<Integer>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<Integer>>((Converter<?, LinkedList<Integer>>) null);
      BigInteger bigInteger0 = (BigInteger)stdDelegatingDeserializer0._coerceIntegral(jsonParser0, deserializationContext0);
      assertEquals((byte)0, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
//      try { 
        StdDeserializer.parseDouble("`P1");
//        fail("Expecting exception: NumberFormatException");
      
//      } catch(NumberFormatException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      // Undeclared exception!
//      try { 
        StdDeserializer.parseDouble((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StdDelegatingDeserializer<Module> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Module>((Converter<?, Module>) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0.handledType();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_DoubleDeser0.findFormatOverrides((DeserializationContext) null, (BeanProperty) null, class0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PrimitiveArrayDeserializers.FloatDeser primitiveArrayDeserializers_FloatDeser0 = new PrimitiveArrayDeserializers.FloatDeser();
      Class<Object> class0 = Object.class;
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ACCEPT_CASE_INSENSITIVE_PROPERTIES;
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_FloatDeser0.findFormatFeature(defaultDeserializationContext_Impl0, (BeanProperty) null, class0, jsonFormat_Feature0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      JavaType javaType0 = beanProperty_Bogus0.getType();
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0.findDeserializer(defaultDeserializationContext_Impl0, javaType0, beanProperty_Bogus0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.DeserializerCache", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0.findConvertingContentDeserializer((DeserializationContext) null, (BeanProperty) null, (JsonDeserializer<?>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
      JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(false, (JsonParser) null, (JsonParser) null);
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_DoubleDeser0.deserializeWithType(jsonParserSequence0, (DeserializationContext) null, (TypeDeserializer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._verifyStringForScalarCoercion((DeserializationContext) null, ",3!<uC5a1G@.^E9<c!J");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[9];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._verifyNumberForScalarCoercion((DeserializationContext) null, jsonParser0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._verifyNullForScalarCoercion(defaultDeserializationContext_Impl0, "}");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._verifyNullForPrimitiveCoercion((DeserializationContext) null, "com.fasterxml.jackson.databind.deser.std.StdDeserializer");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_CharDeser0._verifyNullForPrimitive((DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      Boolean boolean0 = Boolean.TRUE;
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = new NumberDeserializers.BooleanDeserializer(class0, boolean0);
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, boolean0, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      byte[] byteArray0 = new byte[6];
      UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1176, pipedInputStream0, objectMapper0, byteQuadsCanonicalizer0, byteArray0, (-1), 1, false);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._verifyEndArrayForSingle(uTF8StreamJsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("com.fasterxml.jackson.core.json.UTF8StreamJsonParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StdDelegatingDeserializer<LinkedList<Integer>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<Integer>>((Converter<?, LinkedList<Integer>>) null);
      JsonFactory jsonFactory0 = new JsonFactory();
      PipedReader pipedReader0 = new PipedReader();
      JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
//      try { 
        stdDelegatingDeserializer0._verifyEndArrayForSingle(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Pipe not connected
//         //
//         verifyException("java.io.PipedReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
//      try { 
        numberDeserializers_BooleanDeserializer0._verifyEndArrayForSingle(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Unrecognized token 'JSON': was expecting ('true', 'false' or 'null')
//         //  at [Source: (String)\"JSON\"; line: 1, column: 9]
//         //
//         verifyException("com.fasterxml.jackson.core.JsonParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_INTEGER_FOR_INTS;
      NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_FloatDeserializer0._reportFailedNullCoerce((DeserializationContext) null, false, deserializationFeature0, "o&");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 8, pipedReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 0, 3, false);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseShortPrimitive(readerBasedJsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_DoubleDeser0._parseLongPrimitive(deserializationContext0, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_DoubleDeser0._parseLongPrimitive((DeserializationContext) null, "urXVS'HnvuSG)`~U");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseLongPrimitive((JsonParser) null, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseIntPrimitive(defaultDeserializationContext_Impl0, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      BooleanNode booleanNode0 = BooleanNode.getTrue();
      JsonParser jsonParser0 = objectMapper0.treeAsTokens(booleanNode0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseIntPrimitive(jsonParser0, deserializationContext0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseFloatPrimitive((DeserializationContext) null, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null, (ConfigOverrides) null);
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
      JsonParser jsonParser0 = jsonFactory0.createParser((char[]) null, (-1619508490), 65599);
      InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, jsonParser0, injectableValues_Std0);
//      try { 
        numberDeserializers_BooleanDeserializer0._parseFloatPrimitive(defaultDeserializationContext0, "@1 e:");
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Cannot deserialize value of type `boolean` from String \"@1 e:\": not a valid float value
//         //  at [Source: UNKNOWN; line: 1, column: 0]
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.InvalidFormatException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
      PipedReader pipedReader0 = new PipedReader();
      JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseBooleanFromInt(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._isIntNumber((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StdDelegatingDeserializer<ResolverStyle> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ResolverStyle>((Converter<?, ResolverStyle>) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._isEmptyOrTextualNull((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      ObjectMapper objectMapper0 = new ObjectMapper();
      BooleanNode booleanNode0 = BooleanNode.getTrue();
      JsonParser jsonParser0 = objectMapper0.treeAsTokens(booleanNode0);
      JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(true, jsonParser0, jsonParser0);
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
//      try { 
        numberDeserializers_BooleanDeserializer0._failDoubleToIntCoercion(jsonParserSequence0, deserializationContext0, "DT7.iEV%Ut");
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Cannot coerce a floating-point value ('null') into DT7.iEV%Ut (enable `DeserializationFeature.ACCEPT_FLOAT_AS_INT` to allow)
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.MismatchedInputException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._coercedTypeDesc();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._coerceTextualNull(deserializationContext0, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdDelegatingDeserializer<LinkedList<Integer>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<Integer>>((Converter<?, LinkedList<Integer>>) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._coerceIntegral((JsonParser) null, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NumberDeserializers.ByteDeserializer numberDeserializers_ByteDeserializer0 = NumberDeserializers.ByteDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_ByteDeserializer0._coerceEmptyString((DeserializationContext) null, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      BooleanNode booleanNode0 = BooleanNode.getTrue();
      JsonParser jsonParser0 = objectMapper0.treeAsTokens(booleanNode0);
      PrimitiveArrayDeserializers.LongDeser primitiveArrayDeserializers_LongDeser0 = new PrimitiveArrayDeserializers.LongDeser();
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_LongDeser0.handleSingleElementUnwrapped(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      Converter<Object, Long> converter0 = (Converter<Object, Long>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Long> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Long>(converter0, (JavaType) null, numberDeserializers_BooleanDeserializer0);
      JavaType javaType0 = stdDelegatingDeserializer0.getValueType();
      assertNull(javaType0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StdDelegatingDeserializer<InputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<InputStream>((Converter<?, InputStream>) null);
      Number number0 = stdDelegatingDeserializer0._nonNullNumber((Number) null);
      assertEquals(0, number0);
      assertNotNull(number0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._intOverflow(9223372036854775807L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Converter<Short, SettableBeanProperty> converter0 = (Converter<Short, SettableBeanProperty>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<SettableBeanProperty> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SettableBeanProperty>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._intOverflow((-9223372036854775808L));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_IntegerDeserializer0._shortOverflow(32767);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_IntegerDeserializer0._shortOverflow(32788);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_IntegerDeserializer0._shortOverflow((-2045591767));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StdDelegatingDeserializer<MockFileInputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<MockFileInputStream>((Converter<?, MockFileInputStream>) null);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow(3018);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Converter<ResolverStyle, Calendar> converter0 = (Converter<ResolverStyle, Calendar>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Calendar> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Calendar>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow((-128));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      Class<LinkedList> class0 = LinkedList.class;
      CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);
      Converter<Object, MockFileInputStream> converter0 = (Converter<Object, MockFileInputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<MockFileInputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<MockFileInputStream>(converter0, collectionType0, numberDeserializers_BooleanDeserializer0);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow((short) (-132));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      StdDelegatingDeserializer<LinkedList<Integer>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<Integer>>((Converter<?, LinkedList<Integer>>) null);
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._verifyEndArrayForSingle(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser("e*V\"n`d");
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      // Undeclared exception!
//      try { 
        stringDeserializer0.handleUnknownProperty(jsonParser0, (DeserializationContext) null, (Object) null, "NsClBb");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      MockDate mockDate0 = new MockDate(2915L);
      // Undeclared exception!
//      try { 
        stringDeserializer0.handleUnknownProperty((JsonParser) null, (DeserializationContext) null, mockDate0, ",}Vi-");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Class<Float> class0 = Float.class;
      Float float0 = new Float((-1077.9144947));
      NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = new NumberDeserializers.FloatDeserializer(class0, float0);
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Nulls nulls0 = Nulls.SKIP;
      NullValueProvider nullValueProvider0 = stringDeserializer0._findNullProvider(defaultDeserializationContext_Impl0, (BeanProperty) null, nulls0, numberDeserializers_FloatDeserializer0);
      assertEquals(AccessPattern.ALWAYS_NULL, nullValueProvider0.getNullAccessPattern());
      assertNotNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      Nulls nulls0 = Nulls.AS_EMPTY;
      PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
      NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_DoubleDeser0._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, numberDeserializers_BooleanDeserializer0);
      assertEquals(AccessPattern.CONSTANT, nullValueProvider0.getNullAccessPattern());
      assertNotNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
      Nulls nulls0 = Nulls.AS_EMPTY;
      Converter<Object, ReferenceType> converter0 = (Converter<Object, ReferenceType>) mock(Converter.class, new ViolatedAssumptionAnswer());
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<Calendar> class0 = Calendar.class;
      PlaceholderForType placeholderForType0 = new PlaceholderForType((-3492));
      JavaType[] javaTypeArray0 = new JavaType[2];
      CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) placeholderForType0, javaTypeArray0, (JavaType) placeholderForType0);
      JavaType javaType0 = typeFactory0.constructReferenceType(class0, collectionLikeType0);
      StdDelegatingDeserializer<ReferenceType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ReferenceType>(converter0, javaType0, numberDeserializers_BooleanDeserializer0);
      NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_DoubleDeser0._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, stdDelegatingDeserializer0);
      assertEquals(AccessPattern.DYNAMIC, nullValueProvider0.getNullAccessPattern());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Nulls nulls0 = Nulls.AS_EMPTY;
      NullValueProvider nullValueProvider0 = numberDeserializers_BooleanDeserializer0._findNullProvider(defaultDeserializationContext_Impl0, (BeanProperty) null, nulls0, (JsonDeserializer<?>) null);
      assertNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
      Nulls nulls0 = Nulls.FAIL;
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_DoubleDeser0._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, numberDeserializers_ShortDeserializer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      Nulls nulls0 = Nulls.FAIL;
      PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      BeanProperty.Std beanProperty_Std0 = new BeanProperty.Std(propertyName0, (JavaType) null, propertyName0, (AnnotatedMember) null, propertyMetadata0);
      NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_DoubleDeser0._findNullProvider((DeserializationContext) null, beanProperty_Std0, nulls0, stringDeserializer0);
      assertEquals(AccessPattern.DYNAMIC, nullValueProvider0.getNullAccessPattern());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      PrimitiveArrayDeserializers.FloatDeser primitiveArrayDeserializers_FloatDeser0 = new PrimitiveArrayDeserializers.FloatDeser();
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
      NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_FloatDeser0.findValueNullProvider((DeserializationContext) null, (SettableBeanProperty) null, propertyMetadata0);
      assertNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      ObjectMapper objectMapper0 = new ObjectMapper();
      ObjectReader objectReader0 = objectMapper0.readerForUpdating(numberDeserializers_BooleanDeserializer0);
      assertNotNull(objectReader0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._isIntNumber(")G");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._isIntNumber("6");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._isIntNumber("+{m!^G<_nx");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._isIntNumber("-INF");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._isIntNumber("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      String string0 = primitiveArrayDeserializers_BooleanDeser0._coercedTypeDesc();
      assertEquals("as content of type `boolean[]`", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      SerializationFeature serializationFeature0 = SerializationFeature.WRITE_EMPTY_JSON_ARRAYS;
      NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
//      try { 
        numberDeserializers_FloatDeserializer0._reportFailedNullCoerce(defaultDeserializationContext_Impl0, true, serializationFeature0, "JSON");
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Cannot coerce JSON to Null value for type `float` (enable `SerializationFeature.WRITE_EMPTY_JSON_ARRAYS` to allow)
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.MismatchedInputException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null, (ConfigOverrides) null);
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
      JsonParser jsonParser0 = jsonFactory0.createParser((char[]) null, (-1619508490), 65599);
      InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, jsonParser0, injectableValues_Std0);
      numberDeserializers_BooleanDeserializer0._verifyStringForScalarCoercion(defaultDeserializationContext0, "@1 e:");
      assertEquals(AccessPattern.CONSTANT, numberDeserializers_BooleanDeserializer0.getEmptyAccessPattern());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PrimitiveArrayDeserializers.FloatDeser primitiveArrayDeserializers_FloatDeser0 = new PrimitiveArrayDeserializers.FloatDeser();
      Object object0 = primitiveArrayDeserializers_FloatDeser0._coerceNullToken(defaultDeserializationContext_Impl0, true);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      Long long0 = new Long(1880L);
      Long long1 = objectMapper0.updateValue(long0, (Object) "");
      assertNull(long1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PrimitiveArrayDeserializers.FloatDeser primitiveArrayDeserializers_FloatDeser0 = new PrimitiveArrayDeserializers.FloatDeser();
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_FloatDeser0._coerceNullToken((DeserializationContext) null, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      StdDelegatingDeserializer<LinkedList<Integer>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<Integer>>((Converter<?, LinkedList<Integer>>) null);
      Object object0 = stdDelegatingDeserializer0._coerceNullToken(deserializationContext0, false);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      BooleanNode booleanNode0 = BooleanNode.FALSE;
      JsonParser jsonParser0 = objectMapper0.treeAsTokens(booleanNode0);
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      StdDelegatingDeserializer<LinkedList<Integer>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<Integer>>((Converter<?, LinkedList<Integer>>) null);
//      try { 
        stdDelegatingDeserializer0._coerceIntegral(jsonParser0, deserializationContext0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Current token (VALUE_FALSE) not numeric, cannot use numeric value accessors
//         //  at [Source: UNKNOWN; line: -1, column: -1]
//         //
//         verifyException("com.fasterxml.jackson.core.JsonParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      NumberDeserializers.ByteDeserializer numberDeserializers_ByteDeserializer0 = NumberDeserializers.ByteDeserializer.wrapperInstance;
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      Short short0 = new Short((short) (-1));
      IOContext iOContext0 = new IOContext(bufferRecycler0, short0, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream(78);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      ObjectMapper objectMapper0 = new ObjectMapper();
      Class<List> class0 = List.class;
      ObjectReader objectReader0 = objectMapper0.readerFor(class0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      byte[] byteArray0 = new byte[5];
      UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 73, pushbackInputStream0, objectReader0, byteQuadsCanonicalizer0, byteArray0, (-1957125026), 0, true);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_ByteDeserializer0._deserializeWrappedValue(uTF8StreamJsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Converter<Object, BeanDeserializer> converter0 = (Converter<Object, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      double double0 = stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "-INF");
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.wrapperInstance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Date date0 = numberDeserializers_IntegerDeserializer0._parseDate("null", defaultDeserializationContext_Impl0);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      BooleanNode booleanNode0 = BooleanNode.getTrue();
      JsonParser jsonParser0 = objectMapper0.treeAsTokens(booleanNode0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._deserializeFromEmpty(jsonParser0, deserializationContext0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DateDeserializers.DateDeserializer dateDeserializers_DateDeserializer0 = DateDeserializers.DateDeserializer.instance;
      JsonFactory jsonFactory0 = new JsonFactory();
      byte[] byteArray0 = new byte[8];
      JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0);
      JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(false, jsonParser0, jsonParser0);
      // Undeclared exception!
//      try { 
        dateDeserializers_DateDeserializer0._parseString(jsonParserSequence0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      StdDelegatingDeserializer<ResolverStyle> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ResolverStyle>((Converter<?, ResolverStyle>) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseDate(", annotations: ", deserializationContext0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
      ObjectReader objectReader0 = objectMapper0.reader();
      DoubleNode doubleNode0 = DoubleNode.valueOf(0.0);
      JsonParser jsonParser0 = objectReader0.treeAsTokens(doubleNode0);
      FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, false, false);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseDateFromArray(filteringParserDelegate0, deserializationContext0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
      JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseDate(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Converter<BeanDeserializer, BeanDeserializer> converter0 = (Converter<BeanDeserializer, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0);
      double double0 = stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "NaN");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseDoublePrimitive((DeserializationContext) null, "Infiity");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      double double0 = numberDeserializers_BooleanDeserializer0._parseDoublePrimitive((DeserializationContext) null, "2.2250738585072012e-308");
      assertEquals(2.2250738585072014E-308, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      double double0 = numberDeserializers_BooleanDeserializer0._parseDoublePrimitive(deserializationContext0, "Infinity");
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>((Converter<?, BeanDeserializer>) null);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "-");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
      FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseDoublePrimitive(filteringParserDelegate0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseFloatPrimitive((DeserializationContext) null, "-IN|YF");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "N.GS1.");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      float float0 = numberDeserializers_BooleanDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "INF");
      assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      float float0 = numberDeserializers_BooleanDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "NaN");
      assertEquals(Float.NaN, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "INAF");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      float float0 = numberDeserializers_BooleanDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "-Infinity");
      assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      NumberDeserializers.ByteDeserializer numberDeserializers_ByteDeserializer0 = NumberDeserializers.ByteDeserializer.primitiveInstance;
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, numberDeserializers_ByteDeserializer0, false);
      PipedReader pipedReader0 = new PipedReader();
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (byte)58, pipedReader0, objectMapper0, charsToNameCanonicalizer0);
      // Undeclared exception!
//      try { 
        numberDeserializers_ByteDeserializer0._parseFloatPrimitive(readerBasedJsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseIntPrimitive((DeserializationContext) null, "com.fasterxml.jackson.databind.node.ArrayNode");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      int int0 = numberDeserializers_BooleanDeserializer0._parseIntPrimitive((DeserializationContext) null, "6");
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser("");
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._parseBytePrimitive(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[9];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_DoubleDeser0._parseBooleanPrimitive(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Converter<NamedType, ResolverStyle> converter0 = (Converter<NamedType, ResolverStyle>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<ResolverStyle> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ResolverStyle>(converter0);
      Converter<Object, TypeNameIdResolver> converter1 = (Converter<Object, TypeNameIdResolver>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<TypeNameIdResolver> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<TypeNameIdResolver>(converter1, (JavaType) null, stdDelegatingDeserializer0);
      BigDecimal bigDecimal0 = new BigDecimal((-123L));
      Number number0 = stdDelegatingDeserializer1._nonNullNumber(bigDecimal0);
      assertSame(number0, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Converter<String, BeanDeserializer> converter0 = (Converter<String, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0);
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.wrapperInstance;
      boolean boolean0 = stdDelegatingDeserializer0.isDefaultDeserializer(numberDeserializers_DoubleDeserializer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      Class<Locale> class0 = Locale.class;
      StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
      boolean boolean0 = numberDeserializers_BooleanDeserializer0.isDefaultKeyDeserializer(stdKeyDeserializer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Converter<TypeNameIdResolver, ResolverStyle> converter0 = (Converter<TypeNameIdResolver, ResolverStyle>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<ResolverStyle> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ResolverStyle>(converter0);
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      TypeBindings typeBindings0 = TypeBindings.emptyBindings();
      TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, typeBindings0);
      Class<Float> class0 = Float.TYPE;
      JavaType javaType0 = typeResolutionContext_Basic0.resolveType(class0);
      StdDelegatingDeserializer<List<Float>> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<List<Float>>((Converter<Object, List<Float>>) null, javaType0, stdDelegatingDeserializer0);
      Class<?> class1 = stdDelegatingDeserializer1.getValueClass();
      assertEquals(1041, class1.getModifiers());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<BeanDeserializer> class0 = BeanDeserializer.class;
      TypeBindings typeBindings0 = TypeBindings.create(class0, (JavaType[]) null);
      TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, typeBindings0);
      JavaType javaType0 = typeResolutionContext_Basic0.resolveType(class0);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0.findDeserializer((DeserializationContext) null, javaType0, (BeanProperty) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._failDoubleToIntCoercion((JsonParser) null, (DeserializationContext) null, "BqEL.");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[0];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
      Converter<Date, ResolverStyle> converter0 = (Converter<Date, ResolverStyle>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<ResolverStyle> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ResolverStyle>(converter0);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0.handleMissingEndArrayForSingle(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PrimitiveArrayDeserializers.FloatDeser primitiveArrayDeserializers_FloatDeser0 = new PrimitiveArrayDeserializers.FloatDeser();
      Class<JsonSerializer> class0 = JsonSerializer.class;
      SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
      TypeBindings typeBindings0 = TypeBindings.create((Class<?>) class0, (JavaType) simpleType0);
      ArrayType arrayType0 = ArrayType.construct((JavaType) simpleType0, typeBindings0, (Object) class0, (Object) class0);
      StdDelegatingDeserializer<Locale> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Locale>((Converter<Object, Locale>) null, arrayType0, primitiveArrayDeserializers_FloatDeser0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "Null JavaType passed");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
      Converter<Object, SimpleModule> converter0 = (Converter<Object, SimpleModule>) mock(Converter.class, new ViolatedAssumptionAnswer());
      Class<Byte> class0 = Byte.class;
      SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
      StdDelegatingDeserializer<SimpleModule> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleModule>(converter0, simpleType0, primitiveArrayDeserializers_DoubleDeser0);
      StdDelegatingDeserializer<SimpleModule> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<SimpleModule>(stdDelegatingDeserializer0);
      assertFalse(stdDelegatingDeserializer1.isCachable());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DateDeserializers.DateDeserializer dateDeserializers_DateDeserializer0 = new DateDeserializers.DateDeserializer();
      boolean boolean0 = dateDeserializers_DateDeserializer0._hasTextualNull("=4Vp$7-.jM@&G}\"'s%");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      long long0 = numberDeserializers_BooleanDeserializer0._parseLongPrimitive(defaultDeserializationContext_Impl0, "6");
      assertEquals(6L, long0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
      Converter<Object, SimpleModule> converter0 = (Converter<Object, SimpleModule>) mock(Converter.class, new ViolatedAssumptionAnswer());
      Class<Byte> class0 = Byte.class;
      SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
      StdDelegatingDeserializer<SimpleModule> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleModule>(converter0, simpleType0, primitiveArrayDeserializers_DoubleDeser0);
      Class<?> class1 = stdDelegatingDeserializer0.handledType();
      assertEquals("class [D", class1.toString());
  }
}
