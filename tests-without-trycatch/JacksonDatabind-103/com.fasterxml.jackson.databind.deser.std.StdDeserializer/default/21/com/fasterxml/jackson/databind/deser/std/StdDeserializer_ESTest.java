/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 30 06:06:12 GMT 2021
 */

package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.annotation.SimpleObjectIdResolver;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
import com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.JsonParserDelegate;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.Module;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyMetadata;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializer;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.NullValueProvider;
import com.fasterxml.jackson.databind.deser.SettableBeanProperty;
import com.fasterxml.jackson.databind.deser.ValueInstantiator;
import com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer;
import com.fasterxml.jackson.databind.deser.std.DateDeserializers;
import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
import com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;
import com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer;
import com.fasterxml.jackson.databind.deser.std.NumberDeserializers;
import com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers;
import com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
import com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer;
import com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer;
import com.fasterxml.jackson.databind.deser.std.StringDeserializer;
import com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer;
import com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import com.fasterxml.jackson.databind.module.SimpleValueInstantiators;
import com.fasterxml.jackson.databind.node.NullNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.type.PlaceholderForType;
import com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.AccessPattern;
import com.fasterxml.jackson.databind.util.Converter;
import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.math.BigDecimal;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StdDeserializer_ESTest extends StdDeserializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Converter<BeanDeserializer, Byte> converter0 = (Converter<BeanDeserializer, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      Converter<Object, HashMap<Object, Integer>> converter1 = (Converter<Object, HashMap<Object, Integer>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<HashMap<Object, Integer>> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<HashMap<Object, Integer>>(converter1, (JavaType) null, stdDelegatingDeserializer0);
      boolean boolean0 = stdDelegatingDeserializer1._intOverflow((-2147483648L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      boolean boolean0 = stringDeserializer0._shortOverflow(32767);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Converter<Object, Module> converter0 = (Converter<Object, Module>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Module> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Module>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._shortOverflow((-32768));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("4,");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      boolean boolean0 = stdDelegatingDeserializer0._isIntNumber(")K,");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Converter<BeanDeserializer, Byte> converter0 = (Converter<BeanDeserializer, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseIntPrimitive(deserializationContext0, "-Infinity");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>((Converter<?, Byte>) null);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      stdDelegatingDeserializer0._verifyNullForPrimitive(defaultDeserializationContext_Impl0);
      assertFalse(stdDelegatingDeserializer0.isCachable());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ByteBufferDeserializer byteBufferDeserializer0 = new ByteBufferDeserializer();
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[3];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, (int) (byte) (-7), 741);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        byteBufferDeserializer0._parseDateFromArray(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_CharDeser0._deserializeFromArray(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      PrimitiveArrayDeserializers.ShortDeser primitiveArrayDeserializers_ShortDeser0 = new PrimitiveArrayDeserializers.ShortDeser();
      Converter<Module, BeanDeserializer> converter0 = (Converter<Module, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0);
      boolean boolean0 = primitiveArrayDeserializers_ShortDeser0.isDefaultDeserializer(stdDelegatingDeserializer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      Class<BuilderBasedDeserializer> class0 = BuilderBasedDeserializer.class;
      JsonFormat.Value jsonFormat_Value0 = numberDeserializers_BooleanDeserializer0.findFormatOverrides(defaultDeserializationContext_Impl0, beanProperty_Bogus0, class0);
      assertFalse(jsonFormat_Value0.hasPattern());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Converter<BeanDeserializer, Byte> converter0 = (Converter<BeanDeserializer, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      Class<InputStream> class0 = InputStream.class;
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED;
      Boolean boolean0 = stdDelegatingDeserializer0.findFormatFeature(defaultDeserializationContext_Impl0, beanProperty_Bogus0, class0, jsonFormat_Feature0);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.wrapperInstance;
      BigDecimal bigDecimal0 = new BigDecimal((-2107012152));
      Number number0 = numberDeserializers_DoubleDeserializer0._nonNullNumber(bigDecimal0);
      assertSame(number0, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_LongDeserializer0._isPosInf("n\"2Vc;@y");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>((Converter<?, Byte>) null);
      boolean boolean0 = stdDelegatingDeserializer0._isNegInf("Infinity");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DateDeserializers.CalendarDeserializer dateDeserializers_CalendarDeserializer0 = new DateDeserializers.CalendarDeserializer();
      Class<BufferedInputStream> class0 = BufferedInputStream.class;
      ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);
      Converter<Object, Module> converter0 = (Converter<Object, Module>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Module> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Module>(converter0, resolvedRecursiveType0, dateDeserializers_CalendarDeserializer0);
      boolean boolean0 = stdDelegatingDeserializer0._isNaN("OAv&N`Jlz)SM(sp");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Converter<BuilderBasedDeserializer, Integer> converter0 = (Converter<BuilderBasedDeserializer, Integer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Integer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Integer>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._isEmptyOrTextualNull("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StdDelegatingDeserializer<Nulls> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Nulls>((Converter<?, Nulls>) null);
      boolean boolean0 = stdDelegatingDeserializer0._isEmptyOrTextualNull("g2)'-'.Gx4dr4/EQT");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Converter<Float, Date> converter0 = (Converter<Float, Date>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>(converter0);
      ObjectMapper objectMapper0 = new ObjectMapper();
      Class<Double> class0 = Double.class;
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      Nulls nulls0 = Nulls.DEFAULT;
      Converter<Object, StringDeserializer> converter1 = (Converter<Object, StringDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<StringDeserializer> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<StringDeserializer>(converter1);
      ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(class0);
      StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer((JavaType) null, stdDelegatingDeserializer1, valueInstantiator_Base0);
      JsonDeserializer<Object> jsonDeserializer0 = stringCollectionDeserializer0.getContentDeserializer();
      NullValueProvider nullValueProvider0 = stdDelegatingDeserializer0._findNullProvider(deserializationContext0, beanProperty_Bogus0, nulls0, jsonDeserializer0);
      assertNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
//      try { 
        StdDeserializer.parseDouble("c&EdCmW*)jzi$4E");
//        fail("Expecting exception: NumberFormatException");
      
//      } catch(NumberFormatException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      // Undeclared exception!
//      try { 
        StdDeserializer.parseDouble((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Converter<Float, StringDeserializer> converter0 = (Converter<Float, StringDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<StringDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<StringDeserializer>(converter0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0.handledType();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      NumberDeserializers.ByteDeserializer numberDeserializers_ByteDeserializer0 = NumberDeserializers.ByteDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_ByteDeserializer0.handleMissingEndArrayForSingle((JsonParser) null, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Converter<BeanDeserializer, Byte> converter0 = (Converter<BeanDeserializer, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Class<BufferedInputStream> class0 = BufferedInputStream.class;
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0.findFormatOverrides(defaultDeserializationContext_Impl0, (BeanProperty) null, class0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      Converter<Object, Calendar> converter0 = (Converter<Object, Calendar>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Calendar> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Calendar>(converter0, (JavaType) null, numberDeserializers_BooleanDeserializer0);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0.findConvertingContentDeserializer(defaultDeserializationContext_Impl0, (BeanProperty) null, stdDelegatingDeserializer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      Converter<Integer, Boolean> converter0 = (Converter<Integer, Boolean>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Boolean> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Boolean>(converter0);
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      Long long0 = new Long(166L);
      IOContext iOContext0 = new IOContext(bufferRecycler0, long0, true);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, pipedReader0, objectMapper0, charsToNameCanonicalizer0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0.deserializeWithType(readerBasedJsonParser0, deserializationContext0, (TypeDeserializer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      NullifyingDeserializer nullifyingDeserializer0 = new NullifyingDeserializer();
      // Undeclared exception!
//      try { 
        nullifyingDeserializer0._verifyStringForScalarCoercion((DeserializationContext) null, "yu");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      NullifyingDeserializer nullifyingDeserializer0 = NullifyingDeserializer.instance;
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
      // Undeclared exception!
//      try { 
        nullifyingDeserializer0._verifyNumberForScalarCoercion((DeserializationContext) null, jsonParser0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._verifyNullForScalarCoercion((DeserializationContext) null, "hGf");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      NullifyingDeserializer nullifyingDeserializer0 = NullifyingDeserializer.instance;
      // Undeclared exception!
//      try { 
        nullifyingDeserializer0._verifyNullForPrimitiveCoercion((DeserializationContext) null, "*&k8[nda(gPA|");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      NullifyingDeserializer nullifyingDeserializer0 = NullifyingDeserializer.instance;
      // Undeclared exception!
//      try { 
        nullifyingDeserializer0._verifyNullForPrimitive((DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Converter<BeanDeserializer, Byte> converter0 = (Converter<BeanDeserializer, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[1];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, 684, 917);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._verifyEndArrayForSingle(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 684
//         //
//         verifyException("com.fasterxml.jackson.core.json.ReaderBasedJsonParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Converter<StringDeserializer, Byte> converter0 = (Converter<StringDeserializer, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      JsonFactory jsonFactory0 = new JsonFactory();
      PipedReader pipedReader0 = new PipedReader(31);
      JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
//      try { 
        stdDelegatingDeserializer0._verifyEndArrayForSingle(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Pipe not connected
//         //
//         verifyException("java.io.PipedReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>((Converter<?, Byte>) null);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      byte[] byteArray0 = new byte[2];
      JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0);
//      try { 
        stdDelegatingDeserializer0._verifyEndArrayForSingle(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Illegal character ((CTRL-CHAR, code 0)): only regular white space (\\r, \\n, \\t) is allowed between tokens
//         //  at [Source: (byte[])\"\u0000\u0000\"; line: 1, column: 2]
//         //
//         verifyException("com.fasterxml.jackson.core.JsonParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_IntegerDeserializer0._parseShortPrimitive((JsonParser) null, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DateDeserializers.CalendarDeserializer dateDeserializers_CalendarDeserializer0 = new DateDeserializers.CalendarDeserializer();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        dateDeserializers_CalendarDeserializer0._parseLongPrimitive(defaultDeserializationContext_Impl0, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.primitiveInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate((JsonParser) null);
      // Undeclared exception!
//      try { 
        numberDeserializers_LongDeserializer0._parseLongPrimitive(jsonParserDelegate0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.core.util.JsonParserDelegate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdDelegatingDeserializer<Short> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Short>((Converter<?, Short>) null);
      ObjectMapper objectMapper0 = new ObjectMapper();
      ObjectReader objectReader0 = objectMapper0.reader();
      NullNode nullNode0 = NullNode.instance;
      JsonParser jsonParser0 = objectReader0.treeAsTokens(nullNode0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseIntPrimitive(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_BooleanDeser0._parseFloatPrimitive((DeserializationContext) null, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_ShortDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_LongDeserializer0._parseBytePrimitive((JsonParser) null, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      NullifyingDeserializer nullifyingDeserializer0 = NullifyingDeserializer.instance;
      // Undeclared exception!
//      try { 
        nullifyingDeserializer0._parseBooleanFromInt((JsonParser) null, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._isIntNumber((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JsonNodeDeserializer.ArrayDeserializer jsonNodeDeserializer_ArrayDeserializer0 = JsonNodeDeserializer.ArrayDeserializer.getInstance();
      Converter<Object, LinkedList<Long>> converter0 = (Converter<Object, LinkedList<Long>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<Module> class0 = Module.class;
      PlaceholderForType placeholderForType0 = new PlaceholderForType(757);
      JavaType javaType0 = typeFactory0.constructReferenceType(class0, placeholderForType0);
      StdDelegatingDeserializer<LinkedList<Long>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<Long>>(converter0, javaType0, jsonNodeDeserializer_ArrayDeserializer0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._isEmptyOrTextualNull((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Converter<Date, SimpleType> converter0 = (Converter<Date, SimpleType>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<SimpleType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleType>(converter0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._coercedTypeDesc();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_LongDeserializer0._coerceTextualNull((DeserializationContext) null, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
//      try { 
        numberDeserializers_BooleanDeserializer0._coerceIntegral(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Current token (null) not numeric, can not use numeric value accessors
//         //  at [Source: UNKNOWN; line: 1, column: 1]
//         //
//         verifyException("com.fasterxml.jackson.core.JsonParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      NullifyingDeserializer nullifyingDeserializer0 = new NullifyingDeserializer();
      // Undeclared exception!
//      try { 
        nullifyingDeserializer0._coerceEmptyString((DeserializationContext) null, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      boolean boolean0 = StdDeserializer._neitherNull(byte0, byte0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0.handleUnknownProperty((JsonParser) null, defaultDeserializationContext_Impl0, (Object) null, "b,DCfTa_G:n{?x0$N&");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Class<Object> class0 = Object.class;
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ACCEPT_CASE_INSENSITIVE_PROPERTIES;
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0.findFormatFeature(defaultDeserializationContext_Impl0, (BeanProperty) null, class0, jsonFormat_Feature0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._coerceIntegral((JsonParser) null, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      ByteBufferDeserializer byteBufferDeserializer0 = new ByteBufferDeserializer();
      // Undeclared exception!
//      try { 
        byteBufferDeserializer0._parseDate(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      JsonNodeDeserializer.ObjectDeserializer jsonNodeDeserializer_ObjectDeserializer0 = JsonNodeDeserializer.ObjectDeserializer.getInstance();
      Converter<Boolean, BuilderBasedDeserializer> converter0 = (Converter<Boolean, BuilderBasedDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BuilderBasedDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BuilderBasedDeserializer>(converter0);
      Converter<Object, Module> converter1 = (Converter<Object, Module>) mock(Converter.class, new ViolatedAssumptionAnswer());
      TypeBindings typeBindings0 = TypeBindings.emptyBindings();
      ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
      StdDelegatingDeserializer<Module> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<Module>(converter1, resolvedRecursiveType0, stdDelegatingDeserializer0);
      Converter<Object, Module> converter2 = (Converter<Object, Module>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Module> stdDelegatingDeserializer2 = stdDelegatingDeserializer1.withDelegate(converter2, resolvedRecursiveType0, jsonNodeDeserializer_ObjectDeserializer0);
      Class<?> class1 = stdDelegatingDeserializer2.handledType();
      assertFalse(class1.isArray());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Converter<ObjectNode, Integer> converter0 = (Converter<ObjectNode, Integer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Integer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Integer>(converter0);
      JavaType javaType0 = stdDelegatingDeserializer0.getValueType();
      assertNull(javaType0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.wrapperInstance;
      Number number0 = numberDeserializers_DoubleDeserializer0._nonNullNumber((Number) null);
      assertNotNull(number0);
      assertEquals(0, number0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.wrapperInstance;
      Number number0 = numberDeserializers_DoubleDeserializer0._nonNullNumber(bigDecimal0);
      assertEquals((byte)10, number0.byteValue());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StdDelegatingDeserializer<HashMap<Object, Integer>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<HashMap<Object, Integer>>((Converter<?, HashMap<Object, Integer>>) null);
      boolean boolean0 = stdDelegatingDeserializer0._intOverflow(2147483647L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      TokenBufferDeserializer tokenBufferDeserializer0 = new TokenBufferDeserializer();
      Converter<Object, HashMap<Object, Integer>> converter0 = (Converter<Object, HashMap<Object, Integer>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      Converter<Object, SettableBeanProperty> converter1 = (Converter<Object, SettableBeanProperty>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<SettableBeanProperty> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SettableBeanProperty>(converter1, (JavaType) null, tokenBufferDeserializer0);
      StdDelegatingDeserializer<HashMap<Object, Integer>> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<HashMap<Object, Integer>>(converter0, (JavaType) null, stdDelegatingDeserializer0);
      boolean boolean0 = stdDelegatingDeserializer1._intOverflow((-9223372036854775808L));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StdDelegatingDeserializer<Module> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Module>((Converter<?, Module>) null);
      boolean boolean0 = stdDelegatingDeserializer0._shortOverflow(2147483642);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      boolean boolean0 = stringDeserializer0._shortOverflow((-1796792117));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Converter<SimpleObjectIdResolver, Date> converter0 = (Converter<SimpleObjectIdResolver, Date>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow((byte) (-128));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Converter<Float, Date> converter0 = (Converter<Float, Date>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow(2607);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow((-1630653296));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      SimpleValueInstantiators simpleValueInstantiators0 = new SimpleValueInstantiators();
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0.handleUnknownProperty((JsonParser) null, defaultDeserializationContext_Impl0, simpleValueInstantiators0, "b,DCfTa_G:n{?x0$N&");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Nulls nulls0 = Nulls.SKIP;
      NullValueProvider nullValueProvider0 = stdDelegatingDeserializer0._findNullProvider(defaultDeserializationContext_Impl0, (BeanProperty) null, nulls0, stdDelegatingDeserializer0);
      assertEquals(AccessPattern.ALWAYS_NULL, nullValueProvider0.getNullAccessPattern());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Nulls nulls0 = Nulls.FAIL;
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._findNullProvider(defaultDeserializationContext_Impl0, (BeanProperty) null, nulls0, stdDelegatingDeserializer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      PrimitiveArrayDeserializers.LongDeser primitiveArrayDeserializers_LongDeser0 = new PrimitiveArrayDeserializers.LongDeser();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      StringDeserializer stringDeserializer1 = (StringDeserializer)primitiveArrayDeserializers_LongDeser0.findContentNullProvider(defaultDeserializationContext_Impl0, (BeanProperty) null, stringDeserializer0);
      assertEquals(AccessPattern.CONSTANT, stringDeserializer1.getEmptyAccessPattern());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Boolean boolean0 = new Boolean(false);
      Integer integer0 = new Integer((-1914091967));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, "A,mOSb?j?", integer0, "A,mOSb?j?");
      NullValueProvider nullValueProvider0 = stdDelegatingDeserializer0.findValueNullProvider(defaultDeserializationContext_Impl0, (SettableBeanProperty) null, propertyMetadata0);
      assertNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.primitiveInstance;
      ObjectMapper objectMapper0 = new ObjectMapper();
      ObjectReader objectReader0 = objectMapper0.readerForUpdating(numberDeserializers_IntegerDeserializer0);
      assertNotNull(objectReader0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Converter<Float, Byte> converter0 = (Converter<Float, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("-Infinity");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Converter<Nulls, Byte> converter0 = (Converter<Nulls, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("0%?gLs%fv8f6y");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      NullifyingDeserializer nullifyingDeserializer0 = NullifyingDeserializer.instance;
      String string0 = nullifyingDeserializer0._coercedTypeDesc();
      assertEquals("for type `java.lang.Object`", string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Converter<BeanDeserializer, Byte> converter0 = (Converter<BeanDeserializer, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      JsonFactory.Feature jsonFactory_Feature0 = JsonFactory.Feature.CANONICALIZE_FIELD_NAMES;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._reportFailedNullCoerce(defaultDeserializationContext_Impl0, true, jsonFactory_Feature0, "JSON");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Converter<BeanDeserializer, Byte> converter0 = (Converter<BeanDeserializer, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      JsonFactory.Feature jsonFactory_Feature0 = JsonFactory.Feature.CANONICALIZE_FIELD_NAMES;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._reportFailedNullCoerce(defaultDeserializationContext_Impl0, false, jsonFactory_Feature0, "{.V4%zgB^A#n[u_/\">");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
      Object object0 = stringArrayDeserializer0._coerceNullToken(defaultDeserializationContext_Impl0, true);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory((DeserializerFactoryConfig) null);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
      Object object0 = numberDeserializers_LongDeserializer0._coerceNullToken(defaultDeserializationContext_Impl0, false);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StdDelegatingDeserializer<LinkedList<Float>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<Float>>((Converter<?, LinkedList<Float>>) null);
      JsonFactory jsonFactory0 = new JsonFactory();
      ObjectMapper objectMapper0 = new ObjectMapper();
      char[] charArray0 = new char[0];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._deserializeWrappedValue(jsonParser0, deserializationContext0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_LongDeserializer0._isPosInf("Infinity");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Converter<BeanDeserializer, Byte> converter0 = (Converter<BeanDeserializer, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._isNegInf("-INF");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Converter<BeanDeserializer, Byte> converter0 = (Converter<BeanDeserializer, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      Date date0 = stdDelegatingDeserializer0._parseDate("null", defaultDeserializationContext_Impl0);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      StdDelegatingDeserializer<Short> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Short>((Converter<?, Short>) null);
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._deserializeFromEmpty(jsonParser0, deserializationContext0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[4];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_BooleanDeser0._parseString(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_LongDeserializer0._parseDate("+&?UyKiG/p", (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Converter<Long, Integer> converter0 = (Converter<Long, Integer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Integer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Integer>(converter0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "-");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Converter<Object, LinkedList<Float>> converter0 = (Converter<Object, LinkedList<Float>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<LinkedList<Float>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<Float>>(converter0);
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      Converter<Object, BeanDeserializer> converter1 = (Converter<Object, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<BeanDeserializer>(converter1, (JavaType) null, stdDelegatingDeserializer0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer1._parseDoublePrimitive(deserializationContext0, "I} `x");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      NumberDeserializers.ByteDeserializer numberDeserializers_ByteDeserializer0 = NumberDeserializers.ByteDeserializer.wrapperInstance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_ByteDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "hBAyi?AY//%k6|");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      Converter<Object, BeanDeserializer> converter0 = (Converter<Object, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0, (JavaType) null, primitiveArrayDeserializers_CharDeser0);
      double double0 = stdDelegatingDeserializer0._parseDoublePrimitive(deserializationContext0, "INF");
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      Converter<BeanDeserializer, BeanDeserializer> converter0 = (Converter<BeanDeserializer, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0);
      double double0 = stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "-Infinity");
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_LongDeserializer0._parseDoublePrimitive(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
      // Undeclared exception!
//      try { 
        stringArrayDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "Non-stadard token '");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      float float0 = primitiveArrayDeserializers_BooleanDeser0._parseFloatPrimitive((DeserializationContext) null, "INF");
      assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;
      // Undeclared exception!
//      try { 
        stringArrayDeserializer0._parseFloatPrimitive((DeserializationContext) null, "from-boolean");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      float float0 = stringArrayDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "NaN");
      assertEquals(Float.NaN, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_BooleanDeser0._parseFloatPrimitive((DeserializationContext) null, "Il[LdUPi`Mg_vN~");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;
      // Undeclared exception!
//      try { 
        stringArrayDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "-V+T2");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Converter<ObjectNode, Integer> converter0 = (Converter<ObjectNode, Integer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Integer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Integer>(converter0);
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
      byte[] byteArray0 = new byte[1];
      JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0, (int) (byte) (-128), (-3414));
      JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate(jsonParser0);
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseFloatPrimitive(jsonParserDelegate0, deserializationContext0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      PrimitiveArrayDeserializers.LongDeser primitiveArrayDeserializers_LongDeser0 = new PrimitiveArrayDeserializers.LongDeser();
      JsonFactory jsonFactory0 = new JsonFactory();
      char[] charArray0 = new char[3];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, (-1647), (-1647));
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_LongDeser0.handleSingleElementUnwrapped(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>((Converter<?, Byte>) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseIntPrimitive((DeserializationContext) null, "=rc^FEEaKnO");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      PrimitiveArrayDeserializers.ByteDeser primitiveArrayDeserializers_ByteDeser0 = new PrimitiveArrayDeserializers.ByteDeser();
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_ByteDeser0._parseIntPrimitive((DeserializationContext) null, "/A");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      ByteBufferDeserializer byteBufferDeserializer0 = new ByteBufferDeserializer();
      // Undeclared exception!
//      try { 
        byteBufferDeserializer0._parseBooleanPrimitive(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.wrapperInstance;
      boolean boolean0 = stdDelegatingDeserializer0.isDefaultDeserializer(numberDeserializers_DoubleDeserializer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Converter<SettableBeanProperty, Byte> converter0 = (Converter<SettableBeanProperty, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      Class<Object> class0 = Object.class;
      FromStringDeserializer.Std fromStringDeserializer_Std0 = new FromStringDeserializer.Std(class0, (-2265));
      StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer((-4), class0, fromStringDeserializer_Std0);
      boolean boolean0 = stdDelegatingDeserializer0.isDefaultKeyDeserializer(stdKeyDeserializer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      UntypedObjectDeserializer.Vanilla untypedObjectDeserializer_Vanilla0 = UntypedObjectDeserializer.Vanilla.std;
      Class<?> class0 = untypedObjectDeserializer_Vanilla0.getValueClass();
      assertFalse(class0.isInterface());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>((Converter<?, Date>) null);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0.findDeserializer(defaultDeserializationContext_Impl0, (JavaType) null, (BeanProperty) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null JavaType passed
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.DeserializerCache", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
      StringReader stringReader0 = new StringReader("JSON");
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      ObjectReader objectReader0 = objectMapper0.reader();
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 48, stringReader0, objectReader0, charsToNameCanonicalizer0);
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_BooleanDeser0._failDoubleToIntCoercion(readerBasedJsonParser0, (DeserializationContext) null, ".5pf]l\u0005s5yV,|&q]");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>((Converter<?, Byte>) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._verifyEndArrayForSingle(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
      Converter<Object, BeanDeserializer> converter0 = (Converter<Object, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      PlaceholderForType placeholderForType0 = new PlaceholderForType((-4359));
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0, placeholderForType0, stringArrayDeserializer0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "NON_ABSENT");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Converter<Nulls, Byte> converter0 = (Converter<Nulls, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<Byte>(stdDelegatingDeserializer0);
      assertFalse(stdDelegatingDeserializer1.isCachable());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._hasTextualNull("e");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>((Converter<?, Byte>) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseLongPrimitive((DeserializationContext) null, "b|8D'2{");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      PrimitiveArrayDeserializers.CharDeser primitiveArrayDeserializers_CharDeser0 = new PrimitiveArrayDeserializers.CharDeser();
      String string0 = primitiveArrayDeserializers_CharDeser0._coercedTypeDesc();
      assertEquals("as content of type `char[]`", string0);
  }
}
